### YamlMime:UniversalReference
items:
  - uid: '@azure/event-hubs.ClientOptions'
    name: ClientOptions
    fullName: ClientOptions
    children:
      - '@azure/event-hubs.ClientOptions.dataTransformer'
      - '@azure/event-hubs.ClientOptions.tokenProvider'
      - '@azure/event-hubs.ClientOptions.userAgent'
      - '@azure/event-hubs.ClientOptions.webSocket'
      - '@azure/event-hubs.ClientOptions.webSocketConstructorOptions'
    langs:
      - typeScript
    type: interface
    summary: >-
      Describes the options that can be provided while creating the EventHub
      Client.
    extends:
      name: '@azure/event-hubs.ClientOptionsBase'
    package: '@azure/event-hubs'
  - uid: '@azure/event-hubs.ClientOptions.dataTransformer'
    name: dataTransformer
    fullName: dataTransformer
    children: []
    langs:
      - typeScript
    type: property
    summary: >-
      {DataTransformer} [dataTransformer] The data transformer that will be used
      to encode

      and decode the sent and received messages respectively. If not provided
      then we will use the

      DefaultDataTransformer. The default transformer should handle majority of
      the cases. This

      option needs to be used only for specialized scenarios.
    optional: true
    syntax:
      content: 'dataTransformer?: DataTransformer'
      return:
        type:
          - DataTransformer
        description: ''
    package: '@azure/event-hubs'
  - uid: '@azure/event-hubs.ClientOptions.tokenProvider'
    name: tokenProvider
    fullName: tokenProvider
    children: []
    langs:
      - typeScript
    type: property
    summary: >-
      {TokenProvider} [tokenProvider] - The token provider that provides the
      token for authentication.

      Default value: SasTokenProvider.
    optional: true
    syntax:
      content: 'tokenProvider?: TokenProvider'
      return:
        type:
          - TokenProvider
        description: ''
    package: '@azure/event-hubs'
  - uid: '@azure/event-hubs.ClientOptions.userAgent'
    name: userAgent
    fullName: userAgent
    children: []
    langs:
      - typeScript
    type: property
    summary: >-
      {string} [userAgent] The user agent that needs to be appended to the built
      in

      user agent string.
    optional: true
    syntax:
      content: 'userAgent?: undefined | string'
      return:
        type:
          - undefined | string
        description: ''
    package: '@azure/event-hubs'
  - uid: '@azure/event-hubs.ClientOptions.webSocket'
    name: webSocket
    fullName: webSocket
    children: []
    langs:
      - typeScript
    type: property
    summary: >-
      The WebSocket constructor used to create an AMQP connection over a
      WebSocket.

      This option should be provided in the below scenarios

      - The TCP port 5671 which is what is used by the AMQP connection to Event
      Hubs is blocked in your environment.

      - Your application needs to be run behind a proxy server

      - Your application needs to run in the browser and you want to provide
      your own choice of Websocket implementation

      instead of the built-in WebSocket in the browser.
    optional: true
    syntax:
      content: 'webSocket?: WebSocketImpl'
      return:
        type:
          - WebSocketImpl
        description: ''
    package: '@azure/event-hubs'
  - uid: '@azure/event-hubs.ClientOptions.webSocketConstructorOptions'
    name: webSocketConstructorOptions
    fullName: webSocketConstructorOptions
    children: []
    langs:
      - typeScript
    type: property
    summary: >-
      {webSocketConstructorOptions} - Options to be passed to the WebSocket
      constructor
    optional: true
    syntax:
      content: 'webSocketConstructorOptions?: any'
      return:
        type:
          - any
        description: ''
    package: '@azure/event-hubs'
references:
  - uid: '@azure/event-hubs.ClientOptionsBase'
    name: ClientOptionsBase
    spec.typeScript:
      - name: ClientOptionsBase
        fullName: ClientOptionsBase
        uid: '@azure/event-hubs.ClientOptionsBase'
