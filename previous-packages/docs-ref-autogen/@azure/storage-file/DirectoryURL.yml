### YamlMime:UniversalReference
items:
  - uid: '@azure/storage-file.DirectoryURL'
    name: DirectoryURL
    fullName: DirectoryURL
    children:
      - '@azure/storage-file.DirectoryURL.create'
      - '@azure/storage-file.DirectoryURL.delete'
      - '@azure/storage-file.DirectoryURL.constructor'
      - '@azure/storage-file.DirectoryURL.forceCloseHandle'
      - '@azure/storage-file.DirectoryURL.forceCloseHandlesSegment'
      - '@azure/storage-file.DirectoryURL.fromDirectoryURL'
      - '@azure/storage-file.DirectoryURL.fromShareURL'
      - '@azure/storage-file.DirectoryURL.getProperties'
      - '@azure/storage-file.DirectoryURL.listFilesAndDirectoriesSegment'
      - '@azure/storage-file.DirectoryURL.listHandlesSegment'
      - '@azure/storage-file.DirectoryURL.newPipeline'
      - '@azure/storage-file.DirectoryURL.pipeline'
      - '@azure/storage-file.DirectoryURL.setMetadata'
      - '@azure/storage-file.DirectoryURL.setProperties'
      - '@azure/storage-file.DirectoryURL.url'
      - '@azure/storage-file.DirectoryURL.withPipeline'
    langs:
      - typeScript
    type: class
    summary: >-
      A DirectoryURL represents a URL to the Azure Storage directory allowing
      you to manipulate its files and directories.
    extends:
      name: '@azure/storage-file.StorageURL'
    package: '@azure/storage-file'
  - uid: '@azure/storage-file.DirectoryURL.create'
    name: 'create(Aborter, IDirectoryCreateOptions)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Creates a new directory under the specified share or parent directory.
    syntax:
      content: 'function create(aborter: Aborter, options?: IDirectoryCreateOptions)'
      parameters:
        - id: aborter
          type:
            - '@azure/storage-file.Aborter'
          description: >-
            Create a new Aborter instance with Aborter.none or
            Aborter.timeout(),
                                     goto documents of Aborter for more examples about request cancellation
        - id: options
          type:
            - '@azure/storage-file.IDirectoryCreateOptions'
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.DirectoryCreateResponse>
        description: ''
    package: '@azure/storage-file'
  - uid: '@azure/storage-file.DirectoryURL.delete'
    name: delete(Aborter)
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      Removes the specified empty directory. Note that the directory must be
      empty before it can be

      deleted.
    syntax:
      content: 'function delete(aborter: Aborter)'
      parameters:
        - id: aborter
          type:
            - '@azure/storage-file.Aborter'
          description: >-
            Create a new Aborter instance with Aborter.none or
            Aborter.timeout(),
                                     goto documents of Aborter for more examples about request cancellation
      return:
        type:
          - Promise<Models.DirectoryDeleteResponse>
        description: ''
    package: '@azure/storage-file'
  - uid: '@azure/storage-file.DirectoryURL.constructor'
    name: 'DirectoryURL(string, Pipeline)'
    children: []
    type: constructor
    langs:
      - typeScript
    summary: Creates an instance of DirectoryURL.
    syntax:
      content: 'new DirectoryURL(url: string, pipeline: Pipeline)'
      parameters:
        - id: url
          type:
            - string
          description: |-
            A URL string pointing to Azure Storage file directory, such as
                                "https://myaccount.file.core.windows.net/myshare/mydirectory". You can
                                append a SAS if using AnonymousCredential, such as
                                "https://myaccount.file.core.windows.net/myshare/mydirectory?sasString".
                                This method accepts an encoded URL or non-encoded URL pointing to a directory.
                                Encoded URL string will NOT be escaped twice, only special characters in URL path will be escaped.
                                However, if a directory name includes %, directory name must be encoded in the URL.
                                Such as a directory named "mydir%", the URL should be "https://myaccount.file.core.windows.net/myshare/mydir%25".
        - id: pipeline
          type:
            - '@azure/storage-file.Pipeline'
          description: |-
            Call StorageURL.newPipeline() to create a default
                                       pipeline, or provide a customized pipeline.
    package: '@azure/storage-file'
  - uid: '@azure/storage-file.DirectoryURL.forceCloseHandle'
    name: 'forceCloseHandle(Aborter, string)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Force close a specific handle for a directory.
    syntax:
      content: 'function forceCloseHandle(aborter: Aborter, handleId: string)'
      parameters:
        - id: aborter
          type:
            - '@azure/storage-file.Aborter'
          description: >-
            Create a new Aborter instance with Aborter.none or
            Aborter.timeout(),
                                     goto documents of Aborter for more examples about request cancellation
        - id: handleId
          type:
            - string
          description: |-
            Specific handle ID, cannot be asterisk "*".
                                     Use forceCloseHandlesSegment() to close all handles.
      return:
        type:
          - Promise<Models.DirectoryForceCloseHandlesResponse>
        description: ''
    package: '@azure/storage-file'
  - uid: '@azure/storage-file.DirectoryURL.forceCloseHandlesSegment'
    name: >-
      forceCloseHandlesSegment(Aborter, undefined | string,
      IDirectoryForceCloseHandlesSegmentOptions)
    children: []
    type: method
    langs:
      - typeScript
    summary: Force close all handles for a directory.
    syntax:
      content: >-
        function forceCloseHandlesSegment(aborter: Aborter, marker?: undefined |
        string, options?: IDirectoryForceCloseHandlesSegmentOptions)
      parameters:
        - id: aborter
          type:
            - '@azure/storage-file.Aborter'
          description: >-
            Create a new Aborter instance with Aborter.none or
            Aborter.timeout(),
                                     goto documents of Aborter for more examples about request cancellation
        - id: marker
          type:
            - undefined | string
          description: ''
          optional: true
        - id: options
          type:
            - '@azure/storage-file.IDirectoryForceCloseHandlesSegmentOptions'
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.DirectoryForceCloseHandlesResponse>
        description: ''
    package: '@azure/storage-file'
  - uid: '@azure/storage-file.DirectoryURL.fromDirectoryURL'
    name: 'fromDirectoryURL(DirectoryURL, string)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Creates a DirectoryURL object from an existing DirectoryURL.
    syntax:
      content: >-
        static function fromDirectoryURL(directoryURL: DirectoryURL,
        directoryName: string)
      parameters:
        - id: directoryURL
          type:
            - '@azure/storage-file.DirectoryURL'
          description: A DirectoryURL object
        - id: directoryName
          type:
            - string
          description: |
            A subdirectory name
      return:
        type:
          - '@azure/storage-file.DirectoryURL'
        description: ''
    package: '@azure/storage-file'
  - uid: '@azure/storage-file.DirectoryURL.fromShareURL'
    name: 'fromShareURL(ShareURL, string)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Creates a DirectoryURL object from ShareURL.
    syntax:
      content: 'static function fromShareURL(shareURL: ShareURL, directoryName: string)'
      parameters:
        - id: shareURL
          type:
            - '@azure/storage-file.ShareURL'
          description: A ShareURL object
        - id: directoryName
          type:
            - string
          description: |
            A directory name
      return:
        type:
          - '@azure/storage-file.DirectoryURL'
        description: ''
    package: '@azure/storage-file'
  - uid: '@azure/storage-file.DirectoryURL.getProperties'
    name: getProperties(Aborter)
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      Returns all system properties for the specified directory, and can also be
      used to check the

      existence of a directory. The data returned does not include the files in
      the directory or any

      subdirectories.
    syntax:
      content: 'function getProperties(aborter: Aborter)'
      parameters:
        - id: aborter
          type:
            - '@azure/storage-file.Aborter'
          description: >-
            Create a new Aborter instance with Aborter.none or
            Aborter.timeout(),
                                     goto documents of Aborter for more examples about request cancellation
      return:
        type:
          - Promise<Models.DirectoryGetPropertiesResponse>
        description: ''
    package: '@azure/storage-file'
  - uid: '@azure/storage-file.DirectoryURL.listFilesAndDirectoriesSegment'
    name: >-
      listFilesAndDirectoriesSegment(Aborter, undefined | string,
      IDirectoryListFilesAndDirectoriesSegmentOptions)
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      Returns a list of files or directories under the specified share or
      directory. It lists the

      contents only for a single level of the directory hierarchy.
    syntax:
      content: >-
        function listFilesAndDirectoriesSegment(aborter: Aborter, marker?:
        undefined | string, options?:
        IDirectoryListFilesAndDirectoriesSegmentOptions)
      parameters:
        - id: aborter
          type:
            - '@azure/storage-file.Aborter'
          description: >-
            Create a new Aborter instance with Aborter.none or
            Aborter.timeout(),
                                     goto documents of Aborter for more examples about request cancellation
        - id: marker
          type:
            - undefined | string
          description: ''
          optional: true
        - id: options
          type:
            - >-
              @azure/storage-file.IDirectoryListFilesAndDirectoriesSegmentOptions
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.DirectoryListFilesAndDirectoriesSegmentResponse>
        description: ''
    package: '@azure/storage-file'
  - uid: '@azure/storage-file.DirectoryURL.listHandlesSegment'
    name: >-
      listHandlesSegment(Aborter, undefined | string,
      IDirectoryListHandlesSegmentOptions)
    children: []
    type: method
    langs:
      - typeScript
    summary: Lists handles for a directory.
    syntax:
      content: >-
        function listHandlesSegment(aborter: Aborter, marker?: undefined |
        string, options?: IDirectoryListHandlesSegmentOptions)
      parameters:
        - id: aborter
          type:
            - '@azure/storage-file.Aborter'
          description: >-
            Create a new Aborter instance with Aborter.none or
            Aborter.timeout(),
                                     goto documents of Aborter for more examples about request cancellation
        - id: marker
          type:
            - undefined | string
          description: ''
          optional: true
        - id: options
          type:
            - '@azure/storage-file.IDirectoryListHandlesSegmentOptions'
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.DirectoryListHandlesResponse>
        description: ''
    package: '@azure/storage-file'
  - uid: '@azure/storage-file.DirectoryURL.newPipeline'
    name: 'newPipeline(Credential, INewPipelineOptions)'
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      A static method used to create a new Pipeline object with Credential
      provided.
    syntax:
      content: >-
        static function newPipeline(credential: Credential, pipelineOptions?:
        INewPipelineOptions)
      parameters:
        - id: credential
          type:
            - '@azure/storage-file.Credential'
          description: 'Such as AnonymousCredential, SharedKeyCredential.'
        - id: pipelineOptions
          type:
            - '@azure/storage-file.INewPipelineOptions'
          description: ''
          optional: true
      return:
        type:
          - '@azure/storage-file.Pipeline'
        description: A new Pipeline object.
    package: '@azure/storage-file'
  - uid: '@azure/storage-file.DirectoryURL.pipeline'
    name: pipeline
    fullName: pipeline
    children: []
    langs:
      - typeScript
    type: property
    summary: Request policy pipeline.
    syntax:
      content: 'pipeline: Pipeline'
      return:
        type:
          - '@azure/storage-file.Pipeline'
        description: ''
    package: '@azure/storage-file'
  - uid: '@azure/storage-file.DirectoryURL.setMetadata'
    name: 'setMetadata(Aborter, IMetadata)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Updates user defined metadata for the specified directory.
    syntax:
      content: 'function setMetadata(aborter: Aborter, metadata?: IMetadata)'
      parameters:
        - id: aborter
          type:
            - '@azure/storage-file.Aborter'
          description: >-
            Create a new Aborter instance with Aborter.none or
            Aborter.timeout(),
                                     goto documents of Aborter for more examples about request cancellation
        - id: metadata
          type:
            - '@azure/storage-file.IMetadata'
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.DirectorySetMetadataResponse>
        description: ''
    package: '@azure/storage-file'
  - uid: '@azure/storage-file.DirectoryURL.setProperties'
    name: 'setProperties(Aborter, IDirectoryProperties)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Sets properties on the directory.
    syntax:
      content: >-
        function setProperties(aborter: Aborter, properties?:
        IDirectoryProperties)
      parameters:
        - id: aborter
          type:
            - '@azure/storage-file.Aborter'
          description: >-
            Create a new Aborter instance with Aborter.none or
            Aborter.timeout(),
                                     goto documents of Aborter for more examples about request cancellation
        - id: properties
          type:
            - '@azure/storage-file.IDirectoryProperties'
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.DirectorySetPropertiesResponse>
        description: ''
    package: '@azure/storage-file'
  - uid: '@azure/storage-file.DirectoryURL.url'
    name: url
    fullName: url
    children: []
    langs:
      - typeScript
    type: property
    summary: URL string value.
    syntax:
      content: 'url: string'
      return:
        type:
          - string
        description: ''
    package: '@azure/storage-file'
  - uid: '@azure/storage-file.DirectoryURL.withPipeline'
    name: withPipeline(Pipeline)
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      Creates a new DirectoryURL object identical to the source but with the
      specified request policy pipeline.
    syntax:
      content: 'function withPipeline(pipeline: Pipeline)'
      parameters:
        - id: pipeline
          type:
            - '@azure/storage-file.Pipeline'
          description: ''
      return:
        type:
          - '@azure/storage-file.DirectoryURL'
        description: ''
    package: '@azure/storage-file'
references:
  - uid: '@azure/storage-file.StorageURL'
    name: StorageURL
    spec.typeScript:
      - name: StorageURL
        fullName: StorageURL
        uid: '@azure/storage-file.StorageURL'
  - uid: '@azure/storage-file.Pipeline'
    name: Pipeline
    spec.typeScript:
      - name: Pipeline
        fullName: Pipeline
        uid: '@azure/storage-file.Pipeline'
  - uid: '@azure/storage-file.Aborter'
    name: Aborter
    spec.typeScript:
      - name: Aborter
        fullName: Aborter
        uid: '@azure/storage-file.Aborter'
  - uid: '@azure/storage-file.IDirectoryCreateOptions'
    name: IDirectoryCreateOptions
    spec.typeScript:
      - name: IDirectoryCreateOptions
        fullName: IDirectoryCreateOptions
        uid: '@azure/storage-file.IDirectoryCreateOptions'
  - uid: '@azure/storage-file.IDirectoryForceCloseHandlesSegmentOptions'
    name: IDirectoryForceCloseHandlesSegmentOptions
    spec.typeScript:
      - name: IDirectoryForceCloseHandlesSegmentOptions
        fullName: IDirectoryForceCloseHandlesSegmentOptions
        uid: '@azure/storage-file.IDirectoryForceCloseHandlesSegmentOptions'
  - uid: '@azure/storage-file.IDirectoryListFilesAndDirectoriesSegmentOptions'
    name: IDirectoryListFilesAndDirectoriesSegmentOptions
    spec.typeScript:
      - name: IDirectoryListFilesAndDirectoriesSegmentOptions
        fullName: IDirectoryListFilesAndDirectoriesSegmentOptions
        uid: '@azure/storage-file.IDirectoryListFilesAndDirectoriesSegmentOptions'
  - uid: '@azure/storage-file.IDirectoryListHandlesSegmentOptions'
    name: IDirectoryListHandlesSegmentOptions
    spec.typeScript:
      - name: IDirectoryListHandlesSegmentOptions
        fullName: IDirectoryListHandlesSegmentOptions
        uid: '@azure/storage-file.IDirectoryListHandlesSegmentOptions'
  - uid: '@azure/storage-file.IMetadata'
    name: IMetadata
    spec.typeScript:
      - name: IMetadata
        fullName: IMetadata
        uid: '@azure/storage-file.IMetadata'
  - uid: '@azure/storage-file.IDirectoryProperties'
    name: IDirectoryProperties
    spec.typeScript:
      - name: IDirectoryProperties
        fullName: IDirectoryProperties
        uid: '@azure/storage-file.IDirectoryProperties'
  - uid: '@azure/storage-file.DirectoryURL'
    name: DirectoryURL
    spec.typeScript:
      - name: DirectoryURL
        fullName: DirectoryURL
        uid: '@azure/storage-file.DirectoryURL'
  - uid: '@azure/storage-file.ShareURL'
    name: ShareURL
    spec.typeScript:
      - name: ShareURL
        fullName: ShareURL
        uid: '@azure/storage-file.ShareURL'
  - uid: '@azure/storage-file.Credential'
    name: Credential
    spec.typeScript:
      - name: Credential
        fullName: Credential
        uid: '@azure/storage-file.Credential'
  - uid: '@azure/storage-file.INewPipelineOptions'
    name: INewPipelineOptions
    spec.typeScript:
      - name: INewPipelineOptions
        fullName: INewPipelineOptions
        uid: '@azure/storage-file.INewPipelineOptions'
