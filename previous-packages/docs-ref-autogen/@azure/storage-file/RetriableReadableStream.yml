### YamlMime:TSType
name: RetriableReadableStream
uid: '@azure/storage-file.RetriableReadableStream'
package: '@azure/storage-file'
summary: >
  ONLY AVAILABLE IN NODE.JS RUNTIME.

  A Node.js ReadableStream will internally retry when internal ReadableStream
  unexpected ends.
fullName: RetriableReadableStream
remarks: ''
isPreview: false
isDeprecated: false
type: class
constructors:
  - name: >-
      RetriableReadableStream(Aborter, ReadableStream, ReadableStreamGetter,
      number, number, IRetriableReadableStreamOptions)
    uid: '@azure/storage-file.RetriableReadableStream.constructor'
    package: '@azure/storage-file'
    summary: Creates an instance of RetriableReadableStream.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        new RetriableReadableStream(aborter: Aborter, source: ReadableStream,
        getter: ReadableStreamGetter, offset: number, count: number, options?:
        IRetriableReadableStreamOptions)
      parameters:
        - id: aborter
          type: <xref uid="@azure/storage-file.Aborter" />
          description: >-
            Create a new Aborter instance with Aborter.none or
            Aborter.timeout(),
                                     goto documents of Aborter for more examples about request cancellation
        - id: source
          type: ReadableStream
          description: The current ReadableStream returned from getter
        - id: getter
          type: <xref uid="@azure/storage-file.ReadableStreamGetter" />
          description: |-
            A method calling downloading request returning
                                                 a new ReadableStream from specified offset
        - id: offset
          type: number
          description: Offset position in original data source to read
        - id: count
          type: number
          description: How much data in original data source to read
        - id: options
          type: <xref uid="@azure/storage-file.IRetriableReadableStreamOptions" />
          description: ''
properties:
  - name: defaultMaxListeners
    uid: '@azure/storage-file.RetriableReadableStream.defaultMaxListeners'
    package: '@azure/storage-file'
    summary: ''
    fullName: defaultMaxListeners
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'static defaultMaxListeners: number'
      return:
        type: number
        description: ''
  - name: readable
    uid: '@azure/storage-file.RetriableReadableStream.readable'
    package: '@azure/storage-file'
    summary: ''
    fullName: readable
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'readable: boolean'
      return:
        type: boolean
        description: ''
  - name: readableHighWaterMark
    uid: '@azure/storage-file.RetriableReadableStream.readableHighWaterMark'
    package: '@azure/storage-file'
    summary: ''
    fullName: readableHighWaterMark
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'readableHighWaterMark: number'
      return:
        type: number
        description: ''
methods:
  - name: 'addListener("close", () => void)'
    uid: '@azure/storage-file.RetriableReadableStream.addListener_1'
    package: '@azure/storage-file'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'function addListener(event: "close", listener: () => void)'
      parameters:
        - id: event
          type: '"close"'
          description: ''
        - id: listener
          type: () =&gt; void
          description: ''
      return:
        type: this
        description: ''
  - name: 'addListener("data", (chunk: Buffer | string) => void)'
    uid: '@azure/storage-file.RetriableReadableStream.addListener_2'
    package: '@azure/storage-file'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function addListener(event: "data", listener: (chunk: Buffer | string)
        => void)
      parameters:
        - id: event
          type: '"data"'
          description: ''
        - id: listener
          type: '(chunk: Buffer | string) =&gt; void'
          description: ''
      return:
        type: this
        description: ''
  - name: 'addListener("end", () => void)'
    uid: '@azure/storage-file.RetriableReadableStream.addListener_3'
    package: '@azure/storage-file'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'function addListener(event: "end", listener: () => void)'
      parameters:
        - id: event
          type: '"end"'
          description: ''
        - id: listener
          type: () =&gt; void
          description: ''
      return:
        type: this
        description: ''
  - name: 'addListener("error", (err: Error) => void)'
    uid: '@azure/storage-file.RetriableReadableStream.addListener_5'
    package: '@azure/storage-file'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'function addListener(event: "error", listener: (err: Error) => void)'
      parameters:
        - id: event
          type: '"error"'
          description: ''
        - id: listener
          type: '(err: Error) =&gt; void'
          description: ''
      return:
        type: this
        description: ''
  - name: 'addListener("readable", () => void)'
    uid: '@azure/storage-file.RetriableReadableStream.addListener_4'
    package: '@azure/storage-file'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'function addListener(event: "readable", listener: () => void)'
      parameters:
        - id: event
          type: '"readable"'
          description: ''
        - id: listener
          type: () =&gt; void
          description: ''
      return:
        type: this
        description: ''
  - name: 'addListener(string, (args: any[]) => void)'
    uid: '@azure/storage-file.RetriableReadableStream.addListener'
    package: '@azure/storage-file'
    summary: |-
      Event emitter
      The defined events on documents including:
      1. close
      2. data
      3. end
      4. readable
      5. error
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'function addListener(event: string, listener: (args: any[]) => void)'
      parameters:
        - id: event
          type: string
          description: ''
        - id: listener
          type: '(args: any[]) =&gt; void'
          description: ''
      return:
        type: this
        description: ''
  - name: destroy(Error)
    uid: '@azure/storage-file.RetriableReadableStream.destroy'
    package: '@azure/storage-file'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'function destroy(error?: Error)'
      parameters:
        - id: error
          type: Error
          description: ''
  - name: emit("close")
    uid: '@azure/storage-file.RetriableReadableStream.emit_1'
    package: '@azure/storage-file'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'function emit(event: "close")'
      parameters:
        - id: event
          type: '"close"'
          description: ''
      return:
        type: boolean
        description: ''
  - name: 'emit("data", Buffer | string)'
    uid: '@azure/storage-file.RetriableReadableStream.emit_2'
    package: '@azure/storage-file'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'function emit(event: "data", chunk: Buffer | string)'
      parameters:
        - id: event
          type: '"data"'
          description: ''
        - id: chunk
          type: Buffer | string
          description: ''
      return:
        type: boolean
        description: ''
  - name: emit("end")
    uid: '@azure/storage-file.RetriableReadableStream.emit_3'
    package: '@azure/storage-file'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'function emit(event: "end")'
      parameters:
        - id: event
          type: '"end"'
          description: ''
      return:
        type: boolean
        description: ''
  - name: 'emit("error", Error)'
    uid: '@azure/storage-file.RetriableReadableStream.emit_5'
    package: '@azure/storage-file'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'function emit(event: "error", err: Error)'
      parameters:
        - id: event
          type: '"error"'
          description: ''
        - id: err
          type: Error
          description: ''
      return:
        type: boolean
        description: ''
  - name: emit("readable")
    uid: '@azure/storage-file.RetriableReadableStream.emit_4'
    package: '@azure/storage-file'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'function emit(event: "readable")'
      parameters:
        - id: event
          type: '"readable"'
          description: ''
      return:
        type: boolean
        description: ''
  - name: 'emit(string | symbol, any[])'
    uid: '@azure/storage-file.RetriableReadableStream.emit'
    package: '@azure/storage-file'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'function emit(event: string | symbol, args: any[])'
      parameters:
        - id: event
          type: string | symbol
          description: ''
        - id: args
          type: 'any[]'
          description: ''
      return:
        type: boolean
        description: ''
  - name: eventNames()
    uid: '@azure/storage-file.RetriableReadableStream.eventNames'
    package: '@azure/storage-file'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: function eventNames()
      return:
        type: Array&lt;string | symbol&gt;
        description: ''
  - name: getMaxListeners()
    uid: '@azure/storage-file.RetriableReadableStream.getMaxListeners'
    package: '@azure/storage-file'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: function getMaxListeners()
      return:
        type: number
        description: ''
  - name: isPaused()
    uid: '@azure/storage-file.RetriableReadableStream.isPaused'
    package: '@azure/storage-file'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: function isPaused()
      return:
        type: boolean
        description: ''
  - name: 'listenerCount(EventEmitter, string | symbol)'
    uid: '@azure/storage-file.RetriableReadableStream.listenerCount'
    package: '@azure/storage-file'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        static function listenerCount(emitter: EventEmitter, event: string |
        symbol)
      parameters:
        - id: emitter
          type: EventEmitter
          description: ''
        - id: event
          type: string | symbol
          description: ''
      return:
        type: number
        description: ''
  - name: listenerCount(string | symbol)
    uid: '@azure/storage-file.RetriableReadableStream.listenerCount'
    package: '@azure/storage-file'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'function listenerCount(type: string | symbol)'
      parameters:
        - id: type
          type: string | symbol
          description: ''
      return:
        type: number
        description: ''
  - name: listeners(string | symbol)
    uid: '@azure/storage-file.RetriableReadableStream.listeners'
    package: '@azure/storage-file'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'function listeners(event: string | symbol)'
      parameters:
        - id: event
          type: string | symbol
          description: ''
      return:
        type: 'Function[]'
        description: ''
  - name: 'on("close", () => void)'
    uid: '@azure/storage-file.RetriableReadableStream.on_1'
    package: '@azure/storage-file'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'function on(event: "close", listener: () => void)'
      parameters:
        - id: event
          type: '"close"'
          description: ''
        - id: listener
          type: () =&gt; void
          description: ''
      return:
        type: this
        description: ''
  - name: 'on("data", (chunk: Buffer | string) => void)'
    uid: '@azure/storage-file.RetriableReadableStream.on_2'
    package: '@azure/storage-file'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'function on(event: "data", listener: (chunk: Buffer | string) => void)'
      parameters:
        - id: event
          type: '"data"'
          description: ''
        - id: listener
          type: '(chunk: Buffer | string) =&gt; void'
          description: ''
      return:
        type: this
        description: ''
  - name: 'on("end", () => void)'
    uid: '@azure/storage-file.RetriableReadableStream.on_3'
    package: '@azure/storage-file'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'function on(event: "end", listener: () => void)'
      parameters:
        - id: event
          type: '"end"'
          description: ''
        - id: listener
          type: () =&gt; void
          description: ''
      return:
        type: this
        description: ''
  - name: 'on("error", (err: Error) => void)'
    uid: '@azure/storage-file.RetriableReadableStream.on_5'
    package: '@azure/storage-file'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'function on(event: "error", listener: (err: Error) => void)'
      parameters:
        - id: event
          type: '"error"'
          description: ''
        - id: listener
          type: '(err: Error) =&gt; void'
          description: ''
      return:
        type: this
        description: ''
  - name: 'on("readable", () => void)'
    uid: '@azure/storage-file.RetriableReadableStream.on_4'
    package: '@azure/storage-file'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'function on(event: "readable", listener: () => void)'
      parameters:
        - id: event
          type: '"readable"'
          description: ''
        - id: listener
          type: () =&gt; void
          description: ''
      return:
        type: this
        description: ''
  - name: 'on(string, (args: any[]) => void)'
    uid: '@azure/storage-file.RetriableReadableStream.on'
    package: '@azure/storage-file'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'function on(event: string, listener: (args: any[]) => void)'
      parameters:
        - id: event
          type: string
          description: ''
        - id: listener
          type: '(args: any[]) =&gt; void'
          description: ''
      return:
        type: this
        description: ''
  - name: 'once("close", () => void)'
    uid: '@azure/storage-file.RetriableReadableStream.once_1'
    package: '@azure/storage-file'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'function once(event: "close", listener: () => void)'
      parameters:
        - id: event
          type: '"close"'
          description: ''
        - id: listener
          type: () =&gt; void
          description: ''
      return:
        type: this
        description: ''
  - name: 'once("data", (chunk: Buffer | string) => void)'
    uid: '@azure/storage-file.RetriableReadableStream.once_2'
    package: '@azure/storage-file'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'function once(event: "data", listener: (chunk: Buffer | string) => void)'
      parameters:
        - id: event
          type: '"data"'
          description: ''
        - id: listener
          type: '(chunk: Buffer | string) =&gt; void'
          description: ''
      return:
        type: this
        description: ''
  - name: 'once("end", () => void)'
    uid: '@azure/storage-file.RetriableReadableStream.once_3'
    package: '@azure/storage-file'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'function once(event: "end", listener: () => void)'
      parameters:
        - id: event
          type: '"end"'
          description: ''
        - id: listener
          type: () =&gt; void
          description: ''
      return:
        type: this
        description: ''
  - name: 'once("error", (err: Error) => void)'
    uid: '@azure/storage-file.RetriableReadableStream.once_5'
    package: '@azure/storage-file'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'function once(event: "error", listener: (err: Error) => void)'
      parameters:
        - id: event
          type: '"error"'
          description: ''
        - id: listener
          type: '(err: Error) =&gt; void'
          description: ''
      return:
        type: this
        description: ''
  - name: 'once("readable", () => void)'
    uid: '@azure/storage-file.RetriableReadableStream.once_4'
    package: '@azure/storage-file'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'function once(event: "readable", listener: () => void)'
      parameters:
        - id: event
          type: '"readable"'
          description: ''
        - id: listener
          type: () =&gt; void
          description: ''
      return:
        type: this
        description: ''
  - name: 'once(string, (args: any[]) => void)'
    uid: '@azure/storage-file.RetriableReadableStream.once'
    package: '@azure/storage-file'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'function once(event: string, listener: (args: any[]) => void)'
      parameters:
        - id: event
          type: string
          description: ''
        - id: listener
          type: '(args: any[]) =&gt; void'
          description: ''
      return:
        type: this
        description: ''
  - name: pause()
    uid: '@azure/storage-file.RetriableReadableStream.pause'
    package: '@azure/storage-file'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: function pause()
      return:
        type: this
        description: ''
  - name: 'pipe<T>(T, undefined | Object)'
    uid: '@azure/storage-file.RetriableReadableStream.pipe'
    package: '@azure/storage-file'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'function pipe<T>(destination: T, options?: undefined | Object)'
      parameters:
        - id: destination
          type: T
          description: ''
        - id: options
          type: undefined | Object
          description: ''
      return:
        type: T
        description: ''
  - name: 'prependListener("close", () => void)'
    uid: '@azure/storage-file.RetriableReadableStream.prependListener_1'
    package: '@azure/storage-file'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'function prependListener(event: "close", listener: () => void)'
      parameters:
        - id: event
          type: '"close"'
          description: ''
        - id: listener
          type: () =&gt; void
          description: ''
      return:
        type: this
        description: ''
  - name: 'prependListener("data", (chunk: Buffer | string) => void)'
    uid: '@azure/storage-file.RetriableReadableStream.prependListener_2'
    package: '@azure/storage-file'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function prependListener(event: "data", listener: (chunk: Buffer |
        string) => void)
      parameters:
        - id: event
          type: '"data"'
          description: ''
        - id: listener
          type: '(chunk: Buffer | string) =&gt; void'
          description: ''
      return:
        type: this
        description: ''
  - name: 'prependListener("end", () => void)'
    uid: '@azure/storage-file.RetriableReadableStream.prependListener_3'
    package: '@azure/storage-file'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'function prependListener(event: "end", listener: () => void)'
      parameters:
        - id: event
          type: '"end"'
          description: ''
        - id: listener
          type: () =&gt; void
          description: ''
      return:
        type: this
        description: ''
  - name: 'prependListener("error", (err: Error) => void)'
    uid: '@azure/storage-file.RetriableReadableStream.prependListener_5'
    package: '@azure/storage-file'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'function prependListener(event: "error", listener: (err: Error) => void)'
      parameters:
        - id: event
          type: '"error"'
          description: ''
        - id: listener
          type: '(err: Error) =&gt; void'
          description: ''
      return:
        type: this
        description: ''
  - name: 'prependListener("readable", () => void)'
    uid: '@azure/storage-file.RetriableReadableStream.prependListener_4'
    package: '@azure/storage-file'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'function prependListener(event: "readable", listener: () => void)'
      parameters:
        - id: event
          type: '"readable"'
          description: ''
        - id: listener
          type: () =&gt; void
          description: ''
      return:
        type: this
        description: ''
  - name: 'prependListener(string, (args: any[]) => void)'
    uid: '@azure/storage-file.RetriableReadableStream.prependListener'
    package: '@azure/storage-file'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'function prependListener(event: string, listener: (args: any[]) => void)'
      parameters:
        - id: event
          type: string
          description: ''
        - id: listener
          type: '(args: any[]) =&gt; void'
          description: ''
      return:
        type: this
        description: ''
  - name: 'prependOnceListener("close", () => void)'
    uid: '@azure/storage-file.RetriableReadableStream.prependOnceListener_1'
    package: '@azure/storage-file'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'function prependOnceListener(event: "close", listener: () => void)'
      parameters:
        - id: event
          type: '"close"'
          description: ''
        - id: listener
          type: () =&gt; void
          description: ''
      return:
        type: this
        description: ''
  - name: 'prependOnceListener("data", (chunk: Buffer | string) => void)'
    uid: '@azure/storage-file.RetriableReadableStream.prependOnceListener_2'
    package: '@azure/storage-file'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function prependOnceListener(event: "data", listener: (chunk: Buffer |
        string) => void)
      parameters:
        - id: event
          type: '"data"'
          description: ''
        - id: listener
          type: '(chunk: Buffer | string) =&gt; void'
          description: ''
      return:
        type: this
        description: ''
  - name: 'prependOnceListener("end", () => void)'
    uid: '@azure/storage-file.RetriableReadableStream.prependOnceListener_3'
    package: '@azure/storage-file'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'function prependOnceListener(event: "end", listener: () => void)'
      parameters:
        - id: event
          type: '"end"'
          description: ''
        - id: listener
          type: () =&gt; void
          description: ''
      return:
        type: this
        description: ''
  - name: 'prependOnceListener("error", (err: Error) => void)'
    uid: '@azure/storage-file.RetriableReadableStream.prependOnceListener_5'
    package: '@azure/storage-file'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function prependOnceListener(event: "error", listener: (err: Error) =>
        void)
      parameters:
        - id: event
          type: '"error"'
          description: ''
        - id: listener
          type: '(err: Error) =&gt; void'
          description: ''
      return:
        type: this
        description: ''
  - name: 'prependOnceListener("readable", () => void)'
    uid: '@azure/storage-file.RetriableReadableStream.prependOnceListener_4'
    package: '@azure/storage-file'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'function prependOnceListener(event: "readable", listener: () => void)'
      parameters:
        - id: event
          type: '"readable"'
          description: ''
        - id: listener
          type: () =&gt; void
          description: ''
      return:
        type: this
        description: ''
  - name: 'prependOnceListener(string, (args: any[]) => void)'
    uid: '@azure/storage-file.RetriableReadableStream.prependOnceListener'
    package: '@azure/storage-file'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function prependOnceListener(event: string, listener: (args: any[]) =>
        void)
      parameters:
        - id: event
          type: string
          description: ''
        - id: listener
          type: '(args: any[]) =&gt; void'
          description: ''
      return:
        type: this
        description: ''
  - name: 'push(any, undefined | string)'
    uid: '@azure/storage-file.RetriableReadableStream.push'
    package: '@azure/storage-file'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'function push(chunk: any, encoding?: undefined | string)'
      parameters:
        - id: chunk
          type: any
          description: ''
        - id: encoding
          type: undefined | string
          description: ''
      return:
        type: boolean
        description: ''
  - name: read(undefined | number)
    uid: '@azure/storage-file.RetriableReadableStream.read'
    package: '@azure/storage-file'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'function read(size?: undefined | number)'
      parameters:
        - id: size
          type: undefined | number
          description: ''
      return:
        type: any
        description: ''
  - name: removeAllListeners(string | symbol)
    uid: '@azure/storage-file.RetriableReadableStream.removeAllListeners'
    package: '@azure/storage-file'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'function removeAllListeners(event?: string | symbol)'
      parameters:
        - id: event
          type: string | symbol
          description: ''
      return:
        type: this
        description: ''
  - name: 'removeListener("close", () => void)'
    uid: '@azure/storage-file.RetriableReadableStream.removeListener_1'
    package: '@azure/storage-file'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'function removeListener(event: "close", listener: () => void)'
      parameters:
        - id: event
          type: '"close"'
          description: ''
        - id: listener
          type: () =&gt; void
          description: ''
      return:
        type: this
        description: ''
  - name: 'removeListener("data", (chunk: Buffer | string) => void)'
    uid: '@azure/storage-file.RetriableReadableStream.removeListener_2'
    package: '@azure/storage-file'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function removeListener(event: "data", listener: (chunk: Buffer |
        string) => void)
      parameters:
        - id: event
          type: '"data"'
          description: ''
        - id: listener
          type: '(chunk: Buffer | string) =&gt; void'
          description: ''
      return:
        type: this
        description: ''
  - name: 'removeListener("end", () => void)'
    uid: '@azure/storage-file.RetriableReadableStream.removeListener_3'
    package: '@azure/storage-file'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'function removeListener(event: "end", listener: () => void)'
      parameters:
        - id: event
          type: '"end"'
          description: ''
        - id: listener
          type: () =&gt; void
          description: ''
      return:
        type: this
        description: ''
  - name: 'removeListener("error", (err: Error) => void)'
    uid: '@azure/storage-file.RetriableReadableStream.removeListener_5'
    package: '@azure/storage-file'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'function removeListener(event: "error", listener: (err: Error) => void)'
      parameters:
        - id: event
          type: '"error"'
          description: ''
        - id: listener
          type: '(err: Error) =&gt; void'
          description: ''
      return:
        type: this
        description: ''
  - name: 'removeListener("readable", () => void)'
    uid: '@azure/storage-file.RetriableReadableStream.removeListener_4'
    package: '@azure/storage-file'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'function removeListener(event: "readable", listener: () => void)'
      parameters:
        - id: event
          type: '"readable"'
          description: ''
        - id: listener
          type: () =&gt; void
          description: ''
      return:
        type: this
        description: ''
  - name: 'removeListener(string, (args: any[]) => void)'
    uid: '@azure/storage-file.RetriableReadableStream.removeListener'
    package: '@azure/storage-file'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'function removeListener(event: string, listener: (args: any[]) => void)'
      parameters:
        - id: event
          type: string
          description: ''
        - id: listener
          type: '(args: any[]) =&gt; void'
          description: ''
      return:
        type: this
        description: ''
  - name: resume()
    uid: '@azure/storage-file.RetriableReadableStream.resume'
    package: '@azure/storage-file'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: function resume()
      return:
        type: this
        description: ''
  - name: setEncoding(string)
    uid: '@azure/storage-file.RetriableReadableStream.setEncoding'
    package: '@azure/storage-file'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'function setEncoding(encoding: string)'
      parameters:
        - id: encoding
          type: string
          description: ''
      return:
        type: this
        description: ''
  - name: setMaxListeners(number)
    uid: '@azure/storage-file.RetriableReadableStream.setMaxListeners'
    package: '@azure/storage-file'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'function setMaxListeners(n: number)'
      parameters:
        - id: 'n'
          type: number
          description: ''
      return:
        type: this
        description: ''
  - name: unpipe<T>(T)
    uid: '@azure/storage-file.RetriableReadableStream.unpipe'
    package: '@azure/storage-file'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'function unpipe<T>(destination?: T)'
      parameters:
        - id: destination
          type: T
          description: ''
      return:
        type: this
        description: ''
  - name: unshift(any)
    uid: '@azure/storage-file.RetriableReadableStream.unshift'
    package: '@azure/storage-file'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'function unshift(chunk: any)'
      parameters:
        - id: chunk
          type: any
          description: ''
  - name: wrap(ReadableStream)
    uid: '@azure/storage-file.RetriableReadableStream.wrap'
    package: '@azure/storage-file'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'function wrap(oldStream: ReadableStream)'
      parameters:
        - id: oldStream
          type: ReadableStream
          description: ''
      return:
        type: this
        description: ''
extends: Readable
