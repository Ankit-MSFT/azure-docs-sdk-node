### YamlMime:UniversalReference
items:
  - uid: azure-arm-postgresql.ServerSecurityAlertPolicies
    id: azure-arm-postgresql.ServerSecurityAlertPolicies
    name: ServerSecurityAlertPolicies
    summary: Class representing a ServerSecurityAlertPolicies.
    fullName: azure-arm-postgresql.ServerSecurityAlertPolicies
    type: Class
    children:
      - 'azure-arm-postgresql.ServerSecurityAlertPolicies.#ctor'
      - >-
        azure-arm-postgresql.ServerSecurityAlertPolicies#getWithHttpOperationResponse
      - 'azure-arm-postgresql.ServerSecurityAlertPolicies#get'
      - >-
        azure-arm-postgresql.ServerSecurityAlertPolicies#createOrUpdateWithHttpOperationResponse
      - 'azure-arm-postgresql.ServerSecurityAlertPolicies#createOrUpdate'
      - >-
        azure-arm-postgresql.ServerSecurityAlertPolicies#beginCreateOrUpdateWithHttpOperationResponse
      - 'azure-arm-postgresql.ServerSecurityAlertPolicies#beginCreateOrUpdate'
    langs:
      - js
  - id: 'azure-arm-postgresql.ServerSecurityAlertPolicies.#ctor'
    uid: 'azure-arm-postgresql.ServerSecurityAlertPolicies.#ctor'
    parent: azure-arm-postgresql.ServerSecurityAlertPolicies
    name: ServerSecurityAlertPolicies(client)
    fullName: >-
      azure-arm-postgresql.ServerSecurityAlertPolicies.ServerSecurityAlertPolicies(client)
    summary: Create a ServerSecurityAlertPolicies.
    type: Constructor
    syntax:
      parameters:
        - id: client
          type:
            - undefinedPostgreSQLManagementClient
          description: Reference to the service client.
      content: new ServerSecurityAlertPolicies(client)
    langs:
      - js
  - uid: >-
      azure-arm-postgresql.ServerSecurityAlertPolicies#getWithHttpOperationResponse
    id: >-
      azure-arm-postgresql.ServerSecurityAlertPolicies#getWithHttpOperationResponse
    parent: azure-arm-postgresql.ServerSecurityAlertPolicies
    name: 'getWithHttpOperationResponse(resourceGroupName, serverName, options)'
    summary: Get a server's security alert policy.
    fullName: >-
      azure-arm-postgresql.ServerSecurityAlertPolicies.getWithHttpOperationResponse(resourceGroupName,
      serverName, options)
    tags:
      - originalTitle: resolve
        title: resolve
        text: >-
          {HttpOperationResponse<ServerSecurityAlertPolicy>} - The deserialized
          result object.
        value: >-
          {HttpOperationResponse<ServerSecurityAlertPolicy>} - The deserialized
          result object.
      - originalTitle: reject
        title: reject
        text: '{Error} - The error object.'
        value: '{Error} - The error object.'
    type: Function
    syntax:
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: "The name of the resource group that\rcontains the resource. You can obtain this value from the Azure Resource\rManager API or the portal."
        - id: serverName
          type:
            - string
          description: The name of the server.
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: "Headers that will be added to the\rrequest"
          optional: true
      return:
        type:
          - Promise
        description: A promise is returned
      content: >-
        function getWithHttpOperationResponse(resourceGroupName, serverName,
        options)
    langs:
      - js
  - uid: 'azure-arm-postgresql.ServerSecurityAlertPolicies#get'
    id: 'azure-arm-postgresql.ServerSecurityAlertPolicies#get'
    parent: azure-arm-postgresql.ServerSecurityAlertPolicies
    name: 'get(resourceGroupName, serverName, options, optionalCallback)'
    summary: Get a server's security alert policy.
    fullName: >-
      azure-arm-postgresql.ServerSecurityAlertPolicies.get(resourceGroupName,
      serverName, options, optionalCallback)
    tags:
      - originalTitle: resolve
        title: resolve
        text: '{ServerSecurityAlertPolicy} - The deserialized result object.'
        value: '{ServerSecurityAlertPolicy} - The deserialized result object.'
      - originalTitle: reject
        title: reject
        text: "{Error} - The error object.\r\r{function} optionalCallback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {object} [result]   - The deserialized result object if an error did not occur.\r                     See {@link ServerSecurityAlertPolicy} for more\r                     information.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
        value: "{Error} - The error object.\r\r{function} optionalCallback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {object} [result]   - The deserialized result object if an error did not occur.\r                     See {@link ServerSecurityAlertPolicy} for more\r                     information.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
    type: Function
    syntax:
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: "The name of the resource group that\rcontains the resource. You can obtain this value from the Azure Resource\rManager API or the portal."
        - id: serverName
          type:
            - string
          description: The name of the server.
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: "Headers that will be added to the\rrequest"
          optional: true
        - id: optionalCallback
          type:
            - function
          description: The optional callback.
          optional: true
      return:
        type:
          - function
          - Promise
        description: "If a callback was passed as the last parameter\rthen it returns the callback else returns a Promise.\r\r{Promise} A promise is returned"
      content: 'function get(resourceGroupName, serverName, options, optionalCallback)'
    langs:
      - js
  - uid: >-
      azure-arm-postgresql.ServerSecurityAlertPolicies#createOrUpdateWithHttpOperationResponse
    id: >-
      azure-arm-postgresql.ServerSecurityAlertPolicies#createOrUpdateWithHttpOperationResponse
    parent: azure-arm-postgresql.ServerSecurityAlertPolicies
    name: >-
      createOrUpdateWithHttpOperationResponse(resourceGroupName, serverName,
      parameters, options)
    summary: Creates or updates a threat detection policy.
    fullName: >-
      azure-arm-postgresql.ServerSecurityAlertPolicies.createOrUpdateWithHttpOperationResponse(resourceGroupName,
      serverName, parameters, options)
    tags:
      - originalTitle: resolve
        title: resolve
        text: >-
          {HttpOperationResponse<ServerSecurityAlertPolicy>} - The deserialized
          result object.
        value: >-
          {HttpOperationResponse<ServerSecurityAlertPolicy>} - The deserialized
          result object.
      - originalTitle: reject
        title: reject
        text: '{Error} - The error object.'
        value: '{Error} - The error object.'
    type: Function
    syntax:
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: "The name of the resource group that\rcontains the resource. You can obtain this value from the Azure Resource\rManager API or the portal."
        - id: serverName
          type:
            - string
          description: The name of the server.
        - id: parameters
          type:
            - object
          description: The server security alert policy.
        - id: parameters.state
          type:
            - string
          description: "Specifies the state of the policy, whether\rit is enabled or disabled. Possible values include: 'Enabled', 'Disabled'"
        - id: parameters.disabledAlerts
          type:
            - array
          description: "Specifies an array of alerts that\rare disabled. Allowed values are: Sql_Injection,\rSql_Injection_Vulnerability, Access_Anomaly"
          optional: true
        - id: parameters.emailAddresses
          type:
            - array
          description: "Specifies an array of e-mail\raddresses to which the alert is sent."
          optional: true
        - id: parameters.emailAccountAdmins
          type:
            - boolean
          description: "Specifies that the alert is\rsent to the account administrators."
          optional: true
        - id: parameters.storageEndpoint
          type:
            - string
          description: "Specifies the blob storage\rendpoint (e.g. https://MyAccount.blob.core.windows.net). This blob storage\rwill hold all Threat Detection audit logs."
          optional: true
        - id: parameters.storageAccountAccessKey
          type:
            - string
          description: "Specifies the\ridentifier key of the Threat Detection audit storage account."
          optional: true
        - id: parameters.retentionDays
          type:
            - number
          description: "Specifies the number of days to\rkeep in the Threat Detection audit logs."
          optional: true
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: "Headers that will be added to the\rrequest"
          optional: true
      return:
        type:
          - Promise
        description: A promise is returned
      content: >-
        function createOrUpdateWithHttpOperationResponse(resourceGroupName,
        serverName, parameters, options)
    langs:
      - js
  - uid: 'azure-arm-postgresql.ServerSecurityAlertPolicies#createOrUpdate'
    id: 'azure-arm-postgresql.ServerSecurityAlertPolicies#createOrUpdate'
    parent: azure-arm-postgresql.ServerSecurityAlertPolicies
    name: >-
      createOrUpdate(resourceGroupName, serverName, parameters, options,
      optionalCallback)
    summary: Creates or updates a threat detection policy.
    fullName: >-
      azure-arm-postgresql.ServerSecurityAlertPolicies.createOrUpdate(resourceGroupName,
      serverName, parameters, options, optionalCallback)
    tags:
      - originalTitle: resolve
        title: resolve
        text: '{ServerSecurityAlertPolicy} - The deserialized result object.'
        value: '{ServerSecurityAlertPolicy} - The deserialized result object.'
      - originalTitle: reject
        title: reject
        text: "{Error} - The error object.\r\r{function} optionalCallback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {object} [result]   - The deserialized result object if an error did not occur.\r                     See {@link ServerSecurityAlertPolicy} for more\r                     information.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
        value: "{Error} - The error object.\r\r{function} optionalCallback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {object} [result]   - The deserialized result object if an error did not occur.\r                     See {@link ServerSecurityAlertPolicy} for more\r                     information.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
    type: Function
    syntax:
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: "The name of the resource group that\rcontains the resource. You can obtain this value from the Azure Resource\rManager API or the portal."
        - id: serverName
          type:
            - string
          description: The name of the server.
        - id: parameters
          type:
            - object
          description: The server security alert policy.
        - id: parameters.state
          type:
            - string
          description: "Specifies the state of the policy, whether\rit is enabled or disabled. Possible values include: 'Enabled', 'Disabled'"
        - id: parameters.disabledAlerts
          type:
            - array
          description: "Specifies an array of alerts that\rare disabled. Allowed values are: Sql_Injection,\rSql_Injection_Vulnerability, Access_Anomaly"
          optional: true
        - id: parameters.emailAddresses
          type:
            - array
          description: "Specifies an array of e-mail\raddresses to which the alert is sent."
          optional: true
        - id: parameters.emailAccountAdmins
          type:
            - boolean
          description: "Specifies that the alert is\rsent to the account administrators."
          optional: true
        - id: parameters.storageEndpoint
          type:
            - string
          description: "Specifies the blob storage\rendpoint (e.g. https://MyAccount.blob.core.windows.net). This blob storage\rwill hold all Threat Detection audit logs."
          optional: true
        - id: parameters.storageAccountAccessKey
          type:
            - string
          description: "Specifies the\ridentifier key of the Threat Detection audit storage account."
          optional: true
        - id: parameters.retentionDays
          type:
            - number
          description: "Specifies the number of days to\rkeep in the Threat Detection audit logs."
          optional: true
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: "Headers that will be added to the\rrequest"
          optional: true
        - id: optionalCallback
          type:
            - function
          description: The optional callback.
          optional: true
      return:
        type:
          - function
          - Promise
        description: "If a callback was passed as the last parameter\rthen it returns the callback else returns a Promise.\r\r{Promise} A promise is returned"
      content: >-
        function createOrUpdate(resourceGroupName, serverName, parameters,
        options, optionalCallback)
    langs:
      - js
  - uid: >-
      azure-arm-postgresql.ServerSecurityAlertPolicies#beginCreateOrUpdateWithHttpOperationResponse
    id: >-
      azure-arm-postgresql.ServerSecurityAlertPolicies#beginCreateOrUpdateWithHttpOperationResponse
    parent: azure-arm-postgresql.ServerSecurityAlertPolicies
    name: >-
      beginCreateOrUpdateWithHttpOperationResponse(resourceGroupName,
      serverName, parameters, options)
    summary: Creates or updates a threat detection policy.
    fullName: >-
      azure-arm-postgresql.ServerSecurityAlertPolicies.beginCreateOrUpdateWithHttpOperationResponse(resourceGroupName,
      serverName, parameters, options)
    tags:
      - originalTitle: resolve
        title: resolve
        text: >-
          {HttpOperationResponse<ServerSecurityAlertPolicy>} - The deserialized
          result object.
        value: >-
          {HttpOperationResponse<ServerSecurityAlertPolicy>} - The deserialized
          result object.
      - originalTitle: reject
        title: reject
        text: '{Error} - The error object.'
        value: '{Error} - The error object.'
    type: Function
    syntax:
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: "The name of the resource group that\rcontains the resource. You can obtain this value from the Azure Resource\rManager API or the portal."
        - id: serverName
          type:
            - string
          description: The name of the server.
        - id: parameters
          type:
            - object
          description: The server security alert policy.
        - id: parameters.state
          type:
            - string
          description: "Specifies the state of the policy, whether\rit is enabled or disabled. Possible values include: 'Enabled', 'Disabled'"
        - id: parameters.disabledAlerts
          type:
            - array
          description: "Specifies an array of alerts that\rare disabled. Allowed values are: Sql_Injection,\rSql_Injection_Vulnerability, Access_Anomaly"
          optional: true
        - id: parameters.emailAddresses
          type:
            - array
          description: "Specifies an array of e-mail\raddresses to which the alert is sent."
          optional: true
        - id: parameters.emailAccountAdmins
          type:
            - boolean
          description: "Specifies that the alert is\rsent to the account administrators."
          optional: true
        - id: parameters.storageEndpoint
          type:
            - string
          description: "Specifies the blob storage\rendpoint (e.g. https://MyAccount.blob.core.windows.net). This blob storage\rwill hold all Threat Detection audit logs."
          optional: true
        - id: parameters.storageAccountAccessKey
          type:
            - string
          description: "Specifies the\ridentifier key of the Threat Detection audit storage account."
          optional: true
        - id: parameters.retentionDays
          type:
            - number
          description: "Specifies the number of days to\rkeep in the Threat Detection audit logs."
          optional: true
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: "Headers that will be added to the\rrequest"
          optional: true
      return:
        type:
          - Promise
        description: A promise is returned
      content: >-
        function beginCreateOrUpdateWithHttpOperationResponse(resourceGroupName,
        serverName, parameters, options)
    langs:
      - js
  - uid: 'azure-arm-postgresql.ServerSecurityAlertPolicies#beginCreateOrUpdate'
    id: 'azure-arm-postgresql.ServerSecurityAlertPolicies#beginCreateOrUpdate'
    parent: azure-arm-postgresql.ServerSecurityAlertPolicies
    name: >-
      beginCreateOrUpdate(resourceGroupName, serverName, parameters, options,
      optionalCallback)
    summary: Creates or updates a threat detection policy.
    fullName: >-
      azure-arm-postgresql.ServerSecurityAlertPolicies.beginCreateOrUpdate(resourceGroupName,
      serverName, parameters, options, optionalCallback)
    tags:
      - originalTitle: resolve
        title: resolve
        text: '{ServerSecurityAlertPolicy} - The deserialized result object.'
        value: '{ServerSecurityAlertPolicy} - The deserialized result object.'
      - originalTitle: reject
        title: reject
        text: "{Error} - The error object.\r\r{function} optionalCallback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {object} [result]   - The deserialized result object if an error did not occur.\r                     See {@link ServerSecurityAlertPolicy} for more\r                     information.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
        value: "{Error} - The error object.\r\r{function} optionalCallback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {object} [result]   - The deserialized result object if an error did not occur.\r                     See {@link ServerSecurityAlertPolicy} for more\r                     information.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
    type: Function
    syntax:
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: "The name of the resource group that\rcontains the resource. You can obtain this value from the Azure Resource\rManager API or the portal."
        - id: serverName
          type:
            - string
          description: The name of the server.
        - id: parameters
          type:
            - object
          description: The server security alert policy.
        - id: parameters.state
          type:
            - string
          description: "Specifies the state of the policy, whether\rit is enabled or disabled. Possible values include: 'Enabled', 'Disabled'"
        - id: parameters.disabledAlerts
          type:
            - array
          description: "Specifies an array of alerts that\rare disabled. Allowed values are: Sql_Injection,\rSql_Injection_Vulnerability, Access_Anomaly"
          optional: true
        - id: parameters.emailAddresses
          type:
            - array
          description: "Specifies an array of e-mail\raddresses to which the alert is sent."
          optional: true
        - id: parameters.emailAccountAdmins
          type:
            - boolean
          description: "Specifies that the alert is\rsent to the account administrators."
          optional: true
        - id: parameters.storageEndpoint
          type:
            - string
          description: "Specifies the blob storage\rendpoint (e.g. https://MyAccount.blob.core.windows.net). This blob storage\rwill hold all Threat Detection audit logs."
          optional: true
        - id: parameters.storageAccountAccessKey
          type:
            - string
          description: "Specifies the\ridentifier key of the Threat Detection audit storage account."
          optional: true
        - id: parameters.retentionDays
          type:
            - number
          description: "Specifies the number of days to\rkeep in the Threat Detection audit logs."
          optional: true
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: "Headers that will be added to the\rrequest"
          optional: true
        - id: optionalCallback
          type:
            - function
          description: The optional callback.
          optional: true
      return:
        type:
          - function
          - Promise
        description: "If a callback was passed as the last parameter\rthen it returns the callback else returns a Promise.\r\r{Promise} A promise is returned"
      content: >-
        function beginCreateOrUpdate(resourceGroupName, serverName, parameters,
        options, optionalCallback)
    langs:
      - js
