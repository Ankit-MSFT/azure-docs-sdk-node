### YamlMime:UniversalReference
items:
  - uid: azure-arm-eventgrid.EventSubscriptions
    name: EventSubscriptions
    fullName: EventSubscriptions
    children:
      - azure-arm-eventgrid.EventSubscriptions.beginCreateOrUpdate
      - azure-arm-eventgrid.EventSubscriptions.beginCreateOrUpdate_2
      - azure-arm-eventgrid.EventSubscriptions.beginCreateOrUpdate_1
      - >-
        azure-arm-eventgrid.EventSubscriptions.beginCreateOrUpdateWithHttpOperationResponse
      - azure-arm-eventgrid.EventSubscriptions.beginDeleteMethod
      - azure-arm-eventgrid.EventSubscriptions.beginDeleteMethod_2
      - azure-arm-eventgrid.EventSubscriptions.beginDeleteMethod_1
      - >-
        azure-arm-eventgrid.EventSubscriptions.beginDeleteMethodWithHttpOperationResponse
      - azure-arm-eventgrid.EventSubscriptions.beginUpdate
      - azure-arm-eventgrid.EventSubscriptions.beginUpdate_2
      - azure-arm-eventgrid.EventSubscriptions.beginUpdate_1
      - >-
        azure-arm-eventgrid.EventSubscriptions.beginUpdateWithHttpOperationResponse
      - azure-arm-eventgrid.EventSubscriptions.createOrUpdate
      - azure-arm-eventgrid.EventSubscriptions.createOrUpdate_2
      - azure-arm-eventgrid.EventSubscriptions.createOrUpdate_1
      - >-
        azure-arm-eventgrid.EventSubscriptions.createOrUpdateWithHttpOperationResponse
      - azure-arm-eventgrid.EventSubscriptions.deleteMethod
      - azure-arm-eventgrid.EventSubscriptions.deleteMethod_2
      - azure-arm-eventgrid.EventSubscriptions.deleteMethod_1
      - >-
        azure-arm-eventgrid.EventSubscriptions.deleteMethodWithHttpOperationResponse
      - azure-arm-eventgrid.EventSubscriptions.get
      - azure-arm-eventgrid.EventSubscriptions.get_2
      - azure-arm-eventgrid.EventSubscriptions.get_1
      - azure-arm-eventgrid.EventSubscriptions.getFullUrl
      - azure-arm-eventgrid.EventSubscriptions.getFullUrl_2
      - azure-arm-eventgrid.EventSubscriptions.getFullUrl_1
      - >-
        azure-arm-eventgrid.EventSubscriptions.getFullUrlWithHttpOperationResponse
      - azure-arm-eventgrid.EventSubscriptions.getWithHttpOperationResponse
      - azure-arm-eventgrid.EventSubscriptions.listByDomainTopic
      - azure-arm-eventgrid.EventSubscriptions.listByDomainTopic_2
      - azure-arm-eventgrid.EventSubscriptions.listByDomainTopic_1
      - azure-arm-eventgrid.EventSubscriptions.listByDomainTopicNext
      - azure-arm-eventgrid.EventSubscriptions.listByDomainTopicNext_2
      - azure-arm-eventgrid.EventSubscriptions.listByDomainTopicNext_1
      - >-
        azure-arm-eventgrid.EventSubscriptions.listByDomainTopicNextWithHttpOperationResponse
      - >-
        azure-arm-eventgrid.EventSubscriptions.listByDomainTopicWithHttpOperationResponse
      - azure-arm-eventgrid.EventSubscriptions.listByResource
      - azure-arm-eventgrid.EventSubscriptions.listByResource_2
      - azure-arm-eventgrid.EventSubscriptions.listByResource_1
      - azure-arm-eventgrid.EventSubscriptions.listByResourceNext
      - azure-arm-eventgrid.EventSubscriptions.listByResourceNext_2
      - azure-arm-eventgrid.EventSubscriptions.listByResourceNext_1
      - >-
        azure-arm-eventgrid.EventSubscriptions.listByResourceNextWithHttpOperationResponse
      - >-
        azure-arm-eventgrid.EventSubscriptions.listByResourceWithHttpOperationResponse
      - azure-arm-eventgrid.EventSubscriptions.listGlobalByResourceGroup
      - azure-arm-eventgrid.EventSubscriptions.listGlobalByResourceGroup_2
      - azure-arm-eventgrid.EventSubscriptions.listGlobalByResourceGroup_1
      - >-
        azure-arm-eventgrid.EventSubscriptions.listGlobalByResourceGroupForTopicType
      - >-
        azure-arm-eventgrid.EventSubscriptions.listGlobalByResourceGroupForTopicType_2
      - >-
        azure-arm-eventgrid.EventSubscriptions.listGlobalByResourceGroupForTopicType_1
      - >-
        azure-arm-eventgrid.EventSubscriptions.listGlobalByResourceGroupForTopicTypeNext
      - >-
        azure-arm-eventgrid.EventSubscriptions.listGlobalByResourceGroupForTopicTypeNext_2
      - >-
        azure-arm-eventgrid.EventSubscriptions.listGlobalByResourceGroupForTopicTypeNext_1
      - >-
        azure-arm-eventgrid.EventSubscriptions.listGlobalByResourceGroupForTopicTypeNextWithHttpOperationResponse
      - >-
        azure-arm-eventgrid.EventSubscriptions.listGlobalByResourceGroupForTopicTypeWithHttpOperationResponse
      - azure-arm-eventgrid.EventSubscriptions.listGlobalByResourceGroupNext
      - azure-arm-eventgrid.EventSubscriptions.listGlobalByResourceGroupNext_2
      - azure-arm-eventgrid.EventSubscriptions.listGlobalByResourceGroupNext_1
      - >-
        azure-arm-eventgrid.EventSubscriptions.listGlobalByResourceGroupNextWithHttpOperationResponse
      - >-
        azure-arm-eventgrid.EventSubscriptions.listGlobalByResourceGroupWithHttpOperationResponse
      - azure-arm-eventgrid.EventSubscriptions.listGlobalBySubscription
      - azure-arm-eventgrid.EventSubscriptions.listGlobalBySubscription_2
      - azure-arm-eventgrid.EventSubscriptions.listGlobalBySubscription_1
      - >-
        azure-arm-eventgrid.EventSubscriptions.listGlobalBySubscriptionForTopicType
      - >-
        azure-arm-eventgrid.EventSubscriptions.listGlobalBySubscriptionForTopicType_2
      - >-
        azure-arm-eventgrid.EventSubscriptions.listGlobalBySubscriptionForTopicType_1
      - >-
        azure-arm-eventgrid.EventSubscriptions.listGlobalBySubscriptionForTopicTypeNext
      - >-
        azure-arm-eventgrid.EventSubscriptions.listGlobalBySubscriptionForTopicTypeNext_2
      - >-
        azure-arm-eventgrid.EventSubscriptions.listGlobalBySubscriptionForTopicTypeNext_1
      - >-
        azure-arm-eventgrid.EventSubscriptions.listGlobalBySubscriptionForTopicTypeNextWithHttpOperationResponse
      - >-
        azure-arm-eventgrid.EventSubscriptions.listGlobalBySubscriptionForTopicTypeWithHttpOperationResponse
      - azure-arm-eventgrid.EventSubscriptions.listGlobalBySubscriptionNext
      - azure-arm-eventgrid.EventSubscriptions.listGlobalBySubscriptionNext_2
      - azure-arm-eventgrid.EventSubscriptions.listGlobalBySubscriptionNext_1
      - >-
        azure-arm-eventgrid.EventSubscriptions.listGlobalBySubscriptionNextWithHttpOperationResponse
      - >-
        azure-arm-eventgrid.EventSubscriptions.listGlobalBySubscriptionWithHttpOperationResponse
      - azure-arm-eventgrid.EventSubscriptions.listRegionalByResourceGroup
      - azure-arm-eventgrid.EventSubscriptions.listRegionalByResourceGroup_2
      - azure-arm-eventgrid.EventSubscriptions.listRegionalByResourceGroup_1
      - >-
        azure-arm-eventgrid.EventSubscriptions.listRegionalByResourceGroupForTopicType
      - >-
        azure-arm-eventgrid.EventSubscriptions.listRegionalByResourceGroupForTopicType_2
      - >-
        azure-arm-eventgrid.EventSubscriptions.listRegionalByResourceGroupForTopicType_1
      - >-
        azure-arm-eventgrid.EventSubscriptions.listRegionalByResourceGroupForTopicTypeNext
      - >-
        azure-arm-eventgrid.EventSubscriptions.listRegionalByResourceGroupForTopicTypeNext_2
      - >-
        azure-arm-eventgrid.EventSubscriptions.listRegionalByResourceGroupForTopicTypeNext_1
      - >-
        azure-arm-eventgrid.EventSubscriptions.listRegionalByResourceGroupForTopicTypeNextWithHttpOperationResponse
      - >-
        azure-arm-eventgrid.EventSubscriptions.listRegionalByResourceGroupForTopicTypeWithHttpOperationResponse
      - azure-arm-eventgrid.EventSubscriptions.listRegionalByResourceGroupNext
      - azure-arm-eventgrid.EventSubscriptions.listRegionalByResourceGroupNext_2
      - azure-arm-eventgrid.EventSubscriptions.listRegionalByResourceGroupNext_1
      - >-
        azure-arm-eventgrid.EventSubscriptions.listRegionalByResourceGroupNextWithHttpOperationResponse
      - >-
        azure-arm-eventgrid.EventSubscriptions.listRegionalByResourceGroupWithHttpOperationResponse
      - azure-arm-eventgrid.EventSubscriptions.listRegionalBySubscription
      - azure-arm-eventgrid.EventSubscriptions.listRegionalBySubscription_2
      - azure-arm-eventgrid.EventSubscriptions.listRegionalBySubscription_1
      - >-
        azure-arm-eventgrid.EventSubscriptions.listRegionalBySubscriptionForTopicType
      - >-
        azure-arm-eventgrid.EventSubscriptions.listRegionalBySubscriptionForTopicType_2
      - >-
        azure-arm-eventgrid.EventSubscriptions.listRegionalBySubscriptionForTopicType_1
      - >-
        azure-arm-eventgrid.EventSubscriptions.listRegionalBySubscriptionForTopicTypeNext
      - >-
        azure-arm-eventgrid.EventSubscriptions.listRegionalBySubscriptionForTopicTypeNext_2
      - >-
        azure-arm-eventgrid.EventSubscriptions.listRegionalBySubscriptionForTopicTypeNext_1
      - >-
        azure-arm-eventgrid.EventSubscriptions.listRegionalBySubscriptionForTopicTypeNextWithHttpOperationResponse
      - >-
        azure-arm-eventgrid.EventSubscriptions.listRegionalBySubscriptionForTopicTypeWithHttpOperationResponse
      - azure-arm-eventgrid.EventSubscriptions.listRegionalBySubscriptionNext
      - azure-arm-eventgrid.EventSubscriptions.listRegionalBySubscriptionNext_2
      - azure-arm-eventgrid.EventSubscriptions.listRegionalBySubscriptionNext_1
      - >-
        azure-arm-eventgrid.EventSubscriptions.listRegionalBySubscriptionNextWithHttpOperationResponse
      - >-
        azure-arm-eventgrid.EventSubscriptions.listRegionalBySubscriptionWithHttpOperationResponse
      - azure-arm-eventgrid.EventSubscriptions.update
      - azure-arm-eventgrid.EventSubscriptions.update_2
      - azure-arm-eventgrid.EventSubscriptions.update_1
      - azure-arm-eventgrid.EventSubscriptions.updateWithHttpOperationResponse
    langs:
      - typeScript
    type: interface
    summary: ''
    package: azure-arm-eventgrid
  - uid: azure-arm-eventgrid.EventSubscriptions.beginCreateOrUpdate
    name: 'beginCreateOrUpdate(string, string, EventSubscription, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function beginCreateOrUpdate(scope: string, eventSubscriptionName:
        string, eventSubscriptionInfo: EventSubscription, options?: Object)
      parameters:
        - id: scope
          type:
            - string
          description: >
            The identifier of the resource to which the event

            subscription needs to be created or updated. The scope can be a

            subscription, or a resource group, or a top level resource belonging
            to a

            resource provider namespace, or an EventGrid topic. For example, use

            '/subscriptions/{subscriptionId}/' for a subscription,

            '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}'
            for a

            resource group, and

            '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}'

            for a resource, and

            '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.EventGrid/topics/{topicName}'

            for an EventGrid topic.
        - id: eventSubscriptionName
          type:
            - string
          description: >
            Name of the event subscription. Event

            subscription names must be between 3 and 64 characters in length and
            should

            use alphanumeric letters only.
        - id: eventSubscriptionInfo
          type:
            - azure-arm-eventgrid.EventSubscription
          description: |
            Event subscription properties
            containing the destination and filter information
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<azure-arm-eventgrid.EventSubscription>
    package: azure-arm-eventgrid
  - uid: azure-arm-eventgrid.EventSubscriptions.beginCreateOrUpdate_2
    name: >-
      beginCreateOrUpdate(string, string, EventSubscription, Object,
      ServiceCallback<EventSubscription>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function beginCreateOrUpdate(scope: string, eventSubscriptionName:
        string, eventSubscriptionInfo: EventSubscription, options: Object,
        callback: ServiceCallback<EventSubscription>)
      parameters:
        - id: scope
          type:
            - string
          description: ''
        - id: eventSubscriptionName
          type:
            - string
          description: ''
        - id: eventSubscriptionInfo
          type:
            - azure-arm-eventgrid.EventSubscription
          description: ''
        - id: options
          type:
            - Object
          description: ''
        - id: callback
          type:
            - ServiceCallback<azure-arm-eventgrid.EventSubscription>
          description: ''
      return:
        type:
          - Promise<azure-arm-eventgrid.EventSubscription>
    package: azure-arm-eventgrid
  - uid: azure-arm-eventgrid.EventSubscriptions.beginCreateOrUpdate_1
    name: >-
      beginCreateOrUpdate(string, string, EventSubscription,
      ServiceCallback<EventSubscription>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function beginCreateOrUpdate(scope: string, eventSubscriptionName:
        string, eventSubscriptionInfo: EventSubscription, callback:
        ServiceCallback<EventSubscription>)
      parameters:
        - id: scope
          type:
            - string
          description: ''
        - id: eventSubscriptionName
          type:
            - string
          description: ''
        - id: eventSubscriptionInfo
          type:
            - azure-arm-eventgrid.EventSubscription
          description: ''
        - id: callback
          type:
            - ServiceCallback<azure-arm-eventgrid.EventSubscription>
          description: ''
      return:
        type:
          - Promise<azure-arm-eventgrid.EventSubscription>
    package: azure-arm-eventgrid
  - uid: >-
      azure-arm-eventgrid.EventSubscriptions.beginCreateOrUpdateWithHttpOperationResponse
    name: >-
      beginCreateOrUpdateWithHttpOperationResponse(string, string,
      EventSubscription, Object)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function beginCreateOrUpdateWithHttpOperationResponse(scope: string,
        eventSubscriptionName: string, eventSubscriptionInfo: EventSubscription,
        options?: Object)
      parameters:
        - id: scope
          type:
            - string
          description: >
            The identifier of the resource to which the event

            subscription needs to be created or updated. The scope can be a

            subscription, or a resource group, or a top level resource belonging
            to a

            resource provider namespace, or an EventGrid topic. For example, use

            '/subscriptions/{subscriptionId}/' for a subscription,

            '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}'
            for a

            resource group, and

            '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}'

            for a resource, and

            '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.EventGrid/topics/{topicName}'

            for an EventGrid topic.
        - id: eventSubscriptionName
          type:
            - string
          description: >
            Name of the event subscription. Event

            subscription names must be between 3 and 64 characters in length and
            should

            use alphanumeric letters only.
        - id: eventSubscriptionInfo
          type:
            - azure-arm-eventgrid.EventSubscription
          description: |
            Event subscription properties
            containing the destination and filter information
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - >-
            Promise<HttpOperationResponse<azure-arm-eventgrid.EventSubscription>>
    package: azure-arm-eventgrid
  - uid: azure-arm-eventgrid.EventSubscriptions.beginDeleteMethod
    name: 'beginDeleteMethod(string, string, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function beginDeleteMethod(scope: string, eventSubscriptionName: string,
        options?: Object)
      parameters:
        - id: scope
          type:
            - string
          description: >
            The scope of the event subscription. The scope can be

            a subscription, or a resource group, or a top level resource
            belonging to a

            resource provider namespace, or an EventGrid topic. For example, use

            '/subscriptions/{subscriptionId}/' for a subscription,

            '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}'
            for a

            resource group, and

            '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}'

            for a resource, and

            '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.EventGrid/topics/{topicName}'

            for an EventGrid topic.
        - id: eventSubscriptionName
          type:
            - string
          description: |
            Name of the event subscription
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<void>
    package: azure-arm-eventgrid
  - uid: azure-arm-eventgrid.EventSubscriptions.beginDeleteMethod_2
    name: 'beginDeleteMethod(string, string, Object, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function beginDeleteMethod(scope: string, eventSubscriptionName: string,
        options: Object, callback: ServiceCallback<void>)
      parameters:
        - id: scope
          type:
            - string
          description: ''
        - id: eventSubscriptionName
          type:
            - string
          description: ''
        - id: options
          type:
            - Object
          description: ''
        - id: callback
          type:
            - ServiceCallback<void>
          description: ''
      return:
        type:
          - Promise<void>
    package: azure-arm-eventgrid
  - uid: azure-arm-eventgrid.EventSubscriptions.beginDeleteMethod_1
    name: 'beginDeleteMethod(string, string, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function beginDeleteMethod(scope: string, eventSubscriptionName: string,
        callback: ServiceCallback<void>)
      parameters:
        - id: scope
          type:
            - string
          description: ''
        - id: eventSubscriptionName
          type:
            - string
          description: ''
        - id: callback
          type:
            - ServiceCallback<void>
          description: ''
      return:
        type:
          - Promise<void>
    package: azure-arm-eventgrid
  - uid: >-
      azure-arm-eventgrid.EventSubscriptions.beginDeleteMethodWithHttpOperationResponse
    name: 'beginDeleteMethodWithHttpOperationResponse(string, string, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function beginDeleteMethodWithHttpOperationResponse(scope: string,
        eventSubscriptionName: string, options?: Object)
      parameters:
        - id: scope
          type:
            - string
          description: >
            The scope of the event subscription. The scope can be

            a subscription, or a resource group, or a top level resource
            belonging to a

            resource provider namespace, or an EventGrid topic. For example, use

            '/subscriptions/{subscriptionId}/' for a subscription,

            '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}'
            for a

            resource group, and

            '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}'

            for a resource, and

            '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.EventGrid/topics/{topicName}'

            for an EventGrid topic.
        - id: eventSubscriptionName
          type:
            - string
          description: |
            Name of the event subscription
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<HttpOperationResponse<void>>
    package: azure-arm-eventgrid
  - uid: azure-arm-eventgrid.EventSubscriptions.beginUpdate
    name: 'beginUpdate(string, string, EventSubscriptionUpdateParameters, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function beginUpdate(scope: string, eventSubscriptionName: string,
        eventSubscriptionUpdateParameters: EventSubscriptionUpdateParameters,
        options?: Object)
      parameters:
        - id: scope
          type:
            - string
          description: >
            The scope of existing event subscription. The scope

            can be a subscription, or a resource group, or a top level resource

            belonging to a resource provider namespace, or an EventGrid topic.
            For

            example, use '/subscriptions/{subscriptionId}/' for a subscription,

            '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}'
            for a

            resource group, and

            '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}'

            for a resource, and

            '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.EventGrid/topics/{topicName}'

            for an EventGrid topic.
        - id: eventSubscriptionName
          type:
            - string
          description: |
            Name of the event subscription to be
            updated
        - id: eventSubscriptionUpdateParameters
          type:
            - azure-arm-eventgrid.EventSubscriptionUpdateParameters
          description: |
            Updated event subscription
            information
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<azure-arm-eventgrid.EventSubscription>
    package: azure-arm-eventgrid
  - uid: azure-arm-eventgrid.EventSubscriptions.beginUpdate_2
    name: >-
      beginUpdate(string, string, EventSubscriptionUpdateParameters, Object,
      ServiceCallback<EventSubscription>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function beginUpdate(scope: string, eventSubscriptionName: string,
        eventSubscriptionUpdateParameters: EventSubscriptionUpdateParameters,
        options: Object, callback: ServiceCallback<EventSubscription>)
      parameters:
        - id: scope
          type:
            - string
          description: ''
        - id: eventSubscriptionName
          type:
            - string
          description: ''
        - id: eventSubscriptionUpdateParameters
          type:
            - azure-arm-eventgrid.EventSubscriptionUpdateParameters
          description: ''
        - id: options
          type:
            - Object
          description: ''
        - id: callback
          type:
            - ServiceCallback<azure-arm-eventgrid.EventSubscription>
          description: ''
      return:
        type:
          - Promise<azure-arm-eventgrid.EventSubscription>
    package: azure-arm-eventgrid
  - uid: azure-arm-eventgrid.EventSubscriptions.beginUpdate_1
    name: >-
      beginUpdate(string, string, EventSubscriptionUpdateParameters,
      ServiceCallback<EventSubscription>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function beginUpdate(scope: string, eventSubscriptionName: string,
        eventSubscriptionUpdateParameters: EventSubscriptionUpdateParameters,
        callback: ServiceCallback<EventSubscription>)
      parameters:
        - id: scope
          type:
            - string
          description: ''
        - id: eventSubscriptionName
          type:
            - string
          description: ''
        - id: eventSubscriptionUpdateParameters
          type:
            - azure-arm-eventgrid.EventSubscriptionUpdateParameters
          description: ''
        - id: callback
          type:
            - ServiceCallback<azure-arm-eventgrid.EventSubscription>
          description: ''
      return:
        type:
          - Promise<azure-arm-eventgrid.EventSubscription>
    package: azure-arm-eventgrid
  - uid: >-
      azure-arm-eventgrid.EventSubscriptions.beginUpdateWithHttpOperationResponse
    name: >-
      beginUpdateWithHttpOperationResponse(string, string,
      EventSubscriptionUpdateParameters, Object)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function beginUpdateWithHttpOperationResponse(scope: string,
        eventSubscriptionName: string, eventSubscriptionUpdateParameters:
        EventSubscriptionUpdateParameters, options?: Object)
      parameters:
        - id: scope
          type:
            - string
          description: >
            The scope of existing event subscription. The scope

            can be a subscription, or a resource group, or a top level resource

            belonging to a resource provider namespace, or an EventGrid topic.
            For

            example, use '/subscriptions/{subscriptionId}/' for a subscription,

            '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}'
            for a

            resource group, and

            '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}'

            for a resource, and

            '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.EventGrid/topics/{topicName}'

            for an EventGrid topic.
        - id: eventSubscriptionName
          type:
            - string
          description: |
            Name of the event subscription to be
            updated
        - id: eventSubscriptionUpdateParameters
          type:
            - azure-arm-eventgrid.EventSubscriptionUpdateParameters
          description: |
            Updated event subscription
            information
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - >-
            Promise<HttpOperationResponse<azure-arm-eventgrid.EventSubscription>>
    package: azure-arm-eventgrid
  - uid: azure-arm-eventgrid.EventSubscriptions.createOrUpdate
    name: 'createOrUpdate(string, string, EventSubscription, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function createOrUpdate(scope: string, eventSubscriptionName: string,
        eventSubscriptionInfo: EventSubscription, options?: Object)
      parameters:
        - id: scope
          type:
            - string
          description: >
            The identifier of the resource to which the event

            subscription needs to be created or updated. The scope can be a

            subscription, or a resource group, or a top level resource belonging
            to a

            resource provider namespace, or an EventGrid topic. For example, use

            '/subscriptions/{subscriptionId}/' for a subscription,

            '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}'
            for a

            resource group, and

            '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}'

            for a resource, and

            '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.EventGrid/topics/{topicName}'

            for an EventGrid topic.
        - id: eventSubscriptionName
          type:
            - string
          description: >
            Name of the event subscription. Event

            subscription names must be between 3 and 64 characters in length and
            should

            use alphanumeric letters only.
        - id: eventSubscriptionInfo
          type:
            - azure-arm-eventgrid.EventSubscription
          description: |
            Event subscription properties
            containing the destination and filter information
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<azure-arm-eventgrid.EventSubscription>
    package: azure-arm-eventgrid
  - uid: azure-arm-eventgrid.EventSubscriptions.createOrUpdate_2
    name: >-
      createOrUpdate(string, string, EventSubscription, Object,
      ServiceCallback<EventSubscription>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function createOrUpdate(scope: string, eventSubscriptionName: string,
        eventSubscriptionInfo: EventSubscription, options: Object, callback:
        ServiceCallback<EventSubscription>)
      parameters:
        - id: scope
          type:
            - string
          description: ''
        - id: eventSubscriptionName
          type:
            - string
          description: ''
        - id: eventSubscriptionInfo
          type:
            - azure-arm-eventgrid.EventSubscription
          description: ''
        - id: options
          type:
            - Object
          description: ''
        - id: callback
          type:
            - ServiceCallback<azure-arm-eventgrid.EventSubscription>
          description: ''
      return:
        type:
          - Promise<azure-arm-eventgrid.EventSubscription>
    package: azure-arm-eventgrid
  - uid: azure-arm-eventgrid.EventSubscriptions.createOrUpdate_1
    name: >-
      createOrUpdate(string, string, EventSubscription,
      ServiceCallback<EventSubscription>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function createOrUpdate(scope: string, eventSubscriptionName: string,
        eventSubscriptionInfo: EventSubscription, callback:
        ServiceCallback<EventSubscription>)
      parameters:
        - id: scope
          type:
            - string
          description: ''
        - id: eventSubscriptionName
          type:
            - string
          description: ''
        - id: eventSubscriptionInfo
          type:
            - azure-arm-eventgrid.EventSubscription
          description: ''
        - id: callback
          type:
            - ServiceCallback<azure-arm-eventgrid.EventSubscription>
          description: ''
      return:
        type:
          - Promise<azure-arm-eventgrid.EventSubscription>
    package: azure-arm-eventgrid
  - uid: >-
      azure-arm-eventgrid.EventSubscriptions.createOrUpdateWithHttpOperationResponse
    name: >-
      createOrUpdateWithHttpOperationResponse(string, string, EventSubscription,
      Object)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function createOrUpdateWithHttpOperationResponse(scope: string,
        eventSubscriptionName: string, eventSubscriptionInfo: EventSubscription,
        options?: Object)
      parameters:
        - id: scope
          type:
            - string
          description: >
            The identifier of the resource to which the event

            subscription needs to be created or updated. The scope can be a

            subscription, or a resource group, or a top level resource belonging
            to a

            resource provider namespace, or an EventGrid topic. For example, use

            '/subscriptions/{subscriptionId}/' for a subscription,

            '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}'
            for a

            resource group, and

            '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}'

            for a resource, and

            '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.EventGrid/topics/{topicName}'

            for an EventGrid topic.
        - id: eventSubscriptionName
          type:
            - string
          description: >
            Name of the event subscription. Event

            subscription names must be between 3 and 64 characters in length and
            should

            use alphanumeric letters only.
        - id: eventSubscriptionInfo
          type:
            - azure-arm-eventgrid.EventSubscription
          description: |
            Event subscription properties
            containing the destination and filter information
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - >-
            Promise<HttpOperationResponse<azure-arm-eventgrid.EventSubscription>>
    package: azure-arm-eventgrid
  - uid: azure-arm-eventgrid.EventSubscriptions.deleteMethod
    name: 'deleteMethod(string, string, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function deleteMethod(scope: string, eventSubscriptionName: string,
        options?: Object)
      parameters:
        - id: scope
          type:
            - string
          description: >
            The scope of the event subscription. The scope can be

            a subscription, or a resource group, or a top level resource
            belonging to a

            resource provider namespace, or an EventGrid topic. For example, use

            '/subscriptions/{subscriptionId}/' for a subscription,

            '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}'
            for a

            resource group, and

            '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}'

            for a resource, and

            '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.EventGrid/topics/{topicName}'

            for an EventGrid topic.
        - id: eventSubscriptionName
          type:
            - string
          description: |
            Name of the event subscription
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<void>
    package: azure-arm-eventgrid
  - uid: azure-arm-eventgrid.EventSubscriptions.deleteMethod_2
    name: 'deleteMethod(string, string, Object, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function deleteMethod(scope: string, eventSubscriptionName: string,
        options: Object, callback: ServiceCallback<void>)
      parameters:
        - id: scope
          type:
            - string
          description: ''
        - id: eventSubscriptionName
          type:
            - string
          description: ''
        - id: options
          type:
            - Object
          description: ''
        - id: callback
          type:
            - ServiceCallback<void>
          description: ''
      return:
        type:
          - Promise<void>
    package: azure-arm-eventgrid
  - uid: azure-arm-eventgrid.EventSubscriptions.deleteMethod_1
    name: 'deleteMethod(string, string, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function deleteMethod(scope: string, eventSubscriptionName: string,
        callback: ServiceCallback<void>)
      parameters:
        - id: scope
          type:
            - string
          description: ''
        - id: eventSubscriptionName
          type:
            - string
          description: ''
        - id: callback
          type:
            - ServiceCallback<void>
          description: ''
      return:
        type:
          - Promise<void>
    package: azure-arm-eventgrid
  - uid: >-
      azure-arm-eventgrid.EventSubscriptions.deleteMethodWithHttpOperationResponse
    name: 'deleteMethodWithHttpOperationResponse(string, string, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function deleteMethodWithHttpOperationResponse(scope: string,
        eventSubscriptionName: string, options?: Object)
      parameters:
        - id: scope
          type:
            - string
          description: >
            The scope of the event subscription. The scope can be

            a subscription, or a resource group, or a top level resource
            belonging to a

            resource provider namespace, or an EventGrid topic. For example, use

            '/subscriptions/{subscriptionId}/' for a subscription,

            '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}'
            for a

            resource group, and

            '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}'

            for a resource, and

            '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.EventGrid/topics/{topicName}'

            for an EventGrid topic.
        - id: eventSubscriptionName
          type:
            - string
          description: |
            Name of the event subscription
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<HttpOperationResponse<void>>
    package: azure-arm-eventgrid
  - uid: azure-arm-eventgrid.EventSubscriptions.get
    name: 'get(string, string, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function get(scope: string, eventSubscriptionName: string, options?:
        Object)
      parameters:
        - id: scope
          type:
            - string
          description: >
            The scope of the event subscription. The scope can be

            a subscription, or a resource group, or a top level resource
            belonging to a

            resource provider namespace, or an EventGrid topic. For example, use

            '/subscriptions/{subscriptionId}/' for a subscription,

            '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}'
            for a

            resource group, and

            '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}'

            for a resource, and

            '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.EventGrid/topics/{topicName}'

            for an EventGrid topic.
        - id: eventSubscriptionName
          type:
            - string
          description: |
            Name of the event subscription
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<azure-arm-eventgrid.EventSubscription>
    package: azure-arm-eventgrid
  - uid: azure-arm-eventgrid.EventSubscriptions.get_2
    name: 'get(string, string, Object, ServiceCallback<EventSubscription>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function get(scope: string, eventSubscriptionName: string, options:
        Object, callback: ServiceCallback<EventSubscription>)
      parameters:
        - id: scope
          type:
            - string
          description: ''
        - id: eventSubscriptionName
          type:
            - string
          description: ''
        - id: options
          type:
            - Object
          description: ''
        - id: callback
          type:
            - ServiceCallback<azure-arm-eventgrid.EventSubscription>
          description: ''
      return:
        type:
          - Promise<azure-arm-eventgrid.EventSubscription>
    package: azure-arm-eventgrid
  - uid: azure-arm-eventgrid.EventSubscriptions.get_1
    name: 'get(string, string, ServiceCallback<EventSubscription>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function get(scope: string, eventSubscriptionName: string, callback:
        ServiceCallback<EventSubscription>)
      parameters:
        - id: scope
          type:
            - string
          description: ''
        - id: eventSubscriptionName
          type:
            - string
          description: ''
        - id: callback
          type:
            - ServiceCallback<azure-arm-eventgrid.EventSubscription>
          description: ''
      return:
        type:
          - Promise<azure-arm-eventgrid.EventSubscription>
    package: azure-arm-eventgrid
  - uid: azure-arm-eventgrid.EventSubscriptions.getFullUrl
    name: 'getFullUrl(string, string, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function getFullUrl(scope: string, eventSubscriptionName: string,
        options?: Object)
      parameters:
        - id: scope
          type:
            - string
          description: >
            The scope of the event subscription. The scope can be

            a subscription, or a resource group, or a top level resource
            belonging to a

            resource provider namespace, or an EventGrid topic. For example, use

            '/subscriptions/{subscriptionId}/' for a subscription,

            '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}'
            for a

            resource group, and

            '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}'

            for a resource, and

            '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.EventGrid/topics/{topicName}'

            for an EventGrid topic.
        - id: eventSubscriptionName
          type:
            - string
          description: |
            Name of the event subscription
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<azure-arm-eventgrid.EventSubscriptionFullUrl>
    package: azure-arm-eventgrid
  - uid: azure-arm-eventgrid.EventSubscriptions.getFullUrl_2
    name: >-
      getFullUrl(string, string, Object,
      ServiceCallback<EventSubscriptionFullUrl>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function getFullUrl(scope: string, eventSubscriptionName: string,
        options: Object, callback: ServiceCallback<EventSubscriptionFullUrl>)
      parameters:
        - id: scope
          type:
            - string
          description: ''
        - id: eventSubscriptionName
          type:
            - string
          description: ''
        - id: options
          type:
            - Object
          description: ''
        - id: callback
          type:
            - ServiceCallback<azure-arm-eventgrid.EventSubscriptionFullUrl>
          description: ''
      return:
        type:
          - Promise<azure-arm-eventgrid.EventSubscriptionFullUrl>
    package: azure-arm-eventgrid
  - uid: azure-arm-eventgrid.EventSubscriptions.getFullUrl_1
    name: 'getFullUrl(string, string, ServiceCallback<EventSubscriptionFullUrl>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function getFullUrl(scope: string, eventSubscriptionName: string,
        callback: ServiceCallback<EventSubscriptionFullUrl>)
      parameters:
        - id: scope
          type:
            - string
          description: ''
        - id: eventSubscriptionName
          type:
            - string
          description: ''
        - id: callback
          type:
            - ServiceCallback<azure-arm-eventgrid.EventSubscriptionFullUrl>
          description: ''
      return:
        type:
          - Promise<azure-arm-eventgrid.EventSubscriptionFullUrl>
    package: azure-arm-eventgrid
  - uid: azure-arm-eventgrid.EventSubscriptions.getFullUrlWithHttpOperationResponse
    name: 'getFullUrlWithHttpOperationResponse(string, string, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function getFullUrlWithHttpOperationResponse(scope: string,
        eventSubscriptionName: string, options?: Object)
      parameters:
        - id: scope
          type:
            - string
          description: >
            The scope of the event subscription. The scope can be

            a subscription, or a resource group, or a top level resource
            belonging to a

            resource provider namespace, or an EventGrid topic. For example, use

            '/subscriptions/{subscriptionId}/' for a subscription,

            '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}'
            for a

            resource group, and

            '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}'

            for a resource, and

            '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.EventGrid/topics/{topicName}'

            for an EventGrid topic.
        - id: eventSubscriptionName
          type:
            - string
          description: |
            Name of the event subscription
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - >-
            Promise<HttpOperationResponse<azure-arm-eventgrid.EventSubscriptionFullUrl>>
    package: azure-arm-eventgrid
  - uid: azure-arm-eventgrid.EventSubscriptions.getWithHttpOperationResponse
    name: 'getWithHttpOperationResponse(string, string, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function getWithHttpOperationResponse(scope: string,
        eventSubscriptionName: string, options?: Object)
      parameters:
        - id: scope
          type:
            - string
          description: >
            The scope of the event subscription. The scope can be

            a subscription, or a resource group, or a top level resource
            belonging to a

            resource provider namespace, or an EventGrid topic. For example, use

            '/subscriptions/{subscriptionId}/' for a subscription,

            '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}'
            for a

            resource group, and

            '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}'

            for a resource, and

            '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.EventGrid/topics/{topicName}'

            for an EventGrid topic.
        - id: eventSubscriptionName
          type:
            - string
          description: |
            Name of the event subscription
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - >-
            Promise<HttpOperationResponse<azure-arm-eventgrid.EventSubscription>>
    package: azure-arm-eventgrid
  - uid: azure-arm-eventgrid.EventSubscriptions.listByDomainTopic
    name: 'listByDomainTopic(string, string, string, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function listByDomainTopic(resourceGroupName: string, domainName:
        string, topicName: string, options?: Object)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |
            The name of the resource group within the
            user's subscription.
        - id: domainName
          type:
            - string
          description: |
            Name of the top level domain
        - id: topicName
          type:
            - string
          description: |
            Name of the domain topic
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<azure-arm-eventgrid.EventSubscriptionsListResult>
    package: azure-arm-eventgrid
  - uid: azure-arm-eventgrid.EventSubscriptions.listByDomainTopic_2
    name: >-
      listByDomainTopic(string, string, string, Object,
      ServiceCallback<EventSubscriptionsListResult>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function listByDomainTopic(resourceGroupName: string, domainName:
        string, topicName: string, options: Object, callback:
        ServiceCallback<EventSubscriptionsListResult>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: ''
        - id: domainName
          type:
            - string
          description: ''
        - id: topicName
          type:
            - string
          description: ''
        - id: options
          type:
            - Object
          description: ''
        - id: callback
          type:
            - ServiceCallback<azure-arm-eventgrid.EventSubscriptionsListResult>
          description: ''
      return:
        type:
          - Promise<azure-arm-eventgrid.EventSubscriptionsListResult>
    package: azure-arm-eventgrid
  - uid: azure-arm-eventgrid.EventSubscriptions.listByDomainTopic_1
    name: >-
      listByDomainTopic(string, string, string,
      ServiceCallback<EventSubscriptionsListResult>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function listByDomainTopic(resourceGroupName: string, domainName:
        string, topicName: string, callback:
        ServiceCallback<EventSubscriptionsListResult>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: ''
        - id: domainName
          type:
            - string
          description: ''
        - id: topicName
          type:
            - string
          description: ''
        - id: callback
          type:
            - ServiceCallback<azure-arm-eventgrid.EventSubscriptionsListResult>
          description: ''
      return:
        type:
          - Promise<azure-arm-eventgrid.EventSubscriptionsListResult>
    package: azure-arm-eventgrid
  - uid: azure-arm-eventgrid.EventSubscriptions.listByDomainTopicNext
    name: 'listByDomainTopicNext(string, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function listByDomainTopicNext(nextPageLink: string, options?: Object)'
      parameters:
        - id: nextPageLink
          type:
            - string
          description: |
            The NextLink from the previous successful call
            to List operation.
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<azure-arm-eventgrid.EventSubscriptionsListResult>
    package: azure-arm-eventgrid
  - uid: azure-arm-eventgrid.EventSubscriptions.listByDomainTopicNext_2
    name: >-
      listByDomainTopicNext(string, Object,
      ServiceCallback<EventSubscriptionsListResult>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function listByDomainTopicNext(nextPageLink: string, options: Object,
        callback: ServiceCallback<EventSubscriptionsListResult>)
      parameters:
        - id: nextPageLink
          type:
            - string
          description: ''
        - id: options
          type:
            - Object
          description: ''
        - id: callback
          type:
            - ServiceCallback<azure-arm-eventgrid.EventSubscriptionsListResult>
          description: ''
      return:
        type:
          - Promise<azure-arm-eventgrid.EventSubscriptionsListResult>
    package: azure-arm-eventgrid
  - uid: azure-arm-eventgrid.EventSubscriptions.listByDomainTopicNext_1
    name: >-
      listByDomainTopicNext(string,
      ServiceCallback<EventSubscriptionsListResult>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function listByDomainTopicNext(nextPageLink: string, callback:
        ServiceCallback<EventSubscriptionsListResult>)
      parameters:
        - id: nextPageLink
          type:
            - string
          description: ''
        - id: callback
          type:
            - ServiceCallback<azure-arm-eventgrid.EventSubscriptionsListResult>
          description: ''
      return:
        type:
          - Promise<azure-arm-eventgrid.EventSubscriptionsListResult>
    package: azure-arm-eventgrid
  - uid: >-
      azure-arm-eventgrid.EventSubscriptions.listByDomainTopicNextWithHttpOperationResponse
    name: 'listByDomainTopicNextWithHttpOperationResponse(string, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function listByDomainTopicNextWithHttpOperationResponse(nextPageLink:
        string, options?: Object)
      parameters:
        - id: nextPageLink
          type:
            - string
          description: |
            The NextLink from the previous successful call
            to List operation.
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - >-
            Promise<HttpOperationResponse<azure-arm-eventgrid.EventSubscriptionsListResult>>
    package: azure-arm-eventgrid
  - uid: >-
      azure-arm-eventgrid.EventSubscriptions.listByDomainTopicWithHttpOperationResponse
    name: 'listByDomainTopicWithHttpOperationResponse(string, string, string, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function listByDomainTopicWithHttpOperationResponse(resourceGroupName:
        string, domainName: string, topicName: string, options?: Object)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |
            The name of the resource group within the
            user's subscription.
        - id: domainName
          type:
            - string
          description: |
            Name of the top level domain
        - id: topicName
          type:
            - string
          description: |
            Name of the domain topic
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - >-
            Promise<HttpOperationResponse<azure-arm-eventgrid.EventSubscriptionsListResult>>
    package: azure-arm-eventgrid
  - uid: azure-arm-eventgrid.EventSubscriptions.listByResource
    name: 'listByResource(string, string, string, string, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function listByResource(resourceGroupName: string, providerNamespace:
        string, resourceTypeName: string, resourceName: string, options?:
        Object)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |
            The name of the resource group within the
            user's subscription.
        - id: providerNamespace
          type:
            - string
          description: |
            Namespace of the provider of the topic
        - id: resourceTypeName
          type:
            - string
          description: |
            Name of the resource type
        - id: resourceName
          type:
            - string
          description: |
            Name of the resource
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<azure-arm-eventgrid.EventSubscriptionsListResult>
    package: azure-arm-eventgrid
  - uid: azure-arm-eventgrid.EventSubscriptions.listByResource_2
    name: >-
      listByResource(string, string, string, string, Object,
      ServiceCallback<EventSubscriptionsListResult>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function listByResource(resourceGroupName: string, providerNamespace:
        string, resourceTypeName: string, resourceName: string, options: Object,
        callback: ServiceCallback<EventSubscriptionsListResult>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: ''
        - id: providerNamespace
          type:
            - string
          description: ''
        - id: resourceTypeName
          type:
            - string
          description: ''
        - id: resourceName
          type:
            - string
          description: ''
        - id: options
          type:
            - Object
          description: ''
        - id: callback
          type:
            - ServiceCallback<azure-arm-eventgrid.EventSubscriptionsListResult>
          description: ''
      return:
        type:
          - Promise<azure-arm-eventgrid.EventSubscriptionsListResult>
    package: azure-arm-eventgrid
  - uid: azure-arm-eventgrid.EventSubscriptions.listByResource_1
    name: >-
      listByResource(string, string, string, string,
      ServiceCallback<EventSubscriptionsListResult>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function listByResource(resourceGroupName: string, providerNamespace:
        string, resourceTypeName: string, resourceName: string, callback:
        ServiceCallback<EventSubscriptionsListResult>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: ''
        - id: providerNamespace
          type:
            - string
          description: ''
        - id: resourceTypeName
          type:
            - string
          description: ''
        - id: resourceName
          type:
            - string
          description: ''
        - id: callback
          type:
            - ServiceCallback<azure-arm-eventgrid.EventSubscriptionsListResult>
          description: ''
      return:
        type:
          - Promise<azure-arm-eventgrid.EventSubscriptionsListResult>
    package: azure-arm-eventgrid
  - uid: azure-arm-eventgrid.EventSubscriptions.listByResourceNext
    name: 'listByResourceNext(string, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function listByResourceNext(nextPageLink: string, options?: Object)'
      parameters:
        - id: nextPageLink
          type:
            - string
          description: |
            The NextLink from the previous successful call
            to List operation.
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<azure-arm-eventgrid.EventSubscriptionsListResult>
    package: azure-arm-eventgrid
  - uid: azure-arm-eventgrid.EventSubscriptions.listByResourceNext_2
    name: >-
      listByResourceNext(string, Object,
      ServiceCallback<EventSubscriptionsListResult>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function listByResourceNext(nextPageLink: string, options: Object,
        callback: ServiceCallback<EventSubscriptionsListResult>)
      parameters:
        - id: nextPageLink
          type:
            - string
          description: ''
        - id: options
          type:
            - Object
          description: ''
        - id: callback
          type:
            - ServiceCallback<azure-arm-eventgrid.EventSubscriptionsListResult>
          description: ''
      return:
        type:
          - Promise<azure-arm-eventgrid.EventSubscriptionsListResult>
    package: azure-arm-eventgrid
  - uid: azure-arm-eventgrid.EventSubscriptions.listByResourceNext_1
    name: 'listByResourceNext(string, ServiceCallback<EventSubscriptionsListResult>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function listByResourceNext(nextPageLink: string, callback:
        ServiceCallback<EventSubscriptionsListResult>)
      parameters:
        - id: nextPageLink
          type:
            - string
          description: ''
        - id: callback
          type:
            - ServiceCallback<azure-arm-eventgrid.EventSubscriptionsListResult>
          description: ''
      return:
        type:
          - Promise<azure-arm-eventgrid.EventSubscriptionsListResult>
    package: azure-arm-eventgrid
  - uid: >-
      azure-arm-eventgrid.EventSubscriptions.listByResourceNextWithHttpOperationResponse
    name: 'listByResourceNextWithHttpOperationResponse(string, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function listByResourceNextWithHttpOperationResponse(nextPageLink:
        string, options?: Object)
      parameters:
        - id: nextPageLink
          type:
            - string
          description: |
            The NextLink from the previous successful call
            to List operation.
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - >-
            Promise<HttpOperationResponse<azure-arm-eventgrid.EventSubscriptionsListResult>>
    package: azure-arm-eventgrid
  - uid: >-
      azure-arm-eventgrid.EventSubscriptions.listByResourceWithHttpOperationResponse
    name: >-
      listByResourceWithHttpOperationResponse(string, string, string, string,
      Object)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function listByResourceWithHttpOperationResponse(resourceGroupName:
        string, providerNamespace: string, resourceTypeName: string,
        resourceName: string, options?: Object)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |
            The name of the resource group within the
            user's subscription.
        - id: providerNamespace
          type:
            - string
          description: |
            Namespace of the provider of the topic
        - id: resourceTypeName
          type:
            - string
          description: |
            Name of the resource type
        - id: resourceName
          type:
            - string
          description: |
            Name of the resource
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - >-
            Promise<HttpOperationResponse<azure-arm-eventgrid.EventSubscriptionsListResult>>
    package: azure-arm-eventgrid
  - uid: azure-arm-eventgrid.EventSubscriptions.listGlobalByResourceGroup
    name: 'listGlobalByResourceGroup(string, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function listGlobalByResourceGroup(resourceGroupName: string, options?:
        Object)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |
            The name of the resource group within the
            user's subscription.
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<azure-arm-eventgrid.EventSubscriptionsListResult>
    package: azure-arm-eventgrid
  - uid: azure-arm-eventgrid.EventSubscriptions.listGlobalByResourceGroup_2
    name: >-
      listGlobalByResourceGroup(string, Object,
      ServiceCallback<EventSubscriptionsListResult>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function listGlobalByResourceGroup(resourceGroupName: string, options:
        Object, callback: ServiceCallback<EventSubscriptionsListResult>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: ''
        - id: options
          type:
            - Object
          description: ''
        - id: callback
          type:
            - ServiceCallback<azure-arm-eventgrid.EventSubscriptionsListResult>
          description: ''
      return:
        type:
          - Promise<azure-arm-eventgrid.EventSubscriptionsListResult>
    package: azure-arm-eventgrid
  - uid: azure-arm-eventgrid.EventSubscriptions.listGlobalByResourceGroup_1
    name: >-
      listGlobalByResourceGroup(string,
      ServiceCallback<EventSubscriptionsListResult>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function listGlobalByResourceGroup(resourceGroupName: string, callback:
        ServiceCallback<EventSubscriptionsListResult>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: ''
        - id: callback
          type:
            - ServiceCallback<azure-arm-eventgrid.EventSubscriptionsListResult>
          description: ''
      return:
        type:
          - Promise<azure-arm-eventgrid.EventSubscriptionsListResult>
    package: azure-arm-eventgrid
  - uid: >-
      azure-arm-eventgrid.EventSubscriptions.listGlobalByResourceGroupForTopicType
    name: 'listGlobalByResourceGroupForTopicType(string, string, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function listGlobalByResourceGroupForTopicType(resourceGroupName:
        string, topicTypeName: string, options?: Object)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |
            The name of the resource group within the
            user's subscription.
        - id: topicTypeName
          type:
            - string
          description: |
            Name of the topic type
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<azure-arm-eventgrid.EventSubscriptionsListResult>
    package: azure-arm-eventgrid
  - uid: >-
      azure-arm-eventgrid.EventSubscriptions.listGlobalByResourceGroupForTopicType_2
    name: >-
      listGlobalByResourceGroupForTopicType(string, string, Object,
      ServiceCallback<EventSubscriptionsListResult>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function listGlobalByResourceGroupForTopicType(resourceGroupName:
        string, topicTypeName: string, options: Object, callback:
        ServiceCallback<EventSubscriptionsListResult>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: ''
        - id: topicTypeName
          type:
            - string
          description: ''
        - id: options
          type:
            - Object
          description: ''
        - id: callback
          type:
            - ServiceCallback<azure-arm-eventgrid.EventSubscriptionsListResult>
          description: ''
      return:
        type:
          - Promise<azure-arm-eventgrid.EventSubscriptionsListResult>
    package: azure-arm-eventgrid
  - uid: >-
      azure-arm-eventgrid.EventSubscriptions.listGlobalByResourceGroupForTopicType_1
    name: >-
      listGlobalByResourceGroupForTopicType(string, string,
      ServiceCallback<EventSubscriptionsListResult>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function listGlobalByResourceGroupForTopicType(resourceGroupName:
        string, topicTypeName: string, callback:
        ServiceCallback<EventSubscriptionsListResult>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: ''
        - id: topicTypeName
          type:
            - string
          description: ''
        - id: callback
          type:
            - ServiceCallback<azure-arm-eventgrid.EventSubscriptionsListResult>
          description: ''
      return:
        type:
          - Promise<azure-arm-eventgrid.EventSubscriptionsListResult>
    package: azure-arm-eventgrid
  - uid: >-
      azure-arm-eventgrid.EventSubscriptions.listGlobalByResourceGroupForTopicTypeNext
    name: 'listGlobalByResourceGroupForTopicTypeNext(string, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function listGlobalByResourceGroupForTopicTypeNext(nextPageLink: string,
        options?: Object)
      parameters:
        - id: nextPageLink
          type:
            - string
          description: |
            The NextLink from the previous successful call
            to List operation.
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<azure-arm-eventgrid.EventSubscriptionsListResult>
    package: azure-arm-eventgrid
  - uid: >-
      azure-arm-eventgrid.EventSubscriptions.listGlobalByResourceGroupForTopicTypeNext_2
    name: >-
      listGlobalByResourceGroupForTopicTypeNext(string, Object,
      ServiceCallback<EventSubscriptionsListResult>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function listGlobalByResourceGroupForTopicTypeNext(nextPageLink: string,
        options: Object, callback:
        ServiceCallback<EventSubscriptionsListResult>)
      parameters:
        - id: nextPageLink
          type:
            - string
          description: ''
        - id: options
          type:
            - Object
          description: ''
        - id: callback
          type:
            - ServiceCallback<azure-arm-eventgrid.EventSubscriptionsListResult>
          description: ''
      return:
        type:
          - Promise<azure-arm-eventgrid.EventSubscriptionsListResult>
    package: azure-arm-eventgrid
  - uid: >-
      azure-arm-eventgrid.EventSubscriptions.listGlobalByResourceGroupForTopicTypeNext_1
    name: >-
      listGlobalByResourceGroupForTopicTypeNext(string,
      ServiceCallback<EventSubscriptionsListResult>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function listGlobalByResourceGroupForTopicTypeNext(nextPageLink: string,
        callback: ServiceCallback<EventSubscriptionsListResult>)
      parameters:
        - id: nextPageLink
          type:
            - string
          description: ''
        - id: callback
          type:
            - ServiceCallback<azure-arm-eventgrid.EventSubscriptionsListResult>
          description: ''
      return:
        type:
          - Promise<azure-arm-eventgrid.EventSubscriptionsListResult>
    package: azure-arm-eventgrid
  - uid: >-
      azure-arm-eventgrid.EventSubscriptions.listGlobalByResourceGroupForTopicTypeNextWithHttpOperationResponse
    name: >-
      listGlobalByResourceGroupForTopicTypeNextWithHttpOperationResponse(string,
      Object)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function
        listGlobalByResourceGroupForTopicTypeNextWithHttpOperationResponse(nextPageLink:
        string, options?: Object)
      parameters:
        - id: nextPageLink
          type:
            - string
          description: |
            The NextLink from the previous successful call
            to List operation.
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - >-
            Promise<HttpOperationResponse<azure-arm-eventgrid.EventSubscriptionsListResult>>
    package: azure-arm-eventgrid
  - uid: >-
      azure-arm-eventgrid.EventSubscriptions.listGlobalByResourceGroupForTopicTypeWithHttpOperationResponse
    name: >-
      listGlobalByResourceGroupForTopicTypeWithHttpOperationResponse(string,
      string, Object)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function
        listGlobalByResourceGroupForTopicTypeWithHttpOperationResponse(resourceGroupName:
        string, topicTypeName: string, options?: Object)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |
            The name of the resource group within the
            user's subscription.
        - id: topicTypeName
          type:
            - string
          description: |
            Name of the topic type
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - >-
            Promise<HttpOperationResponse<azure-arm-eventgrid.EventSubscriptionsListResult>>
    package: azure-arm-eventgrid
  - uid: azure-arm-eventgrid.EventSubscriptions.listGlobalByResourceGroupNext
    name: 'listGlobalByResourceGroupNext(string, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function listGlobalByResourceGroupNext(nextPageLink: string, options?:
        Object)
      parameters:
        - id: nextPageLink
          type:
            - string
          description: |
            The NextLink from the previous successful call
            to List operation.
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<azure-arm-eventgrid.EventSubscriptionsListResult>
    package: azure-arm-eventgrid
  - uid: azure-arm-eventgrid.EventSubscriptions.listGlobalByResourceGroupNext_2
    name: >-
      listGlobalByResourceGroupNext(string, Object,
      ServiceCallback<EventSubscriptionsListResult>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function listGlobalByResourceGroupNext(nextPageLink: string, options:
        Object, callback: ServiceCallback<EventSubscriptionsListResult>)
      parameters:
        - id: nextPageLink
          type:
            - string
          description: ''
        - id: options
          type:
            - Object
          description: ''
        - id: callback
          type:
            - ServiceCallback<azure-arm-eventgrid.EventSubscriptionsListResult>
          description: ''
      return:
        type:
          - Promise<azure-arm-eventgrid.EventSubscriptionsListResult>
    package: azure-arm-eventgrid
  - uid: azure-arm-eventgrid.EventSubscriptions.listGlobalByResourceGroupNext_1
    name: >-
      listGlobalByResourceGroupNext(string,
      ServiceCallback<EventSubscriptionsListResult>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function listGlobalByResourceGroupNext(nextPageLink: string, callback:
        ServiceCallback<EventSubscriptionsListResult>)
      parameters:
        - id: nextPageLink
          type:
            - string
          description: ''
        - id: callback
          type:
            - ServiceCallback<azure-arm-eventgrid.EventSubscriptionsListResult>
          description: ''
      return:
        type:
          - Promise<azure-arm-eventgrid.EventSubscriptionsListResult>
    package: azure-arm-eventgrid
  - uid: >-
      azure-arm-eventgrid.EventSubscriptions.listGlobalByResourceGroupNextWithHttpOperationResponse
    name: 'listGlobalByResourceGroupNextWithHttpOperationResponse(string, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function
        listGlobalByResourceGroupNextWithHttpOperationResponse(nextPageLink:
        string, options?: Object)
      parameters:
        - id: nextPageLink
          type:
            - string
          description: |
            The NextLink from the previous successful call
            to List operation.
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - >-
            Promise<HttpOperationResponse<azure-arm-eventgrid.EventSubscriptionsListResult>>
    package: azure-arm-eventgrid
  - uid: >-
      azure-arm-eventgrid.EventSubscriptions.listGlobalByResourceGroupWithHttpOperationResponse
    name: 'listGlobalByResourceGroupWithHttpOperationResponse(string, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function
        listGlobalByResourceGroupWithHttpOperationResponse(resourceGroupName:
        string, options?: Object)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |
            The name of the resource group within the
            user's subscription.
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - >-
            Promise<HttpOperationResponse<azure-arm-eventgrid.EventSubscriptionsListResult>>
    package: azure-arm-eventgrid
  - uid: azure-arm-eventgrid.EventSubscriptions.listGlobalBySubscription
    name: listGlobalBySubscription(Object)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function listGlobalBySubscription(options?: Object)'
      parameters:
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<azure-arm-eventgrid.EventSubscriptionsListResult>
    package: azure-arm-eventgrid
  - uid: azure-arm-eventgrid.EventSubscriptions.listGlobalBySubscription_2
    name: >-
      listGlobalBySubscription(Object,
      ServiceCallback<EventSubscriptionsListResult>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function listGlobalBySubscription(options: Object, callback:
        ServiceCallback<EventSubscriptionsListResult>)
      parameters:
        - id: options
          type:
            - Object
          description: ''
        - id: callback
          type:
            - ServiceCallback<azure-arm-eventgrid.EventSubscriptionsListResult>
          description: ''
      return:
        type:
          - Promise<azure-arm-eventgrid.EventSubscriptionsListResult>
    package: azure-arm-eventgrid
  - uid: azure-arm-eventgrid.EventSubscriptions.listGlobalBySubscription_1
    name: listGlobalBySubscription(ServiceCallback<EventSubscriptionsListResult>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function listGlobalBySubscription(callback:
        ServiceCallback<EventSubscriptionsListResult>)
      parameters:
        - id: callback
          type:
            - ServiceCallback<azure-arm-eventgrid.EventSubscriptionsListResult>
          description: ''
      return:
        type:
          - Promise<azure-arm-eventgrid.EventSubscriptionsListResult>
    package: azure-arm-eventgrid
  - uid: >-
      azure-arm-eventgrid.EventSubscriptions.listGlobalBySubscriptionForTopicType
    name: 'listGlobalBySubscriptionForTopicType(string, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function listGlobalBySubscriptionForTopicType(topicTypeName: string,
        options?: Object)
      parameters:
        - id: topicTypeName
          type:
            - string
          description: |
            Name of the topic type
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<azure-arm-eventgrid.EventSubscriptionsListResult>
    package: azure-arm-eventgrid
  - uid: >-
      azure-arm-eventgrid.EventSubscriptions.listGlobalBySubscriptionForTopicType_2
    name: >-
      listGlobalBySubscriptionForTopicType(string, Object,
      ServiceCallback<EventSubscriptionsListResult>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function listGlobalBySubscriptionForTopicType(topicTypeName: string,
        options: Object, callback:
        ServiceCallback<EventSubscriptionsListResult>)
      parameters:
        - id: topicTypeName
          type:
            - string
          description: ''
        - id: options
          type:
            - Object
          description: ''
        - id: callback
          type:
            - ServiceCallback<azure-arm-eventgrid.EventSubscriptionsListResult>
          description: ''
      return:
        type:
          - Promise<azure-arm-eventgrid.EventSubscriptionsListResult>
    package: azure-arm-eventgrid
  - uid: >-
      azure-arm-eventgrid.EventSubscriptions.listGlobalBySubscriptionForTopicType_1
    name: >-
      listGlobalBySubscriptionForTopicType(string,
      ServiceCallback<EventSubscriptionsListResult>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function listGlobalBySubscriptionForTopicType(topicTypeName: string,
        callback: ServiceCallback<EventSubscriptionsListResult>)
      parameters:
        - id: topicTypeName
          type:
            - string
          description: ''
        - id: callback
          type:
            - ServiceCallback<azure-arm-eventgrid.EventSubscriptionsListResult>
          description: ''
      return:
        type:
          - Promise<azure-arm-eventgrid.EventSubscriptionsListResult>
    package: azure-arm-eventgrid
  - uid: >-
      azure-arm-eventgrid.EventSubscriptions.listGlobalBySubscriptionForTopicTypeNext
    name: 'listGlobalBySubscriptionForTopicTypeNext(string, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function listGlobalBySubscriptionForTopicTypeNext(nextPageLink: string,
        options?: Object)
      parameters:
        - id: nextPageLink
          type:
            - string
          description: |
            The NextLink from the previous successful call
            to List operation.
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<azure-arm-eventgrid.EventSubscriptionsListResult>
    package: azure-arm-eventgrid
  - uid: >-
      azure-arm-eventgrid.EventSubscriptions.listGlobalBySubscriptionForTopicTypeNext_2
    name: >-
      listGlobalBySubscriptionForTopicTypeNext(string, Object,
      ServiceCallback<EventSubscriptionsListResult>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function listGlobalBySubscriptionForTopicTypeNext(nextPageLink: string,
        options: Object, callback:
        ServiceCallback<EventSubscriptionsListResult>)
      parameters:
        - id: nextPageLink
          type:
            - string
          description: ''
        - id: options
          type:
            - Object
          description: ''
        - id: callback
          type:
            - ServiceCallback<azure-arm-eventgrid.EventSubscriptionsListResult>
          description: ''
      return:
        type:
          - Promise<azure-arm-eventgrid.EventSubscriptionsListResult>
    package: azure-arm-eventgrid
  - uid: >-
      azure-arm-eventgrid.EventSubscriptions.listGlobalBySubscriptionForTopicTypeNext_1
    name: >-
      listGlobalBySubscriptionForTopicTypeNext(string,
      ServiceCallback<EventSubscriptionsListResult>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function listGlobalBySubscriptionForTopicTypeNext(nextPageLink: string,
        callback: ServiceCallback<EventSubscriptionsListResult>)
      parameters:
        - id: nextPageLink
          type:
            - string
          description: ''
        - id: callback
          type:
            - ServiceCallback<azure-arm-eventgrid.EventSubscriptionsListResult>
          description: ''
      return:
        type:
          - Promise<azure-arm-eventgrid.EventSubscriptionsListResult>
    package: azure-arm-eventgrid
  - uid: >-
      azure-arm-eventgrid.EventSubscriptions.listGlobalBySubscriptionForTopicTypeNextWithHttpOperationResponse
    name: >-
      listGlobalBySubscriptionForTopicTypeNextWithHttpOperationResponse(string,
      Object)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function
        listGlobalBySubscriptionForTopicTypeNextWithHttpOperationResponse(nextPageLink:
        string, options?: Object)
      parameters:
        - id: nextPageLink
          type:
            - string
          description: |
            The NextLink from the previous successful call
            to List operation.
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - >-
            Promise<HttpOperationResponse<azure-arm-eventgrid.EventSubscriptionsListResult>>
    package: azure-arm-eventgrid
  - uid: >-
      azure-arm-eventgrid.EventSubscriptions.listGlobalBySubscriptionForTopicTypeWithHttpOperationResponse
    name: >-
      listGlobalBySubscriptionForTopicTypeWithHttpOperationResponse(string,
      Object)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function
        listGlobalBySubscriptionForTopicTypeWithHttpOperationResponse(topicTypeName:
        string, options?: Object)
      parameters:
        - id: topicTypeName
          type:
            - string
          description: |
            Name of the topic type
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - >-
            Promise<HttpOperationResponse<azure-arm-eventgrid.EventSubscriptionsListResult>>
    package: azure-arm-eventgrid
  - uid: azure-arm-eventgrid.EventSubscriptions.listGlobalBySubscriptionNext
    name: 'listGlobalBySubscriptionNext(string, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function listGlobalBySubscriptionNext(nextPageLink: string, options?:
        Object)
      parameters:
        - id: nextPageLink
          type:
            - string
          description: |
            The NextLink from the previous successful call
            to List operation.
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<azure-arm-eventgrid.EventSubscriptionsListResult>
    package: azure-arm-eventgrid
  - uid: azure-arm-eventgrid.EventSubscriptions.listGlobalBySubscriptionNext_2
    name: >-
      listGlobalBySubscriptionNext(string, Object,
      ServiceCallback<EventSubscriptionsListResult>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function listGlobalBySubscriptionNext(nextPageLink: string, options:
        Object, callback: ServiceCallback<EventSubscriptionsListResult>)
      parameters:
        - id: nextPageLink
          type:
            - string
          description: ''
        - id: options
          type:
            - Object
          description: ''
        - id: callback
          type:
            - ServiceCallback<azure-arm-eventgrid.EventSubscriptionsListResult>
          description: ''
      return:
        type:
          - Promise<azure-arm-eventgrid.EventSubscriptionsListResult>
    package: azure-arm-eventgrid
  - uid: azure-arm-eventgrid.EventSubscriptions.listGlobalBySubscriptionNext_1
    name: >-
      listGlobalBySubscriptionNext(string,
      ServiceCallback<EventSubscriptionsListResult>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function listGlobalBySubscriptionNext(nextPageLink: string, callback:
        ServiceCallback<EventSubscriptionsListResult>)
      parameters:
        - id: nextPageLink
          type:
            - string
          description: ''
        - id: callback
          type:
            - ServiceCallback<azure-arm-eventgrid.EventSubscriptionsListResult>
          description: ''
      return:
        type:
          - Promise<azure-arm-eventgrid.EventSubscriptionsListResult>
    package: azure-arm-eventgrid
  - uid: >-
      azure-arm-eventgrid.EventSubscriptions.listGlobalBySubscriptionNextWithHttpOperationResponse
    name: 'listGlobalBySubscriptionNextWithHttpOperationResponse(string, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function
        listGlobalBySubscriptionNextWithHttpOperationResponse(nextPageLink:
        string, options?: Object)
      parameters:
        - id: nextPageLink
          type:
            - string
          description: |
            The NextLink from the previous successful call
            to List operation.
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - >-
            Promise<HttpOperationResponse<azure-arm-eventgrid.EventSubscriptionsListResult>>
    package: azure-arm-eventgrid
  - uid: >-
      azure-arm-eventgrid.EventSubscriptions.listGlobalBySubscriptionWithHttpOperationResponse
    name: listGlobalBySubscriptionWithHttpOperationResponse(Object)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function listGlobalBySubscriptionWithHttpOperationResponse(options?:
        Object)
      parameters:
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - >-
            Promise<HttpOperationResponse<azure-arm-eventgrid.EventSubscriptionsListResult>>
    package: azure-arm-eventgrid
  - uid: azure-arm-eventgrid.EventSubscriptions.listRegionalByResourceGroup
    name: 'listRegionalByResourceGroup(string, string, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function listRegionalByResourceGroup(resourceGroupName: string,
        location: string, options?: Object)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |
            The name of the resource group within the
            user's subscription.
        - id: location
          type:
            - string
          description: |
            Name of the location
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<azure-arm-eventgrid.EventSubscriptionsListResult>
    package: azure-arm-eventgrid
  - uid: azure-arm-eventgrid.EventSubscriptions.listRegionalByResourceGroup_2
    name: >-
      listRegionalByResourceGroup(string, string, Object,
      ServiceCallback<EventSubscriptionsListResult>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function listRegionalByResourceGroup(resourceGroupName: string,
        location: string, options: Object, callback:
        ServiceCallback<EventSubscriptionsListResult>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: ''
        - id: location
          type:
            - string
          description: ''
        - id: options
          type:
            - Object
          description: ''
        - id: callback
          type:
            - ServiceCallback<azure-arm-eventgrid.EventSubscriptionsListResult>
          description: ''
      return:
        type:
          - Promise<azure-arm-eventgrid.EventSubscriptionsListResult>
    package: azure-arm-eventgrid
  - uid: azure-arm-eventgrid.EventSubscriptions.listRegionalByResourceGroup_1
    name: >-
      listRegionalByResourceGroup(string, string,
      ServiceCallback<EventSubscriptionsListResult>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function listRegionalByResourceGroup(resourceGroupName: string,
        location: string, callback:
        ServiceCallback<EventSubscriptionsListResult>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: ''
        - id: location
          type:
            - string
          description: ''
        - id: callback
          type:
            - ServiceCallback<azure-arm-eventgrid.EventSubscriptionsListResult>
          description: ''
      return:
        type:
          - Promise<azure-arm-eventgrid.EventSubscriptionsListResult>
    package: azure-arm-eventgrid
  - uid: >-
      azure-arm-eventgrid.EventSubscriptions.listRegionalByResourceGroupForTopicType
    name: 'listRegionalByResourceGroupForTopicType(string, string, string, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function listRegionalByResourceGroupForTopicType(resourceGroupName:
        string, location: string, topicTypeName: string, options?: Object)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |
            The name of the resource group within the
            user's subscription.
        - id: location
          type:
            - string
          description: |
            Name of the location
        - id: topicTypeName
          type:
            - string
          description: |
            Name of the topic type
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<azure-arm-eventgrid.EventSubscriptionsListResult>
    package: azure-arm-eventgrid
  - uid: >-
      azure-arm-eventgrid.EventSubscriptions.listRegionalByResourceGroupForTopicType_2
    name: >-
      listRegionalByResourceGroupForTopicType(string, string, string, Object,
      ServiceCallback<EventSubscriptionsListResult>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function listRegionalByResourceGroupForTopicType(resourceGroupName:
        string, location: string, topicTypeName: string, options: Object,
        callback: ServiceCallback<EventSubscriptionsListResult>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: ''
        - id: location
          type:
            - string
          description: ''
        - id: topicTypeName
          type:
            - string
          description: ''
        - id: options
          type:
            - Object
          description: ''
        - id: callback
          type:
            - ServiceCallback<azure-arm-eventgrid.EventSubscriptionsListResult>
          description: ''
      return:
        type:
          - Promise<azure-arm-eventgrid.EventSubscriptionsListResult>
    package: azure-arm-eventgrid
  - uid: >-
      azure-arm-eventgrid.EventSubscriptions.listRegionalByResourceGroupForTopicType_1
    name: >-
      listRegionalByResourceGroupForTopicType(string, string, string,
      ServiceCallback<EventSubscriptionsListResult>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function listRegionalByResourceGroupForTopicType(resourceGroupName:
        string, location: string, topicTypeName: string, callback:
        ServiceCallback<EventSubscriptionsListResult>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: ''
        - id: location
          type:
            - string
          description: ''
        - id: topicTypeName
          type:
            - string
          description: ''
        - id: callback
          type:
            - ServiceCallback<azure-arm-eventgrid.EventSubscriptionsListResult>
          description: ''
      return:
        type:
          - Promise<azure-arm-eventgrid.EventSubscriptionsListResult>
    package: azure-arm-eventgrid
  - uid: >-
      azure-arm-eventgrid.EventSubscriptions.listRegionalByResourceGroupForTopicTypeNext
    name: 'listRegionalByResourceGroupForTopicTypeNext(string, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function listRegionalByResourceGroupForTopicTypeNext(nextPageLink:
        string, options?: Object)
      parameters:
        - id: nextPageLink
          type:
            - string
          description: |
            The NextLink from the previous successful call
            to List operation.
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<azure-arm-eventgrid.EventSubscriptionsListResult>
    package: azure-arm-eventgrid
  - uid: >-
      azure-arm-eventgrid.EventSubscriptions.listRegionalByResourceGroupForTopicTypeNext_2
    name: >-
      listRegionalByResourceGroupForTopicTypeNext(string, Object,
      ServiceCallback<EventSubscriptionsListResult>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function listRegionalByResourceGroupForTopicTypeNext(nextPageLink:
        string, options: Object, callback:
        ServiceCallback<EventSubscriptionsListResult>)
      parameters:
        - id: nextPageLink
          type:
            - string
          description: ''
        - id: options
          type:
            - Object
          description: ''
        - id: callback
          type:
            - ServiceCallback<azure-arm-eventgrid.EventSubscriptionsListResult>
          description: ''
      return:
        type:
          - Promise<azure-arm-eventgrid.EventSubscriptionsListResult>
    package: azure-arm-eventgrid
  - uid: >-
      azure-arm-eventgrid.EventSubscriptions.listRegionalByResourceGroupForTopicTypeNext_1
    name: >-
      listRegionalByResourceGroupForTopicTypeNext(string,
      ServiceCallback<EventSubscriptionsListResult>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function listRegionalByResourceGroupForTopicTypeNext(nextPageLink:
        string, callback: ServiceCallback<EventSubscriptionsListResult>)
      parameters:
        - id: nextPageLink
          type:
            - string
          description: ''
        - id: callback
          type:
            - ServiceCallback<azure-arm-eventgrid.EventSubscriptionsListResult>
          description: ''
      return:
        type:
          - Promise<azure-arm-eventgrid.EventSubscriptionsListResult>
    package: azure-arm-eventgrid
  - uid: >-
      azure-arm-eventgrid.EventSubscriptions.listRegionalByResourceGroupForTopicTypeNextWithHttpOperationResponse
    name: >-
      listRegionalByResourceGroupForTopicTypeNextWithHttpOperationResponse(string,
      Object)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function
        listRegionalByResourceGroupForTopicTypeNextWithHttpOperationResponse(nextPageLink:
        string, options?: Object)
      parameters:
        - id: nextPageLink
          type:
            - string
          description: |
            The NextLink from the previous successful call
            to List operation.
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - >-
            Promise<HttpOperationResponse<azure-arm-eventgrid.EventSubscriptionsListResult>>
    package: azure-arm-eventgrid
  - uid: >-
      azure-arm-eventgrid.EventSubscriptions.listRegionalByResourceGroupForTopicTypeWithHttpOperationResponse
    name: >-
      listRegionalByResourceGroupForTopicTypeWithHttpOperationResponse(string,
      string, string, Object)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function
        listRegionalByResourceGroupForTopicTypeWithHttpOperationResponse(resourceGroupName:
        string, location: string, topicTypeName: string, options?: Object)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |
            The name of the resource group within the
            user's subscription.
        - id: location
          type:
            - string
          description: |
            Name of the location
        - id: topicTypeName
          type:
            - string
          description: |
            Name of the topic type
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - >-
            Promise<HttpOperationResponse<azure-arm-eventgrid.EventSubscriptionsListResult>>
    package: azure-arm-eventgrid
  - uid: azure-arm-eventgrid.EventSubscriptions.listRegionalByResourceGroupNext
    name: 'listRegionalByResourceGroupNext(string, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function listRegionalByResourceGroupNext(nextPageLink: string, options?:
        Object)
      parameters:
        - id: nextPageLink
          type:
            - string
          description: |
            The NextLink from the previous successful call
            to List operation.
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<azure-arm-eventgrid.EventSubscriptionsListResult>
    package: azure-arm-eventgrid
  - uid: azure-arm-eventgrid.EventSubscriptions.listRegionalByResourceGroupNext_2
    name: >-
      listRegionalByResourceGroupNext(string, Object,
      ServiceCallback<EventSubscriptionsListResult>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function listRegionalByResourceGroupNext(nextPageLink: string, options:
        Object, callback: ServiceCallback<EventSubscriptionsListResult>)
      parameters:
        - id: nextPageLink
          type:
            - string
          description: ''
        - id: options
          type:
            - Object
          description: ''
        - id: callback
          type:
            - ServiceCallback<azure-arm-eventgrid.EventSubscriptionsListResult>
          description: ''
      return:
        type:
          - Promise<azure-arm-eventgrid.EventSubscriptionsListResult>
    package: azure-arm-eventgrid
  - uid: azure-arm-eventgrid.EventSubscriptions.listRegionalByResourceGroupNext_1
    name: >-
      listRegionalByResourceGroupNext(string,
      ServiceCallback<EventSubscriptionsListResult>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function listRegionalByResourceGroupNext(nextPageLink: string, callback:
        ServiceCallback<EventSubscriptionsListResult>)
      parameters:
        - id: nextPageLink
          type:
            - string
          description: ''
        - id: callback
          type:
            - ServiceCallback<azure-arm-eventgrid.EventSubscriptionsListResult>
          description: ''
      return:
        type:
          - Promise<azure-arm-eventgrid.EventSubscriptionsListResult>
    package: azure-arm-eventgrid
  - uid: >-
      azure-arm-eventgrid.EventSubscriptions.listRegionalByResourceGroupNextWithHttpOperationResponse
    name: 'listRegionalByResourceGroupNextWithHttpOperationResponse(string, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function
        listRegionalByResourceGroupNextWithHttpOperationResponse(nextPageLink:
        string, options?: Object)
      parameters:
        - id: nextPageLink
          type:
            - string
          description: |
            The NextLink from the previous successful call
            to List operation.
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - >-
            Promise<HttpOperationResponse<azure-arm-eventgrid.EventSubscriptionsListResult>>
    package: azure-arm-eventgrid
  - uid: >-
      azure-arm-eventgrid.EventSubscriptions.listRegionalByResourceGroupWithHttpOperationResponse
    name: >-
      listRegionalByResourceGroupWithHttpOperationResponse(string, string,
      Object)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function
        listRegionalByResourceGroupWithHttpOperationResponse(resourceGroupName:
        string, location: string, options?: Object)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |
            The name of the resource group within the
            user's subscription.
        - id: location
          type:
            - string
          description: |
            Name of the location
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - >-
            Promise<HttpOperationResponse<azure-arm-eventgrid.EventSubscriptionsListResult>>
    package: azure-arm-eventgrid
  - uid: azure-arm-eventgrid.EventSubscriptions.listRegionalBySubscription
    name: 'listRegionalBySubscription(string, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function listRegionalBySubscription(location: string, options?: Object)'
      parameters:
        - id: location
          type:
            - string
          description: |
            Name of the location
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<azure-arm-eventgrid.EventSubscriptionsListResult>
    package: azure-arm-eventgrid
  - uid: azure-arm-eventgrid.EventSubscriptions.listRegionalBySubscription_2
    name: >-
      listRegionalBySubscription(string, Object,
      ServiceCallback<EventSubscriptionsListResult>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function listRegionalBySubscription(location: string, options: Object,
        callback: ServiceCallback<EventSubscriptionsListResult>)
      parameters:
        - id: location
          type:
            - string
          description: ''
        - id: options
          type:
            - Object
          description: ''
        - id: callback
          type:
            - ServiceCallback<azure-arm-eventgrid.EventSubscriptionsListResult>
          description: ''
      return:
        type:
          - Promise<azure-arm-eventgrid.EventSubscriptionsListResult>
    package: azure-arm-eventgrid
  - uid: azure-arm-eventgrid.EventSubscriptions.listRegionalBySubscription_1
    name: >-
      listRegionalBySubscription(string,
      ServiceCallback<EventSubscriptionsListResult>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function listRegionalBySubscription(location: string, callback:
        ServiceCallback<EventSubscriptionsListResult>)
      parameters:
        - id: location
          type:
            - string
          description: ''
        - id: callback
          type:
            - ServiceCallback<azure-arm-eventgrid.EventSubscriptionsListResult>
          description: ''
      return:
        type:
          - Promise<azure-arm-eventgrid.EventSubscriptionsListResult>
    package: azure-arm-eventgrid
  - uid: >-
      azure-arm-eventgrid.EventSubscriptions.listRegionalBySubscriptionForTopicType
    name: 'listRegionalBySubscriptionForTopicType(string, string, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function listRegionalBySubscriptionForTopicType(location: string,
        topicTypeName: string, options?: Object)
      parameters:
        - id: location
          type:
            - string
          description: |
            Name of the location
        - id: topicTypeName
          type:
            - string
          description: |
            Name of the topic type
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<azure-arm-eventgrid.EventSubscriptionsListResult>
    package: azure-arm-eventgrid
  - uid: >-
      azure-arm-eventgrid.EventSubscriptions.listRegionalBySubscriptionForTopicType_2
    name: >-
      listRegionalBySubscriptionForTopicType(string, string, Object,
      ServiceCallback<EventSubscriptionsListResult>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function listRegionalBySubscriptionForTopicType(location: string,
        topicTypeName: string, options: Object, callback:
        ServiceCallback<EventSubscriptionsListResult>)
      parameters:
        - id: location
          type:
            - string
          description: ''
        - id: topicTypeName
          type:
            - string
          description: ''
        - id: options
          type:
            - Object
          description: ''
        - id: callback
          type:
            - ServiceCallback<azure-arm-eventgrid.EventSubscriptionsListResult>
          description: ''
      return:
        type:
          - Promise<azure-arm-eventgrid.EventSubscriptionsListResult>
    package: azure-arm-eventgrid
  - uid: >-
      azure-arm-eventgrid.EventSubscriptions.listRegionalBySubscriptionForTopicType_1
    name: >-
      listRegionalBySubscriptionForTopicType(string, string,
      ServiceCallback<EventSubscriptionsListResult>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function listRegionalBySubscriptionForTopicType(location: string,
        topicTypeName: string, callback:
        ServiceCallback<EventSubscriptionsListResult>)
      parameters:
        - id: location
          type:
            - string
          description: ''
        - id: topicTypeName
          type:
            - string
          description: ''
        - id: callback
          type:
            - ServiceCallback<azure-arm-eventgrid.EventSubscriptionsListResult>
          description: ''
      return:
        type:
          - Promise<azure-arm-eventgrid.EventSubscriptionsListResult>
    package: azure-arm-eventgrid
  - uid: >-
      azure-arm-eventgrid.EventSubscriptions.listRegionalBySubscriptionForTopicTypeNext
    name: 'listRegionalBySubscriptionForTopicTypeNext(string, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function listRegionalBySubscriptionForTopicTypeNext(nextPageLink:
        string, options?: Object)
      parameters:
        - id: nextPageLink
          type:
            - string
          description: |
            The NextLink from the previous successful call
            to List operation.
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<azure-arm-eventgrid.EventSubscriptionsListResult>
    package: azure-arm-eventgrid
  - uid: >-
      azure-arm-eventgrid.EventSubscriptions.listRegionalBySubscriptionForTopicTypeNext_2
    name: >-
      listRegionalBySubscriptionForTopicTypeNext(string, Object,
      ServiceCallback<EventSubscriptionsListResult>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function listRegionalBySubscriptionForTopicTypeNext(nextPageLink:
        string, options: Object, callback:
        ServiceCallback<EventSubscriptionsListResult>)
      parameters:
        - id: nextPageLink
          type:
            - string
          description: ''
        - id: options
          type:
            - Object
          description: ''
        - id: callback
          type:
            - ServiceCallback<azure-arm-eventgrid.EventSubscriptionsListResult>
          description: ''
      return:
        type:
          - Promise<azure-arm-eventgrid.EventSubscriptionsListResult>
    package: azure-arm-eventgrid
  - uid: >-
      azure-arm-eventgrid.EventSubscriptions.listRegionalBySubscriptionForTopicTypeNext_1
    name: >-
      listRegionalBySubscriptionForTopicTypeNext(string,
      ServiceCallback<EventSubscriptionsListResult>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function listRegionalBySubscriptionForTopicTypeNext(nextPageLink:
        string, callback: ServiceCallback<EventSubscriptionsListResult>)
      parameters:
        - id: nextPageLink
          type:
            - string
          description: ''
        - id: callback
          type:
            - ServiceCallback<azure-arm-eventgrid.EventSubscriptionsListResult>
          description: ''
      return:
        type:
          - Promise<azure-arm-eventgrid.EventSubscriptionsListResult>
    package: azure-arm-eventgrid
  - uid: >-
      azure-arm-eventgrid.EventSubscriptions.listRegionalBySubscriptionForTopicTypeNextWithHttpOperationResponse
    name: >-
      listRegionalBySubscriptionForTopicTypeNextWithHttpOperationResponse(string,
      Object)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function
        listRegionalBySubscriptionForTopicTypeNextWithHttpOperationResponse(nextPageLink:
        string, options?: Object)
      parameters:
        - id: nextPageLink
          type:
            - string
          description: |
            The NextLink from the previous successful call
            to List operation.
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - >-
            Promise<HttpOperationResponse<azure-arm-eventgrid.EventSubscriptionsListResult>>
    package: azure-arm-eventgrid
  - uid: >-
      azure-arm-eventgrid.EventSubscriptions.listRegionalBySubscriptionForTopicTypeWithHttpOperationResponse
    name: >-
      listRegionalBySubscriptionForTopicTypeWithHttpOperationResponse(string,
      string, Object)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function
        listRegionalBySubscriptionForTopicTypeWithHttpOperationResponse(location:
        string, topicTypeName: string, options?: Object)
      parameters:
        - id: location
          type:
            - string
          description: |
            Name of the location
        - id: topicTypeName
          type:
            - string
          description: |
            Name of the topic type
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - >-
            Promise<HttpOperationResponse<azure-arm-eventgrid.EventSubscriptionsListResult>>
    package: azure-arm-eventgrid
  - uid: azure-arm-eventgrid.EventSubscriptions.listRegionalBySubscriptionNext
    name: 'listRegionalBySubscriptionNext(string, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function listRegionalBySubscriptionNext(nextPageLink: string, options?:
        Object)
      parameters:
        - id: nextPageLink
          type:
            - string
          description: |
            The NextLink from the previous successful call
            to List operation.
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<azure-arm-eventgrid.EventSubscriptionsListResult>
    package: azure-arm-eventgrid
  - uid: azure-arm-eventgrid.EventSubscriptions.listRegionalBySubscriptionNext_2
    name: >-
      listRegionalBySubscriptionNext(string, Object,
      ServiceCallback<EventSubscriptionsListResult>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function listRegionalBySubscriptionNext(nextPageLink: string, options:
        Object, callback: ServiceCallback<EventSubscriptionsListResult>)
      parameters:
        - id: nextPageLink
          type:
            - string
          description: ''
        - id: options
          type:
            - Object
          description: ''
        - id: callback
          type:
            - ServiceCallback<azure-arm-eventgrid.EventSubscriptionsListResult>
          description: ''
      return:
        type:
          - Promise<azure-arm-eventgrid.EventSubscriptionsListResult>
    package: azure-arm-eventgrid
  - uid: azure-arm-eventgrid.EventSubscriptions.listRegionalBySubscriptionNext_1
    name: >-
      listRegionalBySubscriptionNext(string,
      ServiceCallback<EventSubscriptionsListResult>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function listRegionalBySubscriptionNext(nextPageLink: string, callback:
        ServiceCallback<EventSubscriptionsListResult>)
      parameters:
        - id: nextPageLink
          type:
            - string
          description: ''
        - id: callback
          type:
            - ServiceCallback<azure-arm-eventgrid.EventSubscriptionsListResult>
          description: ''
      return:
        type:
          - Promise<azure-arm-eventgrid.EventSubscriptionsListResult>
    package: azure-arm-eventgrid
  - uid: >-
      azure-arm-eventgrid.EventSubscriptions.listRegionalBySubscriptionNextWithHttpOperationResponse
    name: 'listRegionalBySubscriptionNextWithHttpOperationResponse(string, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function
        listRegionalBySubscriptionNextWithHttpOperationResponse(nextPageLink:
        string, options?: Object)
      parameters:
        - id: nextPageLink
          type:
            - string
          description: |
            The NextLink from the previous successful call
            to List operation.
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - >-
            Promise<HttpOperationResponse<azure-arm-eventgrid.EventSubscriptionsListResult>>
    package: azure-arm-eventgrid
  - uid: >-
      azure-arm-eventgrid.EventSubscriptions.listRegionalBySubscriptionWithHttpOperationResponse
    name: 'listRegionalBySubscriptionWithHttpOperationResponse(string, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function listRegionalBySubscriptionWithHttpOperationResponse(location:
        string, options?: Object)
      parameters:
        - id: location
          type:
            - string
          description: |
            Name of the location
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - >-
            Promise<HttpOperationResponse<azure-arm-eventgrid.EventSubscriptionsListResult>>
    package: azure-arm-eventgrid
  - uid: azure-arm-eventgrid.EventSubscriptions.update
    name: 'update(string, string, EventSubscriptionUpdateParameters, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function update(scope: string, eventSubscriptionName: string,
        eventSubscriptionUpdateParameters: EventSubscriptionUpdateParameters,
        options?: Object)
      parameters:
        - id: scope
          type:
            - string
          description: >
            The scope of existing event subscription. The scope

            can be a subscription, or a resource group, or a top level resource

            belonging to a resource provider namespace, or an EventGrid topic.
            For

            example, use '/subscriptions/{subscriptionId}/' for a subscription,

            '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}'
            for a

            resource group, and

            '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}'

            for a resource, and

            '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.EventGrid/topics/{topicName}'

            for an EventGrid topic.
        - id: eventSubscriptionName
          type:
            - string
          description: |
            Name of the event subscription to be
            updated
        - id: eventSubscriptionUpdateParameters
          type:
            - azure-arm-eventgrid.EventSubscriptionUpdateParameters
          description: |
            Updated event subscription
            information
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<azure-arm-eventgrid.EventSubscription>
    package: azure-arm-eventgrid
  - uid: azure-arm-eventgrid.EventSubscriptions.update_2
    name: >-
      update(string, string, EventSubscriptionUpdateParameters, Object,
      ServiceCallback<EventSubscription>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function update(scope: string, eventSubscriptionName: string,
        eventSubscriptionUpdateParameters: EventSubscriptionUpdateParameters,
        options: Object, callback: ServiceCallback<EventSubscription>)
      parameters:
        - id: scope
          type:
            - string
          description: ''
        - id: eventSubscriptionName
          type:
            - string
          description: ''
        - id: eventSubscriptionUpdateParameters
          type:
            - azure-arm-eventgrid.EventSubscriptionUpdateParameters
          description: ''
        - id: options
          type:
            - Object
          description: ''
        - id: callback
          type:
            - ServiceCallback<azure-arm-eventgrid.EventSubscription>
          description: ''
      return:
        type:
          - Promise<azure-arm-eventgrid.EventSubscription>
    package: azure-arm-eventgrid
  - uid: azure-arm-eventgrid.EventSubscriptions.update_1
    name: >-
      update(string, string, EventSubscriptionUpdateParameters,
      ServiceCallback<EventSubscription>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function update(scope: string, eventSubscriptionName: string,
        eventSubscriptionUpdateParameters: EventSubscriptionUpdateParameters,
        callback: ServiceCallback<EventSubscription>)
      parameters:
        - id: scope
          type:
            - string
          description: ''
        - id: eventSubscriptionName
          type:
            - string
          description: ''
        - id: eventSubscriptionUpdateParameters
          type:
            - azure-arm-eventgrid.EventSubscriptionUpdateParameters
          description: ''
        - id: callback
          type:
            - ServiceCallback<azure-arm-eventgrid.EventSubscription>
          description: ''
      return:
        type:
          - Promise<azure-arm-eventgrid.EventSubscription>
    package: azure-arm-eventgrid
  - uid: azure-arm-eventgrid.EventSubscriptions.updateWithHttpOperationResponse
    name: >-
      updateWithHttpOperationResponse(string, string,
      EventSubscriptionUpdateParameters, Object)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function updateWithHttpOperationResponse(scope: string,
        eventSubscriptionName: string, eventSubscriptionUpdateParameters:
        EventSubscriptionUpdateParameters, options?: Object)
      parameters:
        - id: scope
          type:
            - string
          description: >
            The scope of existing event subscription. The scope

            can be a subscription, or a resource group, or a top level resource

            belonging to a resource provider namespace, or an EventGrid topic.
            For

            example, use '/subscriptions/{subscriptionId}/' for a subscription,

            '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}'
            for a

            resource group, and

            '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}'

            for a resource, and

            '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.EventGrid/topics/{topicName}'

            for an EventGrid topic.
        - id: eventSubscriptionName
          type:
            - string
          description: |
            Name of the event subscription to be
            updated
        - id: eventSubscriptionUpdateParameters
          type:
            - azure-arm-eventgrid.EventSubscriptionUpdateParameters
          description: |
            Updated event subscription
            information
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - >-
            Promise<HttpOperationResponse<azure-arm-eventgrid.EventSubscription>>
    package: azure-arm-eventgrid
references:
  - uid: azure-arm-eventgrid.EventSubscription
    name: EventSubscription
    spec.typeScript:
      - name: EventSubscription
        fullName: EventSubscription
        uid: azure-arm-eventgrid.EventSubscription
  - uid: Promise<azure-arm-eventgrid.EventSubscription>
    name: EventSubscription>
    spec.typeScript:
      - name: Promise<
        fullName: Promise<
      - name: EventSubscription
        fullName: EventSubscription
        uid: azure-arm-eventgrid.EventSubscription
      - name: '>'
        fullName: '>'
  - uid: ServiceCallback<azure-arm-eventgrid.EventSubscription>
    name: EventSubscription>
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: EventSubscription
        fullName: EventSubscription
        uid: azure-arm-eventgrid.EventSubscription
      - name: '>'
        fullName: '>'
  - uid: Promise<HttpOperationResponse<azure-arm-eventgrid.EventSubscription>>
    name: EventSubscription>>
    spec.typeScript:
      - name: Promise<HttpOperationResponse<
        fullName: Promise<HttpOperationResponse<
      - name: EventSubscription
        fullName: EventSubscription
        uid: azure-arm-eventgrid.EventSubscription
      - name: '>>'
        fullName: '>>'
  - uid: azure-arm-eventgrid.EventSubscriptionUpdateParameters
    name: EventSubscriptionUpdateParameters
    spec.typeScript:
      - name: EventSubscriptionUpdateParameters
        fullName: EventSubscriptionUpdateParameters
        uid: azure-arm-eventgrid.EventSubscriptionUpdateParameters
  - uid: Promise<azure-arm-eventgrid.EventSubscriptionFullUrl>
    name: EventSubscriptionFullUrl>
    spec.typeScript:
      - name: Promise<
        fullName: Promise<
      - name: EventSubscriptionFullUrl
        fullName: EventSubscriptionFullUrl
        uid: azure-arm-eventgrid.EventSubscriptionFullUrl
      - name: '>'
        fullName: '>'
  - uid: ServiceCallback<azure-arm-eventgrid.EventSubscriptionFullUrl>
    name: EventSubscriptionFullUrl>
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: EventSubscriptionFullUrl
        fullName: EventSubscriptionFullUrl
        uid: azure-arm-eventgrid.EventSubscriptionFullUrl
      - name: '>'
        fullName: '>'
  - uid: >-
      Promise<HttpOperationResponse<azure-arm-eventgrid.EventSubscriptionFullUrl>>
    name: EventSubscriptionFullUrl>>
    spec.typeScript:
      - name: Promise<HttpOperationResponse<
        fullName: Promise<HttpOperationResponse<
      - name: EventSubscriptionFullUrl
        fullName: EventSubscriptionFullUrl
        uid: azure-arm-eventgrid.EventSubscriptionFullUrl
      - name: '>>'
        fullName: '>>'
  - uid: Promise<azure-arm-eventgrid.EventSubscriptionsListResult>
    name: EventSubscriptionsListResult>
    spec.typeScript:
      - name: Promise<
        fullName: Promise<
      - name: EventSubscriptionsListResult
        fullName: EventSubscriptionsListResult
        uid: azure-arm-eventgrid.EventSubscriptionsListResult
      - name: '>'
        fullName: '>'
  - uid: ServiceCallback<azure-arm-eventgrid.EventSubscriptionsListResult>
    name: EventSubscriptionsListResult>
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: EventSubscriptionsListResult
        fullName: EventSubscriptionsListResult
        uid: azure-arm-eventgrid.EventSubscriptionsListResult
      - name: '>'
        fullName: '>'
  - uid: >-
      Promise<HttpOperationResponse<azure-arm-eventgrid.EventSubscriptionsListResult>>
    name: EventSubscriptionsListResult>>
    spec.typeScript:
      - name: Promise<HttpOperationResponse<
        fullName: Promise<HttpOperationResponse<
      - name: EventSubscriptionsListResult
        fullName: EventSubscriptionsListResult
        uid: azure-arm-eventgrid.EventSubscriptionsListResult
      - name: '>>'
        fullName: '>>'
