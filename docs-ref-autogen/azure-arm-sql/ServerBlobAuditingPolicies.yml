### YamlMime:UniversalReference
items:
  - uid: azure-arm-sql.ServerBlobAuditingPolicies
    id: azure-arm-sql.ServerBlobAuditingPolicies
    name: ServerBlobAuditingPolicies
    summary: Class representing a ServerBlobAuditingPolicies.
    fullName: azure-arm-sql.ServerBlobAuditingPolicies
    type: Class
    children:
      - 'azure-arm-sql.ServerBlobAuditingPolicies.#ctor'
      - 'azure-arm-sql.ServerBlobAuditingPolicies#getWithHttpOperationResponse'
      - 'azure-arm-sql.ServerBlobAuditingPolicies#get'
      - >-
        azure-arm-sql.ServerBlobAuditingPolicies#createOrUpdateWithHttpOperationResponse
      - 'azure-arm-sql.ServerBlobAuditingPolicies#createOrUpdate'
      - >-
        azure-arm-sql.ServerBlobAuditingPolicies#beginCreateOrUpdateWithHttpOperationResponse
      - 'azure-arm-sql.ServerBlobAuditingPolicies#beginCreateOrUpdate'
    langs:
      - js
  - id: 'azure-arm-sql.ServerBlobAuditingPolicies.#ctor'
    uid: 'azure-arm-sql.ServerBlobAuditingPolicies.#ctor'
    parent: azure-arm-sql.ServerBlobAuditingPolicies
    name: ServerBlobAuditingPolicies(client)
    fullName: >-
      azure-arm-sql.ServerBlobAuditingPolicies.ServerBlobAuditingPolicies(client)
    summary: Create a ServerBlobAuditingPolicies.
    type: Constructor
    syntax:
      parameters:
        - id: client
          type:
            - undefinedSqlManagementClient
          description: Reference to the service client.
      content: new ServerBlobAuditingPolicies(client)
    langs:
      - js
  - uid: 'azure-arm-sql.ServerBlobAuditingPolicies#getWithHttpOperationResponse'
    id: 'azure-arm-sql.ServerBlobAuditingPolicies#getWithHttpOperationResponse'
    parent: azure-arm-sql.ServerBlobAuditingPolicies
    name: 'getWithHttpOperationResponse(resourceGroupName, serverName, options)'
    summary: Gets a server's blob auditing policy.
    fullName: >-
      azure-arm-sql.ServerBlobAuditingPolicies.getWithHttpOperationResponse(resourceGroupName,
      serverName, options)
    tags:
      - originalTitle: resolve
        title: resolve
        text: >-
          {HttpOperationResponse<ServerBlobAuditingPolicy>} - The deserialized
          result object.
        value: >-
          {HttpOperationResponse<ServerBlobAuditingPolicy>} - The deserialized
          result object.
      - originalTitle: reject
        title: reject
        text: '{Error} - The error object.'
        value: '{Error} - The error object.'
    type: Function
    syntax:
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: "The name of the resource group that\rcontains the resource. You can obtain this value from the Azure Resource\rManager API or the portal."
        - id: serverName
          type:
            - string
          description: The name of the server.
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: "Headers that will be added to the\rrequest"
          optional: true
      return:
        type:
          - Promise
        description: A promise is returned
      content: >-
        function getWithHttpOperationResponse(resourceGroupName, serverName,
        options)
    langs:
      - js
  - uid: 'azure-arm-sql.ServerBlobAuditingPolicies#get'
    id: 'azure-arm-sql.ServerBlobAuditingPolicies#get'
    parent: azure-arm-sql.ServerBlobAuditingPolicies
    name: 'get(resourceGroupName, serverName, options, optionalCallback)'
    summary: Gets a server's blob auditing policy.
    fullName: >-
      azure-arm-sql.ServerBlobAuditingPolicies.get(resourceGroupName,
      serverName, options, optionalCallback)
    tags:
      - originalTitle: resolve
        title: resolve
        text: '{ServerBlobAuditingPolicy} - The deserialized result object.'
        value: '{ServerBlobAuditingPolicy} - The deserialized result object.'
      - originalTitle: reject
        title: reject
        text: "{Error} - The error object.\r\r{function} optionalCallback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {object} [result]   - The deserialized result object if an error did not occur.\r                     See {@link ServerBlobAuditingPolicy} for more\r                     information.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
        value: "{Error} - The error object.\r\r{function} optionalCallback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {object} [result]   - The deserialized result object if an error did not occur.\r                     See {@link ServerBlobAuditingPolicy} for more\r                     information.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
    type: Function
    syntax:
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: "The name of the resource group that\rcontains the resource. You can obtain this value from the Azure Resource\rManager API or the portal."
        - id: serverName
          type:
            - string
          description: The name of the server.
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: "Headers that will be added to the\rrequest"
          optional: true
        - id: optionalCallback
          type:
            - function
          description: The optional callback.
          optional: true
      return:
        type:
          - function
          - Promise
        description: "If a callback was passed as the last parameter\rthen it returns the callback else returns a Promise.\r\r{Promise} A promise is returned"
      content: 'function get(resourceGroupName, serverName, options, optionalCallback)'
    langs:
      - js
  - uid: >-
      azure-arm-sql.ServerBlobAuditingPolicies#createOrUpdateWithHttpOperationResponse
    id: >-
      azure-arm-sql.ServerBlobAuditingPolicies#createOrUpdateWithHttpOperationResponse
    parent: azure-arm-sql.ServerBlobAuditingPolicies
    name: >-
      createOrUpdateWithHttpOperationResponse(resourceGroupName, serverName,
      parameters, options)
    summary: Creates or updates a server's blob auditing policy.
    fullName: >-
      azure-arm-sql.ServerBlobAuditingPolicies.createOrUpdateWithHttpOperationResponse(resourceGroupName,
      serverName, parameters, options)
    tags:
      - originalTitle: resolve
        title: resolve
        text: >-
          {HttpOperationResponse<ServerBlobAuditingPolicy>} - The deserialized
          result object.
        value: >-
          {HttpOperationResponse<ServerBlobAuditingPolicy>} - The deserialized
          result object.
      - originalTitle: reject
        title: reject
        text: '{Error} - The error object.'
        value: '{Error} - The error object.'
    type: Function
    syntax:
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: "The name of the resource group that\rcontains the resource. You can obtain this value from the Azure Resource\rManager API or the portal."
        - id: serverName
          type:
            - string
          description: The name of the server.
        - id: parameters
          type:
            - object
          description: Properties of blob auditing policy
        - id: parameters.state
          type:
            - string
          description: "Specifies the state of the policy. If state\ris Enabled, storageEndpoint and storageAccountAccessKey are required.\rPossible values include: 'Enabled', 'Disabled'"
        - id: parameters.storageEndpoint
          type:
            - string
          description: "Specifies the blob storage\rendpoint (e.g. https://MyAccount.blob.core.windows.net). If state is\rEnabled, storageEndpoint is required."
          optional: true
        - id: parameters.storageAccountAccessKey
          type:
            - string
          description: "Specifies the\ridentifier key of the auditing storage account. If state is Enabled,\rstorageAccountAccessKey is required."
          optional: true
        - id: parameters.retentionDays
          type:
            - number
          description: "Specifies the number of days to\rkeep in the audit logs."
          optional: true
        - id: parameters.auditActionsAndGroups
          type:
            - array
          description: "Specifies the\rActions-Groups and Actions to audit.\r\rThe recommended set of action groups to use is the following combination -\rthis will audit all the queries and stored procedures executed against the\rdatabase, as well as successful and failed logins:\r\rBATCH_COMPLETED_GROUP,\rSUCCESSFUL_DATABASE_AUTHENTICATION_GROUP,\rFAILED_DATABASE_AUTHENTICATION_GROUP.\r\rThis above combination is also the set that is configured by default when\renabling auditing from the Azure portal.\r\rThe supported action groups to audit are (note: choose only specific groups\rthat cover your auditing needs. Using unnecessary groups could lead to very\rlarge quantities of audit records):\r\rAPPLICATION_ROLE_CHANGE_PASSWORD_GROUP\rBACKUP_RESTORE_GROUP\rDATABASE_LOGOUT_GROUP\rDATABASE_OBJECT_CHANGE_GROUP\rDATABASE_OBJECT_OWNERSHIP_CHANGE_GROUP\rDATABASE_OBJECT_PERMISSION_CHANGE_GROUP\rDATABASE_OPERATION_GROUP\rDATABASE_PERMISSION_CHANGE_GROUP\rDATABASE_PRINCIPAL_CHANGE_GROUP\rDATABASE_PRINCIPAL_IMPERSONATION_GROUP\rDATABASE_ROLE_MEMBER_CHANGE_GROUP\rFAILED_DATABASE_AUTHENTICATION_GROUP\rSCHEMA_OBJECT_ACCESS_GROUP\rSCHEMA_OBJECT_CHANGE_GROUP\rSCHEMA_OBJECT_OWNERSHIP_CHANGE_GROUP\rSCHEMA_OBJECT_PERMISSION_CHANGE_GROUP\rSUCCESSFUL_DATABASE_AUTHENTICATION_GROUP\rUSER_CHANGE_PASSWORD_GROUP\rBATCH_STARTED_GROUP\rBATCH_COMPLETED_GROUP\r\rThese are groups that cover all sql statements and stored procedures\rexecuted against the database, and should not be used in combination with\rother groups as this will result in duplicate audit logs.\r\rFor more information, see [Database-Level Audit Action\rGroups](https://docs.microsoft.com/en-us/sql/relational-databases/security/auditing/sql-server-audit-action-groups-and-actions#database-level-audit-action-groups).\r\rFor Database auditing policy, specific Actions can also be specified (note\rthat Actions cannot be specified for Server auditing policy). The supported\ractions to audit are:\rSELECT\rUPDATE\rINSERT\rDELETE\rEXECUTE\rRECEIVE\rREFERENCES\r\rThe general form for defining an action to be audited is:\r<action> ON <object> BY <principal>\r\rNote that <object> in the above format can refer to an object like a table,\rview, or stored procedure, or an entire database or schema. For the latter\rcases, the forms DATABASE::<db_name> and SCHEMA::<schema_name> are used,\rrespectively.\r\rFor example:\rSELECT on dbo.myTable by public\rSELECT on DATABASE::myDatabase by public\rSELECT on SCHEMA::mySchema by public\r\rFor more information, see [Database-Level Audit\rActions](https://docs.microsoft.com/en-us/sql/relational-databases/security/auditing/sql-server-audit-action-groups-and-actions#database-level-audit-actions)"
          optional: true
        - id: parameters.storageAccountSubscriptionId
          type:
            - azure-arm-sql.uuid
          description: "Specifies the blob\rstorage subscription Id."
          optional: true
        - id: parameters.isStorageSecondaryKeyInUse
          type:
            - boolean
          description: "Specifies whether\rstorageAccountAccessKey value is the storage's secondary key."
          optional: true
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: "Headers that will be added to the\rrequest"
          optional: true
      return:
        type:
          - Promise
        description: A promise is returned
      content: >-
        function createOrUpdateWithHttpOperationResponse(resourceGroupName,
        serverName, parameters, options)
    langs:
      - js
  - uid: 'azure-arm-sql.ServerBlobAuditingPolicies#createOrUpdate'
    id: 'azure-arm-sql.ServerBlobAuditingPolicies#createOrUpdate'
    parent: azure-arm-sql.ServerBlobAuditingPolicies
    name: >-
      createOrUpdate(resourceGroupName, serverName, parameters, options,
      optionalCallback)
    summary: Creates or updates a server's blob auditing policy.
    fullName: >-
      azure-arm-sql.ServerBlobAuditingPolicies.createOrUpdate(resourceGroupName,
      serverName, parameters, options, optionalCallback)
    tags:
      - originalTitle: resolve
        title: resolve
        text: '{ServerBlobAuditingPolicy} - The deserialized result object.'
        value: '{ServerBlobAuditingPolicy} - The deserialized result object.'
      - originalTitle: reject
        title: reject
        text: "{Error} - The error object.\r\r{function} optionalCallback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {object} [result]   - The deserialized result object if an error did not occur.\r                     See {@link ServerBlobAuditingPolicy} for more\r                     information.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
        value: "{Error} - The error object.\r\r{function} optionalCallback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {object} [result]   - The deserialized result object if an error did not occur.\r                     See {@link ServerBlobAuditingPolicy} for more\r                     information.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
    type: Function
    syntax:
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: "The name of the resource group that\rcontains the resource. You can obtain this value from the Azure Resource\rManager API or the portal."
        - id: serverName
          type:
            - string
          description: The name of the server.
        - id: parameters
          type:
            - object
          description: Properties of blob auditing policy
        - id: parameters.state
          type:
            - string
          description: "Specifies the state of the policy. If state\ris Enabled, storageEndpoint and storageAccountAccessKey are required.\rPossible values include: 'Enabled', 'Disabled'"
        - id: parameters.storageEndpoint
          type:
            - string
          description: "Specifies the blob storage\rendpoint (e.g. https://MyAccount.blob.core.windows.net). If state is\rEnabled, storageEndpoint is required."
          optional: true
        - id: parameters.storageAccountAccessKey
          type:
            - string
          description: "Specifies the\ridentifier key of the auditing storage account. If state is Enabled,\rstorageAccountAccessKey is required."
          optional: true
        - id: parameters.retentionDays
          type:
            - number
          description: "Specifies the number of days to\rkeep in the audit logs."
          optional: true
        - id: parameters.auditActionsAndGroups
          type:
            - array
          description: "Specifies the\rActions-Groups and Actions to audit.\r\rThe recommended set of action groups to use is the following combination -\rthis will audit all the queries and stored procedures executed against the\rdatabase, as well as successful and failed logins:\r\rBATCH_COMPLETED_GROUP,\rSUCCESSFUL_DATABASE_AUTHENTICATION_GROUP,\rFAILED_DATABASE_AUTHENTICATION_GROUP.\r\rThis above combination is also the set that is configured by default when\renabling auditing from the Azure portal.\r\rThe supported action groups to audit are (note: choose only specific groups\rthat cover your auditing needs. Using unnecessary groups could lead to very\rlarge quantities of audit records):\r\rAPPLICATION_ROLE_CHANGE_PASSWORD_GROUP\rBACKUP_RESTORE_GROUP\rDATABASE_LOGOUT_GROUP\rDATABASE_OBJECT_CHANGE_GROUP\rDATABASE_OBJECT_OWNERSHIP_CHANGE_GROUP\rDATABASE_OBJECT_PERMISSION_CHANGE_GROUP\rDATABASE_OPERATION_GROUP\rDATABASE_PERMISSION_CHANGE_GROUP\rDATABASE_PRINCIPAL_CHANGE_GROUP\rDATABASE_PRINCIPAL_IMPERSONATION_GROUP\rDATABASE_ROLE_MEMBER_CHANGE_GROUP\rFAILED_DATABASE_AUTHENTICATION_GROUP\rSCHEMA_OBJECT_ACCESS_GROUP\rSCHEMA_OBJECT_CHANGE_GROUP\rSCHEMA_OBJECT_OWNERSHIP_CHANGE_GROUP\rSCHEMA_OBJECT_PERMISSION_CHANGE_GROUP\rSUCCESSFUL_DATABASE_AUTHENTICATION_GROUP\rUSER_CHANGE_PASSWORD_GROUP\rBATCH_STARTED_GROUP\rBATCH_COMPLETED_GROUP\r\rThese are groups that cover all sql statements and stored procedures\rexecuted against the database, and should not be used in combination with\rother groups as this will result in duplicate audit logs.\r\rFor more information, see [Database-Level Audit Action\rGroups](https://docs.microsoft.com/en-us/sql/relational-databases/security/auditing/sql-server-audit-action-groups-and-actions#database-level-audit-action-groups).\r\rFor Database auditing policy, specific Actions can also be specified (note\rthat Actions cannot be specified for Server auditing policy). The supported\ractions to audit are:\rSELECT\rUPDATE\rINSERT\rDELETE\rEXECUTE\rRECEIVE\rREFERENCES\r\rThe general form for defining an action to be audited is:\r<action> ON <object> BY <principal>\r\rNote that <object> in the above format can refer to an object like a table,\rview, or stored procedure, or an entire database or schema. For the latter\rcases, the forms DATABASE::<db_name> and SCHEMA::<schema_name> are used,\rrespectively.\r\rFor example:\rSELECT on dbo.myTable by public\rSELECT on DATABASE::myDatabase by public\rSELECT on SCHEMA::mySchema by public\r\rFor more information, see [Database-Level Audit\rActions](https://docs.microsoft.com/en-us/sql/relational-databases/security/auditing/sql-server-audit-action-groups-and-actions#database-level-audit-actions)"
          optional: true
        - id: parameters.storageAccountSubscriptionId
          type:
            - azure-arm-sql.uuid
          description: "Specifies the blob\rstorage subscription Id."
          optional: true
        - id: parameters.isStorageSecondaryKeyInUse
          type:
            - boolean
          description: "Specifies whether\rstorageAccountAccessKey value is the storage's secondary key."
          optional: true
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: "Headers that will be added to the\rrequest"
          optional: true
        - id: optionalCallback
          type:
            - function
          description: The optional callback.
          optional: true
      return:
        type:
          - function
          - Promise
        description: "If a callback was passed as the last parameter\rthen it returns the callback else returns a Promise.\r\r{Promise} A promise is returned"
      content: >-
        function createOrUpdate(resourceGroupName, serverName, parameters,
        options, optionalCallback)
    langs:
      - js
  - uid: >-
      azure-arm-sql.ServerBlobAuditingPolicies#beginCreateOrUpdateWithHttpOperationResponse
    id: >-
      azure-arm-sql.ServerBlobAuditingPolicies#beginCreateOrUpdateWithHttpOperationResponse
    parent: azure-arm-sql.ServerBlobAuditingPolicies
    name: >-
      beginCreateOrUpdateWithHttpOperationResponse(resourceGroupName,
      serverName, parameters, options)
    summary: Creates or updates a server's blob auditing policy.
    fullName: >-
      azure-arm-sql.ServerBlobAuditingPolicies.beginCreateOrUpdateWithHttpOperationResponse(resourceGroupName,
      serverName, parameters, options)
    tags:
      - originalTitle: resolve
        title: resolve
        text: >-
          {HttpOperationResponse<ServerBlobAuditingPolicy>} - The deserialized
          result object.
        value: >-
          {HttpOperationResponse<ServerBlobAuditingPolicy>} - The deserialized
          result object.
      - originalTitle: reject
        title: reject
        text: '{Error} - The error object.'
        value: '{Error} - The error object.'
    type: Function
    syntax:
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: "The name of the resource group that\rcontains the resource. You can obtain this value from the Azure Resource\rManager API or the portal."
        - id: serverName
          type:
            - string
          description: The name of the server.
        - id: parameters
          type:
            - object
          description: Properties of blob auditing policy
        - id: parameters.state
          type:
            - string
          description: "Specifies the state of the policy. If state\ris Enabled, storageEndpoint and storageAccountAccessKey are required.\rPossible values include: 'Enabled', 'Disabled'"
        - id: parameters.storageEndpoint
          type:
            - string
          description: "Specifies the blob storage\rendpoint (e.g. https://MyAccount.blob.core.windows.net). If state is\rEnabled, storageEndpoint is required."
          optional: true
        - id: parameters.storageAccountAccessKey
          type:
            - string
          description: "Specifies the\ridentifier key of the auditing storage account. If state is Enabled,\rstorageAccountAccessKey is required."
          optional: true
        - id: parameters.retentionDays
          type:
            - number
          description: "Specifies the number of days to\rkeep in the audit logs."
          optional: true
        - id: parameters.auditActionsAndGroups
          type:
            - array
          description: "Specifies the\rActions-Groups and Actions to audit.\r\rThe recommended set of action groups to use is the following combination -\rthis will audit all the queries and stored procedures executed against the\rdatabase, as well as successful and failed logins:\r\rBATCH_COMPLETED_GROUP,\rSUCCESSFUL_DATABASE_AUTHENTICATION_GROUP,\rFAILED_DATABASE_AUTHENTICATION_GROUP.\r\rThis above combination is also the set that is configured by default when\renabling auditing from the Azure portal.\r\rThe supported action groups to audit are (note: choose only specific groups\rthat cover your auditing needs. Using unnecessary groups could lead to very\rlarge quantities of audit records):\r\rAPPLICATION_ROLE_CHANGE_PASSWORD_GROUP\rBACKUP_RESTORE_GROUP\rDATABASE_LOGOUT_GROUP\rDATABASE_OBJECT_CHANGE_GROUP\rDATABASE_OBJECT_OWNERSHIP_CHANGE_GROUP\rDATABASE_OBJECT_PERMISSION_CHANGE_GROUP\rDATABASE_OPERATION_GROUP\rDATABASE_PERMISSION_CHANGE_GROUP\rDATABASE_PRINCIPAL_CHANGE_GROUP\rDATABASE_PRINCIPAL_IMPERSONATION_GROUP\rDATABASE_ROLE_MEMBER_CHANGE_GROUP\rFAILED_DATABASE_AUTHENTICATION_GROUP\rSCHEMA_OBJECT_ACCESS_GROUP\rSCHEMA_OBJECT_CHANGE_GROUP\rSCHEMA_OBJECT_OWNERSHIP_CHANGE_GROUP\rSCHEMA_OBJECT_PERMISSION_CHANGE_GROUP\rSUCCESSFUL_DATABASE_AUTHENTICATION_GROUP\rUSER_CHANGE_PASSWORD_GROUP\rBATCH_STARTED_GROUP\rBATCH_COMPLETED_GROUP\r\rThese are groups that cover all sql statements and stored procedures\rexecuted against the database, and should not be used in combination with\rother groups as this will result in duplicate audit logs.\r\rFor more information, see [Database-Level Audit Action\rGroups](https://docs.microsoft.com/en-us/sql/relational-databases/security/auditing/sql-server-audit-action-groups-and-actions#database-level-audit-action-groups).\r\rFor Database auditing policy, specific Actions can also be specified (note\rthat Actions cannot be specified for Server auditing policy). The supported\ractions to audit are:\rSELECT\rUPDATE\rINSERT\rDELETE\rEXECUTE\rRECEIVE\rREFERENCES\r\rThe general form for defining an action to be audited is:\r<action> ON <object> BY <principal>\r\rNote that <object> in the above format can refer to an object like a table,\rview, or stored procedure, or an entire database or schema. For the latter\rcases, the forms DATABASE::<db_name> and SCHEMA::<schema_name> are used,\rrespectively.\r\rFor example:\rSELECT on dbo.myTable by public\rSELECT on DATABASE::myDatabase by public\rSELECT on SCHEMA::mySchema by public\r\rFor more information, see [Database-Level Audit\rActions](https://docs.microsoft.com/en-us/sql/relational-databases/security/auditing/sql-server-audit-action-groups-and-actions#database-level-audit-actions)"
          optional: true
        - id: parameters.storageAccountSubscriptionId
          type:
            - azure-arm-sql.uuid
          description: "Specifies the blob\rstorage subscription Id."
          optional: true
        - id: parameters.isStorageSecondaryKeyInUse
          type:
            - boolean
          description: "Specifies whether\rstorageAccountAccessKey value is the storage's secondary key."
          optional: true
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: "Headers that will be added to the\rrequest"
          optional: true
      return:
        type:
          - Promise
        description: A promise is returned
      content: >-
        function beginCreateOrUpdateWithHttpOperationResponse(resourceGroupName,
        serverName, parameters, options)
    langs:
      - js
  - uid: 'azure-arm-sql.ServerBlobAuditingPolicies#beginCreateOrUpdate'
    id: 'azure-arm-sql.ServerBlobAuditingPolicies#beginCreateOrUpdate'
    parent: azure-arm-sql.ServerBlobAuditingPolicies
    name: >-
      beginCreateOrUpdate(resourceGroupName, serverName, parameters, options,
      optionalCallback)
    summary: Creates or updates a server's blob auditing policy.
    fullName: >-
      azure-arm-sql.ServerBlobAuditingPolicies.beginCreateOrUpdate(resourceGroupName,
      serverName, parameters, options, optionalCallback)
    tags:
      - originalTitle: resolve
        title: resolve
        text: '{ServerBlobAuditingPolicy} - The deserialized result object.'
        value: '{ServerBlobAuditingPolicy} - The deserialized result object.'
      - originalTitle: reject
        title: reject
        text: "{Error} - The error object.\r\r{function} optionalCallback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {object} [result]   - The deserialized result object if an error did not occur.\r                     See {@link ServerBlobAuditingPolicy} for more\r                     information.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
        value: "{Error} - The error object.\r\r{function} optionalCallback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {object} [result]   - The deserialized result object if an error did not occur.\r                     See {@link ServerBlobAuditingPolicy} for more\r                     information.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
    type: Function
    syntax:
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: "The name of the resource group that\rcontains the resource. You can obtain this value from the Azure Resource\rManager API or the portal."
        - id: serverName
          type:
            - string
          description: The name of the server.
        - id: parameters
          type:
            - object
          description: Properties of blob auditing policy
        - id: parameters.state
          type:
            - string
          description: "Specifies the state of the policy. If state\ris Enabled, storageEndpoint and storageAccountAccessKey are required.\rPossible values include: 'Enabled', 'Disabled'"
        - id: parameters.storageEndpoint
          type:
            - string
          description: "Specifies the blob storage\rendpoint (e.g. https://MyAccount.blob.core.windows.net). If state is\rEnabled, storageEndpoint is required."
          optional: true
        - id: parameters.storageAccountAccessKey
          type:
            - string
          description: "Specifies the\ridentifier key of the auditing storage account. If state is Enabled,\rstorageAccountAccessKey is required."
          optional: true
        - id: parameters.retentionDays
          type:
            - number
          description: "Specifies the number of days to\rkeep in the audit logs."
          optional: true
        - id: parameters.auditActionsAndGroups
          type:
            - array
          description: "Specifies the\rActions-Groups and Actions to audit.\r\rThe recommended set of action groups to use is the following combination -\rthis will audit all the queries and stored procedures executed against the\rdatabase, as well as successful and failed logins:\r\rBATCH_COMPLETED_GROUP,\rSUCCESSFUL_DATABASE_AUTHENTICATION_GROUP,\rFAILED_DATABASE_AUTHENTICATION_GROUP.\r\rThis above combination is also the set that is configured by default when\renabling auditing from the Azure portal.\r\rThe supported action groups to audit are (note: choose only specific groups\rthat cover your auditing needs. Using unnecessary groups could lead to very\rlarge quantities of audit records):\r\rAPPLICATION_ROLE_CHANGE_PASSWORD_GROUP\rBACKUP_RESTORE_GROUP\rDATABASE_LOGOUT_GROUP\rDATABASE_OBJECT_CHANGE_GROUP\rDATABASE_OBJECT_OWNERSHIP_CHANGE_GROUP\rDATABASE_OBJECT_PERMISSION_CHANGE_GROUP\rDATABASE_OPERATION_GROUP\rDATABASE_PERMISSION_CHANGE_GROUP\rDATABASE_PRINCIPAL_CHANGE_GROUP\rDATABASE_PRINCIPAL_IMPERSONATION_GROUP\rDATABASE_ROLE_MEMBER_CHANGE_GROUP\rFAILED_DATABASE_AUTHENTICATION_GROUP\rSCHEMA_OBJECT_ACCESS_GROUP\rSCHEMA_OBJECT_CHANGE_GROUP\rSCHEMA_OBJECT_OWNERSHIP_CHANGE_GROUP\rSCHEMA_OBJECT_PERMISSION_CHANGE_GROUP\rSUCCESSFUL_DATABASE_AUTHENTICATION_GROUP\rUSER_CHANGE_PASSWORD_GROUP\rBATCH_STARTED_GROUP\rBATCH_COMPLETED_GROUP\r\rThese are groups that cover all sql statements and stored procedures\rexecuted against the database, and should not be used in combination with\rother groups as this will result in duplicate audit logs.\r\rFor more information, see [Database-Level Audit Action\rGroups](https://docs.microsoft.com/en-us/sql/relational-databases/security/auditing/sql-server-audit-action-groups-and-actions#database-level-audit-action-groups).\r\rFor Database auditing policy, specific Actions can also be specified (note\rthat Actions cannot be specified for Server auditing policy). The supported\ractions to audit are:\rSELECT\rUPDATE\rINSERT\rDELETE\rEXECUTE\rRECEIVE\rREFERENCES\r\rThe general form for defining an action to be audited is:\r<action> ON <object> BY <principal>\r\rNote that <object> in the above format can refer to an object like a table,\rview, or stored procedure, or an entire database or schema. For the latter\rcases, the forms DATABASE::<db_name> and SCHEMA::<schema_name> are used,\rrespectively.\r\rFor example:\rSELECT on dbo.myTable by public\rSELECT on DATABASE::myDatabase by public\rSELECT on SCHEMA::mySchema by public\r\rFor more information, see [Database-Level Audit\rActions](https://docs.microsoft.com/en-us/sql/relational-databases/security/auditing/sql-server-audit-action-groups-and-actions#database-level-audit-actions)"
          optional: true
        - id: parameters.storageAccountSubscriptionId
          type:
            - azure-arm-sql.uuid
          description: "Specifies the blob\rstorage subscription Id."
          optional: true
        - id: parameters.isStorageSecondaryKeyInUse
          type:
            - boolean
          description: "Specifies whether\rstorageAccountAccessKey value is the storage's secondary key."
          optional: true
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: "Headers that will be added to the\rrequest"
          optional: true
        - id: optionalCallback
          type:
            - function
          description: The optional callback.
          optional: true
      return:
        type:
          - function
          - Promise
        description: "If a callback was passed as the last parameter\rthen it returns the callback else returns a Promise.\r\r{Promise} A promise is returned"
      content: >-
        function beginCreateOrUpdate(resourceGroupName, serverName, parameters,
        options, optionalCallback)
    langs:
      - js
