### YamlMime:UniversalReference
items:
  - uid: azure-arm-sql.ServerSecurityAlertPolicies
    name: ServerSecurityAlertPolicies
    fullName: ServerSecurityAlertPolicies
    children:
      - azure-arm-sql.ServerSecurityAlertPolicies.beginCreateOrUpdate
      - azure-arm-sql.ServerSecurityAlertPolicies.beginCreateOrUpdate_2
      - azure-arm-sql.ServerSecurityAlertPolicies.beginCreateOrUpdate_1
      - >-
        azure-arm-sql.ServerSecurityAlertPolicies.beginCreateOrUpdateWithHttpOperationResponse
      - azure-arm-sql.ServerSecurityAlertPolicies.createOrUpdate
      - azure-arm-sql.ServerSecurityAlertPolicies.createOrUpdate_2
      - azure-arm-sql.ServerSecurityAlertPolicies.createOrUpdate_1
      - >-
        azure-arm-sql.ServerSecurityAlertPolicies.createOrUpdateWithHttpOperationResponse
      - azure-arm-sql.ServerSecurityAlertPolicies.get
      - azure-arm-sql.ServerSecurityAlertPolicies.get_2
      - azure-arm-sql.ServerSecurityAlertPolicies.get_1
      - azure-arm-sql.ServerSecurityAlertPolicies.getWithHttpOperationResponse
      - azure-arm-sql.ServerSecurityAlertPolicies.listByServer
      - azure-arm-sql.ServerSecurityAlertPolicies.listByServer_2
      - azure-arm-sql.ServerSecurityAlertPolicies.listByServer_1
      - azure-arm-sql.ServerSecurityAlertPolicies.listByServerNext
      - azure-arm-sql.ServerSecurityAlertPolicies.listByServerNext_2
      - azure-arm-sql.ServerSecurityAlertPolicies.listByServerNext_1
      - >-
        azure-arm-sql.ServerSecurityAlertPolicies.listByServerNextWithHttpOperationResponse
      - >-
        azure-arm-sql.ServerSecurityAlertPolicies.listByServerWithHttpOperationResponse
    langs:
      - typeScript
    type: interface
    summary: ''
    package: azure-arm-sql
  - uid: azure-arm-sql.ServerSecurityAlertPolicies.beginCreateOrUpdate
    name: 'beginCreateOrUpdate(string, string, ServerSecurityAlertPolicy, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Creates or updates a threat detection policy.
    syntax:
      content: >-
        function beginCreateOrUpdate(resourceGroupName: string, serverName:
        string, parameters: ServerSecurityAlertPolicy, options?: Object)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: >
            The name of the resource group that

            contains the resource. You can obtain this value from the Azure
            Resource

            Manager API or the portal.
        - id: serverName
          type:
            - string
          description: |
            The name of the server.
        - id: parameters
          type:
            - azure-arm-sql.ServerSecurityAlertPolicy
          description: |
            The server security alert policy.
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<azure-arm-sql.ServerSecurityAlertPolicy>
    package: azure-arm-sql
  - uid: azure-arm-sql.ServerSecurityAlertPolicies.beginCreateOrUpdate_2
    name: >-
      beginCreateOrUpdate(string, string, ServerSecurityAlertPolicy, Object,
      ServiceCallback<ServerSecurityAlertPolicy>)
    children: []
    type: method
    langs:
      - typeScript
    summary: Creates or updates a threat detection policy.
    syntax:
      content: >-
        function beginCreateOrUpdate(resourceGroupName: string, serverName:
        string, parameters: ServerSecurityAlertPolicy, options: Object,
        callback: ServiceCallback<ServerSecurityAlertPolicy>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: ''
        - id: serverName
          type:
            - string
          description: ''
        - id: parameters
          type:
            - azure-arm-sql.ServerSecurityAlertPolicy
          description: ''
        - id: options
          type:
            - Object
          description: ''
        - id: callback
          type:
            - ServiceCallback<azure-arm-sql.ServerSecurityAlertPolicy>
          description: ''
      return:
        type:
          - Promise<azure-arm-sql.ServerSecurityAlertPolicy>
    package: azure-arm-sql
  - uid: azure-arm-sql.ServerSecurityAlertPolicies.beginCreateOrUpdate_1
    name: >-
      beginCreateOrUpdate(string, string, ServerSecurityAlertPolicy,
      ServiceCallback<ServerSecurityAlertPolicy>)
    children: []
    type: method
    langs:
      - typeScript
    summary: Creates or updates a threat detection policy.
    syntax:
      content: >-
        function beginCreateOrUpdate(resourceGroupName: string, serverName:
        string, parameters: ServerSecurityAlertPolicy, callback:
        ServiceCallback<ServerSecurityAlertPolicy>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: ''
        - id: serverName
          type:
            - string
          description: ''
        - id: parameters
          type:
            - azure-arm-sql.ServerSecurityAlertPolicy
          description: ''
        - id: callback
          type:
            - ServiceCallback<azure-arm-sql.ServerSecurityAlertPolicy>
          description: ''
      return:
        type:
          - Promise<azure-arm-sql.ServerSecurityAlertPolicy>
    package: azure-arm-sql
  - uid: >-
      azure-arm-sql.ServerSecurityAlertPolicies.beginCreateOrUpdateWithHttpOperationResponse
    name: >-
      beginCreateOrUpdateWithHttpOperationResponse(string, string,
      ServerSecurityAlertPolicy, Object)
    children: []
    type: method
    langs:
      - typeScript
    summary: Creates or updates a threat detection policy.
    syntax:
      content: >-
        function beginCreateOrUpdateWithHttpOperationResponse(resourceGroupName:
        string, serverName: string, parameters: ServerSecurityAlertPolicy,
        options?: Object)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: >
            The name of the resource group that

            contains the resource. You can obtain this value from the Azure
            Resource

            Manager API or the portal.
        - id: serverName
          type:
            - string
          description: |
            The name of the server.
        - id: parameters
          type:
            - azure-arm-sql.ServerSecurityAlertPolicy
          description: |
            The server security alert policy.
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - >-
            Promise<HttpOperationResponse<azure-arm-sql.ServerSecurityAlertPolicy>>
    package: azure-arm-sql
  - uid: azure-arm-sql.ServerSecurityAlertPolicies.createOrUpdate
    name: 'createOrUpdate(string, string, ServerSecurityAlertPolicy, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Creates or updates a threat detection policy.
    syntax:
      content: >-
        function createOrUpdate(resourceGroupName: string, serverName: string,
        parameters: ServerSecurityAlertPolicy, options?: Object)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: >
            The name of the resource group that

            contains the resource. You can obtain this value from the Azure
            Resource

            Manager API or the portal.
        - id: serverName
          type:
            - string
          description: |
            The name of the server.
        - id: parameters
          type:
            - azure-arm-sql.ServerSecurityAlertPolicy
          description: |
            The server security alert policy.
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<azure-arm-sql.ServerSecurityAlertPolicy>
    package: azure-arm-sql
  - uid: azure-arm-sql.ServerSecurityAlertPolicies.createOrUpdate_2
    name: >-
      createOrUpdate(string, string, ServerSecurityAlertPolicy, Object,
      ServiceCallback<ServerSecurityAlertPolicy>)
    children: []
    type: method
    langs:
      - typeScript
    summary: Creates or updates a threat detection policy.
    syntax:
      content: >-
        function createOrUpdate(resourceGroupName: string, serverName: string,
        parameters: ServerSecurityAlertPolicy, options: Object, callback:
        ServiceCallback<ServerSecurityAlertPolicy>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: ''
        - id: serverName
          type:
            - string
          description: ''
        - id: parameters
          type:
            - azure-arm-sql.ServerSecurityAlertPolicy
          description: ''
        - id: options
          type:
            - Object
          description: ''
        - id: callback
          type:
            - ServiceCallback<azure-arm-sql.ServerSecurityAlertPolicy>
          description: ''
      return:
        type:
          - Promise<azure-arm-sql.ServerSecurityAlertPolicy>
    package: azure-arm-sql
  - uid: azure-arm-sql.ServerSecurityAlertPolicies.createOrUpdate_1
    name: >-
      createOrUpdate(string, string, ServerSecurityAlertPolicy,
      ServiceCallback<ServerSecurityAlertPolicy>)
    children: []
    type: method
    langs:
      - typeScript
    summary: Creates or updates a threat detection policy.
    syntax:
      content: >-
        function createOrUpdate(resourceGroupName: string, serverName: string,
        parameters: ServerSecurityAlertPolicy, callback:
        ServiceCallback<ServerSecurityAlertPolicy>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: ''
        - id: serverName
          type:
            - string
          description: ''
        - id: parameters
          type:
            - azure-arm-sql.ServerSecurityAlertPolicy
          description: ''
        - id: callback
          type:
            - ServiceCallback<azure-arm-sql.ServerSecurityAlertPolicy>
          description: ''
      return:
        type:
          - Promise<azure-arm-sql.ServerSecurityAlertPolicy>
    package: azure-arm-sql
  - uid: >-
      azure-arm-sql.ServerSecurityAlertPolicies.createOrUpdateWithHttpOperationResponse
    name: >-
      createOrUpdateWithHttpOperationResponse(string, string,
      ServerSecurityAlertPolicy, Object)
    children: []
    type: method
    langs:
      - typeScript
    summary: Creates or updates a threat detection policy.
    syntax:
      content: >-
        function createOrUpdateWithHttpOperationResponse(resourceGroupName:
        string, serverName: string, parameters: ServerSecurityAlertPolicy,
        options?: Object)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: >
            The name of the resource group that

            contains the resource. You can obtain this value from the Azure
            Resource

            Manager API or the portal.
        - id: serverName
          type:
            - string
          description: |
            The name of the server.
        - id: parameters
          type:
            - azure-arm-sql.ServerSecurityAlertPolicy
          description: |
            The server security alert policy.
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - >-
            Promise<HttpOperationResponse<azure-arm-sql.ServerSecurityAlertPolicy>>
    package: azure-arm-sql
  - uid: azure-arm-sql.ServerSecurityAlertPolicies.get
    name: 'get(string, string, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Get a server's security alert policy.
    syntax:
      content: >-
        function get(resourceGroupName: string, serverName: string, options?:
        Object)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: >
            The name of the resource group that

            contains the resource. You can obtain this value from the Azure
            Resource

            Manager API or the portal.
        - id: serverName
          type:
            - string
          description: |
            The name of the server.
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<azure-arm-sql.ServerSecurityAlertPolicy>
    package: azure-arm-sql
  - uid: azure-arm-sql.ServerSecurityAlertPolicies.get_2
    name: 'get(string, string, Object, ServiceCallback<ServerSecurityAlertPolicy>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Get a server's security alert policy.
    syntax:
      content: >-
        function get(resourceGroupName: string, serverName: string, options:
        Object, callback: ServiceCallback<ServerSecurityAlertPolicy>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: ''
        - id: serverName
          type:
            - string
          description: ''
        - id: options
          type:
            - Object
          description: ''
        - id: callback
          type:
            - ServiceCallback<azure-arm-sql.ServerSecurityAlertPolicy>
          description: ''
      return:
        type:
          - Promise<azure-arm-sql.ServerSecurityAlertPolicy>
    package: azure-arm-sql
  - uid: azure-arm-sql.ServerSecurityAlertPolicies.get_1
    name: 'get(string, string, ServiceCallback<ServerSecurityAlertPolicy>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Get a server's security alert policy.
    syntax:
      content: >-
        function get(resourceGroupName: string, serverName: string, callback:
        ServiceCallback<ServerSecurityAlertPolicy>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: ''
        - id: serverName
          type:
            - string
          description: ''
        - id: callback
          type:
            - ServiceCallback<azure-arm-sql.ServerSecurityAlertPolicy>
          description: ''
      return:
        type:
          - Promise<azure-arm-sql.ServerSecurityAlertPolicy>
    package: azure-arm-sql
  - uid: azure-arm-sql.ServerSecurityAlertPolicies.getWithHttpOperationResponse
    name: 'getWithHttpOperationResponse(string, string, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Get a server's security alert policy.
    syntax:
      content: >-
        function getWithHttpOperationResponse(resourceGroupName: string,
        serverName: string, options?: Object)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: >
            The name of the resource group that

            contains the resource. You can obtain this value from the Azure
            Resource

            Manager API or the portal.
        - id: serverName
          type:
            - string
          description: |
            The name of the server.
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - >-
            Promise<HttpOperationResponse<azure-arm-sql.ServerSecurityAlertPolicy>>
    package: azure-arm-sql
  - uid: azure-arm-sql.ServerSecurityAlertPolicies.listByServer
    name: 'listByServer(string, string, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Get the server's threat detection policies.
    syntax:
      content: >-
        function listByServer(resourceGroupName: string, serverName: string,
        options?: Object)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: >
            The name of the resource group that

            contains the resource. You can obtain this value from the Azure
            Resource

            Manager API or the portal.
        - id: serverName
          type:
            - string
          description: |
            The name of the server.
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<azure-arm-sql.LogicalServerSecurityAlertPolicyListResult>
    package: azure-arm-sql
  - uid: azure-arm-sql.ServerSecurityAlertPolicies.listByServer_2
    name: >-
      listByServer(string, string, Object,
      ServiceCallback<LogicalServerSecurityAlertPolicyListResult>)
    children: []
    type: method
    langs:
      - typeScript
    summary: Get the server's threat detection policies.
    syntax:
      content: >-
        function listByServer(resourceGroupName: string, serverName: string,
        options: Object, callback:
        ServiceCallback<LogicalServerSecurityAlertPolicyListResult>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: ''
        - id: serverName
          type:
            - string
          description: ''
        - id: options
          type:
            - Object
          description: ''
        - id: callback
          type:
            - >-
              ServiceCallback<azure-arm-sql.LogicalServerSecurityAlertPolicyListResult>
          description: ''
      return:
        type:
          - Promise<azure-arm-sql.LogicalServerSecurityAlertPolicyListResult>
    package: azure-arm-sql
  - uid: azure-arm-sql.ServerSecurityAlertPolicies.listByServer_1
    name: >-
      listByServer(string, string,
      ServiceCallback<LogicalServerSecurityAlertPolicyListResult>)
    children: []
    type: method
    langs:
      - typeScript
    summary: Get the server's threat detection policies.
    syntax:
      content: >-
        function listByServer(resourceGroupName: string, serverName: string,
        callback: ServiceCallback<LogicalServerSecurityAlertPolicyListResult>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: ''
        - id: serverName
          type:
            - string
          description: ''
        - id: callback
          type:
            - >-
              ServiceCallback<azure-arm-sql.LogicalServerSecurityAlertPolicyListResult>
          description: ''
      return:
        type:
          - Promise<azure-arm-sql.LogicalServerSecurityAlertPolicyListResult>
    package: azure-arm-sql
  - uid: azure-arm-sql.ServerSecurityAlertPolicies.listByServerNext
    name: 'listByServerNext(string, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Get the server's threat detection policies.
    syntax:
      content: 'function listByServerNext(nextPageLink: string, options?: Object)'
      parameters:
        - id: nextPageLink
          type:
            - string
          description: |
            The NextLink from the previous successful call
            to List operation.
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<azure-arm-sql.LogicalServerSecurityAlertPolicyListResult>
    package: azure-arm-sql
  - uid: azure-arm-sql.ServerSecurityAlertPolicies.listByServerNext_2
    name: >-
      listByServerNext(string, Object,
      ServiceCallback<LogicalServerSecurityAlertPolicyListResult>)
    children: []
    type: method
    langs:
      - typeScript
    summary: Get the server's threat detection policies.
    syntax:
      content: >-
        function listByServerNext(nextPageLink: string, options: Object,
        callback: ServiceCallback<LogicalServerSecurityAlertPolicyListResult>)
      parameters:
        - id: nextPageLink
          type:
            - string
          description: ''
        - id: options
          type:
            - Object
          description: ''
        - id: callback
          type:
            - >-
              ServiceCallback<azure-arm-sql.LogicalServerSecurityAlertPolicyListResult>
          description: ''
      return:
        type:
          - Promise<azure-arm-sql.LogicalServerSecurityAlertPolicyListResult>
    package: azure-arm-sql
  - uid: azure-arm-sql.ServerSecurityAlertPolicies.listByServerNext_1
    name: >-
      listByServerNext(string,
      ServiceCallback<LogicalServerSecurityAlertPolicyListResult>)
    children: []
    type: method
    langs:
      - typeScript
    summary: Get the server's threat detection policies.
    syntax:
      content: >-
        function listByServerNext(nextPageLink: string, callback:
        ServiceCallback<LogicalServerSecurityAlertPolicyListResult>)
      parameters:
        - id: nextPageLink
          type:
            - string
          description: ''
        - id: callback
          type:
            - >-
              ServiceCallback<azure-arm-sql.LogicalServerSecurityAlertPolicyListResult>
          description: ''
      return:
        type:
          - Promise<azure-arm-sql.LogicalServerSecurityAlertPolicyListResult>
    package: azure-arm-sql
  - uid: >-
      azure-arm-sql.ServerSecurityAlertPolicies.listByServerNextWithHttpOperationResponse
    name: 'listByServerNextWithHttpOperationResponse(string, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Get the server's threat detection policies.
    syntax:
      content: >-
        function listByServerNextWithHttpOperationResponse(nextPageLink: string,
        options?: Object)
      parameters:
        - id: nextPageLink
          type:
            - string
          description: |
            The NextLink from the previous successful call
            to List operation.
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - >-
            Promise<HttpOperationResponse<azure-arm-sql.LogicalServerSecurityAlertPolicyListResult>>
    package: azure-arm-sql
  - uid: >-
      azure-arm-sql.ServerSecurityAlertPolicies.listByServerWithHttpOperationResponse
    name: 'listByServerWithHttpOperationResponse(string, string, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Get the server's threat detection policies.
    syntax:
      content: >-
        function listByServerWithHttpOperationResponse(resourceGroupName:
        string, serverName: string, options?: Object)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: >
            The name of the resource group that

            contains the resource. You can obtain this value from the Azure
            Resource

            Manager API or the portal.
        - id: serverName
          type:
            - string
          description: |
            The name of the server.
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - >-
            Promise<HttpOperationResponse<azure-arm-sql.LogicalServerSecurityAlertPolicyListResult>>
    package: azure-arm-sql
references:
  - uid: azure-arm-sql.ServerSecurityAlertPolicy
    name: ServerSecurityAlertPolicy
    spec.typeScript:
      - name: ServerSecurityAlertPolicy
        fullName: ServerSecurityAlertPolicy
        uid: azure-arm-sql.ServerSecurityAlertPolicy
  - uid: Promise<azure-arm-sql.ServerSecurityAlertPolicy>
    name: ServerSecurityAlertPolicy>
    spec.typeScript:
      - name: Promise<
        fullName: Promise<
      - name: ServerSecurityAlertPolicy
        fullName: ServerSecurityAlertPolicy
        uid: azure-arm-sql.ServerSecurityAlertPolicy
      - name: '>'
        fullName: '>'
  - uid: ServiceCallback<azure-arm-sql.ServerSecurityAlertPolicy>
    name: ServerSecurityAlertPolicy>
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: ServerSecurityAlertPolicy
        fullName: ServerSecurityAlertPolicy
        uid: azure-arm-sql.ServerSecurityAlertPolicy
      - name: '>'
        fullName: '>'
  - uid: Promise<HttpOperationResponse<azure-arm-sql.ServerSecurityAlertPolicy>>
    name: ServerSecurityAlertPolicy>>
    spec.typeScript:
      - name: Promise<HttpOperationResponse<
        fullName: Promise<HttpOperationResponse<
      - name: ServerSecurityAlertPolicy
        fullName: ServerSecurityAlertPolicy
        uid: azure-arm-sql.ServerSecurityAlertPolicy
      - name: '>>'
        fullName: '>>'
  - uid: Promise<azure-arm-sql.LogicalServerSecurityAlertPolicyListResult>
    name: LogicalServerSecurityAlertPolicyListResult>
    spec.typeScript:
      - name: Promise<
        fullName: Promise<
      - name: LogicalServerSecurityAlertPolicyListResult
        fullName: LogicalServerSecurityAlertPolicyListResult
        uid: azure-arm-sql.LogicalServerSecurityAlertPolicyListResult
      - name: '>'
        fullName: '>'
  - uid: ServiceCallback<azure-arm-sql.LogicalServerSecurityAlertPolicyListResult>
    name: LogicalServerSecurityAlertPolicyListResult>
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: LogicalServerSecurityAlertPolicyListResult
        fullName: LogicalServerSecurityAlertPolicyListResult
        uid: azure-arm-sql.LogicalServerSecurityAlertPolicyListResult
      - name: '>'
        fullName: '>'
  - uid: >-
      Promise<HttpOperationResponse<azure-arm-sql.LogicalServerSecurityAlertPolicyListResult>>
    name: LogicalServerSecurityAlertPolicyListResult>>
    spec.typeScript:
      - name: Promise<HttpOperationResponse<
        fullName: Promise<HttpOperationResponse<
      - name: LogicalServerSecurityAlertPolicyListResult
        fullName: LogicalServerSecurityAlertPolicyListResult
        uid: azure-arm-sql.LogicalServerSecurityAlertPolicyListResult
      - name: '>>'
        fullName: '>>'
