### YamlMime:UniversalReference
items:
  - uid: azure-servicefabric.NodeInfo
    name: NodeInfo
    fullName: NodeInfo
    children:
      - azure-servicefabric.NodeInfo.codeVersion
      - azure-servicefabric.NodeInfo.configVersion
      - azure-servicefabric.NodeInfo.faultDomain
      - azure-servicefabric.NodeInfo.healthState
      - azure-servicefabric.NodeInfo.id
      - azure-servicefabric.NodeInfo.instanceId
      - azure-servicefabric.NodeInfo.ipAddressOrFQDN
      - azure-servicefabric.NodeInfo.isSeedNode
      - azure-servicefabric.NodeInfo.isStopped
      - azure-servicefabric.NodeInfo.name
      - azure-servicefabric.NodeInfo.nodeDeactivationInfo
      - azure-servicefabric.NodeInfo.nodeDownAt
      - azure-servicefabric.NodeInfo.nodeDownTimeInSeconds
      - azure-servicefabric.NodeInfo.nodeStatus
      - azure-servicefabric.NodeInfo.nodeUpAt
      - azure-servicefabric.NodeInfo.nodeUpTimeInSeconds
      - azure-servicefabric.NodeInfo.type
      - azure-servicefabric.NodeInfo.upgradeDomain
    langs:
      - typeScript
    type: interface
    summary: ''
    package: azure-servicefabric
  - uid: azure-servicefabric.NodeInfo.codeVersion
    name: codeVersion
    fullName: codeVersion
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    optional: true
    syntax:
      content: 'codeVersion?: string'
      return:
        type:
          - string
    package: azure-servicefabric
  - uid: azure-servicefabric.NodeInfo.configVersion
    name: configVersion
    fullName: configVersion
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    optional: true
    syntax:
      content: 'configVersion?: string'
      return:
        type:
          - string
    package: azure-servicefabric
  - uid: azure-servicefabric.NodeInfo.faultDomain
    name: faultDomain
    fullName: faultDomain
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    optional: true
    syntax:
      content: 'faultDomain?: string'
      return:
        type:
          - string
    package: azure-servicefabric
  - uid: azure-servicefabric.NodeInfo.healthState
    name: healthState
    fullName: healthState
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    optional: true
    syntax:
      content: 'healthState?: string'
      return:
        type:
          - string
    package: azure-servicefabric
  - uid: azure-servicefabric.NodeInfo.id
    name: id
    fullName: id
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    optional: true
    syntax:
      content: 'id?: NodeId'
      return:
        type:
          - azure-servicefabric.NodeId
    package: azure-servicefabric
  - uid: azure-servicefabric.NodeInfo.instanceId
    name: instanceId
    fullName: instanceId
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    optional: true
    syntax:
      content: 'instanceId?: string'
      return:
        type:
          - string
    package: azure-servicefabric
  - uid: azure-servicefabric.NodeInfo.ipAddressOrFQDN
    name: ipAddressOrFQDN
    fullName: ipAddressOrFQDN
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    optional: true
    syntax:
      content: 'ipAddressOrFQDN?: string'
      return:
        type:
          - string
    package: azure-servicefabric
  - uid: azure-servicefabric.NodeInfo.isSeedNode
    name: isSeedNode
    fullName: isSeedNode
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    optional: true
    syntax:
      content: 'isSeedNode?: boolean'
      return:
        type:
          - boolean
    package: azure-servicefabric
  - uid: azure-servicefabric.NodeInfo.isStopped
    name: isStopped
    fullName: isStopped
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    optional: true
    syntax:
      content: 'isStopped?: boolean'
      return:
        type:
          - boolean
    package: azure-servicefabric
  - uid: azure-servicefabric.NodeInfo.name
    name: name
    fullName: name
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    optional: true
    syntax:
      content: 'name?: string'
      return:
        type:
          - string
    package: azure-servicefabric
  - uid: azure-servicefabric.NodeInfo.nodeDeactivationInfo
    name: nodeDeactivationInfo
    fullName: nodeDeactivationInfo
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    optional: true
    syntax:
      content: 'nodeDeactivationInfo?: NodeDeactivationInfo'
      return:
        type:
          - azure-servicefabric.NodeDeactivationInfo
    package: azure-servicefabric
  - uid: azure-servicefabric.NodeInfo.nodeDownAt
    name: nodeDownAt
    fullName: nodeDownAt
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    optional: true
    syntax:
      content: 'nodeDownAt?: Date'
      return:
        type:
          - Date
    package: azure-servicefabric
  - uid: azure-servicefabric.NodeInfo.nodeDownTimeInSeconds
    name: nodeDownTimeInSeconds
    fullName: nodeDownTimeInSeconds
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    optional: true
    syntax:
      content: 'nodeDownTimeInSeconds?: string'
      return:
        type:
          - string
    package: azure-servicefabric
  - uid: azure-servicefabric.NodeInfo.nodeStatus
    name: nodeStatus
    fullName: nodeStatus
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    optional: true
    syntax:
      content: 'nodeStatus?: string'
      return:
        type:
          - string
    package: azure-servicefabric
  - uid: azure-servicefabric.NodeInfo.nodeUpAt
    name: nodeUpAt
    fullName: nodeUpAt
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    optional: true
    syntax:
      content: 'nodeUpAt?: Date'
      return:
        type:
          - Date
    package: azure-servicefabric
  - uid: azure-servicefabric.NodeInfo.nodeUpTimeInSeconds
    name: nodeUpTimeInSeconds
    fullName: nodeUpTimeInSeconds
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    optional: true
    syntax:
      content: 'nodeUpTimeInSeconds?: string'
      return:
        type:
          - string
    package: azure-servicefabric
  - uid: azure-servicefabric.NodeInfo.type
    name: type
    fullName: type
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    optional: true
    syntax:
      content: 'type?: string'
      return:
        type:
          - string
    package: azure-servicefabric
  - uid: azure-servicefabric.NodeInfo.upgradeDomain
    name: upgradeDomain
    fullName: upgradeDomain
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    optional: true
    syntax:
      content: 'upgradeDomain?: string'
      return:
        type:
          - string
    package: azure-servicefabric
references:
  - uid: azure-servicefabric.NodeId
    spec.typeScript:
      - name: NodeId
        fullName: NodeId
        uid: azure-servicefabric.NodeId
  - uid: azure-servicefabric.NodeDeactivationInfo
    spec.typeScript:
      - name: NodeDeactivationInfo
        fullName: NodeDeactivationInfo
        uid: azure-servicefabric.NodeDeactivationInfo
