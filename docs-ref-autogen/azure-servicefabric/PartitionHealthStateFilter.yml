### YamlMime:UniversalReference
items:
  - uid: azure-servicefabric.PartitionHealthStateFilter
    name: PartitionHealthStateFilter
    fullName: PartitionHealthStateFilter
    children:
      - azure-servicefabric.PartitionHealthStateFilter.healthStateFilter
      - azure-servicefabric.PartitionHealthStateFilter.partitionIdFilter
      - azure-servicefabric.PartitionHealthStateFilter.replicaFilters
    langs:
      - typeScript
    type: interface
    summary: ''
    package: azure-servicefabric
  - uid: azure-servicefabric.PartitionHealthStateFilter.healthStateFilter
    name: healthStateFilter
    fullName: healthStateFilter
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    optional: true
    syntax:
      content: 'healthStateFilter?: number'
      return:
        type:
          - number
    package: azure-servicefabric
  - uid: azure-servicefabric.PartitionHealthStateFilter.partitionIdFilter
    name: partitionIdFilter
    fullName: partitionIdFilter
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    optional: true
    syntax:
      content: 'partitionIdFilter?: string'
      return:
        type:
          - string
    package: azure-servicefabric
  - uid: azure-servicefabric.PartitionHealthStateFilter.replicaFilters
    name: replicaFilters
    fullName: replicaFilters
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    optional: true
    syntax:
      content: 'replicaFilters?: ReplicaHealthStateFilter[]'
      return:
        type:
          - 'azure-servicefabric.ReplicaHealthStateFilter[]'
    package: azure-servicefabric
references:
  - uid: 'azure-servicefabric.ReplicaHealthStateFilter[]'
    spec.typeScript:
      - name: ReplicaHealthStateFilter
        fullName: ReplicaHealthStateFilter
        uid: azure-servicefabric.ReplicaHealthStateFilter
      - name: '[]'
        fullName: '[]'
