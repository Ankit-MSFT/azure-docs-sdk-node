### YamlMime:UniversalReference
items:
  - uid: azure-eventgrid.MediaLiveEventIngestHeartbeatEventData
    name: MediaLiveEventIngestHeartbeatEventData
    fullName: MediaLiveEventIngestHeartbeatEventData
    children:
      - azure-eventgrid.MediaLiveEventIngestHeartbeatEventData.bitrate
      - >-
        azure-eventgrid.MediaLiveEventIngestHeartbeatEventData.discontinuityCount
      - azure-eventgrid.MediaLiveEventIngestHeartbeatEventData.healthy
      - azure-eventgrid.MediaLiveEventIngestHeartbeatEventData.incomingBitrate
      - azure-eventgrid.MediaLiveEventIngestHeartbeatEventData.lastTimestamp
      - >-
        azure-eventgrid.MediaLiveEventIngestHeartbeatEventData.nonincreasingCount
      - azure-eventgrid.MediaLiveEventIngestHeartbeatEventData.overlapCount
      - azure-eventgrid.MediaLiveEventIngestHeartbeatEventData.state
      - azure-eventgrid.MediaLiveEventIngestHeartbeatEventData.timescale
      - azure-eventgrid.MediaLiveEventIngestHeartbeatEventData.trackName
      - azure-eventgrid.MediaLiveEventIngestHeartbeatEventData.trackType
      - azure-eventgrid.MediaLiveEventIngestHeartbeatEventData.unexpectedBitrate
    langs:
      - typeScript
    type: interface
    summary: ''
    package: azure-eventgrid
  - uid: azure-eventgrid.MediaLiveEventIngestHeartbeatEventData.bitrate
    name: bitrate
    fullName: bitrate
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    optional: true
    syntax:
      content: 'bitrate?: number'
      return:
        type:
          - number
    package: azure-eventgrid
  - uid: azure-eventgrid.MediaLiveEventIngestHeartbeatEventData.discontinuityCount
    name: discontinuityCount
    fullName: discontinuityCount
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    optional: true
    syntax:
      content: 'discontinuityCount?: number'
      return:
        type:
          - number
    package: azure-eventgrid
  - uid: azure-eventgrid.MediaLiveEventIngestHeartbeatEventData.healthy
    name: healthy
    fullName: healthy
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    optional: true
    syntax:
      content: 'healthy?: boolean'
      return:
        type:
          - boolean
    package: azure-eventgrid
  - uid: azure-eventgrid.MediaLiveEventIngestHeartbeatEventData.incomingBitrate
    name: incomingBitrate
    fullName: incomingBitrate
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    optional: true
    syntax:
      content: 'incomingBitrate?: number'
      return:
        type:
          - number
    package: azure-eventgrid
  - uid: azure-eventgrid.MediaLiveEventIngestHeartbeatEventData.lastTimestamp
    name: lastTimestamp
    fullName: lastTimestamp
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    optional: true
    syntax:
      content: 'lastTimestamp?: string'
      return:
        type:
          - string
    package: azure-eventgrid
  - uid: azure-eventgrid.MediaLiveEventIngestHeartbeatEventData.nonincreasingCount
    name: nonincreasingCount
    fullName: nonincreasingCount
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    optional: true
    syntax:
      content: 'nonincreasingCount?: number'
      return:
        type:
          - number
    package: azure-eventgrid
  - uid: azure-eventgrid.MediaLiveEventIngestHeartbeatEventData.overlapCount
    name: overlapCount
    fullName: overlapCount
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    optional: true
    syntax:
      content: 'overlapCount?: number'
      return:
        type:
          - number
    package: azure-eventgrid
  - uid: azure-eventgrid.MediaLiveEventIngestHeartbeatEventData.state
    name: state
    fullName: state
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    optional: true
    syntax:
      content: 'state?: string'
      return:
        type:
          - string
    package: azure-eventgrid
  - uid: azure-eventgrid.MediaLiveEventIngestHeartbeatEventData.timescale
    name: timescale
    fullName: timescale
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    optional: true
    syntax:
      content: 'timescale?: string'
      return:
        type:
          - string
    package: azure-eventgrid
  - uid: azure-eventgrid.MediaLiveEventIngestHeartbeatEventData.trackName
    name: trackName
    fullName: trackName
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    optional: true
    syntax:
      content: 'trackName?: string'
      return:
        type:
          - string
    package: azure-eventgrid
  - uid: azure-eventgrid.MediaLiveEventIngestHeartbeatEventData.trackType
    name: trackType
    fullName: trackType
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    optional: true
    syntax:
      content: 'trackType?: string'
      return:
        type:
          - string
    package: azure-eventgrid
  - uid: azure-eventgrid.MediaLiveEventIngestHeartbeatEventData.unexpectedBitrate
    name: unexpectedBitrate
    fullName: unexpectedBitrate
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    optional: true
    syntax:
      content: 'unexpectedBitrate?: boolean'
      return:
        type:
          - boolean
    package: azure-eventgrid
