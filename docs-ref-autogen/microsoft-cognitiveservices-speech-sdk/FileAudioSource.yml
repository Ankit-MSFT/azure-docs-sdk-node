### YamlMime:TSType
name: FileAudioSource
uid: microsoft-cognitiveservices-speech-sdk.FileAudioSource
package: microsoft-cognitiveservices-speech-sdk
summary: ''
fullName: FileAudioSource
type: class
constructors:
  - name: 'FileAudioSource(File, string)'
    uid: microsoft-cognitiveservices-speech-sdk.FileAudioSource.constructor
    package: microsoft-cognitiveservices-speech-sdk
    summary: ''
    syntax:
      content: 'new FileAudioSource(file: File, audioSourceId?: string)'
      parameters:
        - id: file
          type: File
          description: ''
        - id: audioSourceId
          type: string
          description: ''
properties:
  - name: attach
    uid: microsoft-cognitiveservices-speech-sdk.FileAudioSource.attach
    package: microsoft-cognitiveservices-speech-sdk
    summary: ''
    fullName: attach
    syntax:
      content: 'attach: (audioNodeId: string) => Promise<IAudioStreamNode>'
      return:
        type: '(audioNodeId: string) =&gt; Promise&lt;IAudioStreamNode>'
        description: ''
  - name: blob
    uid: microsoft-cognitiveservices-speech-sdk.FileAudioSource.blob
    package: microsoft-cognitiveservices-speech-sdk
    summary: ''
    fullName: blob
    syntax:
      content: Promise<Blob | Buffer> blob
      return:
        type: >-
          <xref uid="microsoft-cognitiveservices-speech-sdk.Promise" />&lt;Blob
          | Buffer&gt;
        description: ''
  - name: detach
    uid: microsoft-cognitiveservices-speech-sdk.FileAudioSource.detach
    package: microsoft-cognitiveservices-speech-sdk
    summary: ''
    fullName: detach
    syntax:
      content: 'detach: (audioNodeId: string) => void'
      return:
        type: '(audioNodeId: string) =&gt; void'
        description: ''
  - name: deviceInfo
    uid: microsoft-cognitiveservices-speech-sdk.FileAudioSource.deviceInfo
    package: microsoft-cognitiveservices-speech-sdk
    summary: ''
    fullName: deviceInfo
    syntax:
      content: Promise<ISpeechConfigAudioDevice> deviceInfo
      return:
        type: >-
          <xref uid="microsoft-cognitiveservices-speech-sdk.Promise" />&lt;<xref
          uid="microsoft-cognitiveservices-speech-sdk.ISpeechConfigAudioDevice"
          />&gt;
        description: ''
  - name: events
    uid: microsoft-cognitiveservices-speech-sdk.FileAudioSource.events
    package: microsoft-cognitiveservices-speech-sdk
    summary: ''
    fullName: events
    syntax:
      content: EventSource<AudioSourceEvent> events
      return:
        type: >-
          <xref uid="microsoft-cognitiveservices-speech-sdk.EventSource"
          />&lt;<xref
          uid="microsoft-cognitiveservices-speech-sdk.AudioSourceEvent" />&gt;
        description: ''
  - name: format
    uid: microsoft-cognitiveservices-speech-sdk.FileAudioSource.format
    package: microsoft-cognitiveservices-speech-sdk
    summary: ''
    fullName: format
    syntax:
      content: Promise<AudioStreamFormatImpl> format
      return:
        type: >-
          <xref uid="microsoft-cognitiveservices-speech-sdk.Promise"
          />&lt;AudioStreamFormatImpl&gt;
        description: ''
  - name: id
    uid: microsoft-cognitiveservices-speech-sdk.FileAudioSource.id
    package: microsoft-cognitiveservices-speech-sdk
    summary: ''
    fullName: id
    syntax:
      content: 'id: () => string'
      return:
        type: () =&gt; string
        description: ''
  - name: turnOff
    uid: microsoft-cognitiveservices-speech-sdk.FileAudioSource.turnOff
    package: microsoft-cognitiveservices-speech-sdk
    summary: ''
    fullName: turnOff
    syntax:
      content: 'turnOff: () => Promise<boolean>'
      return:
        type: () =&gt; Promise&lt;boolean>
        description: ''
  - name: turnOn
    uid: microsoft-cognitiveservices-speech-sdk.FileAudioSource.turnOn
    package: microsoft-cognitiveservices-speech-sdk
    summary: ''
    fullName: turnOn
    syntax:
      content: 'turnOn: () => Promise<boolean>'
      return:
        type: () =&gt; Promise&lt;boolean>
        description: ''
