### YamlMime:TSType
name: Queue
uid: microsoft-cognitiveservices-speech-sdk.Queue
package: microsoft-cognitiveservices-speech-sdk
summary: ''
fullName: Queue<TItem>
isPreview: false
isDeprecated: false
type: class
constructors:
  - name: Queue(List<TItem>)
    uid: microsoft-cognitiveservices-speech-sdk.Queue.constructor
    package: microsoft-cognitiveservices-speech-sdk
    summary: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'new Queue(list?: List<TItem>)'
      parameters:
        - id: list
          type: >-
            <xref uid="microsoft-cognitiveservices-speech-sdk.List"
            />&lt;TItem&gt;
          description: ''
properties:
  - name: dequeue
    uid: microsoft-cognitiveservices-speech-sdk.Queue.dequeue
    package: microsoft-cognitiveservices-speech-sdk
    summary: ''
    fullName: dequeue
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'dequeue: () => Promise<TItem>'
      return:
        type: () =&gt; Promise&lt;TItem&gt;
        description: ''
  - name: dispose
    uid: microsoft-cognitiveservices-speech-sdk.Queue.dispose
    package: microsoft-cognitiveservices-speech-sdk
    summary: ''
    fullName: dispose
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'dispose: (reason?: string) => void'
      return:
        type: '(reason?: string) =&gt; void'
        description: ''
  - name: drainAndDispose
    uid: microsoft-cognitiveservices-speech-sdk.Queue.drainAndDispose
    package: microsoft-cognitiveservices-speech-sdk
    summary: ''
    fullName: drainAndDispose
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        drainAndDispose: (pendingItemProcessor: (pendingItemInQueue: TItem) =>
        void, reason?: string) => Promise<boolean>
      return:
        type: >-
          (pendingItemProcessor: (pendingItemInQueue: TItem) =&gt; void,
          reason?: string) =&gt; Promise&lt;boolean&gt;
        description: ''
  - name: enqueue
    uid: microsoft-cognitiveservices-speech-sdk.Queue.enqueue
    package: microsoft-cognitiveservices-speech-sdk
    summary: ''
    fullName: enqueue
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'enqueue: (item: TItem) => void'
      return:
        type: '(item: TItem) =&gt; void'
        description: ''
  - name: enqueueFromPromise
    uid: microsoft-cognitiveservices-speech-sdk.Queue.enqueueFromPromise
    package: microsoft-cognitiveservices-speech-sdk
    summary: ''
    fullName: enqueueFromPromise
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'enqueueFromPromise: (promise: Promise<TItem>) => void'
      return:
        type: '(promise: Promise&lt;TItem&gt;) =&gt; void'
        description: ''
  - name: isDisposed
    uid: microsoft-cognitiveservices-speech-sdk.Queue.isDisposed
    package: microsoft-cognitiveservices-speech-sdk
    summary: ''
    fullName: isDisposed
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'isDisposed: () => boolean'
      return:
        type: () =&gt; boolean
        description: ''
  - name: length
    uid: microsoft-cognitiveservices-speech-sdk.Queue.length
    package: microsoft-cognitiveservices-speech-sdk
    summary: ''
    fullName: length
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'length: () => number'
      return:
        type: () =&gt; number
        description: ''
  - name: peek
    uid: microsoft-cognitiveservices-speech-sdk.Queue.peek
    package: microsoft-cognitiveservices-speech-sdk
    summary: ''
    fullName: peek
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'peek: () => Promise<TItem>'
      return:
        type: () =&gt; Promise&lt;TItem&gt;
        description: ''
