### YamlMime:UniversalReference
items:
  - uid: microsoft-cognitiveservices-speech-sdk.PromiseResult
    name: PromiseResult
    fullName: PromiseResult<T>
    children:
      - microsoft-cognitiveservices-speech-sdk.PromiseResult.error
      - microsoft-cognitiveservices-speech-sdk.PromiseResult.isCompleted
      - microsoft-cognitiveservices-speech-sdk.PromiseResult.isError
      - microsoft-cognitiveservices-speech-sdk.PromiseResult.constructor
      - microsoft-cognitiveservices-speech-sdk.PromiseResult.result
      - microsoft-cognitiveservices-speech-sdk.PromiseResult.throwIfError
    langs:
      - typeScript
    type: class
    summary: ''
    package: microsoft-cognitiveservices-speech-sdk
  - uid: microsoft-cognitiveservices-speech-sdk.PromiseResult.error
    name: error
    fullName: error
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'error: string'
      return:
        type:
          - string
    package: microsoft-cognitiveservices-speech-sdk
  - uid: microsoft-cognitiveservices-speech-sdk.PromiseResult.isCompleted
    name: isCompleted
    fullName: isCompleted
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'isCompleted: boolean'
      return:
        type:
          - boolean
    package: microsoft-cognitiveservices-speech-sdk
  - uid: microsoft-cognitiveservices-speech-sdk.PromiseResult.isError
    name: isError
    fullName: isError
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'isError: boolean'
      return:
        type:
          - boolean
    package: microsoft-cognitiveservices-speech-sdk
  - uid: microsoft-cognitiveservices-speech-sdk.PromiseResult.constructor
    name: PromiseResult(PromiseResultEventSource<T>)
    children: []
    type: constructor
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'new PromiseResult(promiseResultEventSource: PromiseResultEventSource<T>)'
      parameters:
        - id: promiseResultEventSource
          type:
            - microsoft-cognitiveservices-speech-sdk.PromiseResultEventSource<T>
          description: ''
    package: microsoft-cognitiveservices-speech-sdk
  - uid: microsoft-cognitiveservices-speech-sdk.PromiseResult.result
    name: result
    fullName: result
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'result: T'
      return:
        type:
          - T
    package: microsoft-cognitiveservices-speech-sdk
  - uid: microsoft-cognitiveservices-speech-sdk.PromiseResult.throwIfError
    name: throwIfError
    fullName: throwIfError
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'throwIfError: () => void'
      return:
        type:
          - () => void
    package: microsoft-cognitiveservices-speech-sdk
references:
  - uid: microsoft-cognitiveservices-speech-sdk.PromiseResultEventSource<T>
    name: PromiseResultEventSource<T>
    spec.typeScript:
      - name: PromiseResultEventSource
        fullName: PromiseResultEventSource
        uid: microsoft-cognitiveservices-speech-sdk.PromiseResultEventSource
      - name: <T>
        fullName: <T>
