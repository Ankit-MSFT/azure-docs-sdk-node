### YamlMime:UniversalReference
items:
  - uid: microsoft-cognitiveservices-speech-sdk.SpeechConfig
    name: SpeechConfig
    fullName: SpeechConfig
    children:
      - microsoft-cognitiveservices-speech-sdk.SpeechConfig.authorizationToken
      - microsoft-cognitiveservices-speech-sdk.SpeechConfig.close
      - microsoft-cognitiveservices-speech-sdk.SpeechConfig.endpointId
      - >-
        microsoft-cognitiveservices-speech-sdk.SpeechConfig.fromAuthorizationToken
      - microsoft-cognitiveservices-speech-sdk.SpeechConfig.fromEndpoint
      - microsoft-cognitiveservices-speech-sdk.SpeechConfig.fromSubscription
      - microsoft-cognitiveservices-speech-sdk.SpeechConfig.getProperty
      - microsoft-cognitiveservices-speech-sdk.SpeechConfig.outputFormat
      - microsoft-cognitiveservices-speech-sdk.SpeechConfig.setProperty
      - microsoft-cognitiveservices-speech-sdk.SpeechConfig.setProxy
      - microsoft-cognitiveservices-speech-sdk.SpeechConfig.setProxy_1
      - >-
        microsoft-cognitiveservices-speech-sdk.SpeechConfig.speechRecognitionLanguage
    langs:
      - typeScript
    type: class
    summary: Speech configuration.
    package: microsoft-cognitiveservices-speech-sdk
  - uid: microsoft-cognitiveservices-speech-sdk.SpeechConfig.authorizationToken
    name: authorizationToken
    fullName: authorizationToken
    children: []
    langs:
      - typeScript
    type: property
    summary: >-
      Gets/Sets the authorization token.

      Note: The caller needs to ensure that the authorization token is valid.
      Before the authorization token

      expires, the caller needs to refresh it by calling this setter with a new
      valid token.
    syntax:
      content: 'public authorizationToken: string'
      return:
        type:
          - string
    package: microsoft-cognitiveservices-speech-sdk
  - uid: microsoft-cognitiveservices-speech-sdk.SpeechConfig.close
    name: close()
    children: []
    type: method
    langs:
      - typeScript
    summary: Closes the configuration.
    syntax:
      content: function close()
      parameters: []
    package: microsoft-cognitiveservices-speech-sdk
  - uid: microsoft-cognitiveservices-speech-sdk.SpeechConfig.endpointId
    name: endpointId
    fullName: endpointId
    children: []
    langs:
      - typeScript
    type: property
    summary: >-
      Gets/Sets the endpoint ID of a customized speech model that is used for
      speech recognition.
    syntax:
      content: 'public endpointId: string'
      return:
        type:
          - string
    package: microsoft-cognitiveservices-speech-sdk
  - uid: microsoft-cognitiveservices-speech-sdk.SpeechConfig.fromAuthorizationToken
    name: 'fromAuthorizationToken(string, string)'
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      Creates an instance of the speech factory with specified initial
      authorization token and region.

      Note: The caller needs to ensure that the authorization token is valid.
      Before the authorization token
            expires, the caller needs to refresh it by calling this setter with a new valid token.
      Note: Please use a token derived from your LanguageUnderstanding
      subscription key in case you want
            to use the Intent recognizer. As configuration values are copied when creating a new recognizer,
            the new token value will not apply to recognizers that have already been created. For recognizers
            that have been created before, you need to set authorization token of the corresponding recognizer
            to refresh the token. Otherwise, the recognizers will encounter errors during recognition.
    syntax:
      content: >-
        static function fromAuthorizationToken(authorizationToken: string,
        region: string)
      parameters:
        - id: authorizationToken
          type:
            - string
          description: The initial authorization token.
        - id: region
          type:
            - string
          description: >-
            The region name (see the <a
            href="https://aka.ms/csspeech/region">region page</a>).
      return:
        type:
          - microsoft-cognitiveservices-speech-sdk.SpeechConfig
    package: microsoft-cognitiveservices-speech-sdk
  - uid: microsoft-cognitiveservices-speech-sdk.SpeechConfig.fromEndpoint
    name: 'fromEndpoint(URL, string)'
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      Creates an instance of the speech config with specified endpoint and
      subscription key.

      This method is intended only for users who use a non-standard service
      endpoint or parameters.

      Note: Please use your LanguageUnderstanding subscription key in case you
      want to use the Intent recognizer.

      Note: The query parameters specified in the endpoint URL are not changed,
      even if they are set by any other APIs.

      For example, if language is defined in the uri as query parameter
      "language=de-DE", and also set by
                   SpeechConfig.speechRecognitionLanguage = "en-US", the language setting in uri takes precedence,
                   and the effective language is "de-DE". Only the parameters that are not specified in the
                   endpoint URL can be set by other APIs.
      Note: To use authorization token with fromEndpoint, pass an empty string
      to the subscriptionKey in the
            fromEndpoint method, and then set authorizationToken="token" on the created SpeechConfig instance to
            use the authorization token.
    syntax:
      content: 'static function fromEndpoint(endpoint: URL, subscriptionKey: string)'
      parameters:
        - id: endpoint
          type:
            - URL
          description: The service endpoint to connect to.
        - id: subscriptionKey
          type:
            - string
          description: The subscription key.
      return:
        type:
          - microsoft-cognitiveservices-speech-sdk.SpeechConfig
    package: microsoft-cognitiveservices-speech-sdk
  - uid: microsoft-cognitiveservices-speech-sdk.SpeechConfig.fromSubscription
    name: 'fromSubscription(string, string)'
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      Static instance of SpeechConfig returned by passing subscriptionKey and
      service region.

      Note: Please use your LanguageUnderstanding subscription key in case you
      want to use the Intent recognizer.
    syntax:
      content: >-
        static function fromSubscription(subscriptionKey: string, region:
        string)
      parameters:
        - id: subscriptionKey
          type:
            - string
          description: The subscription key.
        - id: region
          type:
            - string
          description: >-
            The region name (see the <a
            href="https://aka.ms/csspeech/region">region page</a>).
      return:
        type:
          - microsoft-cognitiveservices-speech-sdk.SpeechConfig
    package: microsoft-cognitiveservices-speech-sdk
  - uid: microsoft-cognitiveservices-speech-sdk.SpeechConfig.getProperty
    name: 'getProperty(string, string)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Returns the current value of an arbitrary property.
    syntax:
      content: 'function getProperty(name: string, def?: string)'
      parameters:
        - id: name
          type:
            - string
          description: The name of the property to query.
        - id: def
          type:
            - string
          description: The value to return in case the property is not known.
          optional: true
      return:
        type:
          - string
    package: microsoft-cognitiveservices-speech-sdk
  - uid: microsoft-cognitiveservices-speech-sdk.SpeechConfig.outputFormat
    name: outputFormat
    fullName: outputFormat
    children: []
    langs:
      - typeScript
    type: property
    summary: Gets/Sets the output format.
    syntax:
      content: 'public outputFormat: OutputFormat'
      return:
        type:
          - microsoft-cognitiveservices-speech-sdk.OutputFormat
    package: microsoft-cognitiveservices-speech-sdk
  - uid: microsoft-cognitiveservices-speech-sdk.SpeechConfig.setProperty
    name: 'setProperty(string, string)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Sets an arbitrary property.
    syntax:
      content: 'function setProperty(name: string, value: string)'
      parameters:
        - id: name
          type:
            - string
          description: The name of the property to set.
        - id: value
          type:
            - string
          description: |
            The new value of the property.
    package: microsoft-cognitiveservices-speech-sdk
  - uid: microsoft-cognitiveservices-speech-sdk.SpeechConfig.setProxy
    name: 'setProxy(string, number)'
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      Sets the proxy configuration.
      Only relevant in Node.js environments.
      Added in version 1.4.0.
    syntax:
      content: 'function setProxy(proxyHostName: string, proxyPort: number)'
      parameters:
        - id: proxyHostName
          type:
            - string
          description: The host name of the proxy server.
        - id: proxyPort
          type:
            - number
          description: |
            The port number of the proxy server.
    package: microsoft-cognitiveservices-speech-sdk
  - uid: microsoft-cognitiveservices-speech-sdk.SpeechConfig.setProxy_1
    name: 'setProxy(string, number, string, string)'
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      Sets the proxy configuration.
      Only relevant in Node.js environments.
      Added in version 1.4.0.
    syntax:
      content: >-
        function setProxy(proxyHostName: string, proxyPort: number,
        proxyUserName: string, proxyPassword: string)
      parameters:
        - id: proxyHostName
          type:
            - string
          description: >-
            The host name of the proxy server, without the protocol scheme
            (http://)
        - id: proxyPort
          type:
            - number
          description: ''
        - id: proxyUserName
          type:
            - string
          description: The user name of the proxy server.
        - id: proxyPassword
          type:
            - string
          description: |
            The password of the proxy server.
    package: microsoft-cognitiveservices-speech-sdk
  - uid: >-
      microsoft-cognitiveservices-speech-sdk.SpeechConfig.speechRecognitionLanguage
    name: speechRecognitionLanguage
    fullName: speechRecognitionLanguage
    children: []
    langs:
      - typeScript
    type: property
    summary: Gets/Sets the input language.
    syntax:
      content: 'public speechRecognitionLanguage: string'
      return:
        type:
          - string
    package: microsoft-cognitiveservices-speech-sdk
references:
  - uid: microsoft-cognitiveservices-speech-sdk.OutputFormat
    name: OutputFormat
    spec.typeScript:
      - name: OutputFormat
        fullName: OutputFormat
        uid: microsoft-cognitiveservices-speech-sdk.OutputFormat
  - uid: microsoft-cognitiveservices-speech-sdk.SpeechConfig
    name: SpeechConfig
    spec.typeScript:
      - name: SpeechConfig
        fullName: SpeechConfig
        uid: microsoft-cognitiveservices-speech-sdk.SpeechConfig
