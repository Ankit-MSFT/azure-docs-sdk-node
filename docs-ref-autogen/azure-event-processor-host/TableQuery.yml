### YamlMime:UniversalReference
items:
  - uid: azure-event-processor-host.TableQuery
    id: azure-event-processor-host.TableQuery
    name: TableQuery
    summary: Creates a new TableQuery object.
    fullName: azure-event-processor-host.TableQuery
    type: Class
    children:
      - 'azure-event-processor-host.TableQuery.#ctor'
      - 'azure-event-processor-host.TableQuery#select'
      - 'azure-event-processor-host.TableQuery#top'
      - 'azure-event-processor-host.TableQuery#where'
      - azure-event-processor-host.TableQuery.int32Filter
      - azure-event-processor-host.TableQuery.int64Filter
      - azure-event-processor-host.TableQuery.doubleFilter
      - azure-event-processor-host.TableQuery.booleanFilter
      - azure-event-processor-host.TableQuery.dateFilter
      - azure-event-processor-host.TableQuery.guidFilter
      - azure-event-processor-host.TableQuery.binaryFilter
      - azure-event-processor-host.TableQuery.stringFilter
      - azure-event-processor-host.TableQuery.combineFilters
      - 'azure-event-processor-host.TableQuery#and'
      - 'azure-event-processor-host.TableQuery#or'
      - 'azure-event-processor-host.TableQuery#toQueryObject'
    langs:
      - js
  - id: 'azure-event-processor-host.TableQuery.#ctor'
    uid: 'azure-event-processor-host.TableQuery.#ctor'
    parent: azure-event-processor-host.TableQuery
    name: TableQuery()
    fullName: azure-event-processor-host.TableQuery.TableQuery()
    summary: Creates a new TableQuery object.
    type: Constructor
    syntax:
      content: new TableQuery()
    langs:
      - js
  - uid: 'azure-event-processor-host.TableQuery#select'
    id: 'azure-event-processor-host.TableQuery#select'
    parent: azure-event-processor-host.TableQuery
    name: select(fields)
    summary: >-
      Specifies the select clause. If no arguments are given, all fields will be
      selected.
    fullName: azure-event-processor-host.TableQuery.select(fields)
    type: Function
    syntax:
      parameters:
        - id: fields
          type:
            - array
          description: The fields to be selected.
      return:
        type:
          - azure-event-processor-host.TableQuery
        description: A table query object with the select clause.
      content: function select(fields)
    langs:
      - js
  - uid: 'azure-event-processor-host.TableQuery#top'
    id: 'azure-event-processor-host.TableQuery#top'
    parent: azure-event-processor-host.TableQuery
    name: top(top)
    summary: Specifies the top clause.
    fullName: azure-event-processor-host.TableQuery.top(top)
    type: Function
    syntax:
      parameters:
        - id: top
          type:
            - azure-event-processor-host.int
          description: The number of items to fetch.
      return:
        type:
          - azure-event-processor-host.TableQuery
        description: A table query object with the top clause.
      content: function top(top)
    langs:
      - js
  - uid: 'azure-event-processor-host.TableQuery#where'
    id: 'azure-event-processor-host.TableQuery#where'
    parent: azure-event-processor-host.TableQuery
    name: 'where(condition, value)'
    summary: "Specifies the where clause.\r\rValid type specifier strings include: ?string?, ?bool?, ?int32?, ?double?, ?date?, ?guid?, ?int64?, ?binary?\rA type must be specified for guid, int64, and binaries or the filter produced will be incorrect."
    fullName: 'azure-event-processor-host.TableQuery.where(condition, value)'
    type: Function
    syntax:
      parameters:
        - id: condition
          type:
            - string
          description: The condition string.
        - id: value
          type:
            - string
            - array
          description: Value(s) to insert in question mark (?) parameters.
      return:
        type:
          - azure-event-processor-host.TableQuery
        description: A table query object with the where clause.
      content: 'function where(condition, value)'
    langs:
      - js
  - uid: azure-event-processor-host.TableQuery.int32Filter
    id: azure-event-processor-host.TableQuery.int32Filter
    parent: azure-event-processor-host.TableQuery
    name: 'int32Filter(propertyName, operation, value)'
    summary: Generates a property filter condition string for an 'int' value.
    fullName: >-
      azure-event-processor-host.TableQuery.int32Filter(propertyName, operation,
      value)
    type: Function
    syntax:
      parameters:
        - id: propertyName
          type:
            - string
          description: A string containing the name of the property to compare.
        - id: operation
          type:
            - string
          description: "A string containing the comparison operator to use. \r                                     See Constants.TableConstants.QueryComparisons for a list of allowed operations."
        - id: value
          type:
            - string
            - azure-event-processor-host.int
          description: An 'int' containing the value to compare with the property.
      return:
        type:
          - string
        description: A string containing the formatted filter condition.
      content: 'function int32Filter(propertyName, operation, value)'
    langs:
      - js
  - uid: azure-event-processor-host.TableQuery.int64Filter
    id: azure-event-processor-host.TableQuery.int64Filter
    parent: azure-event-processor-host.TableQuery
    name: 'int64Filter(propertyName, operation, value)'
    summary: Generates a property filter condition string for a 'int64' value.
    fullName: >-
      azure-event-processor-host.TableQuery.int64Filter(propertyName, operation,
      value)
    type: Function
    syntax:
      parameters:
        - id: propertyName
          type:
            - string
          description: A string containing the name of the property to compare.
        - id: operation
          type:
            - string
          description: "A string containing the comparison operator to use. \r                                     See Constants.TableConstants.QueryComparisons for a list of allowed operations."
        - id: value
          type:
            - string
            - azure-event-processor-host.int64
          description: An 'int64' containing the value to compare with the property.
      return:
        type:
          - string
        description: A string containing the formatted filter condition.
      content: 'function int64Filter(propertyName, operation, value)'
    langs:
      - js
  - uid: azure-event-processor-host.TableQuery.doubleFilter
    id: azure-event-processor-host.TableQuery.doubleFilter
    parent: azure-event-processor-host.TableQuery
    name: 'doubleFilter(propertyName, operation, value)'
    summary: Generates a property filter condition string for a 'double' value.
    fullName: >-
      azure-event-processor-host.TableQuery.doubleFilter(propertyName,
      operation, value)
    type: Function
    syntax:
      parameters:
        - id: propertyName
          type:
            - string
          description: A string containing the name of the property to compare.
        - id: operation
          type:
            - string
          description: "A string containing the comparison operator to use. \r                                     See Constants.TableConstants.QueryComparisons for a list of allowed operations."
        - id: value
          type:
            - string
            - azure-event-processor-host.double
          description: A 'double' containing the value to compare with the property.
      return:
        type:
          - string
        description: A string containing the formatted filter condition.
      content: 'function doubleFilter(propertyName, operation, value)'
    langs:
      - js
  - uid: azure-event-processor-host.TableQuery.booleanFilter
    id: azure-event-processor-host.TableQuery.booleanFilter
    parent: azure-event-processor-host.TableQuery
    name: 'booleanFilter(propertyName, operation, value)'
    summary: Generates a property filter condition string for a 'boolean' value.
    fullName: >-
      azure-event-processor-host.TableQuery.booleanFilter(propertyName,
      operation, value)
    type: Function
    syntax:
      parameters:
        - id: propertyName
          type:
            - string
          description: A string containing the name of the property to compare.
        - id: operation
          type:
            - string
          description: "A string containing the comparison operator to use. \r                                     See Constants.TableConstants.QueryComparisons for a list of allowed operations."
        - id: value
          type:
            - string
            - boolean
          description: A 'boolean' containing the value to compare with the property.
      return:
        type:
          - string
        description: A string containing the formatted filter condition.
      content: 'function booleanFilter(propertyName, operation, value)'
    langs:
      - js
  - uid: azure-event-processor-host.TableQuery.dateFilter
    id: azure-event-processor-host.TableQuery.dateFilter
    parent: azure-event-processor-host.TableQuery
    name: 'dateFilter(propertyName, operation, value)'
    summary: Generates a property filter condition string for a 'datetime' value.
    fullName: >-
      azure-event-processor-host.TableQuery.dateFilter(propertyName, operation,
      value)
    type: Function
    syntax:
      parameters:
        - id: propertyName
          type:
            - string
          description: A string containing the name of the property to compare.
        - id: operation
          type:
            - string
          description: "A string containing the comparison operator to use. \r                                     See Constants.TableConstants.QueryComparisons for a list of allowed operations."
        - id: value
          type:
            - string
            - date
          description: A 'datetime' containing the value to compare with the property.
      return:
        type:
          - string
        description: A string containing the formatted filter condition.
      content: 'function dateFilter(propertyName, operation, value)'
    langs:
      - js
  - uid: azure-event-processor-host.TableQuery.guidFilter
    id: azure-event-processor-host.TableQuery.guidFilter
    parent: azure-event-processor-host.TableQuery
    name: 'guidFilter(propertyName, operation, value)'
    summary: Generates a property filter condition string for a 'guid' value.
    fullName: >-
      azure-event-processor-host.TableQuery.guidFilter(propertyName, operation,
      value)
    type: Function
    syntax:
      parameters:
        - id: propertyName
          type:
            - string
          description: A string containing the name of the property to compare.
        - id: operation
          type:
            - string
          description: "A string containing the comparison operator to use. \r                                     See Constants.TableConstants.QueryComparisons for a list of allowed operations."
        - id: value
          type:
            - string
            - azure-event-processor-host.guid
          description: A 'guid' containing the value to compare with the property.
      return:
        type:
          - string
        description: A string containing the formatted filter condition.
      content: 'function guidFilter(propertyName, operation, value)'
    langs:
      - js
  - uid: azure-event-processor-host.TableQuery.binaryFilter
    id: azure-event-processor-host.TableQuery.binaryFilter
    parent: azure-event-processor-host.TableQuery
    name: 'binaryFilter(propertyName, operation, value)'
    summary: Generates a property filter condition string for a 'binary' value.
    fullName: >-
      azure-event-processor-host.TableQuery.binaryFilter(propertyName,
      operation, value)
    type: Function
    syntax:
      parameters:
        - id: propertyName
          type:
            - string
          description: A string containing the name of the property to compare.
        - id: operation
          type:
            - string
          description: "A string containing the comparison operator to use. \r                                     See Constants.TableConstants.QueryComparisons for a list of allowed operations."
        - id: value
          type:
            - string
            - azure-event-processor-host.buffer
          description: A 'buffer' containing the value to compare with the property.
      return:
        type:
          - string
        description: A string containing the formatted filter condition.
      content: 'function binaryFilter(propertyName, operation, value)'
    langs:
      - js
  - uid: azure-event-processor-host.TableQuery.stringFilter
    id: azure-event-processor-host.TableQuery.stringFilter
    parent: azure-event-processor-host.TableQuery
    name: 'stringFilter(propertyName, operation, value)'
    summary: Generates a property filter condition string.
    fullName: >-
      azure-event-processor-host.TableQuery.stringFilter(propertyName,
      operation, value)
    type: Function
    syntax:
      parameters:
        - id: propertyName
          type:
            - string
          description: A string containing the name of the property to compare.
        - id: operation
          type:
            - string
          description: "A string containing the comparison operator to use. \r                                     See Constants.TableConstants.QueryComparisons for a list of allowed operations."
        - id: value
          type:
            - string
          description: A 'string' containing the value to compare with the property.
      return:
        type:
          - string
        description: A string containing the formatted filter condition.
      content: 'function stringFilter(propertyName, operation, value)'
    langs:
      - js
  - uid: azure-event-processor-host.TableQuery.combineFilters
    id: azure-event-processor-host.TableQuery.combineFilters
    parent: azure-event-processor-host.TableQuery
    name: 'combineFilters(filterA, operatorString, filterB)'
    summary: >-
      Creates a filter condition using the specified logical operator on two
      filter conditions.
    fullName: >-
      azure-event-processor-host.TableQuery.combineFilters(filterA,
      operatorString, filterB)
    type: Function
    syntax:
      parameters:
        - id: filterA
          type:
            - string
          description: A string containing the first formatted filter condition.
        - id: operatorString
          type:
            - string
          description: 'A string containing the operator to use (AND, OR).'
        - id: filterB
          type:
            - string
          description: A string containing the second formatted filter condition.
      return:
        type:
          - string
        description: A string containing the combined filter expression.
      content: 'function combineFilters(filterA, operatorString, filterB)'
    langs:
      - js
  - uid: 'azure-event-processor-host.TableQuery#and'
    id: 'azure-event-processor-host.TableQuery#and'
    parent: azure-event-processor-host.TableQuery
    name: 'and(condition, arguments)'
    summary: Specifies an AND where condition.
    fullName: 'azure-event-processor-host.TableQuery.and(condition, arguments)'
    type: Function
    syntax:
      parameters:
        - id: condition
          type:
            - string
          description: The condition string.
        - id: arguments
          type:
            - array
          description: >-
            Any number of arguments to be replaced in the condition by the
            question mark (?).
      return:
        type:
          - azure-event-processor-host.TableQuery
        description: A table query object with the and clause.
      content: 'function and(condition, arguments)'
    langs:
      - js
  - uid: 'azure-event-processor-host.TableQuery#or'
    id: 'azure-event-processor-host.TableQuery#or'
    parent: azure-event-processor-host.TableQuery
    name: 'or(condition, arguments)'
    summary: Specifies an OR where condition.
    fullName: 'azure-event-processor-host.TableQuery.or(condition, arguments)'
    type: Function
    syntax:
      parameters:
        - id: condition
          type:
            - string
          description: The condition.
        - id: arguments
          type:
            - array
          description: >-
            Any number of arguments to be replaced in the condition by the
            question mark (?).
      return:
        type:
          - azure-event-processor-host.TableQuery
        description: A table query object with the or clause.
      content: 'function or(condition, arguments)'
    langs:
      - js
  - uid: 'azure-event-processor-host.TableQuery#toQueryObject'
    id: 'azure-event-processor-host.TableQuery#toQueryObject'
    parent: azure-event-processor-host.TableQuery
    name: toQueryObject()
    summary: Returns the query string object for the query.
    fullName: azure-event-processor-host.TableQuery.toQueryObject()
    type: Function
    syntax:
      return:
        type:
          - object
        description: JSON object representing the query string arguments for the query.
      content: function toQueryObject()
    langs:
      - js
