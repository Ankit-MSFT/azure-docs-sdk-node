### YamlMime:UniversalReference
items:
  - uid: azure-event-processor-host.TableService
    id: azure-event-processor-host.TableService
    name: TableService
    summary: "The TableService object allows you to peform management operations with the Microsoft Azure Table Service.\rThe Table Service stores data in rows of key-value pairs. A table is composed of multiple rows, and each row\rcontains key-value pairs. There is no schema, so each row in a table may store a different set of keys.\r\rFor more information on the Table Service, as well as task focused information on using it from a Node.js application, see\r[How to Use the Table Service from Node.js](http://azure.microsoft.com/en-us/documentation/articles/storage-nodejs-how-to-use-table-storage/).\rThe following defaults can be set on the Table service.\rdefaultTimeoutIntervalInMs                          The default timeout interval, in milliseconds, to use for request made via the Table service.\rdefaultClientRequestTimeoutInMs                     The default timeout of client requests, in milliseconds, to use for the request made via the Table service.\rdefaultMaximumExecutionTimeInMs                     The default maximum execution time across all potential retries, for requests made via the Table service.\rdefaultLocationMode                                 The default location mode for requests made via the Table service.\rdefaultPayloadFormat                                The default payload format for requests made via the Table service.\ruseNagleAlgorithm                                   Determines whether the Nagle algorithm is used for requests made via the Table service.; true to use the  \r                                                    Nagle algorithm; otherwise, false. The default value is false."
    fullName: azure-event-processor-host.TableService
    type: Class
    children:
      - 'azure-event-processor-host.TableService.#ctor'
      - 'azure-event-processor-host.TableService#getServiceStats'
      - 'azure-event-processor-host.TableService#getServiceProperties'
      - 'azure-event-processor-host.TableService#setServiceProperties'
      - 'azure-event-processor-host.TableService#listTablesSegmented'
      - 'azure-event-processor-host.TableService#listTablesSegmentedWithPrefix'
      - 'azure-event-processor-host.TableService#getTableAcl'
      - 'azure-event-processor-host.TableService#setTableAcl'
      - 'azure-event-processor-host.TableService#generateSharedAccessSignature'
      - 'azure-event-processor-host.TableService#doesTableExist'
      - 'azure-event-processor-host.TableService#createTable'
      - 'azure-event-processor-host.TableService#createTableIfNotExists'
      - 'azure-event-processor-host.TableService#deleteTable'
      - 'azure-event-processor-host.TableService#deleteTableIfExists'
      - 'azure-event-processor-host.TableService#queryEntities'
      - 'azure-event-processor-host.TableService#retrieveEntity'
      - 'azure-event-processor-host.TableService#insertEntity'
      - 'azure-event-processor-host.TableService#insertOrReplaceEntity'
      - 'azure-event-processor-host.TableService#replaceEntity'
      - 'azure-event-processor-host.TableService#mergeEntity'
      - 'azure-event-processor-host.TableService#insertOrMergeEntity'
      - 'azure-event-processor-host.TableService#deleteEntity'
      - 'azure-event-processor-host.TableService#executeBatch'
      - 'azure-event-processor-host.TableService#getUrl'
    langs:
      - js
  - id: 'azure-event-processor-host.TableService.#ctor'
    uid: 'azure-event-processor-host.TableService.#ctor'
    parent: azure-event-processor-host.TableService
    name: >-
      TableService(storageAccountOrConnectionString, storageAccessKey, host,
      sasToken, endpointSuffix)
    fullName: >-
      azure-event-processor-host.TableService.TableService(storageAccountOrConnectionString,
      storageAccessKey, host, sasToken, endpointSuffix)
    summary: "Creates a new TableService object.\rIf no connection string or storageaccount and storageaccesskey are provided,\rthe AZURE_STORAGE_CONNECTION_STRING or AZURE_STORAGE_ACCOUNT and AZURE_STORAGE_ACCESS_KEY environment variables will be used."
    type: Constructor
    syntax:
      parameters:
        - id: storageAccountOrConnectionString
          type:
            - string
          description: The storage account or the connection string.
          optional: true
        - id: storageAccessKey
          type:
            - string
          description: The storage access key.
          optional: true
        - id: host
          type:
            - string
            - object
          description: "The host address. To define primary only, pass a string. \r                                                    Otherwise 'host.primaryHost' defines the primary host and 'host.secondaryHost' defines the secondary host."
          optional: true
        - id: sasToken
          type:
            - string
          description: The Shared Access Signature token.
          optional: true
        - id: endpointSuffix
          type:
            - string
          description: The endpoint suffix.
          optional: true
      content: >-
        new TableService(storageAccountOrConnectionString, storageAccessKey,
        host, sasToken, endpointSuffix)
    langs:
      - js
  - uid: 'azure-event-processor-host.TableService#getServiceStats'
    id: 'azure-event-processor-host.TableService#getServiceStats'
    parent: azure-event-processor-host.TableService
    name: 'getServiceStats(options, callback)'
    summary: Gets the service stats for a storage account’s Table service.
    fullName: 'azure-event-processor-host.TableService.getServiceStats(options, callback)'
    type: Function
    syntax:
      parameters:
        - id: options
          type:
            - object
          description: The request options.
          optional: true
        - id: options.locationMode
          type:
            - azure-event-processor-host.LocationMode
          description: "Specifies the location mode used to decide which location the request should be sent to. \r                                                                        Please see StorageUtilities.LocationMode for the possible values."
          optional: true
        - id: options.timeoutIntervalInMs
          type:
            - azure-event-processor-host.int
          description: >-
            The server timeout interval, in milliseconds, to use for the
            request.
          optional: true
        - id: options.clientRequestTimeoutInMs
          type:
            - azure-event-processor-host.int
          description: >-
            The timeout of client requests, in milliseconds, to use for the
            request.
          optional: true
        - id: options.maximumExecutionTimeInMs
          type:
            - azure-event-processor-host.int
          description: "The maximum execution time, in milliseconds, across all potential retries, to use when making this request.\r                                                                        The maximum execution time interval begins at the time that the client begins building the request. The maximum\r                                                                        execution time is checked intermittently while performing requests, and before executing retries."
          optional: true
        - id: options.clientRequestId
          type:
            - string
          description: >-
            A string that represents the client request ID with a 1KB character
            limit.
          optional: true
        - id: options.useNagleAlgorithm
          type:
            - azure-event-processor-host.bool
          description: "Determines whether the Nagle algorithm is used; true to use the Nagle algorithm; otherwise, false.\r                                                                        The default value is false."
          optional: true
        - id: callback
          type:
            - azure-event-processor-host.errorOrResult
          description: "`error` will contain information if an error occurs; \r                                                                        otherwise `[result](xref:azure-event-processor-host.ServiceStats)` will contain the stats.\r                                                                        `response` will contain information related to this operation."
      content: 'function getServiceStats(options, callback)'
    langs:
      - js
  - uid: 'azure-event-processor-host.TableService#getServiceProperties'
    id: 'azure-event-processor-host.TableService#getServiceProperties'
    parent: azure-event-processor-host.TableService
    name: 'getServiceProperties(options, callback)'
    summary: >-
      Gets the properties of a storage account’s Table service, including Azure
      Storage Analytics.
    fullName: >-
      azure-event-processor-host.TableService.getServiceProperties(options,
      callback)
    type: Function
    syntax:
      parameters:
        - id: options
          type:
            - object
          description: The request options.
          optional: true
        - id: options.locationMode
          type:
            - azure-event-processor-host.LocationMode
          description: "Specifies the location mode used to decide which location the request should be sent to. \r                                                                         Please see StorageUtilities.LocationMode for the possible values."
          optional: true
        - id: options.timeoutIntervalInMs
          type:
            - azure-event-processor-host.int
          description: >-
            The server timeout interval, in milliseconds, to use for the
            request.
          optional: true
        - id: options.clientRequestTimeoutInMs
          type:
            - azure-event-processor-host.int
          description: >-
            The timeout of client requests, in milliseconds, to use for the
            request.
          optional: true
        - id: options.maximumExecutionTimeInMs
          type:
            - azure-event-processor-host.int
          description: "The maximum execution time, in milliseconds, across all potential retries, to use when making this request.\r                                                                         The maximum execution time interval begins at the time that the client begins building the request. The maximum\r                                                                         execution time is checked intermittently while performing requests, and before executing retries."
          optional: true
        - id: options.clientRequestId
          type:
            - string
          description: >-
            A string that represents the client request ID with a 1KB character
            limit.
          optional: true
        - id: options.useNagleAlgorithm
          type:
            - azure-event-processor-host.bool
          description: "Determines whether the Nagle algorithm is used; true to use the Nagle algorithm; otherwise, false.\r                                                                         The default value is false."
          optional: true
        - id: callback
          type:
            - azure-event-processor-host.errorOrResult
          description: "`error` will contain information if an error occurs; \r                                                                         otherwise `[result](xref:azure-event-processor-host.ServiceProperties)` will contain the properties.\r                                                                        `response` will contain information related to this operation."
      content: 'function getServiceProperties(options, callback)'
    langs:
      - js
  - uid: 'azure-event-processor-host.TableService#setServiceProperties'
    id: 'azure-event-processor-host.TableService#setServiceProperties'
    parent: azure-event-processor-host.TableService
    name: 'setServiceProperties(serviceProperties, options, callback)'
    summary: "Sets the properties of a storage account’s Table service, including Azure Storage Analytics.\rYou can also use this operation to set the default request version for all incoming requests that do not have a version specified."
    fullName: >-
      azure-event-processor-host.TableService.setServiceProperties(serviceProperties,
      options, callback)
    type: Function
    syntax:
      parameters:
        - id: serviceProperties
          type:
            - object
          description: The service properties.
        - id: options
          type:
            - object
          description: The request options.
          optional: true
        - id: options.locationMode
          type:
            - azure-event-processor-host.LocationMode
          description: "Specifies the location mode used to decide which location the request should be sent to. \r                                                                         Please see StorageUtilities.LocationMode for the possible values."
          optional: true
        - id: options.timeoutIntervalInMs
          type:
            - azure-event-processor-host.int
          description: >-
            The server timeout interval, in milliseconds, to use for the
            request.
          optional: true
        - id: options.clientRequestTimeoutInMs
          type:
            - azure-event-processor-host.int
          description: >-
            The timeout of client requests, in milliseconds, to use for the
            request.
          optional: true
        - id: options.maximumExecutionTimeInMs
          type:
            - azure-event-processor-host.int
          description: "The maximum execution time, in milliseconds, across all potential retries, to use when making this request.\r                                                                         The maximum execution time interval begins at the time that the client begins building the request. The maximum\r                                                                         execution time is checked intermittently while performing requests, and before executing retries."
          optional: true
        - id: options.clientRequestId
          type:
            - string
          description: >-
            A string that represents the client request ID with a 1KB character
            limit.
          optional: true
        - id: options.useNagleAlgorithm
          type:
            - azure-event-processor-host.bool
          description: "Determines whether the Nagle algorithm is used; true to use the Nagle algorithm; otherwise, false.\r                                                                         The default value is false."
          optional: true
        - id: callback
          type:
            - azure-event-processor-host.errorOrResponse
          description: "`error` will contain information if an error occurs; \r                                                                         `response` will contain information related to this operation."
      content: 'function setServiceProperties(serviceProperties, options, callback)'
    langs:
      - js
  - uid: 'azure-event-processor-host.TableService#listTablesSegmented'
    id: 'azure-event-processor-host.TableService#listTablesSegmented'
    parent: azure-event-processor-host.TableService
    name: 'listTablesSegmented(currentToken, options, callback)'
    summary: >-
      Lists a segment containing a collection of table items under the specified
      account.
    fullName: >-
      azure-event-processor-host.TableService.listTablesSegmented(currentToken,
      options, callback)
    type: Function
    syntax:
      parameters:
        - id: currentToken
          type:
            - object
          description: >-
            A continuation token returned by a previous listing operation.
            Please use 'null' or 'undefined' if this is the first operation.
        - id: options
          type:
            - object
          description: The create options or callback function.
          optional: true
        - id: options.maxResults
          type:
            - azure-event-processor-host.int
          description: >-
            Specifies the maximum number of tables to return per call to Azure
            ServiceClient.
          optional: true
        - id: options.locationMode
          type:
            - azure-event-processor-host.LocationMode
          description: "Specifies the location mode used to decide which location the request should be sent to. \r                                                                              Please see StorageUtilities.LocationMode for the possible values."
          optional: true
        - id: options.timeoutIntervalInMs
          type:
            - azure-event-processor-host.int
          description: >-
            The server timeout interval, in milliseconds, to use for the
            request.
          optional: true
        - id: options.clientRequestTimeoutInMs
          type:
            - azure-event-processor-host.int
          description: >-
            The timeout of client requests, in milliseconds, to use for the
            request.
          optional: true
        - id: options.payloadFormat
          type:
            - string
          description: The payload format to use for the request.
          optional: true
        - id: options.maximumExecutionTimeInMs
          type:
            - azure-event-processor-host.int
          description: "The maximum execution time, in milliseconds, across all potential retries, to use when making this request.\r                                                                              The maximum execution time interval begins at the time that the client begins building the request. The maximum\r                                                                              execution time is checked intermittently while performing requests, and before executing retries."
          optional: true
        - id: options.clientRequestId
          type:
            - string
          description: >-
            A string that represents the client request ID with a 1KB character
            limit.
          optional: true
        - id: options.useNagleAlgorithm
          type:
            - azure-event-processor-host.bool
          description: "Determines whether the Nagle algorithm is used; true to use the Nagle algorithm; otherwise, false.\r                                                                              The default value is false."
          optional: true
        - id: callback
          type:
            - azure-event-processor-host.errorOrResult
          description: "`error` will contain information if an error occurs; \r                                                                              otherwise `result` will contain `entries` and `continuationToken`. \r                                                                              `entries`  gives a list of tables and the `continuationToken` is used for the next listing operation.\r                                                                              `response` will contain information related to this operation."
      content: 'function listTablesSegmented(currentToken, options, callback)'
    langs:
      - js
  - uid: 'azure-event-processor-host.TableService#listTablesSegmentedWithPrefix'
    id: 'azure-event-processor-host.TableService#listTablesSegmentedWithPrefix'
    parent: azure-event-processor-host.TableService
    name: 'listTablesSegmentedWithPrefix(prefix, currentToken, options, callback)'
    summary: >-
      Lists a segment containing a collection of table items under the specified
      account.
    fullName: >-
      azure-event-processor-host.TableService.listTablesSegmentedWithPrefix(prefix,
      currentToken, options, callback)
    type: Function
    syntax:
      parameters:
        - id: prefix
          type:
            - string
          description: The prefix of the table name.
        - id: currentToken
          type:
            - object
          description: >-
            A continuation token returned by a previous listing operation.
            Please use 'null' or 'undefined' if this is the first operation.
        - id: options
          type:
            - object
          description: The create options or callback function.
          optional: true
        - id: options.maxResults
          type:
            - azure-event-processor-host.int
          description: >-
            Specifies the maximum number of tables to return per call to Azure
            ServiceClient.
          optional: true
        - id: options.locationMode
          type:
            - azure-event-processor-host.LocationMode
          description: "Specifies the location mode used to decide which location the request should be sent to. \r                                                                              Please see StorageUtilities.LocationMode for the possible values."
          optional: true
        - id: options.timeoutIntervalInMs
          type:
            - azure-event-processor-host.int
          description: >-
            The server timeout interval, in milliseconds, to use for the
            request.
          optional: true
        - id: options.clientRequestTimeoutInMs
          type:
            - azure-event-processor-host.int
          description: >-
            The timeout of client requests, in milliseconds, to use for the
            request.
          optional: true
        - id: options.payloadFormat
          type:
            - string
          description: The payload format to use for the request.
          optional: true
        - id: options.maximumExecutionTimeInMs
          type:
            - azure-event-processor-host.int
          description: "The maximum execution time, in milliseconds, across all potential retries, to use when making this request.\r                                                                              The maximum execution time interval begins at the time that the client begins building the request. The maximum\r                                                                              execution time is checked intermittently while performing requests, and before executing retries."
          optional: true
        - id: options.clientRequestId
          type:
            - string
          description: >-
            A string that represents the client request ID with a 1KB character
            limit.
          optional: true
        - id: options.useNagleAlgorithm
          type:
            - azure-event-processor-host.bool
          description: "Determines whether the Nagle algorithm is used; true to use the Nagle algorithm; otherwise, false.\r                                                                              The default value is false."
          optional: true
        - id: callback
          type:
            - azure-event-processor-host.errorOrResult
          description: "`error` will contain information if an error occurs; \r                                                                              otherwise `result` will contain `entries` and `continuationToken`. \r                                                                              `entries`  gives a list of tables and the `continuationToken` is used for the next listing operation.\r                                                                              `response` will contain information related to this operation."
      content: >-
        function listTablesSegmentedWithPrefix(prefix, currentToken, options,
        callback)
    langs:
      - js
  - uid: 'azure-event-processor-host.TableService#getTableAcl'
    id: 'azure-event-processor-host.TableService#getTableAcl'
    parent: azure-event-processor-host.TableService
    name: 'getTableAcl(table, options, callback)'
    summary: Gets the table's ACL.
    fullName: >-
      azure-event-processor-host.TableService.getTableAcl(table, options,
      callback)
    type: Function
    syntax:
      parameters:
        - id: table
          type:
            - string
          description: The table name.
        - id: options
          type:
            - object
          description: The request options.
          optional: true
        - id: options.locationMode
          type:
            - azure-event-processor-host.LocationMode
          description: "Specifies the location mode used to decide which location the request should be sent to. \r                                                                         Please see StorageUtilities.LocationMode for the possible values."
          optional: true
        - id: options.timeoutIntervalInMs
          type:
            - azure-event-processor-host.int
          description: >-
            The server timeout interval, in milliseconds, to use for the
            request.
          optional: true
        - id: options.clientRequestTimeoutInMs
          type:
            - azure-event-processor-host.int
          description: >-
            The timeout of client requests, in milliseconds, to use for the
            request.
          optional: true
        - id: options.maximumExecutionTimeInMs
          type:
            - azure-event-processor-host.int
          description: "The maximum execution time, in milliseconds, across all potential retries, to use when making this request.\r                                                                         The maximum execution time interval begins at the time that the client begins building the request. The maximum\r                                                                         execution time is checked intermittently while performing requests, and before executing retries."
          optional: true
        - id: options.clientRequestId
          type:
            - string
          description: >-
            A string that represents the client request ID with a 1KB character
            limit.
          optional: true
        - id: options.useNagleAlgorithm
          type:
            - azure-event-processor-host.bool
          description: "Determines whether the Nagle algorithm is used; true to use the Nagle algorithm; otherwise, false.\r                                                                         The default value is false."
          optional: true
        - id: callback
          type:
            - azure-event-processor-host.errorOrResult
          description: "`error` will contain information if an error occurs; \r                                                                         otherwise `result` will contain the ACL information for the table. See `[AccessPolicy](xref:azure-event-processor-host.AccessPolicy)` for detailed information.\r                                                                         `response` will contain information related to this operation."
      content: 'function getTableAcl(table, options, callback)'
    langs:
      - js
  - uid: 'azure-event-processor-host.TableService#setTableAcl'
    id: 'azure-event-processor-host.TableService#setTableAcl'
    parent: azure-event-processor-host.TableService
    name: 'setTableAcl(table, signedIdentifiers, options, callback)'
    summary: Updates the table's ACL.
    fullName: >-
      azure-event-processor-host.TableService.setTableAcl(table,
      signedIdentifiers, options, callback)
    type: Function
    syntax:
      parameters:
        - id: table
          type:
            - string
          description: The table name.
        - id: signedIdentifiers
          type:
            - 'azure-event-processor-host.Object.<string, AccessPolicy>'
          description: >-
            The table ACL settings. See
            `[AccessPolicy](xref:azure-event-processor-host.AccessPolicy)` for
            detailed information.
        - id: options
          type:
            - object
          description: The request options.
          optional: true
        - id: options.locationMode
          type:
            - azure-event-processor-host.LocationMode
          description: "Specifies the location mode used to decide which location the request should be sent to. \r                                                                                             Please see StorageUtilities.LocationMode for the possible values."
          optional: true
        - id: options.timeoutIntervalInMs
          type:
            - azure-event-processor-host.int
          description: >-
            The server timeout interval, in milliseconds, to use for the
            request.
          optional: true
        - id: options.clientRequestTimeoutInMs
          type:
            - azure-event-processor-host.int
          description: >-
            The timeout of client requests, in milliseconds, to use for the
            request.
          optional: true
        - id: options.maximumExecutionTimeInMs
          type:
            - azure-event-processor-host.int
          description: "The maximum execution time, in milliseconds, across all potential retries, to use when making this request.\r                                                                                             The maximum execution time interval begins at the time that the client begins building the request. The maximum\r                                                                                             execution time is checked intermittently while performing requests, and before executing retries."
          optional: true
        - id: options.clientRequestId
          type:
            - string
          description: >-
            A string that represents the client request ID with a 1KB character
            limit.
          optional: true
        - id: options.useNagleAlgorithm
          type:
            - azure-event-processor-host.bool
          description: "Determines whether the Nagle algorithm is used; true to use the Nagle algorithm; otherwise, false.\r                                                                                             The default value is false."
          optional: true
        - id: callback
          type:
            - azure-event-processor-host.errorOrResult
          description: "`error` will contain information if an error occurs; \r                                                                                             otherwise `result` will contain information for the table.\r                                                                                             `response` will contain information related to this operation."
      content: 'function setTableAcl(table, signedIdentifiers, options, callback)'
    langs:
      - js
  - uid: 'azure-event-processor-host.TableService#generateSharedAccessSignature'
    id: 'azure-event-processor-host.TableService#generateSharedAccessSignature'
    parent: azure-event-processor-host.TableService
    name: 'generateSharedAccessSignature(table, sharedAccessPolicy)'
    summary: Retrieves a shared access signature token.
    fullName: >-
      azure-event-processor-host.TableService.generateSharedAccessSignature(table,
      sharedAccessPolicy)
    type: Function
    syntax:
      parameters:
        - id: table
          type:
            - string
          description: The table name.
        - id: sharedAccessPolicy
          type:
            - object
          description: The shared access policy.
        - id: sharedAccessPolicy.Id
          type:
            - string
          description: The signed identifier.
          optional: true
        - id: sharedAccessPolicy.AccessPolicy.Permissions
          type:
            - object
          description: The permission type.
          optional: true
        - id: sharedAccessPolicy.AccessPolicy.Start
          type:
            - date
            - string
          description: >-
            The time at which the Shared Access Signature becomes valid (The UTC
            value will be used).
          optional: true
        - id: sharedAccessPolicy.AccessPolicy.Expiry
          type:
            - date
            - string
          description: >-
            The time at which the Shared Access Signature becomes expired (The
            UTC value will be used).
          optional: true
        - id: sharedAccessPolicy.AccessPolicy.IPAddressOrRange
          type:
            - string
          description: >-
            An IP address or a range of IP addresses from which to accept
            requests. When specifying a range, note that the range is inclusive.
          optional: true
        - id: sharedAccessPolicy.AccessPolicy.Protocols
          type:
            - string
          description: "The protocols permitted for a request made with the account SAS. \r                                                                                      Possible values are both HTTPS and HTTP (https,http) or HTTPS only (https). The default value is https,http."
          optional: true
        - id: sharedAccessPolicy.AccessPolicy.StartPk
          type:
            - string
          description: The starting Partition Key for which the SAS will be valid.
          optional: true
        - id: sharedAccessPolicy.AccessPolicy.EndPk
          type:
            - string
          description: The ending Partition Key for which the SAS will be valid.
          optional: true
        - id: sharedAccessPolicy.AccessPolicy.StartRk
          type:
            - string
          description: The starting Row Key for which the SAS will be valid.
          optional: true
        - id: sharedAccessPolicy.AccessPolicy.EndRk
          type:
            - string
          description: The ending Row Key for which the SAS will be valid.
          optional: true
      return:
        type:
          - object
        description: An object with the shared access signature.
      content: 'function generateSharedAccessSignature(table, sharedAccessPolicy)'
    langs:
      - js
  - uid: 'azure-event-processor-host.TableService#doesTableExist'
    id: 'azure-event-processor-host.TableService#doesTableExist'
    parent: azure-event-processor-host.TableService
    name: 'doesTableExist(table, options, callback)'
    summary: Checks whether or not a table exists on the service.
    fullName: >-
      azure-event-processor-host.TableService.doesTableExist(table, options,
      callback)
    type: Function
    syntax:
      parameters:
        - id: table
          type:
            - string
          description: The table name.
        - id: options
          type:
            - object
          description: The request options.
          optional: true
        - id: options.locationMode
          type:
            - azure-event-processor-host.LocationMode
          description: "Specifies the location mode used to decide which location the request should be sent to. \r                                                                    Please see StorageUtilities.LocationMode for the possible values."
          optional: true
        - id: options.timeoutIntervalInMs
          type:
            - azure-event-processor-host.int
          description: >-
            The server timeout interval, in milliseconds, to use for the
            request.
          optional: true
        - id: options.clientRequestTimeoutInMs
          type:
            - azure-event-processor-host.int
          description: >-
            The timeout of client requests, in milliseconds, to use for the
            request.
          optional: true
        - id: options.maximumExecutionTimeInMs
          type:
            - azure-event-processor-host.int
          description: "The maximum execution time, in milliseconds, across all potential retries, to use when making this request.\r                                                                    The maximum execution time interval begins at the time that the client begins building the request. The maximum\r                                                                    execution time is checked intermittently while performing requests, and before executing retries."
          optional: true
        - id: options.clientRequestId
          type:
            - string
          description: >-
            A string that represents the client request ID with a 1KB character
            limit.
          optional: true
        - id: options.useNagleAlgorithm
          type:
            - azure-event-processor-host.bool
          description: "Determines whether the Nagle algorithm is used; true to use the Nagle algorithm; otherwise, false.\r                                                                    The default value is false."
          optional: true
        - id: callback
          type:
            - azure-event-processor-host.errorOrResult
          description: "`error` will contain information if an error occurs; \r                                                                    otherwise `result` will contain the table information including `exists` boolean member. \r                                                                    `response` will contain information related to this operation."
      content: 'function doesTableExist(table, options, callback)'
    langs:
      - js
  - uid: 'azure-event-processor-host.TableService#createTable'
    id: 'azure-event-processor-host.TableService#createTable'
    parent: azure-event-processor-host.TableService
    name: 'createTable(table, options, callback)'
    summary: Creates a new table within a storage account.
    fullName: >-
      azure-event-processor-host.TableService.createTable(table, options,
      callback)
    type: Function
    syntax:
      parameters:
        - id: table
          type:
            - string
          description: The table name.
        - id: options
          type:
            - object
          description: The request options.
          optional: true
        - id: options.locationMode
          type:
            - azure-event-processor-host.LocationMode
          description: "Specifies the location mode used to decide which location the request should be sent to. \r                                                                    Please see StorageUtilities.LocationMode for the possible values."
          optional: true
        - id: options.timeoutIntervalInMs
          type:
            - azure-event-processor-host.int
          description: >-
            The server timeout interval, in milliseconds, to use for the
            request.
          optional: true
        - id: options.clientRequestTimeoutInMs
          type:
            - azure-event-processor-host.int
          description: >-
            The timeout of client requests, in milliseconds, to use for the
            request.
          optional: true
        - id: options.maximumExecutionTimeInMs
          type:
            - azure-event-processor-host.int
          description: "The maximum execution time, in milliseconds, across all potential retries, to use when making this request.\r                                                                    The maximum execution time interval begins at the time that the client begins building the request. The maximum\r                                                                    execution time is checked intermittently while performing requests, and before executing retries."
          optional: true
        - id: options.clientRequestId
          type:
            - string
          description: >-
            A string that represents the client request ID with a 1KB character
            limit.
          optional: true
        - id: options.useNagleAlgorithm
          type:
            - azure-event-processor-host.bool
          description: "Determines whether the Nagle algorithm is used; true to use the Nagle algorithm; otherwise, false.\r                                                                    The default value is false."
          optional: true
        - id: callback
          type:
            - azure-event-processor-host.errorOrResult
          description: "`error` will contain information if an error occurs; \r                                                                    otherwise `result` will contain the new table information.\r                                                                    `response` will contain information related to this operation."
      content: 'function createTable(table, options, callback)'
    langs:
      - js
  - uid: 'azure-event-processor-host.TableService#createTableIfNotExists'
    id: 'azure-event-processor-host.TableService#createTableIfNotExists'
    parent: azure-event-processor-host.TableService
    name: 'createTableIfNotExists(table, options, callback)'
    summary: Creates a new table within a storage account if it does not exists.
    fullName: >-
      azure-event-processor-host.TableService.createTableIfNotExists(table,
      options, callback)
    type: Function
    syntax:
      parameters:
        - id: table
          type:
            - string
          description: The table name.
        - id: options
          type:
            - object
          description: The request options.
          optional: true
        - id: options.locationMode
          type:
            - azure-event-processor-host.LocationMode
          description: "Specifies the location mode used to decide which location the request should be sent to. \r                                                                    Please see StorageUtilities.LocationMode for the possible values."
          optional: true
        - id: options.timeoutIntervalInMs
          type:
            - azure-event-processor-host.int
          description: >-
            The server timeout interval, in milliseconds, to use for the
            request.
          optional: true
        - id: options.clientRequestTimeoutInMs
          type:
            - azure-event-processor-host.int
          description: >-
            The timeout of client requests, in milliseconds, to use for the
            request.
          optional: true
        - id: options.maximumExecutionTimeInMs
          type:
            - azure-event-processor-host.int
          description: "The maximum execution time, in milliseconds, across all potential retries, to use when making this request.\r                                                                    The maximum execution time interval begins at the time that the client begins building the request. The maximum\r                                                                    execution time is checked intermittently while performing requests, and before executing retries."
          optional: true
        - id: options.clientRequestId
          type:
            - string
          description: >-
            A string that represents the client request ID with a 1KB character
            limit.
          optional: true
        - id: options.useNagleAlgorithm
          type:
            - azure-event-processor-host.bool
          description: "Determines whether the Nagle algorithm is used; true to use the Nagle algorithm; otherwise, false.\r                                                                    The default value is false."
          optional: true
        - id: callback
          type:
            - azure-event-processor-host.errorOrResult
          description: "`error` will contain information if an error occurs; \r                                                                    `result` will contain the table information including `created` boolean member\r                                                                    `response` will contain information related to this operation."
      content: 'function createTableIfNotExists(table, options, callback)'
    langs:
      - js
  - uid: 'azure-event-processor-host.TableService#deleteTable'
    id: 'azure-event-processor-host.TableService#deleteTable'
    parent: azure-event-processor-host.TableService
    name: 'deleteTable(table, options, callback)'
    summary: Deletes a table from a storage account.
    fullName: >-
      azure-event-processor-host.TableService.deleteTable(table, options,
      callback)
    type: Function
    syntax:
      parameters:
        - id: table
          type:
            - string
          description: The table name.
        - id: options
          type:
            - object
          description: The request options.
          optional: true
        - id: options.locationMode
          type:
            - azure-event-processor-host.LocationMode
          description: "Specifies the location mode used to decide which location the request should be sent to. \r                                                                    Please see StorageUtilities.LocationMode for the possible values."
          optional: true
        - id: options.timeoutIntervalInMs
          type:
            - azure-event-processor-host.int
          description: >-
            The server timeout interval, in milliseconds, to use for the
            request.
          optional: true
        - id: options.clientRequestTimeoutInMs
          type:
            - azure-event-processor-host.int
          description: >-
            The timeout of client requests, in milliseconds, to use for the
            request.
          optional: true
        - id: options.maximumExecutionTimeInMs
          type:
            - azure-event-processor-host.int
          description: "The maximum execution time, in milliseconds, across all potential retries, to use when making this request.\r                                                                    The maximum execution time interval begins at the time that the client begins building the request. The maximum\r                                                                    execution time is checked intermittently while performing requests, and before executing retries."
          optional: true
        - id: options.clientRequestId
          type:
            - string
          description: >-
            A string that represents the client request ID with a 1KB character
            limit.
          optional: true
        - id: options.useNagleAlgorithm
          type:
            - azure-event-processor-host.bool
          description: "Determines whether the Nagle algorithm is used; true to use the Nagle algorithm; otherwise, false.\r                                                                    The default value is false."
          optional: true
        - id: callback
          type:
            - azure-event-processor-host.errorOrResponse
          description: "`error` will contain information if an error occurs;\r                                                                    `response` will contain information related to this operation."
      content: 'function deleteTable(table, options, callback)'
    langs:
      - js
  - uid: 'azure-event-processor-host.TableService#deleteTableIfExists'
    id: 'azure-event-processor-host.TableService#deleteTableIfExists'
    parent: azure-event-processor-host.TableService
    name: 'deleteTableIfExists(table, options, callback)'
    summary: 'Deletes a table from a storage account, if it exists.'
    fullName: >-
      azure-event-processor-host.TableService.deleteTableIfExists(table,
      options, callback)
    type: Function
    syntax:
      parameters:
        - id: table
          type:
            - string
          description: The table name.
        - id: options
          type:
            - object
          description: The request options.
          optional: true
        - id: options.locationMode
          type:
            - azure-event-processor-host.LocationMode
          description: "Specifies the location mode used to decide which location the request should be sent to. \r                                                                    Please see StorageUtilities.LocationMode for the possible values."
          optional: true
        - id: options.timeoutIntervalInMs
          type:
            - azure-event-processor-host.int
          description: >-
            The server timeout interval, in milliseconds, to use for the
            request.
          optional: true
        - id: options.clientRequestTimeoutInMs
          type:
            - azure-event-processor-host.int
          description: >-
            The timeout of client requests, in milliseconds, to use for the
            request.
          optional: true
        - id: options.maximumExecutionTimeInMs
          type:
            - azure-event-processor-host.int
          description: "The maximum execution time, in milliseconds, across all potential retries, to use when making this request.\r                                                                    The maximum execution time interval begins at the time that the client begins building the request. The maximum\r                                                                    execution time is checked intermittently while performing requests, and before executing retries."
          optional: true
        - id: options.clientRequestId
          type:
            - string
          description: >-
            A string that represents the client request ID with a 1KB character
            limit.
          optional: true
        - id: options.useNagleAlgorithm
          type:
            - azure-event-processor-host.bool
          description: "Determines whether the Nagle algorithm is used; true to use the Nagle algorithm; otherwise, false.\r                                                                    The default value is false."
          optional: true
        - id: callback
          type:
            - azure-event-processor-host.errorOrResult
          description: "`error` will contain information if an error occurs; \r                                                                    `result` will be `true` if table was deleted, false otherwise\r                                                                    `response` will contain information related to this operation."
      content: 'function deleteTableIfExists(table, options, callback)'
    langs:
      - js
  - uid: 'azure-event-processor-host.TableService#queryEntities'
    id: 'azure-event-processor-host.TableService#queryEntities'
    parent: azure-event-processor-host.TableService
    name: 'queryEntities(table, tableQuery, currentToken, options, callback)'
    summary: >-
      Queries data in a table. To retrieve a single entity by partition key and
      row key, use retrieve entity.
    fullName: >-
      azure-event-processor-host.TableService.queryEntities(table, tableQuery,
      currentToken, options, callback)
    type: Function
    syntax:
      parameters:
        - id: table
          type:
            - string
          description: The table name.
        - id: tableQuery
          type:
            - azure-event-processor-host.TableQuery
          description: >-
            The query to perform. Use null, undefined, or new TableQuery() to
            get all of the entities in the table.
        - id: currentToken
          type:
            - object
          description: "A continuation token returned by a previous listing operation. \r                                                                                 Please use 'null' or 'undefined' if this is the first operation."
        - id: options
          type:
            - object
          description: The request options.
          optional: true
        - id: options.locationMode
          type:
            - azure-event-processor-host.LocationMode
          description: "Specifies the location mode used to decide which location the request should be sent to. \r                                                                                 Please see StorageUtilities.LocationMode for the possible values."
          optional: true
        - id: options.timeoutIntervalInMs
          type:
            - azure-event-processor-host.int
          description: >-
            The server timeout interval, in milliseconds, to use for the
            request.
          optional: true
        - id: options.clientRequestTimeoutInMs
          type:
            - azure-event-processor-host.int
          description: >-
            The timeout of client requests, in milliseconds, to use for the
            request.
          optional: true
        - id: options.payloadFormat
          type:
            - string
          description: The payload format to use for the request.
          optional: true
        - id: options.autoResolveProperties
          type:
            - azure-event-processor-host.bool
          description: 'If true, guess at all property types.'
          optional: true
        - id: options.maximumExecutionTimeInMs
          type:
            - azure-event-processor-host.int
          description: "The maximum execution time, in milliseconds, across all potential retries, to use when making this request.\r                                                                                 The maximum execution time interval begins at the time that the client begins building the request. The maximum\r                                                                                 execution time is checked intermittently while performing requests, and before executing retries."
          optional: true
        - id: options.clientRequestId
          type:
            - string
          description: >-
            A string that represents the client request ID with a 1KB character
            limit.
          optional: true
        - id: options.useNagleAlgorithm
          type:
            - azure-event-processor-host.bool
          description: "Determines whether the Nagle algorithm is used; true to use the Nagle algorithm; otherwise, false.\r                                                                                 The default value is false."
          optional: true
        - id: options.entityResolver
          type:
            - function
          description: "The entity resolver. Given a single entity returned by the query, returns a modified object which is added to \r                                                                                 the entities array."
          optional: true
        - id: options.propertyResolver
          type:
            - azure-event-processor-host.TableService~propertyResolver
          description: "The property resolver. Given the partition key, row key, property name, property value,\r                                                                                 and the property Edm type if given by the service, returns the Edm type of the property."
          optional: true
        - id: callback
          type:
            - azure-event-processor-host.TableService~queryResponse
          description: "`error` will contain information if an error occurs; \r                                                                                 otherwise `entities` will contain the entities returned by the query. \r                                                                                 If more matching entities exist, and could not be returned,\r                                                                                 `queryResultContinuation` will contain a continuation token that can be used\r                                                                                 to retrieve the next set of results.\r                                                                                 `response` will contain information related to this operation.\r\rThe logic for returning entity types can get complicated.  Here is the algorithm used:\r```\rvar propertyType;\r\rif (propertyResovler) {                      // If the caller provides a propertyResolver in the options, use it\r  propertyType = propertyResolver(partitionKey, rowKey, propertyName, propertyValue, propertyTypeFromService);\r} else if (propertyTypeFromService) {        // If the service provides us a property type, use it.  See below for an explanation of when this will and won't occur.\r  propertyType = propertyTypeFromService;\r} else if (autoResolveProperties) {          // If options.autoResolveProperties is set to true\r  if (javascript type is string) {           // See below for an explanation of how and why autoResolveProperties works as it does.\r    propertyType = 'Edm.String';\r  } else if (javascript type is boolean) {\r    propertyType = 'Edm.Boolean';\r  }\r}\r\rif (propertyType) {\r  // Set the property type on the property.\r} else {\r  // Property gets no EdmType. \r}\r```\rNotes:\r\r* The service only provides a type if JsonFullMetadata or JsonMinimalMetadata is used, and if the type is Int64, Guid, Binary, or DateTime.\r* Explanation of autoResolveProperties:\r    * String gets correctly resolved to 'Edm.String'.\r    * Int64, Guid, Binary, and DateTime all get resolved to 'Edm.String.'  This only happens if JsonNoMetadata is used (otherwise the service will provide the propertyType in a prior step).\r    * Boolean gets correctly resolved to 'Edm.Boolean'.\r    * For both Int32 and Double, no type information is returned, even in the case of autoResolveProperties = true.  This is due to an\r         inability to distinguish between the two in certain cases."
      content: >-
        function queryEntities(table, tableQuery, currentToken, options,
        callback)
    langs:
      - js
  - uid: 'azure-event-processor-host.TableService#retrieveEntity'
    id: 'azure-event-processor-host.TableService#retrieveEntity'
    parent: azure-event-processor-host.TableService
    name: 'retrieveEntity(table, partitionKey, rowKey, options, callback)'
    summary: Retrieves an entity from a table.
    fullName: >-
      azure-event-processor-host.TableService.retrieveEntity(table,
      partitionKey, rowKey, options, callback)
    type: Function
    syntax:
      parameters:
        - id: table
          type:
            - string
          description: The table name.
        - id: partitionKey
          type:
            - string
          description: The partition key.
        - id: rowKey
          type:
            - string
          description: The row key.
        - id: options
          type:
            - object
          description: The request options.
          optional: true
        - id: options.locationMode
          type:
            - azure-event-processor-host.LocationMode
          description: "Specifies the location mode used to decide which location the request should be sent to. \r                                                                            Please see StorageUtilities.LocationMode for the possible values."
          optional: true
        - id: options.timeoutIntervalInMs
          type:
            - azure-event-processor-host.int
          description: >-
            The server timeout interval, in milliseconds, to use for the
            request.
          optional: true
        - id: options.clientRequestTimeoutInMs
          type:
            - azure-event-processor-host.int
          description: >-
            The timeout of client requests, in milliseconds, to use for the
            request.
          optional: true
        - id: options.payloadFormat
          type:
            - string
          description: The payload format to use for the request.
          optional: true
        - id: options.autoResolveProperties
          type:
            - azure-event-processor-host.bool
          description: 'If true, guess at all property types.'
          optional: true
        - id: options.maximumExecutionTimeInMs
          type:
            - azure-event-processor-host.int
          description: "The maximum execution time, in milliseconds, across all potential retries, to use when making this request.\r                                                                            The maximum execution time interval begins at the time that the client begins building the request. The maximum\r                                                                            execution time is checked intermittently while performing requests, and before executing retries."
          optional: true
        - id: options.clientRequestId
          type:
            - string
          description: >-
            A string that represents the client request ID with a 1KB character
            limit.
          optional: true
        - id: options.useNagleAlgorithm
          type:
            - azure-event-processor-host.bool
          description: "Determines whether the Nagle algorithm is used; true to use the Nagle algorithm; otherwise, false.\r                                                                            The default value is false."
          optional: true
        - id: options.propertyResolver
          type:
            - azure-event-processor-host.TableService~propertyResolver
          description: "The property resolver. Given the partition key, row key, property name, property value,\r                                                                            and the property Edm type if given by the service, returns the Edm type of the property."
          optional: true
        - id: options.entityResolver
          type:
            - function
          description: >-
            The entity resolver. Given the single entity returned by the query,
            returns a modified object.
          optional: true
        - id: callback
          type:
            - azure-event-processor-host.errorOrResult
          description: "`error` will contain information if an error occurs; \r                                                                            otherwise `result` will be the matching entity.\r                                                                            `response` will contain information related to this operation.\r\rThe logic for returning entity types can get complicated.  Here is the algorithm used:\r```\rvar propertyType;\r\rif (propertyResovler) {                      // If the caller provides a propertyResolver in the options, use it\r  propertyType = propertyResolver(partitionKey, rowKey, propertyName, propertyValue, propertyTypeFromService);\r} else if (propertyTypeFromService) {        // If the service provides us a property type, use it.  See below for an explanation of when this will and won't occur.\r  propertyType = propertyTypeFromService;\r} else if (autoResolveProperties) {          // If options.autoResolveProperties is set to true\r  if (javascript type is string) {           // See below for an explanation of how and why autoResolveProperties works as it does.\r    propertyType = 'Edm.String';\r  } else if (javascript type is boolean) {\r    propertyType = 'Edm.Boolean';\r  }\r}\r\rif (propertyType) {\r  // Set the property type on the property.\r} else {\r  // Property gets no EdmType. \r}\r```\rNotes:\r\r* The service only provides a type if JsonFullMetadata or JsonMinimalMetadata is used, and if the type is Int64, Guid, Binary, or DateTime.\r* Explanation of autoResolveProperties:\r    * String gets correctly resolved to 'Edm.String'.\r    * Int64, Guid, Binary, and DateTime all get resolved to 'Edm.String.'  This only happens if JsonNoMetadata is used (otherwise the service will provide the propertyType in a prior step).\r    * Boolean gets correctly resolved to 'Edm.Boolean'.\r    * For both Int32 and Double, no type information is returned, even in the case of autoResolveProperties = true.  This is due to an\r         inability to distinguish between the two in certain cases."
      content: 'function retrieveEntity(table, partitionKey, rowKey, options, callback)'
    langs:
      - js
  - uid: 'azure-event-processor-host.TableService#insertEntity'
    id: 'azure-event-processor-host.TableService#insertEntity'
    parent: azure-event-processor-host.TableService
    name: 'insertEntity(table, entityDescriptor, options, callback)'
    summary: Inserts a new entity into a table.
    fullName: >-
      azure-event-processor-host.TableService.insertEntity(table,
      entityDescriptor, options, callback)
    type: Function
    syntax:
      parameters:
        - id: table
          type:
            - string
          description: The table name.
        - id: entityDescriptor
          type:
            - object
          description: The entity descriptor.
        - id: options
          type:
            - object
          description: The request options.
          optional: true
        - id: options.echoContent
          type:
            - string
          description: >-
            Whether or not to return the entity upon a successful insert.
            Default to false.
          optional: true
        - id: options.payloadFormat
          type:
            - string
          description: >-
            The payload format to use in the response, if options.echoContent is
            true.
          optional: true
        - id: options.locationMode
          type:
            - azure-event-processor-host.LocationMode
          description: "Specifies the location mode used to decide which location the request should be sent to. \r                                                                            Please see StorageUtilities.LocationMode for the possible values."
          optional: true
        - id: options.timeoutIntervalInMs
          type:
            - azure-event-processor-host.int
          description: >-
            The server timeout interval, in milliseconds, to use for the
            request.
          optional: true
        - id: options.clientRequestTimeoutInMs
          type:
            - azure-event-processor-host.int
          description: >-
            The timeout of client requests, in milliseconds, to use for the
            request.
          optional: true
        - id: options.maximumExecutionTimeInMs
          type:
            - azure-event-processor-host.int
          description: "The maximum execution time, in milliseconds, across all potential retries, to use when making this request.\r                                                                            The maximum execution time interval begins at the time that the client begins building the request. The maximum\r                                                                            execution time is checked intermittently while performing requests, and before executing retries."
          optional: true
        - id: options.clientRequestId
          type:
            - string
          description: >-
            A string that represents the client request ID with a 1KB character
            limit.
          optional: true
        - id: options.useNagleAlgorithm
          type:
            - azure-event-processor-host.bool
          description: "Determines whether the Nagle algorithm is used; true to use the Nagle algorithm; otherwise, false.\r                                                                            The default value is false."
          optional: true
        - id: options.propertyResolver
          type:
            - azure-event-processor-host.TableService~propertyResolver
          description: "The property resolver. Only applied if echoContent is true. Given the partition key, row key, property name, \r                                                                            property value, and the property Edm type if given by the service, returns the Edm type of the property."
          optional: true
        - id: options.entityResolver
          type:
            - function
          description: "The entity resolver. Only applied if echoContent is true. Given the single entity returned by the insert, returns \r                                                                            a modified object."
          optional: true
        - id: callback
          type:
            - azure-event-processor-host.errorOrResult
          description: "`error` will contain information if an error occurs; \r                                                                            otherwise `result` will contain the entity information.\r                                                                            `response` will contain information related to this operation."
      content: 'function insertEntity(table, entityDescriptor, options, callback)'
    langs:
      - js
  - uid: 'azure-event-processor-host.TableService#insertOrReplaceEntity'
    id: 'azure-event-processor-host.TableService#insertOrReplaceEntity'
    parent: azure-event-processor-host.TableService
    name: 'insertOrReplaceEntity(table, entityDescriptor, options, callback)'
    summary: Inserts or updates a new entity into a table.
    fullName: >-
      azure-event-processor-host.TableService.insertOrReplaceEntity(table,
      entityDescriptor, options, callback)
    type: Function
    syntax:
      parameters:
        - id: table
          type:
            - string
          description: The table name.
        - id: entityDescriptor
          type:
            - object
          description: The entity descriptor.
        - id: options
          type:
            - object
          description: The request options.
          optional: true
        - id: options.locationMode
          type:
            - azure-event-processor-host.LocationMode
          description: "Specifies the location mode used to decide which location the request should be sent to. \r                                                                    Please see StorageUtilities.LocationMode for the possible values."
          optional: true
        - id: options.timeoutIntervalInMs
          type:
            - azure-event-processor-host.int
          description: >-
            The server timeout interval, in milliseconds, to use for the
            request.
          optional: true
        - id: options.clientRequestTimeoutInMs
          type:
            - azure-event-processor-host.int
          description: >-
            The timeout of client requests, in milliseconds, to use for the
            request.
          optional: true
        - id: options.maximumExecutionTimeInMs
          type:
            - azure-event-processor-host.int
          description: "The maximum execution time, in milliseconds, across all potential retries, to use when making this request.\r                                                                    The maximum execution time interval begins at the time that the client begins building the request. The maximum\r                                                                    execution time is checked intermittently while performing requests, and before executing retries."
          optional: true
        - id: options.clientRequestId
          type:
            - string
          description: >-
            A string that represents the client request ID with a 1KB character
            limit.
          optional: true
        - id: options.useNagleAlgorithm
          type:
            - azure-event-processor-host.bool
          description: "Determines whether the Nagle algorithm is used; true to use the Nagle algorithm; otherwise, false.\r                                                                    The default value is false."
          optional: true
        - id: callback
          type:
            - azure-event-processor-host.errorOrResult
          description: "`error` will contain information if an error occurs; \r                                                                    otherwise `result` will contain the entity information.\r                                                                    `response` will contain information related to this operation."
      content: >-
        function insertOrReplaceEntity(table, entityDescriptor, options,
        callback)
    langs:
      - js
  - uid: 'azure-event-processor-host.TableService#replaceEntity'
    id: 'azure-event-processor-host.TableService#replaceEntity'
    parent: azure-event-processor-host.TableService
    name: 'replaceEntity(table, entityDescriptor, options, callback)'
    summary: >-
      Replaces an existing entity within a table. To replace conditionally based
      on etag, set entity['.metadata']['etag'].
    fullName: >-
      azure-event-processor-host.TableService.replaceEntity(table,
      entityDescriptor, options, callback)
    type: Function
    syntax:
      parameters:
        - id: table
          type:
            - string
          description: The table name.
        - id: entityDescriptor
          type:
            - object
          description: The entity descriptor.
        - id: options
          type:
            - object
          description: The request options.
          optional: true
        - id: options.locationMode
          type:
            - azure-event-processor-host.LocationMode
          description: "Specifies the location mode used to decide which location the request should be sent to. \r                                                                    Please see StorageUtilities.LocationMode for the possible values."
          optional: true
        - id: options.timeoutIntervalInMs
          type:
            - azure-event-processor-host.int
          description: >-
            The server timeout interval, in milliseconds, to use for the
            request.
          optional: true
        - id: options.clientRequestTimeoutInMs
          type:
            - azure-event-processor-host.int
          description: >-
            The timeout of client requests, in milliseconds, to use for the
            request.
          optional: true
        - id: options.maximumExecutionTimeInMs
          type:
            - azure-event-processor-host.int
          description: "The maximum execution time, in milliseconds, across all potential retries, to use when making this request.\r                                                                    The maximum execution time interval begins at the time that the client begins building the request. The maximum\r                                                                    execution time is checked intermittently while performing requests, and before executing retries."
          optional: true
        - id: options.clientRequestId
          type:
            - string
          description: >-
            A string that represents the client request ID with a 1KB character
            limit.
          optional: true
        - id: options.useNagleAlgorithm
          type:
            - azure-event-processor-host.bool
          description: "Determines whether the Nagle algorithm is used; true to use the Nagle algorithm; otherwise, false.\r                                                                    The default value is false."
          optional: true
        - id: callback
          type:
            - azure-event-processor-host.errorOrResult
          description: "`error` will contain information if an error occurs; \r                                                                    otherwise `result` will contain the entity information.\r                                                                    `response` will contain information related to this operation."
      content: 'function replaceEntity(table, entityDescriptor, options, callback)'
    langs:
      - js
  - uid: 'azure-event-processor-host.TableService#mergeEntity'
    id: 'azure-event-processor-host.TableService#mergeEntity'
    parent: azure-event-processor-host.TableService
    name: 'mergeEntity(table, entityDescriptor, options, callback)'
    summary: >-
      Updates an existing entity within a table by merging new property values
      into the entity. To merge conditionally based on etag, set
      entity['.metadata']['etag'].
    fullName: >-
      azure-event-processor-host.TableService.mergeEntity(table,
      entityDescriptor, options, callback)
    type: Function
    syntax:
      parameters:
        - id: table
          type:
            - string
          description: The table name.
        - id: entityDescriptor
          type:
            - object
          description: The entity descriptor.
        - id: options
          type:
            - object
          description: The request options.
          optional: true
        - id: options.locationMode
          type:
            - azure-event-processor-host.LocationMode
          description: "Specifies the location mode used to decide which location the request should be sent to. \r                                                                    Please see StorageUtilities.LocationMode for the possible values."
          optional: true
        - id: options.timeoutIntervalInMs
          type:
            - azure-event-processor-host.int
          description: >-
            The server timeout interval, in milliseconds, to use for the
            request.
          optional: true
        - id: options.clientRequestTimeoutInMs
          type:
            - azure-event-processor-host.int
          description: >-
            The timeout of client requests, in milliseconds, to use for the
            request.
          optional: true
        - id: options.maximumExecutionTimeInMs
          type:
            - azure-event-processor-host.int
          description: "The maximum execution time, in milliseconds, across all potential retries, to use when making this request.\r                                                                    The maximum execution time interval begins at the time that the client begins building the request. The maximum\r                                                                    execution time is checked intermittently while performing requests, and before executing retries."
          optional: true
        - id: options.clientRequestId
          type:
            - string
          description: >-
            A string that represents the client request ID with a 1KB character
            limit.
          optional: true
        - id: options.useNagleAlgorithm
          type:
            - azure-event-processor-host.bool
          description: "Determines whether the Nagle algorithm is used; true to use the Nagle algorithm; otherwise, false.\r                                                                    The default value is false."
          optional: true
        - id: callback
          type:
            - azure-event-processor-host.errorOrResult
          description: "`error` will contain information if an error occurs; \r                                                                    otherwise `result` will contain the entity information.\r                                                                    response` will contain information related to this operation."
      content: 'function mergeEntity(table, entityDescriptor, options, callback)'
    langs:
      - js
  - uid: 'azure-event-processor-host.TableService#insertOrMergeEntity'
    id: 'azure-event-processor-host.TableService#insertOrMergeEntity'
    parent: azure-event-processor-host.TableService
    name: 'insertOrMergeEntity(table, entityDescriptor, options, callback)'
    summary: >-
      Inserts or updates an existing entity within a table by merging new
      property values into the entity.
    fullName: >-
      azure-event-processor-host.TableService.insertOrMergeEntity(table,
      entityDescriptor, options, callback)
    type: Function
    syntax:
      parameters:
        - id: table
          type:
            - string
          description: The table name.
        - id: entityDescriptor
          type:
            - object
          description: The entity descriptor.
        - id: options
          type:
            - object
          description: The request options.
          optional: true
        - id: options.locationMode
          type:
            - azure-event-processor-host.LocationMode
          description: "Specifies the location mode used to decide which location the request should be sent to. \r                                                                    Please see StorageUtilities.LocationMode for the possible values."
          optional: true
        - id: options.timeoutIntervalInMs
          type:
            - azure-event-processor-host.int
          description: >-
            The server timeout interval, in milliseconds, to use for the
            request.
          optional: true
        - id: options.clientRequestTimeoutInMs
          type:
            - azure-event-processor-host.int
          description: >-
            The timeout of client requests, in milliseconds, to use for the
            request.
          optional: true
        - id: options.maximumExecutionTimeInMs
          type:
            - azure-event-processor-host.int
          description: "The maximum execution time, in milliseconds, across all potential retries, to use when making this request.\r                                                                    The maximum execution time interval begins at the time that the client begins building the request. The maximum\r                                                                    execution time is checked intermittently while performing requests, and before executing retries."
          optional: true
        - id: options.clientRequestId
          type:
            - string
          description: >-
            A string that represents the client request ID with a 1KB character
            limit.
          optional: true
        - id: options.useNagleAlgorithm
          type:
            - azure-event-processor-host.bool
          description: "Determines whether the Nagle algorithm is used; true to use the Nagle algorithm; otherwise, false.\r                                                                    The default value is false."
          optional: true
        - id: callback
          type:
            - azure-event-processor-host.errorOrResult
          description: "`error` will contain information if an error occurs; \r                                                                    otherwise `result` will contain the entity information.\r                                                                    `response` will contain information related to this operation."
      content: 'function insertOrMergeEntity(table, entityDescriptor, options, callback)'
    langs:
      - js
  - uid: 'azure-event-processor-host.TableService#deleteEntity'
    id: 'azure-event-processor-host.TableService#deleteEntity'
    parent: azure-event-processor-host.TableService
    name: 'deleteEntity(table, entityDescriptor, options, callback)'
    summary: >-
      Deletes an entity within a table. To delete conditionally based on etag,
      set entity['.metadata']['etag'].
    fullName: >-
      azure-event-processor-host.TableService.deleteEntity(table,
      entityDescriptor, options, callback)
    type: Function
    syntax:
      parameters:
        - id: table
          type:
            - string
          description: The table name.
        - id: entityDescriptor
          type:
            - object
          description: The entity descriptor.
        - id: options
          type:
            - object
          description: The request options.
          optional: true
        - id: options.locationMode
          type:
            - azure-event-processor-host.LocationMode
          description: "Specifies the location mode used to decide which location the request should be sent to. \r                                                                    Please see StorageUtilities.LocationMode for the possible values."
          optional: true
        - id: options.timeoutIntervalInMs
          type:
            - azure-event-processor-host.int
          description: >-
            The server timeout interval, in milliseconds, to use for the
            request.
          optional: true
        - id: options.clientRequestTimeoutInMs
          type:
            - azure-event-processor-host.int
          description: >-
            The timeout of client requests, in milliseconds, to use for the
            request.
          optional: true
        - id: options.maximumExecutionTimeInMs
          type:
            - azure-event-processor-host.int
          description: "The maximum execution time, in milliseconds, across all potential retries, to use when making this request.\r                                                                    The maximum execution time interval begins at the time that the client begins building the request. The maximum\r                                                                    execution time is checked intermittently while performing requests, and before executing retries."
          optional: true
        - id: options.clientRequestId
          type:
            - string
          description: >-
            A string that represents the client request ID with a 1KB character
            limit.
          optional: true
        - id: options.useNagleAlgorithm
          type:
            - azure-event-processor-host.bool
          description: "Determines whether the Nagle algorithm is used; true to use the Nagle algorithm; otherwise, false.\r                                                                    The default value is false."
          optional: true
        - id: callback
          type:
            - azure-event-processor-host.errorOrResponse
          description: "`error` will contain information if an error occurs; \r                                                                    `response` will contain information related to this operation."
      content: 'function deleteEntity(table, entityDescriptor, options, callback)'
    langs:
      - js
  - uid: 'azure-event-processor-host.TableService#executeBatch'
    id: 'azure-event-processor-host.TableService#executeBatch'
    parent: azure-event-processor-host.TableService
    name: 'executeBatch(table, batch, options, callback)'
    summary: Executes the operations in the batch.
    fullName: >-
      azure-event-processor-host.TableService.executeBatch(table, batch,
      options, callback)
    type: Function
    syntax:
      parameters:
        - id: table
          type:
            - string
          description: The table name.
        - id: batch
          type:
            - azure-event-processor-host.TableBatch
          description: The table batch to execute.
        - id: options
          type:
            - object
          description: The create options or callback function.
          optional: true
        - id: options.locationMode
          type:
            - azure-event-processor-host.LocationMode
          description: "Specifies the location mode used to decide which location the request should be sent to. \r                                                                            Please see StorageUtilities.LocationMode for the possible values."
          optional: true
        - id: options.timeoutIntervalInMs
          type:
            - azure-event-processor-host.int
          description: >-
            The server timeout interval, in milliseconds, to use for the
            request.
          optional: true
        - id: options.clientRequestTimeoutInMs
          type:
            - azure-event-processor-host.int
          description: >-
            The timeout of client requests, in milliseconds, to use for the
            request.
          optional: true
        - id: options.maximumExecutionTimeInMs
          type:
            - azure-event-processor-host.int
          description: "The maximum execution time, in milliseconds, across all potential retries, to use when making this request.\r                                                                            The maximum execution time interval begins at the time that the client begins building the request. The maximum\r                                                                            execution time is checked intermittently while performing requests, and before executing retries."
          optional: true
        - id: options.clientRequestId
          type:
            - string
          description: >-
            A string that represents the client request ID with a 1KB character
            limit.
          optional: true
        - id: options.useNagleAlgorithm
          type:
            - azure-event-processor-host.bool
          description: "Determines whether the Nagle algorithm is used; true to use the Nagle algorithm; otherwise, false.\r                                                                            The default value is false."
          optional: true
        - id: callback
          type:
            - azure-event-processor-host.errorOrResult
          description: "`error` will contain information if an error occurs; \r                                                                            otherwise `result` will contain responses for each operation executed in the batch;\r                                                                            `result.entity` will contain the entity information for each operation executed.\r                                                                            `result.response` will contain the response for each operations executed.\r                                                                            `response` will contain information related to this operation."
      content: 'function executeBatch(table, batch, options, callback)'
    langs:
      - js
  - uid: 'azure-event-processor-host.TableService#getUrl'
    id: 'azure-event-processor-host.TableService#getUrl'
    parent: azure-event-processor-host.TableService
    name: 'getUrl(table, sasToken, primary)'
    summary: Retrieves a table URL.
    fullName: 'azure-event-processor-host.TableService.getUrl(table, sasToken, primary)'
    type: Function
    syntax:
      parameters:
        - id: table
          type:
            - string
          description: The table name.
        - id: sasToken
          type:
            - string
          description: The Shared Access Signature token.
          optional: true
        - id: primary
          type:
            - boolean
          description: >-
            A boolean representing whether to use the primary or the secondary
            endpoint.
          optional: true
      return:
        type:
          - string
        description: The formatted URL string.
      content: 'function getUrl(table, sasToken, primary)'
    langs:
      - js
references:
  - uid: azure-event-processor-host.TableQuery
    name: TableQuery
    fullName: azure-event-processor-host.TableQuery
    isExternal: false
  - uid: azure-event-processor-host.TableBatch
    name: TableBatch
    fullName: azure-event-processor-host.TableBatch
    isExternal: false
