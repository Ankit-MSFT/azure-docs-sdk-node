### YamlMime:UniversalReference
items:
  - uid: azure-arm-containerservice.ContainerServices
    id: azure-arm-containerservice.ContainerServices
    name: ContainerServices
    summary: Class representing a ContainerServices.
    fullName: azure-arm-containerservice.ContainerServices
    type: Class
    children:
      - 'azure-arm-containerservice.ContainerServices.#ctor'
      - >-
        azure-arm-containerservice.ContainerServices#listWithHttpOperationResponse
      - 'azure-arm-containerservice.ContainerServices#list'
      - >-
        azure-arm-containerservice.ContainerServices#createOrUpdateWithHttpOperationResponse
      - 'azure-arm-containerservice.ContainerServices#createOrUpdate'
      - >-
        azure-arm-containerservice.ContainerServices#getWithHttpOperationResponse
      - 'azure-arm-containerservice.ContainerServices#get'
      - >-
        azure-arm-containerservice.ContainerServices#deleteMethodWithHttpOperationResponse
      - 'azure-arm-containerservice.ContainerServices#deleteMethod'
      - >-
        azure-arm-containerservice.ContainerServices#listByResourceGroupWithHttpOperationResponse
      - 'azure-arm-containerservice.ContainerServices#listByResourceGroup'
      - >-
        azure-arm-containerservice.ContainerServices#listOrchestratorsWithHttpOperationResponse
      - 'azure-arm-containerservice.ContainerServices#listOrchestrators'
      - >-
        azure-arm-containerservice.ContainerServices#beginCreateOrUpdateWithHttpOperationResponse
      - 'azure-arm-containerservice.ContainerServices#beginCreateOrUpdate'
      - >-
        azure-arm-containerservice.ContainerServices#beginDeleteMethodWithHttpOperationResponse
      - 'azure-arm-containerservice.ContainerServices#beginDeleteMethod'
      - >-
        azure-arm-containerservice.ContainerServices#listNextWithHttpOperationResponse
      - 'azure-arm-containerservice.ContainerServices#listNext'
      - >-
        azure-arm-containerservice.ContainerServices#listByResourceGroupNextWithHttpOperationResponse
      - 'azure-arm-containerservice.ContainerServices#listByResourceGroupNext'
    langs:
      - js
  - id: 'azure-arm-containerservice.ContainerServices.#ctor'
    uid: 'azure-arm-containerservice.ContainerServices.#ctor'
    parent: azure-arm-containerservice.ContainerServices
    name: ContainerServices(client)
    fullName: azure-arm-containerservice.ContainerServices.ContainerServices(client)
    summary: Create a ContainerServices.
    type: Constructor
    syntax:
      parameters:
        - id: client
          type:
            - undefinedContainerServiceClient
          description: Reference to the service client.
      content: new ContainerServices(client)
    langs:
      - js
  - uid: 'azure-arm-containerservice.ContainerServices#listWithHttpOperationResponse'
    id: 'azure-arm-containerservice.ContainerServices#listWithHttpOperationResponse'
    parent: azure-arm-containerservice.ContainerServices
    name: listWithHttpOperationResponse(options)
    summary: >-
      Gets a list of container services in the specified subscription.


      Gets a list of container services in the specified subscription. The

      operation returns properties of each container service including state,

      orchestrator, number of masters and agents, and FQDNs of masters and
      agents.
    fullName: >-
      azure-arm-containerservice.ContainerServices.listWithHttpOperationResponse(options)
    tags:
      - originalTitle: resolve
        title: resolve
        text: >-
          {HttpOperationResponse<ContainerServiceListResult>} - The deserialized
          result object.
        value: >-
          {HttpOperationResponse<ContainerServiceListResult>} - The deserialized
          result object.
      - originalTitle: reject
        title: reject
        text: '{Error} - The error object.'
        value: '{Error} - The error object.'
    type: Function
    syntax:
      parameters:
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
      return:
        type:
          - Promise
        description: A promise is returned
      content: function listWithHttpOperationResponse(options)
    langs:
      - js
  - uid: 'azure-arm-containerservice.ContainerServices#list'
    id: 'azure-arm-containerservice.ContainerServices#list'
    parent: azure-arm-containerservice.ContainerServices
    name: 'list(options, optionalCallback)'
    summary: >-
      Gets a list of container services in the specified subscription.


      Gets a list of container services in the specified subscription. The

      operation returns properties of each container service including state,

      orchestrator, number of masters and agents, and FQDNs of masters and
      agents.
    fullName: >-
      azure-arm-containerservice.ContainerServices.list(options,
      optionalCallback)
    tags:
      - originalTitle: resolve
        title: resolve
        text: '{ContainerServiceListResult} - The deserialized result object.'
        value: '{ContainerServiceListResult} - The deserialized result object.'
      - originalTitle: reject
        title: reject
        text: |-
          {Error} - The error object.

          {function} optionalCallback(err, result, request, response)

                               {Error}  err        - The Error object if an error occurred, null otherwise.

                               {object} [result]   - The deserialized result object if an error did not occur.
                               See {@link ContainerServiceListResult} for more
                               information.

                               {object} [request]  - The HTTP Request object if an error did not occur.

                               {stream} [response] - The HTTP Response stream if an error did not occur.
        value: |-
          {Error} - The error object.

          {function} optionalCallback(err, result, request, response)

                               {Error}  err        - The Error object if an error occurred, null otherwise.

                               {object} [result]   - The deserialized result object if an error did not occur.
                               See {@link ContainerServiceListResult} for more
                               information.

                               {object} [request]  - The HTTP Request object if an error did not occur.

                               {stream} [response] - The HTTP Response stream if an error did not occur.
    type: Function
    syntax:
      parameters:
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
        - id: optionalCallback
          type:
            - function
          description: The optional callback.
          optional: true
      return:
        type:
          - function
          - Promise
        description: |-
          If a callback was passed as the last parameter
          then it returns the callback else returns a Promise.

          {Promise} A promise is returned
      content: 'function list(options, optionalCallback)'
    langs:
      - js
  - uid: >-
      azure-arm-containerservice.ContainerServices#createOrUpdateWithHttpOperationResponse
    id: >-
      azure-arm-containerservice.ContainerServices#createOrUpdateWithHttpOperationResponse
    parent: azure-arm-containerservice.ContainerServices
    name: >-
      createOrUpdateWithHttpOperationResponse(resourceGroupName,
      containerServiceName, parameters, options)
    summary: |-
      Creates or updates a container service.

      Creates or updates a container service with the specified configuration of
      orchestrator, masters, and agents.
    fullName: >-
      azure-arm-containerservice.ContainerServices.createOrUpdateWithHttpOperationResponse(resourceGroupName,
      containerServiceName, parameters, options)
    tags:
      - originalTitle: resolve
        title: resolve
        text: >-
          {HttpOperationResponse<ContainerService>} - The deserialized result
          object.
        value: >-
          {HttpOperationResponse<ContainerService>} - The deserialized result
          object.
      - originalTitle: reject
        title: reject
        text: '{Error} - The error object.'
        value: '{Error} - The error object.'
    type: Function
    syntax:
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: The name of the resource group.
        - id: containerServiceName
          type:
            - string
          description: |-
            The name of the container service in
            the specified subscription and resource group.
        - id: parameters
          type:
            - object
          description: |-
            Parameters supplied to the Create or Update a
            Container Service operation.
        - id: parameters.orchestratorProfile
          type:
            - object
          description: |-
            Profile for the container
            service orchestrator.
        - id: parameters.orchestratorProfile.orchestratorType
          type:
            - string
          description: >-
            The

            orchestrator to use to manage container service cluster resources.
            Valid

            values are Kubernetes, Swarm, DCOS, DockerCE and Custom. Possible
            values

            include: 'Kubernetes', 'Swarm', 'DCOS', 'DockerCE', 'Custom'
        - id: parameters.orchestratorProfile.orchestratorVersion
          type:
            - string
          description: >-
            The

            version of the orchestrator to use. You can specify the
            major.minor.patch

            part of the actual version.For example, you can specify version as
            "1.6.11".
          optional: true
        - id: parameters.customProfile
          type:
            - object
          description: |-
            Properties to configure a custom
            container service cluster.
          optional: true
        - id: parameters.customProfile.orchestrator
          type:
            - string
          description: |-
            The name of the custom
            orchestrator to use.
        - id: parameters.servicePrincipalProfile
          type:
            - object
          description: >-
            Information about a

            service principal identity for the cluster to use for manipulating
            Azure

            APIs. Exact one of secret or keyVaultSecretRef need to be specified.
          optional: true
        - id: parameters.servicePrincipalProfile.clientId
          type:
            - string
          description: |-
            The ID for the
            service principal.
        - id: parameters.servicePrincipalProfile.secret
          type:
            - string
          description: |-
            The secret
            password associated with the service principal in plain text.
          optional: true
        - id: parameters.servicePrincipalProfile.keyVaultSecretRef
          type:
            - object
          description: Reference to a secret stored in Azure Key Vault.
          optional: true
        - id: parameters.servicePrincipalProfile.keyVaultSecretRef.vaultID
          type:
            - string
          description: Key vault identifier.
        - id: parameters.servicePrincipalProfile.keyVaultSecretRef.secretName
          type:
            - string
          description: |-
            The secret
            name.
        - id: parameters.servicePrincipalProfile.keyVaultSecretRef.version
          type:
            - string
          description: |-
            The secret
            version.
          optional: true
        - id: parameters.masterProfile
          type:
            - object
          description: |-
            Profile for the container service
            master.
        - id: parameters.masterProfile.count
          type:
            - number
          description: >-
            Number of masters (VMs) in

            the container service cluster. Allowed values are 1, 3, and 5. The
            default

            value is 1.
          optional: true
        - id: parameters.masterProfile.dnsPrefix
          type:
            - string
          description: |-
            DNS prefix to be used to
            create the FQDN for the master pool.
        - id: parameters.masterProfile.vmSize
          type:
            - string
          description: >-
            Size of agent VMs. Possible

            values include: 'Standard_A1', 'Standard_A10', 'Standard_A11',

            'Standard_A1_v2', 'Standard_A2', 'Standard_A2_v2',
            'Standard_A2m_v2',

            'Standard_A3', 'Standard_A4', 'Standard_A4_v2', 'Standard_A4m_v2',

            'Standard_A5', 'Standard_A6', 'Standard_A7', 'Standard_A8',

            'Standard_A8_v2', 'Standard_A8m_v2', 'Standard_A9', 'Standard_B2ms',

            'Standard_B2s', 'Standard_B4ms', 'Standard_B8ms', 'Standard_D1',

            'Standard_D11', 'Standard_D11_v2', 'Standard_D11_v2_Promo',
            'Standard_D12',

            'Standard_D12_v2', 'Standard_D12_v2_Promo', 'Standard_D13',

            'Standard_D13_v2', 'Standard_D13_v2_Promo', 'Standard_D14',

            'Standard_D14_v2', 'Standard_D14_v2_Promo', 'Standard_D15_v2',

            'Standard_D16_v3', 'Standard_D16s_v3', 'Standard_D1_v2',
            'Standard_D2',

            'Standard_D2_v2', 'Standard_D2_v2_Promo', 'Standard_D2_v3',

            'Standard_D2s_v3', 'Standard_D3', 'Standard_D32_v3',
            'Standard_D32s_v3',

            'Standard_D3_v2', 'Standard_D3_v2_Promo', 'Standard_D4',
            'Standard_D4_v2',

            'Standard_D4_v2_Promo', 'Standard_D4_v3', 'Standard_D4s_v3',

            'Standard_D5_v2', 'Standard_D5_v2_Promo', 'Standard_D64_v3',

            'Standard_D64s_v3', 'Standard_D8_v3', 'Standard_D8s_v3',
            'Standard_DS1',

            'Standard_DS11', 'Standard_DS11_v2', 'Standard_DS11_v2_Promo',

            'Standard_DS12', 'Standard_DS12_v2', 'Standard_DS12_v2_Promo',

            'Standard_DS13', 'Standard_DS13-2_v2', 'Standard_DS13-4_v2',

            'Standard_DS13_v2', 'Standard_DS13_v2_Promo', 'Standard_DS14',

            'Standard_DS14-4_v2', 'Standard_DS14-8_v2', 'Standard_DS14_v2',

            'Standard_DS14_v2_Promo', 'Standard_DS15_v2', 'Standard_DS1_v2',

            'Standard_DS2', 'Standard_DS2_v2', 'Standard_DS2_v2_Promo',
            'Standard_DS3',

            'Standard_DS3_v2', 'Standard_DS3_v2_Promo', 'Standard_DS4',

            'Standard_DS4_v2', 'Standard_DS4_v2_Promo', 'Standard_DS5_v2',

            'Standard_DS5_v2_Promo', 'Standard_E16_v3', 'Standard_E16s_v3',

            'Standard_E2_v3', 'Standard_E2s_v3', 'Standard_E32-16s_v3',

            'Standard_E32-8s_v3', 'Standard_E32_v3', 'Standard_E32s_v3',

            'Standard_E4_v3', 'Standard_E4s_v3', 'Standard_E64-16s_v3',

            'Standard_E64-32s_v3', 'Standard_E64_v3', 'Standard_E64s_v3',

            'Standard_E8_v3', 'Standard_E8s_v3', 'Standard_F1', 'Standard_F16',

            'Standard_F16s', 'Standard_F16s_v2', 'Standard_F1s', 'Standard_F2',

            'Standard_F2s', 'Standard_F2s_v2', 'Standard_F32s_v2',
            'Standard_F4',

            'Standard_F4s', 'Standard_F4s_v2', 'Standard_F64s_v2',
            'Standard_F72s_v2',

            'Standard_F8', 'Standard_F8s', 'Standard_F8s_v2', 'Standard_G1',

            'Standard_G2', 'Standard_G3', 'Standard_G4', 'Standard_G5',
            'Standard_GS1',

            'Standard_GS2', 'Standard_GS3', 'Standard_GS4', 'Standard_GS4-4',

            'Standard_GS4-8', 'Standard_GS5', 'Standard_GS5-16',
            'Standard_GS5-8',

            'Standard_H16', 'Standard_H16m', 'Standard_H16mr', 'Standard_H16r',

            'Standard_H8', 'Standard_H8m', 'Standard_L16s', 'Standard_L32s',

            'Standard_L4s', 'Standard_L8s', 'Standard_M128-32ms',
            'Standard_M128-64ms',

            'Standard_M128ms', 'Standard_M128s', 'Standard_M64-16ms',

            'Standard_M64-32ms', 'Standard_M64ms', 'Standard_M64s',
            'Standard_NC12',

            'Standard_NC12s_v2', 'Standard_NC12s_v3', 'Standard_NC24',
            'Standard_NC24r',

            'Standard_NC24rs_v2', 'Standard_NC24rs_v3', 'Standard_NC24s_v2',

            'Standard_NC24s_v3', 'Standard_NC6', 'Standard_NC6s_v2',
            'Standard_NC6s_v3',

            'Standard_ND12s', 'Standard_ND24rs', 'Standard_ND24s',
            'Standard_ND6s',

            'Standard_NV12', 'Standard_NV24', 'Standard_NV6'
        - id: parameters.masterProfile.osDiskSizeGB
          type:
            - number
          description: >-
            OS Disk Size in GB

            to be used to specify the disk size for every machine in this
            master/agent

            pool. If you specify 0, it will apply the default osDisk size
            according to

            the vmSize specified.
          optional: true
        - id: parameters.masterProfile.vnetSubnetID
          type:
            - string
          description: |-
            VNet SubnetID
            specifies the vnet's subnet identifier.
          optional: true
        - id: parameters.masterProfile.firstConsecutiveStaticIP
          type:
            - string
          description: >-
            FirstConsecutiveStaticIP used to specify the first static ip of
            masters.
          optional: true
        - id: parameters.masterProfile.storageProfile
          type:
            - string
          description: |-
            Storage profile
            specifies what kind of storage used. Choose from StorageAccount and
            ManagedDisks. Leave it empty, we will choose for you based on the
            orchestrator choice. Possible values include: 'StorageAccount',
            'ManagedDisks'
          optional: true
        - id: parameters.agentPoolProfiles
          type:
            - array
          description: Properties of the agent pool.
          optional: true
        - id: parameters.windowsProfile
          type:
            - object
          description: |-
            Profile for Windows VMs in the
            container service cluster.
          optional: true
        - id: parameters.windowsProfile.adminUsername
          type:
            - string
          description: |-
            The administrator
            username to use for Windows VMs.
        - id: parameters.windowsProfile.adminPassword
          type:
            - string
          description: |-
            The administrator
            password to use for Windows VMs.
        - id: parameters.linuxProfile
          type:
            - object
          description: |-
            Profile for Linux VMs in the
            container service cluster.
        - id: parameters.linuxProfile.adminUsername
          type:
            - string
          description: |-
            The administrator
            username to use for Linux VMs.
        - id: parameters.linuxProfile.ssh
          type:
            - object
          description: |-
            SSH configuration for
            Linux-based VMs running on Azure.
        - id: parameters.linuxProfile.ssh.publicKeys
          type:
            - array
          description: |-
            The list of SSH public
            keys used to authenticate with Linux-based VMs. Only expect one key
            specified.
        - id: parameters.diagnosticsProfile
          type:
            - object
          description: |-
            Profile for diagnostics in
            the container service cluster.
          optional: true
        - id: parameters.diagnosticsProfile.vmDiagnostics
          type:
            - object
          description: |-
            Profile for
            diagnostics on the container service VMs.
        - id: parameters.diagnosticsProfile.vmDiagnostics.enabled
          type:
            - boolean
          description: |-
            Whether
            the VM diagnostic agent is provisioned on the VM.
        - id: parameters.location
          type:
            - string
          description: Resource location
        - id: parameters.tags
          type:
            - object
          description: Resource tags
          optional: true
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
      return:
        type:
          - Promise
        description: A promise is returned
      content: >-
        function createOrUpdateWithHttpOperationResponse(resourceGroupName,
        containerServiceName, parameters, options)
    langs:
      - js
  - uid: 'azure-arm-containerservice.ContainerServices#createOrUpdate'
    id: 'azure-arm-containerservice.ContainerServices#createOrUpdate'
    parent: azure-arm-containerservice.ContainerServices
    name: >-
      createOrUpdate(resourceGroupName, containerServiceName, parameters,
      options, optionalCallback)
    summary: |-
      Creates or updates a container service.

      Creates or updates a container service with the specified configuration of
      orchestrator, masters, and agents.
    fullName: >-
      azure-arm-containerservice.ContainerServices.createOrUpdate(resourceGroupName,
      containerServiceName, parameters, options, optionalCallback)
    tags:
      - originalTitle: resolve
        title: resolve
        text: '{ContainerService} - The deserialized result object.'
        value: '{ContainerService} - The deserialized result object.'
      - originalTitle: reject
        title: reject
        text: |-
          {Error} - The error object.

          {function} optionalCallback(err, result, request, response)

                               {Error}  err        - The Error object if an error occurred, null otherwise.

                               {object} [result]   - The deserialized result object if an error did not occur.
                               See {@link ContainerService} for more information.

                               {object} [request]  - The HTTP Request object if an error did not occur.

                               {stream} [response] - The HTTP Response stream if an error did not occur.
        value: |-
          {Error} - The error object.

          {function} optionalCallback(err, result, request, response)

                               {Error}  err        - The Error object if an error occurred, null otherwise.

                               {object} [result]   - The deserialized result object if an error did not occur.
                               See {@link ContainerService} for more information.

                               {object} [request]  - The HTTP Request object if an error did not occur.

                               {stream} [response] - The HTTP Response stream if an error did not occur.
    type: Function
    syntax:
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: The name of the resource group.
        - id: containerServiceName
          type:
            - string
          description: |-
            The name of the container service in
            the specified subscription and resource group.
        - id: parameters
          type:
            - object
          description: |-
            Parameters supplied to the Create or Update a
            Container Service operation.
        - id: parameters.orchestratorProfile
          type:
            - object
          description: |-
            Profile for the container
            service orchestrator.
        - id: parameters.orchestratorProfile.orchestratorType
          type:
            - string
          description: >-
            The

            orchestrator to use to manage container service cluster resources.
            Valid

            values are Kubernetes, Swarm, DCOS, DockerCE and Custom. Possible
            values

            include: 'Kubernetes', 'Swarm', 'DCOS', 'DockerCE', 'Custom'
        - id: parameters.orchestratorProfile.orchestratorVersion
          type:
            - string
          description: >-
            The

            version of the orchestrator to use. You can specify the
            major.minor.patch

            part of the actual version.For example, you can specify version as
            "1.6.11".
          optional: true
        - id: parameters.customProfile
          type:
            - object
          description: |-
            Properties to configure a custom
            container service cluster.
          optional: true
        - id: parameters.customProfile.orchestrator
          type:
            - string
          description: |-
            The name of the custom
            orchestrator to use.
        - id: parameters.servicePrincipalProfile
          type:
            - object
          description: >-
            Information about a

            service principal identity for the cluster to use for manipulating
            Azure

            APIs. Exact one of secret or keyVaultSecretRef need to be specified.
          optional: true
        - id: parameters.servicePrincipalProfile.clientId
          type:
            - string
          description: |-
            The ID for the
            service principal.
        - id: parameters.servicePrincipalProfile.secret
          type:
            - string
          description: |-
            The secret
            password associated with the service principal in plain text.
          optional: true
        - id: parameters.servicePrincipalProfile.keyVaultSecretRef
          type:
            - object
          description: Reference to a secret stored in Azure Key Vault.
          optional: true
        - id: parameters.servicePrincipalProfile.keyVaultSecretRef.vaultID
          type:
            - string
          description: Key vault identifier.
        - id: parameters.servicePrincipalProfile.keyVaultSecretRef.secretName
          type:
            - string
          description: |-
            The secret
            name.
        - id: parameters.servicePrincipalProfile.keyVaultSecretRef.version
          type:
            - string
          description: |-
            The secret
            version.
          optional: true
        - id: parameters.masterProfile
          type:
            - object
          description: |-
            Profile for the container service
            master.
        - id: parameters.masterProfile.count
          type:
            - number
          description: >-
            Number of masters (VMs) in

            the container service cluster. Allowed values are 1, 3, and 5. The
            default

            value is 1.
          optional: true
        - id: parameters.masterProfile.dnsPrefix
          type:
            - string
          description: |-
            DNS prefix to be used to
            create the FQDN for the master pool.
        - id: parameters.masterProfile.vmSize
          type:
            - string
          description: >-
            Size of agent VMs. Possible

            values include: 'Standard_A1', 'Standard_A10', 'Standard_A11',

            'Standard_A1_v2', 'Standard_A2', 'Standard_A2_v2',
            'Standard_A2m_v2',

            'Standard_A3', 'Standard_A4', 'Standard_A4_v2', 'Standard_A4m_v2',

            'Standard_A5', 'Standard_A6', 'Standard_A7', 'Standard_A8',

            'Standard_A8_v2', 'Standard_A8m_v2', 'Standard_A9', 'Standard_B2ms',

            'Standard_B2s', 'Standard_B4ms', 'Standard_B8ms', 'Standard_D1',

            'Standard_D11', 'Standard_D11_v2', 'Standard_D11_v2_Promo',
            'Standard_D12',

            'Standard_D12_v2', 'Standard_D12_v2_Promo', 'Standard_D13',

            'Standard_D13_v2', 'Standard_D13_v2_Promo', 'Standard_D14',

            'Standard_D14_v2', 'Standard_D14_v2_Promo', 'Standard_D15_v2',

            'Standard_D16_v3', 'Standard_D16s_v3', 'Standard_D1_v2',
            'Standard_D2',

            'Standard_D2_v2', 'Standard_D2_v2_Promo', 'Standard_D2_v3',

            'Standard_D2s_v3', 'Standard_D3', 'Standard_D32_v3',
            'Standard_D32s_v3',

            'Standard_D3_v2', 'Standard_D3_v2_Promo', 'Standard_D4',
            'Standard_D4_v2',

            'Standard_D4_v2_Promo', 'Standard_D4_v3', 'Standard_D4s_v3',

            'Standard_D5_v2', 'Standard_D5_v2_Promo', 'Standard_D64_v3',

            'Standard_D64s_v3', 'Standard_D8_v3', 'Standard_D8s_v3',
            'Standard_DS1',

            'Standard_DS11', 'Standard_DS11_v2', 'Standard_DS11_v2_Promo',

            'Standard_DS12', 'Standard_DS12_v2', 'Standard_DS12_v2_Promo',

            'Standard_DS13', 'Standard_DS13-2_v2', 'Standard_DS13-4_v2',

            'Standard_DS13_v2', 'Standard_DS13_v2_Promo', 'Standard_DS14',

            'Standard_DS14-4_v2', 'Standard_DS14-8_v2', 'Standard_DS14_v2',

            'Standard_DS14_v2_Promo', 'Standard_DS15_v2', 'Standard_DS1_v2',

            'Standard_DS2', 'Standard_DS2_v2', 'Standard_DS2_v2_Promo',
            'Standard_DS3',

            'Standard_DS3_v2', 'Standard_DS3_v2_Promo', 'Standard_DS4',

            'Standard_DS4_v2', 'Standard_DS4_v2_Promo', 'Standard_DS5_v2',

            'Standard_DS5_v2_Promo', 'Standard_E16_v3', 'Standard_E16s_v3',

            'Standard_E2_v3', 'Standard_E2s_v3', 'Standard_E32-16s_v3',

            'Standard_E32-8s_v3', 'Standard_E32_v3', 'Standard_E32s_v3',

            'Standard_E4_v3', 'Standard_E4s_v3', 'Standard_E64-16s_v3',

            'Standard_E64-32s_v3', 'Standard_E64_v3', 'Standard_E64s_v3',

            'Standard_E8_v3', 'Standard_E8s_v3', 'Standard_F1', 'Standard_F16',

            'Standard_F16s', 'Standard_F16s_v2', 'Standard_F1s', 'Standard_F2',

            'Standard_F2s', 'Standard_F2s_v2', 'Standard_F32s_v2',
            'Standard_F4',

            'Standard_F4s', 'Standard_F4s_v2', 'Standard_F64s_v2',
            'Standard_F72s_v2',

            'Standard_F8', 'Standard_F8s', 'Standard_F8s_v2', 'Standard_G1',

            'Standard_G2', 'Standard_G3', 'Standard_G4', 'Standard_G5',
            'Standard_GS1',

            'Standard_GS2', 'Standard_GS3', 'Standard_GS4', 'Standard_GS4-4',

            'Standard_GS4-8', 'Standard_GS5', 'Standard_GS5-16',
            'Standard_GS5-8',

            'Standard_H16', 'Standard_H16m', 'Standard_H16mr', 'Standard_H16r',

            'Standard_H8', 'Standard_H8m', 'Standard_L16s', 'Standard_L32s',

            'Standard_L4s', 'Standard_L8s', 'Standard_M128-32ms',
            'Standard_M128-64ms',

            'Standard_M128ms', 'Standard_M128s', 'Standard_M64-16ms',

            'Standard_M64-32ms', 'Standard_M64ms', 'Standard_M64s',
            'Standard_NC12',

            'Standard_NC12s_v2', 'Standard_NC12s_v3', 'Standard_NC24',
            'Standard_NC24r',

            'Standard_NC24rs_v2', 'Standard_NC24rs_v3', 'Standard_NC24s_v2',

            'Standard_NC24s_v3', 'Standard_NC6', 'Standard_NC6s_v2',
            'Standard_NC6s_v3',

            'Standard_ND12s', 'Standard_ND24rs', 'Standard_ND24s',
            'Standard_ND6s',

            'Standard_NV12', 'Standard_NV24', 'Standard_NV6'
        - id: parameters.masterProfile.osDiskSizeGB
          type:
            - number
          description: >-
            OS Disk Size in GB

            to be used to specify the disk size for every machine in this
            master/agent

            pool. If you specify 0, it will apply the default osDisk size
            according to

            the vmSize specified.
          optional: true
        - id: parameters.masterProfile.vnetSubnetID
          type:
            - string
          description: |-
            VNet SubnetID
            specifies the vnet's subnet identifier.
          optional: true
        - id: parameters.masterProfile.firstConsecutiveStaticIP
          type:
            - string
          description: >-
            FirstConsecutiveStaticIP used to specify the first static ip of
            masters.
          optional: true
        - id: parameters.masterProfile.storageProfile
          type:
            - string
          description: |-
            Storage profile
            specifies what kind of storage used. Choose from StorageAccount and
            ManagedDisks. Leave it empty, we will choose for you based on the
            orchestrator choice. Possible values include: 'StorageAccount',
            'ManagedDisks'
          optional: true
        - id: parameters.agentPoolProfiles
          type:
            - array
          description: Properties of the agent pool.
          optional: true
        - id: parameters.windowsProfile
          type:
            - object
          description: |-
            Profile for Windows VMs in the
            container service cluster.
          optional: true
        - id: parameters.windowsProfile.adminUsername
          type:
            - string
          description: |-
            The administrator
            username to use for Windows VMs.
        - id: parameters.windowsProfile.adminPassword
          type:
            - string
          description: |-
            The administrator
            password to use for Windows VMs.
        - id: parameters.linuxProfile
          type:
            - object
          description: |-
            Profile for Linux VMs in the
            container service cluster.
        - id: parameters.linuxProfile.adminUsername
          type:
            - string
          description: |-
            The administrator
            username to use for Linux VMs.
        - id: parameters.linuxProfile.ssh
          type:
            - object
          description: |-
            SSH configuration for
            Linux-based VMs running on Azure.
        - id: parameters.linuxProfile.ssh.publicKeys
          type:
            - array
          description: |-
            The list of SSH public
            keys used to authenticate with Linux-based VMs. Only expect one key
            specified.
        - id: parameters.diagnosticsProfile
          type:
            - object
          description: |-
            Profile for diagnostics in
            the container service cluster.
          optional: true
        - id: parameters.diagnosticsProfile.vmDiagnostics
          type:
            - object
          description: |-
            Profile for
            diagnostics on the container service VMs.
        - id: parameters.diagnosticsProfile.vmDiagnostics.enabled
          type:
            - boolean
          description: |-
            Whether
            the VM diagnostic agent is provisioned on the VM.
        - id: parameters.location
          type:
            - string
          description: Resource location
        - id: parameters.tags
          type:
            - object
          description: Resource tags
          optional: true
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
        - id: optionalCallback
          type:
            - function
          description: The optional callback.
          optional: true
      return:
        type:
          - function
          - Promise
        description: |-
          If a callback was passed as the last parameter
          then it returns the callback else returns a Promise.

          {Promise} A promise is returned
      content: >-
        function createOrUpdate(resourceGroupName, containerServiceName,
        parameters, options, optionalCallback)
    langs:
      - js
  - uid: 'azure-arm-containerservice.ContainerServices#getWithHttpOperationResponse'
    id: 'azure-arm-containerservice.ContainerServices#getWithHttpOperationResponse'
    parent: azure-arm-containerservice.ContainerServices
    name: >-
      getWithHttpOperationResponse(resourceGroupName, containerServiceName,
      options)
    summary: |-
      Gets the properties of the specified container service.

      Gets the properties of the specified container service in the specified
      subscription and resource group. The operation returns the properties
      including state, orchestrator, number of masters and agents, and FQDNs of
      masters and agents.
    fullName: >-
      azure-arm-containerservice.ContainerServices.getWithHttpOperationResponse(resourceGroupName,
      containerServiceName, options)
    tags:
      - originalTitle: resolve
        title: resolve
        text: >-
          {HttpOperationResponse<ContainerService>} - The deserialized result
          object.
        value: >-
          {HttpOperationResponse<ContainerService>} - The deserialized result
          object.
      - originalTitle: reject
        title: reject
        text: '{Error} - The error object.'
        value: '{Error} - The error object.'
    type: Function
    syntax:
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: The name of the resource group.
        - id: containerServiceName
          type:
            - string
          description: |-
            The name of the container service in
            the specified subscription and resource group.
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
      return:
        type:
          - Promise
        description: A promise is returned
      content: >-
        function getWithHttpOperationResponse(resourceGroupName,
        containerServiceName, options)
    langs:
      - js
  - uid: 'azure-arm-containerservice.ContainerServices#get'
    id: 'azure-arm-containerservice.ContainerServices#get'
    parent: azure-arm-containerservice.ContainerServices
    name: 'get(resourceGroupName, containerServiceName, options, optionalCallback)'
    summary: |-
      Gets the properties of the specified container service.

      Gets the properties of the specified container service in the specified
      subscription and resource group. The operation returns the properties
      including state, orchestrator, number of masters and agents, and FQDNs of
      masters and agents.
    fullName: >-
      azure-arm-containerservice.ContainerServices.get(resourceGroupName,
      containerServiceName, options, optionalCallback)
    tags:
      - originalTitle: resolve
        title: resolve
        text: '{ContainerService} - The deserialized result object.'
        value: '{ContainerService} - The deserialized result object.'
      - originalTitle: reject
        title: reject
        text: |-
          {Error} - The error object.

          {function} optionalCallback(err, result, request, response)

                               {Error}  err        - The Error object if an error occurred, null otherwise.

                               {object} [result]   - The deserialized result object if an error did not occur.
                               See {@link ContainerService} for more information.

                               {object} [request]  - The HTTP Request object if an error did not occur.

                               {stream} [response] - The HTTP Response stream if an error did not occur.
        value: |-
          {Error} - The error object.

          {function} optionalCallback(err, result, request, response)

                               {Error}  err        - The Error object if an error occurred, null otherwise.

                               {object} [result]   - The deserialized result object if an error did not occur.
                               See {@link ContainerService} for more information.

                               {object} [request]  - The HTTP Request object if an error did not occur.

                               {stream} [response] - The HTTP Response stream if an error did not occur.
    type: Function
    syntax:
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: The name of the resource group.
        - id: containerServiceName
          type:
            - string
          description: |-
            The name of the container service in
            the specified subscription and resource group.
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
        - id: optionalCallback
          type:
            - function
          description: The optional callback.
          optional: true
      return:
        type:
          - function
          - Promise
        description: |-
          If a callback was passed as the last parameter
          then it returns the callback else returns a Promise.

          {Promise} A promise is returned
      content: >-
        function get(resourceGroupName, containerServiceName, options,
        optionalCallback)
    langs:
      - js
  - uid: >-
      azure-arm-containerservice.ContainerServices#deleteMethodWithHttpOperationResponse
    id: >-
      azure-arm-containerservice.ContainerServices#deleteMethodWithHttpOperationResponse
    parent: azure-arm-containerservice.ContainerServices
    name: >-
      deleteMethodWithHttpOperationResponse(resourceGroupName,
      containerServiceName, options)
    summary: >-
      Deletes the specified container service.


      Deletes the specified container service in the specified subscription and

      resource group. The operation does not delete other resources created as

      part of creating a container service, including storage accounts, VMs, and

      availability sets. All the other resources created with the container

      service are part of the same resource group and can be deleted
      individually.
    fullName: >-
      azure-arm-containerservice.ContainerServices.deleteMethodWithHttpOperationResponse(resourceGroupName,
      containerServiceName, options)
    tags:
      - originalTitle: resolve
        title: resolve
        text: '{HttpOperationResponse<null>} - The deserialized result object.'
        value: '{HttpOperationResponse<null>} - The deserialized result object.'
      - originalTitle: reject
        title: reject
        text: '{Error} - The error object.'
        value: '{Error} - The error object.'
    type: Function
    syntax:
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: The name of the resource group.
        - id: containerServiceName
          type:
            - string
          description: |-
            The name of the container service in
            the specified subscription and resource group.
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
      return:
        type:
          - Promise
        description: A promise is returned
      content: >-
        function deleteMethodWithHttpOperationResponse(resourceGroupName,
        containerServiceName, options)
    langs:
      - js
  - uid: 'azure-arm-containerservice.ContainerServices#deleteMethod'
    id: 'azure-arm-containerservice.ContainerServices#deleteMethod'
    parent: azure-arm-containerservice.ContainerServices
    name: >-
      deleteMethod(resourceGroupName, containerServiceName, options,
      optionalCallback)
    summary: >-
      Deletes the specified container service.


      Deletes the specified container service in the specified subscription and

      resource group. The operation does not delete other resources created as

      part of creating a container service, including storage accounts, VMs, and

      availability sets. All the other resources created with the container

      service are part of the same resource group and can be deleted
      individually.
    fullName: >-
      azure-arm-containerservice.ContainerServices.deleteMethod(resourceGroupName,
      containerServiceName, options, optionalCallback)
    tags:
      - originalTitle: resolve
        title: resolve
        text: '{null} - The deserialized result object.'
        value: '{null} - The deserialized result object.'
      - originalTitle: reject
        title: reject
        text: |-
          {Error} - The error object.

          {function} optionalCallback(err, result, request, response)

                               {Error}  err        - The Error object if an error occurred, null otherwise.

                               {null} [result]   - The deserialized result object if an error did not occur.

                               {object} [request]  - The HTTP Request object if an error did not occur.

                               {stream} [response] - The HTTP Response stream if an error did not occur.
        value: |-
          {Error} - The error object.

          {function} optionalCallback(err, result, request, response)

                               {Error}  err        - The Error object if an error occurred, null otherwise.

                               {null} [result]   - The deserialized result object if an error did not occur.

                               {object} [request]  - The HTTP Request object if an error did not occur.

                               {stream} [response] - The HTTP Response stream if an error did not occur.
    type: Function
    syntax:
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: The name of the resource group.
        - id: containerServiceName
          type:
            - string
          description: |-
            The name of the container service in
            the specified subscription and resource group.
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
        - id: optionalCallback
          type:
            - function
          description: The optional callback.
          optional: true
      return:
        type:
          - function
          - Promise
        description: |-
          If a callback was passed as the last parameter
          then it returns the callback else returns a Promise.

          {Promise} A promise is returned
      content: >-
        function deleteMethod(resourceGroupName, containerServiceName, options,
        optionalCallback)
    langs:
      - js
  - uid: >-
      azure-arm-containerservice.ContainerServices#listByResourceGroupWithHttpOperationResponse
    id: >-
      azure-arm-containerservice.ContainerServices#listByResourceGroupWithHttpOperationResponse
    parent: azure-arm-containerservice.ContainerServices
    name: 'listByResourceGroupWithHttpOperationResponse(resourceGroupName, options)'
    summary: >-
      Gets a list of container services in the specified resource group.


      Gets a list of container services in the specified subscription and
      resource

      group. The operation returns properties of each container service
      including

      state, orchestrator, number of masters and agents, and FQDNs of masters
      and

      agents.
    fullName: >-
      azure-arm-containerservice.ContainerServices.listByResourceGroupWithHttpOperationResponse(resourceGroupName,
      options)
    tags:
      - originalTitle: resolve
        title: resolve
        text: >-
          {HttpOperationResponse<ContainerServiceListResult>} - The deserialized
          result object.
        value: >-
          {HttpOperationResponse<ContainerServiceListResult>} - The deserialized
          result object.
      - originalTitle: reject
        title: reject
        text: '{Error} - The error object.'
        value: '{Error} - The error object.'
    type: Function
    syntax:
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: The name of the resource group.
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
      return:
        type:
          - Promise
        description: A promise is returned
      content: >-
        function listByResourceGroupWithHttpOperationResponse(resourceGroupName,
        options)
    langs:
      - js
  - uid: 'azure-arm-containerservice.ContainerServices#listByResourceGroup'
    id: 'azure-arm-containerservice.ContainerServices#listByResourceGroup'
    parent: azure-arm-containerservice.ContainerServices
    name: 'listByResourceGroup(resourceGroupName, options, optionalCallback)'
    summary: >-
      Gets a list of container services in the specified resource group.


      Gets a list of container services in the specified subscription and
      resource

      group. The operation returns properties of each container service
      including

      state, orchestrator, number of masters and agents, and FQDNs of masters
      and

      agents.
    fullName: >-
      azure-arm-containerservice.ContainerServices.listByResourceGroup(resourceGroupName,
      options, optionalCallback)
    tags:
      - originalTitle: resolve
        title: resolve
        text: '{ContainerServiceListResult} - The deserialized result object.'
        value: '{ContainerServiceListResult} - The deserialized result object.'
      - originalTitle: reject
        title: reject
        text: |-
          {Error} - The error object.

          {function} optionalCallback(err, result, request, response)

                               {Error}  err        - The Error object if an error occurred, null otherwise.

                               {object} [result]   - The deserialized result object if an error did not occur.
                               See {@link ContainerServiceListResult} for more
                               information.

                               {object} [request]  - The HTTP Request object if an error did not occur.

                               {stream} [response] - The HTTP Response stream if an error did not occur.
        value: |-
          {Error} - The error object.

          {function} optionalCallback(err, result, request, response)

                               {Error}  err        - The Error object if an error occurred, null otherwise.

                               {object} [result]   - The deserialized result object if an error did not occur.
                               See {@link ContainerServiceListResult} for more
                               information.

                               {object} [request]  - The HTTP Request object if an error did not occur.

                               {stream} [response] - The HTTP Response stream if an error did not occur.
    type: Function
    syntax:
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: The name of the resource group.
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
        - id: optionalCallback
          type:
            - function
          description: The optional callback.
          optional: true
      return:
        type:
          - function
          - Promise
        description: |-
          If a callback was passed as the last parameter
          then it returns the callback else returns a Promise.

          {Promise} A promise is returned
      content: >-
        function listByResourceGroup(resourceGroupName, options,
        optionalCallback)
    langs:
      - js
  - uid: >-
      azure-arm-containerservice.ContainerServices#listOrchestratorsWithHttpOperationResponse
    id: >-
      azure-arm-containerservice.ContainerServices#listOrchestratorsWithHttpOperationResponse
    parent: azure-arm-containerservice.ContainerServices
    name: 'listOrchestratorsWithHttpOperationResponse(location, options)'
    summary: |-
      Gets a list of supported orchestrators in the specified
      subscription.

      Gets a list of supported orchestrators in the specified subscription. The
      operation returns properties of each orchestrator including verison and
      available upgrades.
    fullName: >-
      azure-arm-containerservice.ContainerServices.listOrchestratorsWithHttpOperationResponse(location,
      options)
    tags:
      - originalTitle: resolve
        title: resolve
        text: >-
          {HttpOperationResponse<OrchestratorVersionProfileListResult>} - The
          deserialized result object.
        value: >-
          {HttpOperationResponse<OrchestratorVersionProfileListResult>} - The
          deserialized result object.
      - originalTitle: reject
        title: reject
        text: '{Error} - The error object.'
        value: '{Error} - The error object.'
    type: Function
    syntax:
      parameters:
        - id: location
          type:
            - string
          description: The name of a supported Azure region.
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.resourceType
          type:
            - string
          description: |-
            resource type for which the list of
            orchestrators needs to be returned
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
      return:
        type:
          - Promise
        description: A promise is returned
      content: 'function listOrchestratorsWithHttpOperationResponse(location, options)'
    langs:
      - js
  - uid: 'azure-arm-containerservice.ContainerServices#listOrchestrators'
    id: 'azure-arm-containerservice.ContainerServices#listOrchestrators'
    parent: azure-arm-containerservice.ContainerServices
    name: 'listOrchestrators(location, options, optionalCallback)'
    summary: |-
      Gets a list of supported orchestrators in the specified
      subscription.

      Gets a list of supported orchestrators in the specified subscription. The
      operation returns properties of each orchestrator including verison and
      available upgrades.
    fullName: >-
      azure-arm-containerservice.ContainerServices.listOrchestrators(location,
      options, optionalCallback)
    tags:
      - originalTitle: resolve
        title: resolve
        text: >-
          {OrchestratorVersionProfileListResult} - The deserialized result
          object.
        value: >-
          {OrchestratorVersionProfileListResult} - The deserialized result
          object.
      - originalTitle: reject
        title: reject
        text: |-
          {Error} - The error object.

          {function} optionalCallback(err, result, request, response)

                               {Error}  err        - The Error object if an error occurred, null otherwise.

                               {object} [result]   - The deserialized result object if an error did not occur.
                               See {@link OrchestratorVersionProfileListResult} for
                               more information.

                               {object} [request]  - The HTTP Request object if an error did not occur.

                               {stream} [response] - The HTTP Response stream if an error did not occur.
        value: |-
          {Error} - The error object.

          {function} optionalCallback(err, result, request, response)

                               {Error}  err        - The Error object if an error occurred, null otherwise.

                               {object} [result]   - The deserialized result object if an error did not occur.
                               See {@link OrchestratorVersionProfileListResult} for
                               more information.

                               {object} [request]  - The HTTP Request object if an error did not occur.

                               {stream} [response] - The HTTP Response stream if an error did not occur.
    type: Function
    syntax:
      parameters:
        - id: location
          type:
            - string
          description: The name of a supported Azure region.
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.resourceType
          type:
            - string
          description: |-
            resource type for which the list of
            orchestrators needs to be returned
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
        - id: optionalCallback
          type:
            - function
          description: The optional callback.
          optional: true
      return:
        type:
          - function
          - Promise
        description: |-
          If a callback was passed as the last parameter
          then it returns the callback else returns a Promise.

          {Promise} A promise is returned
      content: 'function listOrchestrators(location, options, optionalCallback)'
    langs:
      - js
  - uid: >-
      azure-arm-containerservice.ContainerServices#beginCreateOrUpdateWithHttpOperationResponse
    id: >-
      azure-arm-containerservice.ContainerServices#beginCreateOrUpdateWithHttpOperationResponse
    parent: azure-arm-containerservice.ContainerServices
    name: >-
      beginCreateOrUpdateWithHttpOperationResponse(resourceGroupName,
      containerServiceName, parameters, options)
    summary: |-
      Creates or updates a container service.

      Creates or updates a container service with the specified configuration of
      orchestrator, masters, and agents.
    fullName: >-
      azure-arm-containerservice.ContainerServices.beginCreateOrUpdateWithHttpOperationResponse(resourceGroupName,
      containerServiceName, parameters, options)
    tags:
      - originalTitle: resolve
        title: resolve
        text: >-
          {HttpOperationResponse<ContainerService>} - The deserialized result
          object.
        value: >-
          {HttpOperationResponse<ContainerService>} - The deserialized result
          object.
      - originalTitle: reject
        title: reject
        text: '{Error} - The error object.'
        value: '{Error} - The error object.'
    type: Function
    syntax:
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: The name of the resource group.
        - id: containerServiceName
          type:
            - string
          description: |-
            The name of the container service in
            the specified subscription and resource group.
        - id: parameters
          type:
            - object
          description: |-
            Parameters supplied to the Create or Update a
            Container Service operation.
        - id: parameters.orchestratorProfile
          type:
            - object
          description: |-
            Profile for the container
            service orchestrator.
        - id: parameters.orchestratorProfile.orchestratorType
          type:
            - string
          description: >-
            The

            orchestrator to use to manage container service cluster resources.
            Valid

            values are Kubernetes, Swarm, DCOS, DockerCE and Custom. Possible
            values

            include: 'Kubernetes', 'Swarm', 'DCOS', 'DockerCE', 'Custom'
        - id: parameters.orchestratorProfile.orchestratorVersion
          type:
            - string
          description: >-
            The

            version of the orchestrator to use. You can specify the
            major.minor.patch

            part of the actual version.For example, you can specify version as
            "1.6.11".
          optional: true
        - id: parameters.customProfile
          type:
            - object
          description: |-
            Properties to configure a custom
            container service cluster.
          optional: true
        - id: parameters.customProfile.orchestrator
          type:
            - string
          description: |-
            The name of the custom
            orchestrator to use.
        - id: parameters.servicePrincipalProfile
          type:
            - object
          description: >-
            Information about a

            service principal identity for the cluster to use for manipulating
            Azure

            APIs. Exact one of secret or keyVaultSecretRef need to be specified.
          optional: true
        - id: parameters.servicePrincipalProfile.clientId
          type:
            - string
          description: |-
            The ID for the
            service principal.
        - id: parameters.servicePrincipalProfile.secret
          type:
            - string
          description: |-
            The secret
            password associated with the service principal in plain text.
          optional: true
        - id: parameters.servicePrincipalProfile.keyVaultSecretRef
          type:
            - object
          description: Reference to a secret stored in Azure Key Vault.
          optional: true
        - id: parameters.servicePrincipalProfile.keyVaultSecretRef.vaultID
          type:
            - string
          description: Key vault identifier.
        - id: parameters.servicePrincipalProfile.keyVaultSecretRef.secretName
          type:
            - string
          description: |-
            The secret
            name.
        - id: parameters.servicePrincipalProfile.keyVaultSecretRef.version
          type:
            - string
          description: |-
            The secret
            version.
          optional: true
        - id: parameters.masterProfile
          type:
            - object
          description: |-
            Profile for the container service
            master.
        - id: parameters.masterProfile.count
          type:
            - number
          description: >-
            Number of masters (VMs) in

            the container service cluster. Allowed values are 1, 3, and 5. The
            default

            value is 1.
          optional: true
        - id: parameters.masterProfile.dnsPrefix
          type:
            - string
          description: |-
            DNS prefix to be used to
            create the FQDN for the master pool.
        - id: parameters.masterProfile.vmSize
          type:
            - string
          description: >-
            Size of agent VMs. Possible

            values include: 'Standard_A1', 'Standard_A10', 'Standard_A11',

            'Standard_A1_v2', 'Standard_A2', 'Standard_A2_v2',
            'Standard_A2m_v2',

            'Standard_A3', 'Standard_A4', 'Standard_A4_v2', 'Standard_A4m_v2',

            'Standard_A5', 'Standard_A6', 'Standard_A7', 'Standard_A8',

            'Standard_A8_v2', 'Standard_A8m_v2', 'Standard_A9', 'Standard_B2ms',

            'Standard_B2s', 'Standard_B4ms', 'Standard_B8ms', 'Standard_D1',

            'Standard_D11', 'Standard_D11_v2', 'Standard_D11_v2_Promo',
            'Standard_D12',

            'Standard_D12_v2', 'Standard_D12_v2_Promo', 'Standard_D13',

            'Standard_D13_v2', 'Standard_D13_v2_Promo', 'Standard_D14',

            'Standard_D14_v2', 'Standard_D14_v2_Promo', 'Standard_D15_v2',

            'Standard_D16_v3', 'Standard_D16s_v3', 'Standard_D1_v2',
            'Standard_D2',

            'Standard_D2_v2', 'Standard_D2_v2_Promo', 'Standard_D2_v3',

            'Standard_D2s_v3', 'Standard_D3', 'Standard_D32_v3',
            'Standard_D32s_v3',

            'Standard_D3_v2', 'Standard_D3_v2_Promo', 'Standard_D4',
            'Standard_D4_v2',

            'Standard_D4_v2_Promo', 'Standard_D4_v3', 'Standard_D4s_v3',

            'Standard_D5_v2', 'Standard_D5_v2_Promo', 'Standard_D64_v3',

            'Standard_D64s_v3', 'Standard_D8_v3', 'Standard_D8s_v3',
            'Standard_DS1',

            'Standard_DS11', 'Standard_DS11_v2', 'Standard_DS11_v2_Promo',

            'Standard_DS12', 'Standard_DS12_v2', 'Standard_DS12_v2_Promo',

            'Standard_DS13', 'Standard_DS13-2_v2', 'Standard_DS13-4_v2',

            'Standard_DS13_v2', 'Standard_DS13_v2_Promo', 'Standard_DS14',

            'Standard_DS14-4_v2', 'Standard_DS14-8_v2', 'Standard_DS14_v2',

            'Standard_DS14_v2_Promo', 'Standard_DS15_v2', 'Standard_DS1_v2',

            'Standard_DS2', 'Standard_DS2_v2', 'Standard_DS2_v2_Promo',
            'Standard_DS3',

            'Standard_DS3_v2', 'Standard_DS3_v2_Promo', 'Standard_DS4',

            'Standard_DS4_v2', 'Standard_DS4_v2_Promo', 'Standard_DS5_v2',

            'Standard_DS5_v2_Promo', 'Standard_E16_v3', 'Standard_E16s_v3',

            'Standard_E2_v3', 'Standard_E2s_v3', 'Standard_E32-16s_v3',

            'Standard_E32-8s_v3', 'Standard_E32_v3', 'Standard_E32s_v3',

            'Standard_E4_v3', 'Standard_E4s_v3', 'Standard_E64-16s_v3',

            'Standard_E64-32s_v3', 'Standard_E64_v3', 'Standard_E64s_v3',

            'Standard_E8_v3', 'Standard_E8s_v3', 'Standard_F1', 'Standard_F16',

            'Standard_F16s', 'Standard_F16s_v2', 'Standard_F1s', 'Standard_F2',

            'Standard_F2s', 'Standard_F2s_v2', 'Standard_F32s_v2',
            'Standard_F4',

            'Standard_F4s', 'Standard_F4s_v2', 'Standard_F64s_v2',
            'Standard_F72s_v2',

            'Standard_F8', 'Standard_F8s', 'Standard_F8s_v2', 'Standard_G1',

            'Standard_G2', 'Standard_G3', 'Standard_G4', 'Standard_G5',
            'Standard_GS1',

            'Standard_GS2', 'Standard_GS3', 'Standard_GS4', 'Standard_GS4-4',

            'Standard_GS4-8', 'Standard_GS5', 'Standard_GS5-16',
            'Standard_GS5-8',

            'Standard_H16', 'Standard_H16m', 'Standard_H16mr', 'Standard_H16r',

            'Standard_H8', 'Standard_H8m', 'Standard_L16s', 'Standard_L32s',

            'Standard_L4s', 'Standard_L8s', 'Standard_M128-32ms',
            'Standard_M128-64ms',

            'Standard_M128ms', 'Standard_M128s', 'Standard_M64-16ms',

            'Standard_M64-32ms', 'Standard_M64ms', 'Standard_M64s',
            'Standard_NC12',

            'Standard_NC12s_v2', 'Standard_NC12s_v3', 'Standard_NC24',
            'Standard_NC24r',

            'Standard_NC24rs_v2', 'Standard_NC24rs_v3', 'Standard_NC24s_v2',

            'Standard_NC24s_v3', 'Standard_NC6', 'Standard_NC6s_v2',
            'Standard_NC6s_v3',

            'Standard_ND12s', 'Standard_ND24rs', 'Standard_ND24s',
            'Standard_ND6s',

            'Standard_NV12', 'Standard_NV24', 'Standard_NV6'
        - id: parameters.masterProfile.osDiskSizeGB
          type:
            - number
          description: >-
            OS Disk Size in GB

            to be used to specify the disk size for every machine in this
            master/agent

            pool. If you specify 0, it will apply the default osDisk size
            according to

            the vmSize specified.
          optional: true
        - id: parameters.masterProfile.vnetSubnetID
          type:
            - string
          description: |-
            VNet SubnetID
            specifies the vnet's subnet identifier.
          optional: true
        - id: parameters.masterProfile.firstConsecutiveStaticIP
          type:
            - string
          description: >-
            FirstConsecutiveStaticIP used to specify the first static ip of
            masters.
          optional: true
        - id: parameters.masterProfile.storageProfile
          type:
            - string
          description: |-
            Storage profile
            specifies what kind of storage used. Choose from StorageAccount and
            ManagedDisks. Leave it empty, we will choose for you based on the
            orchestrator choice. Possible values include: 'StorageAccount',
            'ManagedDisks'
          optional: true
        - id: parameters.agentPoolProfiles
          type:
            - array
          description: Properties of the agent pool.
          optional: true
        - id: parameters.windowsProfile
          type:
            - object
          description: |-
            Profile for Windows VMs in the
            container service cluster.
          optional: true
        - id: parameters.windowsProfile.adminUsername
          type:
            - string
          description: |-
            The administrator
            username to use for Windows VMs.
        - id: parameters.windowsProfile.adminPassword
          type:
            - string
          description: |-
            The administrator
            password to use for Windows VMs.
        - id: parameters.linuxProfile
          type:
            - object
          description: |-
            Profile for Linux VMs in the
            container service cluster.
        - id: parameters.linuxProfile.adminUsername
          type:
            - string
          description: |-
            The administrator
            username to use for Linux VMs.
        - id: parameters.linuxProfile.ssh
          type:
            - object
          description: |-
            SSH configuration for
            Linux-based VMs running on Azure.
        - id: parameters.linuxProfile.ssh.publicKeys
          type:
            - array
          description: |-
            The list of SSH public
            keys used to authenticate with Linux-based VMs. Only expect one key
            specified.
        - id: parameters.diagnosticsProfile
          type:
            - object
          description: |-
            Profile for diagnostics in
            the container service cluster.
          optional: true
        - id: parameters.diagnosticsProfile.vmDiagnostics
          type:
            - object
          description: |-
            Profile for
            diagnostics on the container service VMs.
        - id: parameters.diagnosticsProfile.vmDiagnostics.enabled
          type:
            - boolean
          description: |-
            Whether
            the VM diagnostic agent is provisioned on the VM.
        - id: parameters.location
          type:
            - string
          description: Resource location
        - id: parameters.tags
          type:
            - object
          description: Resource tags
          optional: true
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
      return:
        type:
          - Promise
        description: A promise is returned
      content: >-
        function beginCreateOrUpdateWithHttpOperationResponse(resourceGroupName,
        containerServiceName, parameters, options)
    langs:
      - js
  - uid: 'azure-arm-containerservice.ContainerServices#beginCreateOrUpdate'
    id: 'azure-arm-containerservice.ContainerServices#beginCreateOrUpdate'
    parent: azure-arm-containerservice.ContainerServices
    name: >-
      beginCreateOrUpdate(resourceGroupName, containerServiceName, parameters,
      options, optionalCallback)
    summary: |-
      Creates or updates a container service.

      Creates or updates a container service with the specified configuration of
      orchestrator, masters, and agents.
    fullName: >-
      azure-arm-containerservice.ContainerServices.beginCreateOrUpdate(resourceGroupName,
      containerServiceName, parameters, options, optionalCallback)
    tags:
      - originalTitle: resolve
        title: resolve
        text: '{ContainerService} - The deserialized result object.'
        value: '{ContainerService} - The deserialized result object.'
      - originalTitle: reject
        title: reject
        text: |-
          {Error} - The error object.

          {function} optionalCallback(err, result, request, response)

                               {Error}  err        - The Error object if an error occurred, null otherwise.

                               {object} [result]   - The deserialized result object if an error did not occur.
                               See {@link ContainerService} for more information.

                               {object} [request]  - The HTTP Request object if an error did not occur.

                               {stream} [response] - The HTTP Response stream if an error did not occur.
        value: |-
          {Error} - The error object.

          {function} optionalCallback(err, result, request, response)

                               {Error}  err        - The Error object if an error occurred, null otherwise.

                               {object} [result]   - The deserialized result object if an error did not occur.
                               See {@link ContainerService} for more information.

                               {object} [request]  - The HTTP Request object if an error did not occur.

                               {stream} [response] - The HTTP Response stream if an error did not occur.
    type: Function
    syntax:
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: The name of the resource group.
        - id: containerServiceName
          type:
            - string
          description: |-
            The name of the container service in
            the specified subscription and resource group.
        - id: parameters
          type:
            - object
          description: |-
            Parameters supplied to the Create or Update a
            Container Service operation.
        - id: parameters.orchestratorProfile
          type:
            - object
          description: |-
            Profile for the container
            service orchestrator.
        - id: parameters.orchestratorProfile.orchestratorType
          type:
            - string
          description: >-
            The

            orchestrator to use to manage container service cluster resources.
            Valid

            values are Kubernetes, Swarm, DCOS, DockerCE and Custom. Possible
            values

            include: 'Kubernetes', 'Swarm', 'DCOS', 'DockerCE', 'Custom'
        - id: parameters.orchestratorProfile.orchestratorVersion
          type:
            - string
          description: >-
            The

            version of the orchestrator to use. You can specify the
            major.minor.patch

            part of the actual version.For example, you can specify version as
            "1.6.11".
          optional: true
        - id: parameters.customProfile
          type:
            - object
          description: |-
            Properties to configure a custom
            container service cluster.
          optional: true
        - id: parameters.customProfile.orchestrator
          type:
            - string
          description: |-
            The name of the custom
            orchestrator to use.
        - id: parameters.servicePrincipalProfile
          type:
            - object
          description: >-
            Information about a

            service principal identity for the cluster to use for manipulating
            Azure

            APIs. Exact one of secret or keyVaultSecretRef need to be specified.
          optional: true
        - id: parameters.servicePrincipalProfile.clientId
          type:
            - string
          description: |-
            The ID for the
            service principal.
        - id: parameters.servicePrincipalProfile.secret
          type:
            - string
          description: |-
            The secret
            password associated with the service principal in plain text.
          optional: true
        - id: parameters.servicePrincipalProfile.keyVaultSecretRef
          type:
            - object
          description: Reference to a secret stored in Azure Key Vault.
          optional: true
        - id: parameters.servicePrincipalProfile.keyVaultSecretRef.vaultID
          type:
            - string
          description: Key vault identifier.
        - id: parameters.servicePrincipalProfile.keyVaultSecretRef.secretName
          type:
            - string
          description: |-
            The secret
            name.
        - id: parameters.servicePrincipalProfile.keyVaultSecretRef.version
          type:
            - string
          description: |-
            The secret
            version.
          optional: true
        - id: parameters.masterProfile
          type:
            - object
          description: |-
            Profile for the container service
            master.
        - id: parameters.masterProfile.count
          type:
            - number
          description: >-
            Number of masters (VMs) in

            the container service cluster. Allowed values are 1, 3, and 5. The
            default

            value is 1.
          optional: true
        - id: parameters.masterProfile.dnsPrefix
          type:
            - string
          description: |-
            DNS prefix to be used to
            create the FQDN for the master pool.
        - id: parameters.masterProfile.vmSize
          type:
            - string
          description: >-
            Size of agent VMs. Possible

            values include: 'Standard_A1', 'Standard_A10', 'Standard_A11',

            'Standard_A1_v2', 'Standard_A2', 'Standard_A2_v2',
            'Standard_A2m_v2',

            'Standard_A3', 'Standard_A4', 'Standard_A4_v2', 'Standard_A4m_v2',

            'Standard_A5', 'Standard_A6', 'Standard_A7', 'Standard_A8',

            'Standard_A8_v2', 'Standard_A8m_v2', 'Standard_A9', 'Standard_B2ms',

            'Standard_B2s', 'Standard_B4ms', 'Standard_B8ms', 'Standard_D1',

            'Standard_D11', 'Standard_D11_v2', 'Standard_D11_v2_Promo',
            'Standard_D12',

            'Standard_D12_v2', 'Standard_D12_v2_Promo', 'Standard_D13',

            'Standard_D13_v2', 'Standard_D13_v2_Promo', 'Standard_D14',

            'Standard_D14_v2', 'Standard_D14_v2_Promo', 'Standard_D15_v2',

            'Standard_D16_v3', 'Standard_D16s_v3', 'Standard_D1_v2',
            'Standard_D2',

            'Standard_D2_v2', 'Standard_D2_v2_Promo', 'Standard_D2_v3',

            'Standard_D2s_v3', 'Standard_D3', 'Standard_D32_v3',
            'Standard_D32s_v3',

            'Standard_D3_v2', 'Standard_D3_v2_Promo', 'Standard_D4',
            'Standard_D4_v2',

            'Standard_D4_v2_Promo', 'Standard_D4_v3', 'Standard_D4s_v3',

            'Standard_D5_v2', 'Standard_D5_v2_Promo', 'Standard_D64_v3',

            'Standard_D64s_v3', 'Standard_D8_v3', 'Standard_D8s_v3',
            'Standard_DS1',

            'Standard_DS11', 'Standard_DS11_v2', 'Standard_DS11_v2_Promo',

            'Standard_DS12', 'Standard_DS12_v2', 'Standard_DS12_v2_Promo',

            'Standard_DS13', 'Standard_DS13-2_v2', 'Standard_DS13-4_v2',

            'Standard_DS13_v2', 'Standard_DS13_v2_Promo', 'Standard_DS14',

            'Standard_DS14-4_v2', 'Standard_DS14-8_v2', 'Standard_DS14_v2',

            'Standard_DS14_v2_Promo', 'Standard_DS15_v2', 'Standard_DS1_v2',

            'Standard_DS2', 'Standard_DS2_v2', 'Standard_DS2_v2_Promo',
            'Standard_DS3',

            'Standard_DS3_v2', 'Standard_DS3_v2_Promo', 'Standard_DS4',

            'Standard_DS4_v2', 'Standard_DS4_v2_Promo', 'Standard_DS5_v2',

            'Standard_DS5_v2_Promo', 'Standard_E16_v3', 'Standard_E16s_v3',

            'Standard_E2_v3', 'Standard_E2s_v3', 'Standard_E32-16s_v3',

            'Standard_E32-8s_v3', 'Standard_E32_v3', 'Standard_E32s_v3',

            'Standard_E4_v3', 'Standard_E4s_v3', 'Standard_E64-16s_v3',

            'Standard_E64-32s_v3', 'Standard_E64_v3', 'Standard_E64s_v3',

            'Standard_E8_v3', 'Standard_E8s_v3', 'Standard_F1', 'Standard_F16',

            'Standard_F16s', 'Standard_F16s_v2', 'Standard_F1s', 'Standard_F2',

            'Standard_F2s', 'Standard_F2s_v2', 'Standard_F32s_v2',
            'Standard_F4',

            'Standard_F4s', 'Standard_F4s_v2', 'Standard_F64s_v2',
            'Standard_F72s_v2',

            'Standard_F8', 'Standard_F8s', 'Standard_F8s_v2', 'Standard_G1',

            'Standard_G2', 'Standard_G3', 'Standard_G4', 'Standard_G5',
            'Standard_GS1',

            'Standard_GS2', 'Standard_GS3', 'Standard_GS4', 'Standard_GS4-4',

            'Standard_GS4-8', 'Standard_GS5', 'Standard_GS5-16',
            'Standard_GS5-8',

            'Standard_H16', 'Standard_H16m', 'Standard_H16mr', 'Standard_H16r',

            'Standard_H8', 'Standard_H8m', 'Standard_L16s', 'Standard_L32s',

            'Standard_L4s', 'Standard_L8s', 'Standard_M128-32ms',
            'Standard_M128-64ms',

            'Standard_M128ms', 'Standard_M128s', 'Standard_M64-16ms',

            'Standard_M64-32ms', 'Standard_M64ms', 'Standard_M64s',
            'Standard_NC12',

            'Standard_NC12s_v2', 'Standard_NC12s_v3', 'Standard_NC24',
            'Standard_NC24r',

            'Standard_NC24rs_v2', 'Standard_NC24rs_v3', 'Standard_NC24s_v2',

            'Standard_NC24s_v3', 'Standard_NC6', 'Standard_NC6s_v2',
            'Standard_NC6s_v3',

            'Standard_ND12s', 'Standard_ND24rs', 'Standard_ND24s',
            'Standard_ND6s',

            'Standard_NV12', 'Standard_NV24', 'Standard_NV6'
        - id: parameters.masterProfile.osDiskSizeGB
          type:
            - number
          description: >-
            OS Disk Size in GB

            to be used to specify the disk size for every machine in this
            master/agent

            pool. If you specify 0, it will apply the default osDisk size
            according to

            the vmSize specified.
          optional: true
        - id: parameters.masterProfile.vnetSubnetID
          type:
            - string
          description: |-
            VNet SubnetID
            specifies the vnet's subnet identifier.
          optional: true
        - id: parameters.masterProfile.firstConsecutiveStaticIP
          type:
            - string
          description: >-
            FirstConsecutiveStaticIP used to specify the first static ip of
            masters.
          optional: true
        - id: parameters.masterProfile.storageProfile
          type:
            - string
          description: |-
            Storage profile
            specifies what kind of storage used. Choose from StorageAccount and
            ManagedDisks. Leave it empty, we will choose for you based on the
            orchestrator choice. Possible values include: 'StorageAccount',
            'ManagedDisks'
          optional: true
        - id: parameters.agentPoolProfiles
          type:
            - array
          description: Properties of the agent pool.
          optional: true
        - id: parameters.windowsProfile
          type:
            - object
          description: |-
            Profile for Windows VMs in the
            container service cluster.
          optional: true
        - id: parameters.windowsProfile.adminUsername
          type:
            - string
          description: |-
            The administrator
            username to use for Windows VMs.
        - id: parameters.windowsProfile.adminPassword
          type:
            - string
          description: |-
            The administrator
            password to use for Windows VMs.
        - id: parameters.linuxProfile
          type:
            - object
          description: |-
            Profile for Linux VMs in the
            container service cluster.
        - id: parameters.linuxProfile.adminUsername
          type:
            - string
          description: |-
            The administrator
            username to use for Linux VMs.
        - id: parameters.linuxProfile.ssh
          type:
            - object
          description: |-
            SSH configuration for
            Linux-based VMs running on Azure.
        - id: parameters.linuxProfile.ssh.publicKeys
          type:
            - array
          description: |-
            The list of SSH public
            keys used to authenticate with Linux-based VMs. Only expect one key
            specified.
        - id: parameters.diagnosticsProfile
          type:
            - object
          description: |-
            Profile for diagnostics in
            the container service cluster.
          optional: true
        - id: parameters.diagnosticsProfile.vmDiagnostics
          type:
            - object
          description: |-
            Profile for
            diagnostics on the container service VMs.
        - id: parameters.diagnosticsProfile.vmDiagnostics.enabled
          type:
            - boolean
          description: |-
            Whether
            the VM diagnostic agent is provisioned on the VM.
        - id: parameters.location
          type:
            - string
          description: Resource location
        - id: parameters.tags
          type:
            - object
          description: Resource tags
          optional: true
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
        - id: optionalCallback
          type:
            - function
          description: The optional callback.
          optional: true
      return:
        type:
          - function
          - Promise
        description: |-
          If a callback was passed as the last parameter
          then it returns the callback else returns a Promise.

          {Promise} A promise is returned
      content: >-
        function beginCreateOrUpdate(resourceGroupName, containerServiceName,
        parameters, options, optionalCallback)
    langs:
      - js
  - uid: >-
      azure-arm-containerservice.ContainerServices#beginDeleteMethodWithHttpOperationResponse
    id: >-
      azure-arm-containerservice.ContainerServices#beginDeleteMethodWithHttpOperationResponse
    parent: azure-arm-containerservice.ContainerServices
    name: >-
      beginDeleteMethodWithHttpOperationResponse(resourceGroupName,
      containerServiceName, options)
    summary: >-
      Deletes the specified container service.


      Deletes the specified container service in the specified subscription and

      resource group. The operation does not delete other resources created as

      part of creating a container service, including storage accounts, VMs, and

      availability sets. All the other resources created with the container

      service are part of the same resource group and can be deleted
      individually.
    fullName: >-
      azure-arm-containerservice.ContainerServices.beginDeleteMethodWithHttpOperationResponse(resourceGroupName,
      containerServiceName, options)
    tags:
      - originalTitle: resolve
        title: resolve
        text: '{HttpOperationResponse<null>} - The deserialized result object.'
        value: '{HttpOperationResponse<null>} - The deserialized result object.'
      - originalTitle: reject
        title: reject
        text: '{Error} - The error object.'
        value: '{Error} - The error object.'
    type: Function
    syntax:
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: The name of the resource group.
        - id: containerServiceName
          type:
            - string
          description: |-
            The name of the container service in
            the specified subscription and resource group.
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
      return:
        type:
          - Promise
        description: A promise is returned
      content: >-
        function beginDeleteMethodWithHttpOperationResponse(resourceGroupName,
        containerServiceName, options)
    langs:
      - js
  - uid: 'azure-arm-containerservice.ContainerServices#beginDeleteMethod'
    id: 'azure-arm-containerservice.ContainerServices#beginDeleteMethod'
    parent: azure-arm-containerservice.ContainerServices
    name: >-
      beginDeleteMethod(resourceGroupName, containerServiceName, options,
      optionalCallback)
    summary: >-
      Deletes the specified container service.


      Deletes the specified container service in the specified subscription and

      resource group. The operation does not delete other resources created as

      part of creating a container service, including storage accounts, VMs, and

      availability sets. All the other resources created with the container

      service are part of the same resource group and can be deleted
      individually.
    fullName: >-
      azure-arm-containerservice.ContainerServices.beginDeleteMethod(resourceGroupName,
      containerServiceName, options, optionalCallback)
    tags:
      - originalTitle: resolve
        title: resolve
        text: '{null} - The deserialized result object.'
        value: '{null} - The deserialized result object.'
      - originalTitle: reject
        title: reject
        text: |-
          {Error} - The error object.

          {function} optionalCallback(err, result, request, response)

                               {Error}  err        - The Error object if an error occurred, null otherwise.

                               {null} [result]   - The deserialized result object if an error did not occur.

                               {object} [request]  - The HTTP Request object if an error did not occur.

                               {stream} [response] - The HTTP Response stream if an error did not occur.
        value: |-
          {Error} - The error object.

          {function} optionalCallback(err, result, request, response)

                               {Error}  err        - The Error object if an error occurred, null otherwise.

                               {null} [result]   - The deserialized result object if an error did not occur.

                               {object} [request]  - The HTTP Request object if an error did not occur.

                               {stream} [response] - The HTTP Response stream if an error did not occur.
    type: Function
    syntax:
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: The name of the resource group.
        - id: containerServiceName
          type:
            - string
          description: |-
            The name of the container service in
            the specified subscription and resource group.
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
        - id: optionalCallback
          type:
            - function
          description: The optional callback.
          optional: true
      return:
        type:
          - function
          - Promise
        description: |-
          If a callback was passed as the last parameter
          then it returns the callback else returns a Promise.

          {Promise} A promise is returned
      content: >-
        function beginDeleteMethod(resourceGroupName, containerServiceName,
        options, optionalCallback)
    langs:
      - js
  - uid: >-
      azure-arm-containerservice.ContainerServices#listNextWithHttpOperationResponse
    id: >-
      azure-arm-containerservice.ContainerServices#listNextWithHttpOperationResponse
    parent: azure-arm-containerservice.ContainerServices
    name: 'listNextWithHttpOperationResponse(nextPageLink, options)'
    summary: >-
      Gets a list of container services in the specified subscription.


      Gets a list of container services in the specified subscription. The

      operation returns properties of each container service including state,

      orchestrator, number of masters and agents, and FQDNs of masters and
      agents.
    fullName: >-
      azure-arm-containerservice.ContainerServices.listNextWithHttpOperationResponse(nextPageLink,
      options)
    tags:
      - originalTitle: resolve
        title: resolve
        text: >-
          {HttpOperationResponse<ContainerServiceListResult>} - The deserialized
          result object.
        value: >-
          {HttpOperationResponse<ContainerServiceListResult>} - The deserialized
          result object.
      - originalTitle: reject
        title: reject
        text: '{Error} - The error object.'
        value: '{Error} - The error object.'
    type: Function
    syntax:
      parameters:
        - id: nextPageLink
          type:
            - string
          description: |-
            The NextLink from the previous successful call
            to List operation.
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
      return:
        type:
          - Promise
        description: A promise is returned
      content: 'function listNextWithHttpOperationResponse(nextPageLink, options)'
    langs:
      - js
  - uid: 'azure-arm-containerservice.ContainerServices#listNext'
    id: 'azure-arm-containerservice.ContainerServices#listNext'
    parent: azure-arm-containerservice.ContainerServices
    name: 'listNext(nextPageLink, options, optionalCallback)'
    summary: >-
      Gets a list of container services in the specified subscription.


      Gets a list of container services in the specified subscription. The

      operation returns properties of each container service including state,

      orchestrator, number of masters and agents, and FQDNs of masters and
      agents.
    fullName: >-
      azure-arm-containerservice.ContainerServices.listNext(nextPageLink,
      options, optionalCallback)
    tags:
      - originalTitle: resolve
        title: resolve
        text: '{ContainerServiceListResult} - The deserialized result object.'
        value: '{ContainerServiceListResult} - The deserialized result object.'
      - originalTitle: reject
        title: reject
        text: |-
          {Error} - The error object.

          {function} optionalCallback(err, result, request, response)

                               {Error}  err        - The Error object if an error occurred, null otherwise.

                               {object} [result]   - The deserialized result object if an error did not occur.
                               See {@link ContainerServiceListResult} for more
                               information.

                               {object} [request]  - The HTTP Request object if an error did not occur.

                               {stream} [response] - The HTTP Response stream if an error did not occur.
        value: |-
          {Error} - The error object.

          {function} optionalCallback(err, result, request, response)

                               {Error}  err        - The Error object if an error occurred, null otherwise.

                               {object} [result]   - The deserialized result object if an error did not occur.
                               See {@link ContainerServiceListResult} for more
                               information.

                               {object} [request]  - The HTTP Request object if an error did not occur.

                               {stream} [response] - The HTTP Response stream if an error did not occur.
    type: Function
    syntax:
      parameters:
        - id: nextPageLink
          type:
            - string
          description: |-
            The NextLink from the previous successful call
            to List operation.
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
        - id: optionalCallback
          type:
            - function
          description: The optional callback.
          optional: true
      return:
        type:
          - function
          - Promise
        description: |-
          If a callback was passed as the last parameter
          then it returns the callback else returns a Promise.

          {Promise} A promise is returned
      content: 'function listNext(nextPageLink, options, optionalCallback)'
    langs:
      - js
  - uid: >-
      azure-arm-containerservice.ContainerServices#listByResourceGroupNextWithHttpOperationResponse
    id: >-
      azure-arm-containerservice.ContainerServices#listByResourceGroupNextWithHttpOperationResponse
    parent: azure-arm-containerservice.ContainerServices
    name: 'listByResourceGroupNextWithHttpOperationResponse(nextPageLink, options)'
    summary: >-
      Gets a list of container services in the specified resource group.


      Gets a list of container services in the specified subscription and
      resource

      group. The operation returns properties of each container service
      including

      state, orchestrator, number of masters and agents, and FQDNs of masters
      and

      agents.
    fullName: >-
      azure-arm-containerservice.ContainerServices.listByResourceGroupNextWithHttpOperationResponse(nextPageLink,
      options)
    tags:
      - originalTitle: resolve
        title: resolve
        text: >-
          {HttpOperationResponse<ContainerServiceListResult>} - The deserialized
          result object.
        value: >-
          {HttpOperationResponse<ContainerServiceListResult>} - The deserialized
          result object.
      - originalTitle: reject
        title: reject
        text: '{Error} - The error object.'
        value: '{Error} - The error object.'
    type: Function
    syntax:
      parameters:
        - id: nextPageLink
          type:
            - string
          description: |-
            The NextLink from the previous successful call
            to List operation.
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
      return:
        type:
          - Promise
        description: A promise is returned
      content: >-
        function listByResourceGroupNextWithHttpOperationResponse(nextPageLink,
        options)
    langs:
      - js
  - uid: 'azure-arm-containerservice.ContainerServices#listByResourceGroupNext'
    id: 'azure-arm-containerservice.ContainerServices#listByResourceGroupNext'
    parent: azure-arm-containerservice.ContainerServices
    name: 'listByResourceGroupNext(nextPageLink, options, optionalCallback)'
    summary: >-
      Gets a list of container services in the specified resource group.


      Gets a list of container services in the specified subscription and
      resource

      group. The operation returns properties of each container service
      including

      state, orchestrator, number of masters and agents, and FQDNs of masters
      and

      agents.
    fullName: >-
      azure-arm-containerservice.ContainerServices.listByResourceGroupNext(nextPageLink,
      options, optionalCallback)
    tags:
      - originalTitle: resolve
        title: resolve
        text: '{ContainerServiceListResult} - The deserialized result object.'
        value: '{ContainerServiceListResult} - The deserialized result object.'
      - originalTitle: reject
        title: reject
        text: |-
          {Error} - The error object.

          {function} optionalCallback(err, result, request, response)

                               {Error}  err        - The Error object if an error occurred, null otherwise.

                               {object} [result]   - The deserialized result object if an error did not occur.
                               See {@link ContainerServiceListResult} for more
                               information.

                               {object} [request]  - The HTTP Request object if an error did not occur.

                               {stream} [response] - The HTTP Response stream if an error did not occur.
        value: |-
          {Error} - The error object.

          {function} optionalCallback(err, result, request, response)

                               {Error}  err        - The Error object if an error occurred, null otherwise.

                               {object} [result]   - The deserialized result object if an error did not occur.
                               See {@link ContainerServiceListResult} for more
                               information.

                               {object} [request]  - The HTTP Request object if an error did not occur.

                               {stream} [response] - The HTTP Response stream if an error did not occur.
    type: Function
    syntax:
      parameters:
        - id: nextPageLink
          type:
            - string
          description: |-
            The NextLink from the previous successful call
            to List operation.
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
        - id: optionalCallback
          type:
            - function
          description: The optional callback.
          optional: true
      return:
        type:
          - function
          - Promise
        description: |-
          If a callback was passed as the last parameter
          then it returns the callback else returns a Promise.

          {Promise} A promise is returned
      content: >-
        function listByResourceGroupNext(nextPageLink, options,
        optionalCallback)
    langs:
      - js
