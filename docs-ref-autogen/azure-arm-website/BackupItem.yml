### YamlMime:UniversalReference
items:
  - uid: azure-arm-website.BackupItem
    name: BackupItem
    fullName: BackupItem
    children:
      - azure-arm-website.BackupItem.backupId
      - azure-arm-website.BackupItem.backupItemName
      - azure-arm-website.BackupItem.blobName
      - azure-arm-website.BackupItem.correlationId
      - azure-arm-website.BackupItem.created
      - azure-arm-website.BackupItem.databases
      - azure-arm-website.BackupItem.finishedTimeStamp
      - azure-arm-website.BackupItem.lastRestoreTimeStamp
      - azure-arm-website.BackupItem.log
      - azure-arm-website.BackupItem.scheduled
      - azure-arm-website.BackupItem.sizeInBytes
      - azure-arm-website.BackupItem.status
      - azure-arm-website.BackupItem.storageAccountUrl
      - azure-arm-website.BackupItem.websiteSizeInBytes
    langs:
      - typeScript
    type: interface
    summary: ''
    extends:
      name: azure-arm-website.ProxyOnlyResource
    package: azure-arm-website
  - uid: azure-arm-website.BackupItem.backupId
    name: backupId
    fullName: backupId
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    optional: true
    syntax:
      content: 'backupId?: number'
      return:
        type:
          - number
    package: azure-arm-website
  - uid: azure-arm-website.BackupItem.backupItemName
    name: backupItemName
    fullName: backupItemName
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    optional: true
    syntax:
      content: 'backupItemName?: string'
      return:
        type:
          - string
    package: azure-arm-website
  - uid: azure-arm-website.BackupItem.blobName
    name: blobName
    fullName: blobName
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    optional: true
    syntax:
      content: 'blobName?: string'
      return:
        type:
          - string
    package: azure-arm-website
  - uid: azure-arm-website.BackupItem.correlationId
    name: correlationId
    fullName: correlationId
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    optional: true
    syntax:
      content: 'correlationId?: string'
      return:
        type:
          - string
    package: azure-arm-website
  - uid: azure-arm-website.BackupItem.created
    name: created
    fullName: created
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    optional: true
    syntax:
      content: 'created?: Date'
      return:
        type:
          - Date
    package: azure-arm-website
  - uid: azure-arm-website.BackupItem.databases
    name: databases
    fullName: databases
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    optional: true
    syntax:
      content: 'databases?: DatabaseBackupSetting[]'
      return:
        type:
          - 'azure-arm-website.DatabaseBackupSetting[]'
    package: azure-arm-website
  - uid: azure-arm-website.BackupItem.finishedTimeStamp
    name: finishedTimeStamp
    fullName: finishedTimeStamp
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    optional: true
    syntax:
      content: 'finishedTimeStamp?: Date'
      return:
        type:
          - Date
    package: azure-arm-website
  - uid: azure-arm-website.BackupItem.lastRestoreTimeStamp
    name: lastRestoreTimeStamp
    fullName: lastRestoreTimeStamp
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    optional: true
    syntax:
      content: 'lastRestoreTimeStamp?: Date'
      return:
        type:
          - Date
    package: azure-arm-website
  - uid: azure-arm-website.BackupItem.log
    name: log
    fullName: log
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    optional: true
    syntax:
      content: 'log?: string'
      return:
        type:
          - string
    package: azure-arm-website
  - uid: azure-arm-website.BackupItem.scheduled
    name: scheduled
    fullName: scheduled
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    optional: true
    syntax:
      content: 'scheduled?: boolean'
      return:
        type:
          - boolean
    package: azure-arm-website
  - uid: azure-arm-website.BackupItem.sizeInBytes
    name: sizeInBytes
    fullName: sizeInBytes
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    optional: true
    syntax:
      content: 'sizeInBytes?: number'
      return:
        type:
          - number
    package: azure-arm-website
  - uid: azure-arm-website.BackupItem.status
    name: status
    fullName: status
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    optional: true
    syntax:
      content: 'status?: string'
      return:
        type:
          - string
    package: azure-arm-website
  - uid: azure-arm-website.BackupItem.storageAccountUrl
    name: storageAccountUrl
    fullName: storageAccountUrl
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    optional: true
    syntax:
      content: 'storageAccountUrl?: string'
      return:
        type:
          - string
    package: azure-arm-website
  - uid: azure-arm-website.BackupItem.websiteSizeInBytes
    name: websiteSizeInBytes
    fullName: websiteSizeInBytes
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    optional: true
    syntax:
      content: 'websiteSizeInBytes?: number'
      return:
        type:
          - number
    package: azure-arm-website
references:
  - uid: azure-arm-website.ProxyOnlyResource
    spec.typeScript:
      - name: ProxyOnlyResource
        fullName: ProxyOnlyResource
        uid: azure-arm-website.ProxyOnlyResource
  - uid: 'azure-arm-website.DatabaseBackupSetting[]'
    spec.typeScript:
      - name: DatabaseBackupSetting
        fullName: DatabaseBackupSetting
        uid: azure-arm-website.DatabaseBackupSetting
      - name: '[]'
        fullName: '[]'
