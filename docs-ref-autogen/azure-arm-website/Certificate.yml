### YamlMime:UniversalReference
items:
  - uid: azure-arm-website.Certificate
    name: Certificate
    fullName: Certificate
    children:
      - azure-arm-website.Certificate.cerBlob
      - azure-arm-website.Certificate.expirationDate
      - azure-arm-website.Certificate.friendlyName
      - azure-arm-website.Certificate.hostingEnvironmentProfile
      - azure-arm-website.Certificate.hostNames
      - azure-arm-website.Certificate.id
      - azure-arm-website.Certificate.issueDate
      - azure-arm-website.Certificate.issuer
      - azure-arm-website.Certificate.keyVaultId
      - azure-arm-website.Certificate.keyVaultSecretName
      - azure-arm-website.Certificate.keyVaultSecretStatus
      - azure-arm-website.Certificate.kind
      - azure-arm-website.Certificate.location
      - azure-arm-website.Certificate.name
      - azure-arm-website.Certificate.password
      - azure-arm-website.Certificate.pfxBlob
      - azure-arm-website.Certificate.publicKeyHash
      - azure-arm-website.Certificate.selfLink
      - azure-arm-website.Certificate.serverFarmId
      - azure-arm-website.Certificate.siteName
      - azure-arm-website.Certificate.subjectName
      - azure-arm-website.Certificate.tags
      - azure-arm-website.Certificate.thumbprint
      - azure-arm-website.Certificate.type
      - azure-arm-website.Certificate.valid
    langs:
      - typeScript
    type: interface
    summary: ''
    extends:
      name: azure-arm-website.Resource
    package: azure-arm-website
  - uid: azure-arm-website.Certificate.cerBlob
    name: cerBlob
    fullName: cerBlob
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    optional: true
    syntax:
      content: 'cerBlob?: Buffer'
      return:
        type:
          - Buffer
    package: azure-arm-website
  - uid: azure-arm-website.Certificate.expirationDate
    name: expirationDate
    fullName: expirationDate
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    optional: true
    syntax:
      content: 'expirationDate?: Date'
      return:
        type:
          - Date
    package: azure-arm-website
  - uid: azure-arm-website.Certificate.friendlyName
    name: friendlyName
    fullName: friendlyName
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    optional: true
    syntax:
      content: 'friendlyName?: string'
      return:
        type:
          - string
    package: azure-arm-website
  - uid: azure-arm-website.Certificate.hostingEnvironmentProfile
    name: hostingEnvironmentProfile
    fullName: hostingEnvironmentProfile
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    optional: true
    syntax:
      content: 'hostingEnvironmentProfile?: HostingEnvironmentProfile'
      return:
        type:
          - azure-arm-website.HostingEnvironmentProfile
    package: azure-arm-website
  - uid: azure-arm-website.Certificate.hostNames
    name: hostNames
    fullName: hostNames
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    optional: true
    syntax:
      content: 'hostNames?: string[]'
      return:
        type:
          - 'string[]'
    package: azure-arm-website
  - uid: azure-arm-website.Certificate.id
    name: id
    fullName: id
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    optional: true
    syntax:
      content: 'id?: string'
      return:
        type:
          - string
    package: azure-arm-website
  - uid: azure-arm-website.Certificate.issueDate
    name: issueDate
    fullName: issueDate
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    optional: true
    syntax:
      content: 'issueDate?: Date'
      return:
        type:
          - Date
    package: azure-arm-website
  - uid: azure-arm-website.Certificate.issuer
    name: issuer
    fullName: issuer
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    optional: true
    syntax:
      content: 'issuer?: string'
      return:
        type:
          - string
    package: azure-arm-website
  - uid: azure-arm-website.Certificate.keyVaultId
    name: keyVaultId
    fullName: keyVaultId
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    optional: true
    syntax:
      content: 'keyVaultId?: string'
      return:
        type:
          - string
    package: azure-arm-website
  - uid: azure-arm-website.Certificate.keyVaultSecretName
    name: keyVaultSecretName
    fullName: keyVaultSecretName
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    optional: true
    syntax:
      content: 'keyVaultSecretName?: string'
      return:
        type:
          - string
    package: azure-arm-website
  - uid: azure-arm-website.Certificate.keyVaultSecretStatus
    name: keyVaultSecretStatus
    fullName: keyVaultSecretStatus
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    optional: true
    syntax:
      content: 'keyVaultSecretStatus?: string'
      return:
        type:
          - string
    package: azure-arm-website
  - uid: azure-arm-website.Certificate.kind
    name: kind
    fullName: kind
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    optional: true
    syntax:
      content: 'kind?: string'
      return:
        type:
          - string
    package: azure-arm-website
  - uid: azure-arm-website.Certificate.location
    name: location
    fullName: location
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'location: string'
      return:
        type:
          - string
    package: azure-arm-website
  - uid: azure-arm-website.Certificate.name
    name: name
    fullName: name
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    optional: true
    syntax:
      content: 'name?: string'
      return:
        type:
          - string
    package: azure-arm-website
  - uid: azure-arm-website.Certificate.password
    name: password
    fullName: password
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'password: string'
      return:
        type:
          - string
    package: azure-arm-website
  - uid: azure-arm-website.Certificate.pfxBlob
    name: pfxBlob
    fullName: pfxBlob
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    optional: true
    syntax:
      content: 'pfxBlob?: Buffer'
      return:
        type:
          - Buffer
    package: azure-arm-website
  - uid: azure-arm-website.Certificate.publicKeyHash
    name: publicKeyHash
    fullName: publicKeyHash
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    optional: true
    syntax:
      content: 'publicKeyHash?: string'
      return:
        type:
          - string
    package: azure-arm-website
  - uid: azure-arm-website.Certificate.selfLink
    name: selfLink
    fullName: selfLink
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    optional: true
    syntax:
      content: 'selfLink?: string'
      return:
        type:
          - string
    package: azure-arm-website
  - uid: azure-arm-website.Certificate.serverFarmId
    name: serverFarmId
    fullName: serverFarmId
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    optional: true
    syntax:
      content: 'serverFarmId?: string'
      return:
        type:
          - string
    package: azure-arm-website
  - uid: azure-arm-website.Certificate.siteName
    name: siteName
    fullName: siteName
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    optional: true
    syntax:
      content: 'siteName?: string'
      return:
        type:
          - string
    package: azure-arm-website
  - uid: azure-arm-website.Certificate.subjectName
    name: subjectName
    fullName: subjectName
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    optional: true
    syntax:
      content: 'subjectName?: string'
      return:
        type:
          - string
    package: azure-arm-website
  - uid: azure-arm-website.Certificate.tags
    name: tags
    fullName: tags
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    optional: true
    syntax:
      content: 'tags?: [key: string]: string'
      return:
        type:
          - '[key: string]: string'
    package: azure-arm-website
  - uid: azure-arm-website.Certificate.thumbprint
    name: thumbprint
    fullName: thumbprint
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    optional: true
    syntax:
      content: 'thumbprint?: string'
      return:
        type:
          - string
    package: azure-arm-website
  - uid: azure-arm-website.Certificate.type
    name: type
    fullName: type
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    optional: true
    syntax:
      content: 'type?: string'
      return:
        type:
          - string
    package: azure-arm-website
  - uid: azure-arm-website.Certificate.valid
    name: valid
    fullName: valid
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    optional: true
    syntax:
      content: 'valid?: boolean'
      return:
        type:
          - boolean
    package: azure-arm-website
references:
  - uid: azure-arm-website.Resource
    name: Resource
    spec.typeScript:
      - name: Resource
        fullName: Resource
        uid: azure-arm-website.Resource
  - uid: azure-arm-website.HostingEnvironmentProfile
    name: HostingEnvironmentProfile
    spec.typeScript:
      - name: HostingEnvironmentProfile
        fullName: HostingEnvironmentProfile
        uid: azure-arm-website.HostingEnvironmentProfile
