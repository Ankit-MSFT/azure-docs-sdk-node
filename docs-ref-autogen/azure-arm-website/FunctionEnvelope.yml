### YamlMime:UniversalReference
items:
  - uid: azure-arm-website.FunctionEnvelope
    name: FunctionEnvelope
    fullName: FunctionEnvelope
    children:
      - azure-arm-website.FunctionEnvelope.config
      - azure-arm-website.FunctionEnvelope.configHref
      - azure-arm-website.FunctionEnvelope.files
      - azure-arm-website.FunctionEnvelope.functionAppId
      - azure-arm-website.FunctionEnvelope.href
      - azure-arm-website.FunctionEnvelope.id
      - azure-arm-website.FunctionEnvelope.kind
      - azure-arm-website.FunctionEnvelope.name
      - azure-arm-website.FunctionEnvelope.scriptHref
      - azure-arm-website.FunctionEnvelope.scriptRootPathHref
      - azure-arm-website.FunctionEnvelope.secretsFileHref
      - azure-arm-website.FunctionEnvelope.testData
      - azure-arm-website.FunctionEnvelope.type
    langs:
      - typeScript
    type: interface
    summary: ''
    extends:
      name: azure-arm-website.ProxyOnlyResource
    package: azure-arm-website
  - uid: azure-arm-website.FunctionEnvelope.config
    name: config
    fullName: config
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    optional: true
    syntax:
      content: 'config?: any'
      return:
        type:
          - any
    package: azure-arm-website
  - uid: azure-arm-website.FunctionEnvelope.configHref
    name: configHref
    fullName: configHref
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    optional: true
    syntax:
      content: 'configHref?: string'
      return:
        type:
          - string
    package: azure-arm-website
  - uid: azure-arm-website.FunctionEnvelope.files
    name: files
    fullName: files
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    optional: true
    syntax:
      content: 'files?: [key: string]: string'
      return:
        type:
          - '[key: string]: string'
    package: azure-arm-website
  - uid: azure-arm-website.FunctionEnvelope.functionAppId
    name: functionAppId
    fullName: functionAppId
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    optional: true
    syntax:
      content: 'functionAppId?: string'
      return:
        type:
          - string
    package: azure-arm-website
  - uid: azure-arm-website.FunctionEnvelope.href
    name: href
    fullName: href
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    optional: true
    syntax:
      content: 'href?: string'
      return:
        type:
          - string
    package: azure-arm-website
  - uid: azure-arm-website.FunctionEnvelope.id
    name: id
    fullName: id
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    optional: true
    syntax:
      content: 'id?: string'
      return:
        type:
          - string
    package: azure-arm-website
  - uid: azure-arm-website.FunctionEnvelope.kind
    name: kind
    fullName: kind
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    optional: true
    syntax:
      content: 'kind?: string'
      return:
        type:
          - string
    package: azure-arm-website
  - uid: azure-arm-website.FunctionEnvelope.name
    name: name
    fullName: name
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    optional: true
    syntax:
      content: 'name?: string'
      return:
        type:
          - string
    package: azure-arm-website
  - uid: azure-arm-website.FunctionEnvelope.scriptHref
    name: scriptHref
    fullName: scriptHref
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    optional: true
    syntax:
      content: 'scriptHref?: string'
      return:
        type:
          - string
    package: azure-arm-website
  - uid: azure-arm-website.FunctionEnvelope.scriptRootPathHref
    name: scriptRootPathHref
    fullName: scriptRootPathHref
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    optional: true
    syntax:
      content: 'scriptRootPathHref?: string'
      return:
        type:
          - string
    package: azure-arm-website
  - uid: azure-arm-website.FunctionEnvelope.secretsFileHref
    name: secretsFileHref
    fullName: secretsFileHref
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    optional: true
    syntax:
      content: 'secretsFileHref?: string'
      return:
        type:
          - string
    package: azure-arm-website
  - uid: azure-arm-website.FunctionEnvelope.testData
    name: testData
    fullName: testData
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    optional: true
    syntax:
      content: 'testData?: string'
      return:
        type:
          - string
    package: azure-arm-website
  - uid: azure-arm-website.FunctionEnvelope.type
    name: type
    fullName: type
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    optional: true
    syntax:
      content: 'type?: string'
      return:
        type:
          - string
    package: azure-arm-website
references:
  - uid: azure-arm-website.ProxyOnlyResource
    name: ProxyOnlyResource
    spec.typeScript:
      - name: ProxyOnlyResource
        fullName: ProxyOnlyResource
        uid: azure-arm-website.ProxyOnlyResource
