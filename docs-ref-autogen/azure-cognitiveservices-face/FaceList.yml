### YamlMime:UniversalReference
items:
  - uid: azure-cognitiveservices-face.FaceList
    name: FaceList
    fullName: FaceList
    children:
      - azure-cognitiveservices-face.FaceList.addFace
      - azure-cognitiveservices-face.FaceList.addFace_1
      - azure-cognitiveservices-face.FaceList.addFace_2
      - azure-cognitiveservices-face.FaceList.addFaceFromStream_1
      - azure-cognitiveservices-face.FaceList.addFaceFromStream
      - azure-cognitiveservices-face.FaceList.addFaceFromStream_2
      - >-
        azure-cognitiveservices-face.FaceList.addFaceFromStreamWithHttpOperationResponse
      - azure-cognitiveservices-face.FaceList.addFaceWithHttpOperationResponse
      - azure-cognitiveservices-face.FaceList.create_1
      - azure-cognitiveservices-face.FaceList.create
      - azure-cognitiveservices-face.FaceList.create_2
      - azure-cognitiveservices-face.FaceList.createWithHttpOperationResponse
      - azure-cognitiveservices-face.FaceList.deleteFace
      - azure-cognitiveservices-face.FaceList.deleteFace_1
      - azure-cognitiveservices-face.FaceList.deleteFace_2
      - >-
        azure-cognitiveservices-face.FaceList.deleteFaceWithHttpOperationResponse
      - azure-cognitiveservices-face.FaceList.deleteMethod
      - azure-cognitiveservices-face.FaceList.deleteMethod_1
      - azure-cognitiveservices-face.FaceList.deleteMethod_2
      - >-
        azure-cognitiveservices-face.FaceList.deleteMethodWithHttpOperationResponse
      - azure-cognitiveservices-face.FaceList.get_1
      - azure-cognitiveservices-face.FaceList.get_2
      - azure-cognitiveservices-face.FaceList.get
      - azure-cognitiveservices-face.FaceList.getWithHttpOperationResponse
      - azure-cognitiveservices-face.FaceList.list
      - azure-cognitiveservices-face.FaceList.list_1
      - azure-cognitiveservices-face.FaceList.list_2
      - azure-cognitiveservices-face.FaceList.listWithHttpOperationResponse
      - azure-cognitiveservices-face.FaceList.update
      - azure-cognitiveservices-face.FaceList.update_1
      - azure-cognitiveservices-face.FaceList.update_2
      - azure-cognitiveservices-face.FaceList.updateWithHttpOperationResponse
    langs:
      - typeScript
    type: interface
    summary: ''
    package: azure-cognitiveservices-face
  - uid: azure-cognitiveservices-face.FaceList.addFace
    name: addFace
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      Add a face to a face list. The input face is specified as an image with a
      targetFace rectangle. It returns a persistedFaceId representing the added
      face, and persistedFaceId will not expire.
    syntax:
      content: 'function addFace(faceListId: string, url: string, options?: Object)'
      parameters:
        - id: faceListId
          type:
            - string
          description: |
            Id referencing a Face List.
        - id: url
          type:
            - string
          description: |+

        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<azure-cognitiveservices-face.PersistedFaceResult>
    package: azure-cognitiveservices-face
  - uid: azure-cognitiveservices-face.FaceList.addFace_1
    name: addFace
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      Add a face to a face list. The input face is specified as an image with a
      targetFace rectangle. It returns a persistedFaceId representing the added
      face, and persistedFaceId will not expire.
    syntax:
      content: >-
        function addFace(faceListId: string, url: string, callback:
        ServiceCallback<PersistedFaceResult>)
      parameters:
        - id: faceListId
          type:
            - string
          description: ''
        - id: url
          type:
            - string
          description: ''
        - id: callback
          type:
            - ServiceCallback<azure-cognitiveservices-face.PersistedFaceResult>
          description: ''
      return:
        type:
          - Promise<azure-cognitiveservices-face.PersistedFaceResult>
    package: azure-cognitiveservices-face
  - uid: azure-cognitiveservices-face.FaceList.addFace_2
    name: addFace
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      Add a face to a face list. The input face is specified as an image with a
      targetFace rectangle. It returns a persistedFaceId representing the added
      face, and persistedFaceId will not expire.
    syntax:
      content: >-
        function addFace(faceListId: string, url: string, options: Object,
        callback: ServiceCallback<PersistedFaceResult>)
      parameters:
        - id: faceListId
          type:
            - string
          description: ''
        - id: url
          type:
            - string
          description: ''
        - id: options
          type:
            - Object
          description: ''
        - id: callback
          type:
            - ServiceCallback<azure-cognitiveservices-face.PersistedFaceResult>
          description: ''
      return:
        type:
          - Promise<azure-cognitiveservices-face.PersistedFaceResult>
    package: azure-cognitiveservices-face
  - uid: azure-cognitiveservices-face.FaceList.addFaceFromStream_1
    name: addFaceFromStream
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      Add a face to a face list. The input face is specified as an image with a
      targetFace rectangle. It returns a persistedFaceId representing the added
      face, and persistedFaceId will not expire.
    syntax:
      content: >-
        function addFaceFromStream(faceListId: string, callback:
        ServiceCallback<PersistedFaceResult>)
      parameters:
        - id: faceListId
          type:
            - string
          description: ''
        - id: callback
          type:
            - ServiceCallback<azure-cognitiveservices-face.PersistedFaceResult>
          description: ''
      return:
        type:
          - Promise<azure-cognitiveservices-face.PersistedFaceResult>
    package: azure-cognitiveservices-face
  - uid: azure-cognitiveservices-face.FaceList.addFaceFromStream
    name: addFaceFromStream
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      Add a face to a face list. The input face is specified as an image with a
      targetFace rectangle. It returns a persistedFaceId representing the added
      face, and persistedFaceId will not expire.
    syntax:
      content: 'function addFaceFromStream(faceListId: string, options?: Object)'
      parameters:
        - id: faceListId
          type:
            - string
          description: |
            Id referencing a Face List.
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<azure-cognitiveservices-face.PersistedFaceResult>
    package: azure-cognitiveservices-face
  - uid: azure-cognitiveservices-face.FaceList.addFaceFromStream_2
    name: addFaceFromStream
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      Add a face to a face list. The input face is specified as an image with a
      targetFace rectangle. It returns a persistedFaceId representing the added
      face, and persistedFaceId will not expire.
    syntax:
      content: >-
        function addFaceFromStream(faceListId: string, options: Object,
        callback: ServiceCallback<PersistedFaceResult>)
      parameters:
        - id: faceListId
          type:
            - string
          description: ''
        - id: options
          type:
            - Object
          description: ''
        - id: callback
          type:
            - ServiceCallback<azure-cognitiveservices-face.PersistedFaceResult>
          description: ''
      return:
        type:
          - Promise<azure-cognitiveservices-face.PersistedFaceResult>
    package: azure-cognitiveservices-face
  - uid: >-
      azure-cognitiveservices-face.FaceList.addFaceFromStreamWithHttpOperationResponse
    name: addFaceFromStreamWithHttpOperationResponse
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      Add a face to a face list. The input face is specified as an image with a
      targetFace rectangle. It returns a persistedFaceId representing the added
      face, and persistedFaceId will not expire.
    syntax:
      content: >-
        function addFaceFromStreamWithHttpOperationResponse(faceListId: string,
        options?: Object)
      parameters:
        - id: faceListId
          type:
            - string
          description: |
            Id referencing a Face List.
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - >-
            Promise<HttpOperationResponse<azure-cognitiveservices-face.PersistedFaceResult>>
    package: azure-cognitiveservices-face
  - uid: azure-cognitiveservices-face.FaceList.addFaceWithHttpOperationResponse
    name: addFaceWithHttpOperationResponse
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      Add a face to a face list. The input face is specified as an image with a
      targetFace rectangle. It returns a persistedFaceId representing the added
      face, and persistedFaceId will not expire.
    syntax:
      content: >-
        function addFaceWithHttpOperationResponse(faceListId: string, url:
        string, options?: Object)
      parameters:
        - id: faceListId
          type:
            - string
          description: |
            Id referencing a Face List.
        - id: url
          type:
            - string
          description: |+

        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - >-
            Promise<HttpOperationResponse<azure-cognitiveservices-face.PersistedFaceResult>>
    package: azure-cognitiveservices-face
  - uid: azure-cognitiveservices-face.FaceList.create_1
    name: create
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      Create an empty face list. Up to 64 face lists are allowed to exist in one
      subscription.
    syntax:
      content: 'function create(faceListId: string, callback: ServiceCallback<void>)'
      parameters:
        - id: faceListId
          type:
            - string
          description: ''
        - id: callback
          type:
            - ServiceCallback<void>
          description: ''
      return:
        type:
          - Promise<void>
    package: azure-cognitiveservices-face
  - uid: azure-cognitiveservices-face.FaceList.create
    name: create
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      Create an empty face list. Up to 64 face lists are allowed to exist in one
      subscription.
    syntax:
      content: 'function create(faceListId: string, options?: Object)'
      parameters:
        - id: faceListId
          type:
            - string
          description: |
            Id referencing a particular face list.
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<void>
    package: azure-cognitiveservices-face
  - uid: azure-cognitiveservices-face.FaceList.create_2
    name: create
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      Create an empty face list. Up to 64 face lists are allowed to exist in one
      subscription.
    syntax:
      content: >-
        function create(faceListId: string, options: Object, callback:
        ServiceCallback<void>)
      parameters:
        - id: faceListId
          type:
            - string
          description: ''
        - id: options
          type:
            - Object
          description: ''
        - id: callback
          type:
            - ServiceCallback<void>
          description: ''
      return:
        type:
          - Promise<void>
    package: azure-cognitiveservices-face
  - uid: azure-cognitiveservices-face.FaceList.createWithHttpOperationResponse
    name: createWithHttpOperationResponse
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      Create an empty face list. Up to 64 face lists are allowed to exist in one
      subscription.
    syntax:
      content: >-
        function createWithHttpOperationResponse(faceListId: string, options?:
        Object)
      parameters:
        - id: faceListId
          type:
            - string
          description: |
            Id referencing a particular face list.
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<HttpOperationResponse<void>>
    package: azure-cognitiveservices-face
  - uid: azure-cognitiveservices-face.FaceList.deleteFace
    name: deleteFace
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      Delete an existing face from a face list (given by a persisitedFaceId and
      a

      faceListId). Persisted image related to the face will also be deleted.
    syntax:
      content: >-
        function deleteFace(faceListId: string, persistedFaceId: string,
        options?: Object)
      parameters:
        - id: faceListId
          type:
            - string
          description: |
            faceListId of an existing face list.
        - id: persistedFaceId
          type:
            - string
          description: |
            persistedFaceId of an existing face.
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<void>
    package: azure-cognitiveservices-face
  - uid: azure-cognitiveservices-face.FaceList.deleteFace_1
    name: deleteFace
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      Delete an existing face from a face list (given by a persisitedFaceId and
      a

      faceListId). Persisted image related to the face will also be deleted.
    syntax:
      content: >-
        function deleteFace(faceListId: string, persistedFaceId: string,
        callback: ServiceCallback<void>)
      parameters:
        - id: faceListId
          type:
            - string
          description: ''
        - id: persistedFaceId
          type:
            - string
          description: ''
        - id: callback
          type:
            - ServiceCallback<void>
          description: ''
      return:
        type:
          - Promise<void>
    package: azure-cognitiveservices-face
  - uid: azure-cognitiveservices-face.FaceList.deleteFace_2
    name: deleteFace
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      Delete an existing face from a face list (given by a persisitedFaceId and
      a

      faceListId). Persisted image related to the face will also be deleted.
    syntax:
      content: >-
        function deleteFace(faceListId: string, persistedFaceId: string,
        options: Object, callback: ServiceCallback<void>)
      parameters:
        - id: faceListId
          type:
            - string
          description: ''
        - id: persistedFaceId
          type:
            - string
          description: ''
        - id: options
          type:
            - Object
          description: ''
        - id: callback
          type:
            - ServiceCallback<void>
          description: ''
      return:
        type:
          - Promise<void>
    package: azure-cognitiveservices-face
  - uid: azure-cognitiveservices-face.FaceList.deleteFaceWithHttpOperationResponse
    name: deleteFaceWithHttpOperationResponse
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      Delete an existing face from a face list (given by a persisitedFaceId and
      a

      faceListId). Persisted image related to the face will also be deleted.
    syntax:
      content: >-
        function deleteFaceWithHttpOperationResponse(faceListId: string,
        persistedFaceId: string, options?: Object)
      parameters:
        - id: faceListId
          type:
            - string
          description: |
            faceListId of an existing face list.
        - id: persistedFaceId
          type:
            - string
          description: |
            persistedFaceId of an existing face.
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<HttpOperationResponse<void>>
    package: azure-cognitiveservices-face
  - uid: azure-cognitiveservices-face.FaceList.deleteMethod
    name: deleteMethod
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      Delete an existing face list according to faceListId. Persisted face
      images

      in the face list will also be deleted.
    syntax:
      content: 'function deleteMethod(faceListId: string, options?: Object)'
      parameters:
        - id: faceListId
          type:
            - string
          description: |
            Id referencing a Face List.
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<void>
    package: azure-cognitiveservices-face
  - uid: azure-cognitiveservices-face.FaceList.deleteMethod_1
    name: deleteMethod
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      Delete an existing face list according to faceListId. Persisted face
      images

      in the face list will also be deleted.
    syntax:
      content: >-
        function deleteMethod(faceListId: string, callback:
        ServiceCallback<void>)
      parameters:
        - id: faceListId
          type:
            - string
          description: ''
        - id: callback
          type:
            - ServiceCallback<void>
          description: ''
      return:
        type:
          - Promise<void>
    package: azure-cognitiveservices-face
  - uid: azure-cognitiveservices-face.FaceList.deleteMethod_2
    name: deleteMethod
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      Delete an existing face list according to faceListId. Persisted face
      images

      in the face list will also be deleted.
    syntax:
      content: >-
        function deleteMethod(faceListId: string, options: Object, callback:
        ServiceCallback<void>)
      parameters:
        - id: faceListId
          type:
            - string
          description: ''
        - id: options
          type:
            - Object
          description: ''
        - id: callback
          type:
            - ServiceCallback<void>
          description: ''
      return:
        type:
          - Promise<void>
    package: azure-cognitiveservices-face
  - uid: >-
      azure-cognitiveservices-face.FaceList.deleteMethodWithHttpOperationResponse
    name: deleteMethodWithHttpOperationResponse
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      Delete an existing face list according to faceListId. Persisted face
      images

      in the face list will also be deleted.
    syntax:
      content: >-
        function deleteMethodWithHttpOperationResponse(faceListId: string,
        options?: Object)
      parameters:
        - id: faceListId
          type:
            - string
          description: |
            Id referencing a Face List.
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<HttpOperationResponse<void>>
    package: azure-cognitiveservices-face
  - uid: azure-cognitiveservices-face.FaceList.get_1
    name: get
    children: []
    type: method
    langs:
      - typeScript
    summary: Retrieve a face list's information.
    syntax:
      content: >-
        function get(faceListId: string, callback:
        ServiceCallback<GetFaceListResult>)
      parameters:
        - id: faceListId
          type:
            - string
          description: ''
        - id: callback
          type:
            - ServiceCallback<azure-cognitiveservices-face.GetFaceListResult>
          description: ''
      return:
        type:
          - Promise<azure-cognitiveservices-face.GetFaceListResult>
    package: azure-cognitiveservices-face
  - uid: azure-cognitiveservices-face.FaceList.get_2
    name: get
    children: []
    type: method
    langs:
      - typeScript
    summary: Retrieve a face list's information.
    syntax:
      content: >-
        function get(faceListId: string, options: Object, callback:
        ServiceCallback<GetFaceListResult>)
      parameters:
        - id: faceListId
          type:
            - string
          description: ''
        - id: options
          type:
            - Object
          description: ''
        - id: callback
          type:
            - ServiceCallback<azure-cognitiveservices-face.GetFaceListResult>
          description: ''
      return:
        type:
          - Promise<azure-cognitiveservices-face.GetFaceListResult>
    package: azure-cognitiveservices-face
  - uid: azure-cognitiveservices-face.FaceList.get
    name: get
    children: []
    type: method
    langs:
      - typeScript
    summary: Retrieve a face list's information.
    syntax:
      content: 'function get(faceListId: string, options?: Object)'
      parameters:
        - id: faceListId
          type:
            - string
          description: |
            Id referencing a Face List.
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<azure-cognitiveservices-face.GetFaceListResult>
    package: azure-cognitiveservices-face
  - uid: azure-cognitiveservices-face.FaceList.getWithHttpOperationResponse
    name: getWithHttpOperationResponse
    children: []
    type: method
    langs:
      - typeScript
    summary: Retrieve a face list's information.
    syntax:
      content: >-
        function getWithHttpOperationResponse(faceListId: string, options?:
        Object)
      parameters:
        - id: faceListId
          type:
            - string
          description: |
            Id referencing a Face List.
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - >-
            Promise<HttpOperationResponse<azure-cognitiveservices-face.GetFaceListResult>>
    package: azure-cognitiveservices-face
  - uid: azure-cognitiveservices-face.FaceList.list
    name: list
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      Retrieve information about all existing face lists. Only faceListId, name
      and userData will be returned.
    syntax:
      content: 'function list(options?: Object)'
      parameters:
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - 'Promise<azure-cognitiveservices-face.GetFaceListResult[]>'
    package: azure-cognitiveservices-face
  - uid: azure-cognitiveservices-face.FaceList.list_1
    name: list
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      Retrieve information about all existing face lists. Only faceListId, name
      and userData will be returned.
    syntax:
      content: 'function list(callback: ServiceCallback<GetFaceListResult[]>)'
      parameters:
        - id: callback
          type:
            - 'ServiceCallback<azure-cognitiveservices-face.GetFaceListResult[]>'
          description: ''
      return:
        type:
          - 'Promise<azure-cognitiveservices-face.GetFaceListResult[]>'
    package: azure-cognitiveservices-face
  - uid: azure-cognitiveservices-face.FaceList.list_2
    name: list
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      Retrieve information about all existing face lists. Only faceListId, name
      and userData will be returned.
    syntax:
      content: >-
        function list(options: Object, callback:
        ServiceCallback<GetFaceListResult[]>)
      parameters:
        - id: options
          type:
            - Object
          description: ''
        - id: callback
          type:
            - 'ServiceCallback<azure-cognitiveservices-face.GetFaceListResult[]>'
          description: ''
      return:
        type:
          - 'Promise<azure-cognitiveservices-face.GetFaceListResult[]>'
    package: azure-cognitiveservices-face
  - uid: azure-cognitiveservices-face.FaceList.listWithHttpOperationResponse
    name: listWithHttpOperationResponse
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      Retrieve information about all existing face lists. Only faceListId, name
      and userData will be returned.
    syntax:
      content: 'function listWithHttpOperationResponse(options?: Object)'
      parameters:
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - >-
            Promise<HttpOperationResponse<azure-cognitiveservices-face.GetFaceListResult[]>>
    package: azure-cognitiveservices-face
  - uid: azure-cognitiveservices-face.FaceList.update
    name: update
    children: []
    type: method
    langs:
      - typeScript
    summary: Update information of a face list.
    syntax:
      content: 'function update(faceListId: string, options?: Object)'
      parameters:
        - id: faceListId
          type:
            - string
          description: |
            Id referencing a Face List.
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<void>
    package: azure-cognitiveservices-face
  - uid: azure-cognitiveservices-face.FaceList.update_1
    name: update
    children: []
    type: method
    langs:
      - typeScript
    summary: Update information of a face list.
    syntax:
      content: 'function update(faceListId: string, callback: ServiceCallback<void>)'
      parameters:
        - id: faceListId
          type:
            - string
          description: ''
        - id: callback
          type:
            - ServiceCallback<void>
          description: ''
      return:
        type:
          - Promise<void>
    package: azure-cognitiveservices-face
  - uid: azure-cognitiveservices-face.FaceList.update_2
    name: update
    children: []
    type: method
    langs:
      - typeScript
    summary: Update information of a face list.
    syntax:
      content: >-
        function update(faceListId: string, options: Object, callback:
        ServiceCallback<void>)
      parameters:
        - id: faceListId
          type:
            - string
          description: ''
        - id: options
          type:
            - Object
          description: ''
        - id: callback
          type:
            - ServiceCallback<void>
          description: ''
      return:
        type:
          - Promise<void>
    package: azure-cognitiveservices-face
  - uid: azure-cognitiveservices-face.FaceList.updateWithHttpOperationResponse
    name: updateWithHttpOperationResponse
    children: []
    type: method
    langs:
      - typeScript
    summary: Update information of a face list.
    syntax:
      content: >-
        function updateWithHttpOperationResponse(faceListId: string, options?:
        Object)
      parameters:
        - id: faceListId
          type:
            - string
          description: |
            Id referencing a Face List.
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<HttpOperationResponse<void>>
    package: azure-cognitiveservices-face
references:
  - uid: Promise<azure-cognitiveservices-face.PersistedFaceResult>
    spec.typeScript:
      - name: Promise<
        fullName: Promise<
      - name: PersistedFaceResult
        fullName: PersistedFaceResult
        uid: azure-cognitiveservices-face.PersistedFaceResult
      - name: '>'
        fullName: '>'
  - uid: ServiceCallback<azure-cognitiveservices-face.PersistedFaceResult>
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: PersistedFaceResult
        fullName: PersistedFaceResult
        uid: azure-cognitiveservices-face.PersistedFaceResult
      - name: '>'
        fullName: '>'
  - uid: >-
      Promise<HttpOperationResponse<azure-cognitiveservices-face.PersistedFaceResult>>
    spec.typeScript:
      - name: Promise<HttpOperationResponse<
        fullName: Promise<HttpOperationResponse<
      - name: PersistedFaceResult
        fullName: PersistedFaceResult
        uid: azure-cognitiveservices-face.PersistedFaceResult
      - name: '>>'
        fullName: '>>'
  - uid: Promise<azure-cognitiveservices-face.GetFaceListResult>
    spec.typeScript:
      - name: Promise<
        fullName: Promise<
      - name: GetFaceListResult
        fullName: GetFaceListResult
        uid: azure-cognitiveservices-face.GetFaceListResult
      - name: '>'
        fullName: '>'
  - uid: ServiceCallback<azure-cognitiveservices-face.GetFaceListResult>
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: GetFaceListResult
        fullName: GetFaceListResult
        uid: azure-cognitiveservices-face.GetFaceListResult
      - name: '>'
        fullName: '>'
  - uid: >-
      Promise<HttpOperationResponse<azure-cognitiveservices-face.GetFaceListResult>>
    spec.typeScript:
      - name: Promise<HttpOperationResponse<
        fullName: Promise<HttpOperationResponse<
      - name: GetFaceListResult
        fullName: GetFaceListResult
        uid: azure-cognitiveservices-face.GetFaceListResult
      - name: '>>'
        fullName: '>>'
  - uid: 'Promise<azure-cognitiveservices-face.GetFaceListResult[]>'
    spec.typeScript:
      - name: Promise<
        fullName: Promise<
      - name: GetFaceListResult
        fullName: GetFaceListResult
        uid: azure-cognitiveservices-face.GetFaceListResult
      - name: '[]>'
        fullName: '[]>'
  - uid: 'ServiceCallback<azure-cognitiveservices-face.GetFaceListResult[]>'
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: GetFaceListResult
        fullName: GetFaceListResult
        uid: azure-cognitiveservices-face.GetFaceListResult
      - name: '[]>'
        fullName: '[]>'
  - uid: >-
      Promise<HttpOperationResponse<azure-cognitiveservices-face.GetFaceListResult[]>>
    spec.typeScript:
      - name: Promise<HttpOperationResponse<
        fullName: Promise<HttpOperationResponse<
      - name: GetFaceListResult
        fullName: GetFaceListResult
        uid: azure-cognitiveservices-face.GetFaceListResult
      - name: '[]>>'
        fullName: '[]>>'
