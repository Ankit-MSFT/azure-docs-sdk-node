### YamlMime:UniversalReference
items:
  - uid: azure-cognitiveservices-face.LargePersonGroupPerson
    name: LargePersonGroupPerson
    fullName: LargePersonGroupPerson
    children:
      - azure-cognitiveservices-face.LargePersonGroupPerson.addFaceFromStream
      - azure-cognitiveservices-face.LargePersonGroupPerson.addFaceFromStream_1
      - azure-cognitiveservices-face.LargePersonGroupPerson.addFaceFromStream_2
      - >-
        azure-cognitiveservices-face.LargePersonGroupPerson.addFaceFromStreamWithHttpOperationResponse
      - azure-cognitiveservices-face.LargePersonGroupPerson.addFaceFromUrl
      - azure-cognitiveservices-face.LargePersonGroupPerson.addFaceFromUrl_2
      - azure-cognitiveservices-face.LargePersonGroupPerson.addFaceFromUrl_1
      - >-
        azure-cognitiveservices-face.LargePersonGroupPerson.addFaceFromUrlWithHttpOperationResponse
      - azure-cognitiveservices-face.LargePersonGroupPerson.create
      - azure-cognitiveservices-face.LargePersonGroupPerson.create_1
      - azure-cognitiveservices-face.LargePersonGroupPerson.create_2
      - >-
        azure-cognitiveservices-face.LargePersonGroupPerson.createWithHttpOperationResponse
      - azure-cognitiveservices-face.LargePersonGroupPerson.deleteFace_1
      - azure-cognitiveservices-face.LargePersonGroupPerson.deleteFace_2
      - azure-cognitiveservices-face.LargePersonGroupPerson.deleteFace
      - >-
        azure-cognitiveservices-face.LargePersonGroupPerson.deleteFaceWithHttpOperationResponse
      - azure-cognitiveservices-face.LargePersonGroupPerson.deleteMethod
      - azure-cognitiveservices-face.LargePersonGroupPerson.deleteMethod_1
      - azure-cognitiveservices-face.LargePersonGroupPerson.deleteMethod_2
      - >-
        azure-cognitiveservices-face.LargePersonGroupPerson.deleteMethodWithHttpOperationResponse
      - azure-cognitiveservices-face.LargePersonGroupPerson.get
      - azure-cognitiveservices-face.LargePersonGroupPerson.get_1
      - azure-cognitiveservices-face.LargePersonGroupPerson.get_2
      - azure-cognitiveservices-face.LargePersonGroupPerson.getFace
      - azure-cognitiveservices-face.LargePersonGroupPerson.getFace_2
      - azure-cognitiveservices-face.LargePersonGroupPerson.getFace_1
      - >-
        azure-cognitiveservices-face.LargePersonGroupPerson.getFaceWithHttpOperationResponse
      - >-
        azure-cognitiveservices-face.LargePersonGroupPerson.getWithHttpOperationResponse
      - azure-cognitiveservices-face.LargePersonGroupPerson.list
      - azure-cognitiveservices-face.LargePersonGroupPerson.list_1
      - azure-cognitiveservices-face.LargePersonGroupPerson.list_2
      - >-
        azure-cognitiveservices-face.LargePersonGroupPerson.listWithHttpOperationResponse
      - azure-cognitiveservices-face.LargePersonGroupPerson.update
      - azure-cognitiveservices-face.LargePersonGroupPerson.update_1
      - azure-cognitiveservices-face.LargePersonGroupPerson.update_2
      - azure-cognitiveservices-face.LargePersonGroupPerson.updateFace
      - azure-cognitiveservices-face.LargePersonGroupPerson.updateFace_1
      - azure-cognitiveservices-face.LargePersonGroupPerson.updateFace_2
      - >-
        azure-cognitiveservices-face.LargePersonGroupPerson.updateFaceWithHttpOperationResponse
      - >-
        azure-cognitiveservices-face.LargePersonGroupPerson.updateWithHttpOperationResponse
    langs:
      - typeScript
    type: interface
    summary: ''
    package: azure-cognitiveservices-face
  - uid: azure-cognitiveservices-face.LargePersonGroupPerson.addFaceFromStream
    name: addFaceFromStream
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      Add a representative face to a person for identification. The input face
      is

      specified as an image with a targetFace rectangle.
    syntax:
      content: >-
        function addFaceFromStream(largePersonGroupId: string, personId: string,
        image: stream.Readable, options?: Object)
      parameters:
        - id: largePersonGroupId
          type:
            - string
          description: |
            Id referencing a particular large person
            group.
        - id: personId
          type:
            - string
          description: |
            Id referencing a particular person.
        - id: image
          type:
            - stream.Readable
          description: |
            An image stream.
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<azure-cognitiveservices-face.PersistedFace>
    package: azure-cognitiveservices-face
  - uid: azure-cognitiveservices-face.LargePersonGroupPerson.addFaceFromStream_1
    name: addFaceFromStream
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      Add a representative face to a person for identification. The input face
      is

      specified as an image with a targetFace rectangle.
    syntax:
      content: >-
        function addFaceFromStream(largePersonGroupId: string, personId: string,
        image: stream.Readable, callback: ServiceCallback<PersistedFace>)
      parameters:
        - id: largePersonGroupId
          type:
            - string
          description: ''
        - id: personId
          type:
            - string
          description: ''
        - id: image
          type:
            - stream.Readable
          description: ''
        - id: callback
          type:
            - ServiceCallback<azure-cognitiveservices-face.PersistedFace>
          description: ''
      return:
        type:
          - Promise<azure-cognitiveservices-face.PersistedFace>
    package: azure-cognitiveservices-face
  - uid: azure-cognitiveservices-face.LargePersonGroupPerson.addFaceFromStream_2
    name: addFaceFromStream
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      Add a representative face to a person for identification. The input face
      is

      specified as an image with a targetFace rectangle.
    syntax:
      content: >-
        function addFaceFromStream(largePersonGroupId: string, personId: string,
        image: stream.Readable, options: Object, callback:
        ServiceCallback<PersistedFace>)
      parameters:
        - id: largePersonGroupId
          type:
            - string
          description: ''
        - id: personId
          type:
            - string
          description: ''
        - id: image
          type:
            - stream.Readable
          description: ''
        - id: options
          type:
            - Object
          description: ''
        - id: callback
          type:
            - ServiceCallback<azure-cognitiveservices-face.PersistedFace>
          description: ''
      return:
        type:
          - Promise<azure-cognitiveservices-face.PersistedFace>
    package: azure-cognitiveservices-face
  - uid: >-
      azure-cognitiveservices-face.LargePersonGroupPerson.addFaceFromStreamWithHttpOperationResponse
    name: addFaceFromStreamWithHttpOperationResponse
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      Add a representative face to a person for identification. The input face
      is

      specified as an image with a targetFace rectangle.
    syntax:
      content: >-
        function addFaceFromStreamWithHttpOperationResponse(largePersonGroupId:
        string, personId: string, image: stream.Readable, options?: Object)
      parameters:
        - id: largePersonGroupId
          type:
            - string
          description: |
            Id referencing a particular large person
            group.
        - id: personId
          type:
            - string
          description: |
            Id referencing a particular person.
        - id: image
          type:
            - stream.Readable
          description: |
            An image stream.
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - >-
            Promise<HttpOperationResponse<azure-cognitiveservices-face.PersistedFace>>
    package: azure-cognitiveservices-face
  - uid: azure-cognitiveservices-face.LargePersonGroupPerson.addFaceFromUrl
    name: addFaceFromUrl
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      Add a representative face to a person for identification. The input face
      is

      specified as an image with a targetFace rectangle.
    syntax:
      content: >-
        function addFaceFromUrl(largePersonGroupId: string, personId: string,
        url: string, options?: Object)
      parameters:
        - id: largePersonGroupId
          type:
            - string
          description: |
            Id referencing a particular large person
            group.
        - id: personId
          type:
            - string
          description: |
            Id referencing a particular person.
        - id: url
          type:
            - string
          description: |
            Publicly reachable URL of an image
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<azure-cognitiveservices-face.PersistedFace>
    package: azure-cognitiveservices-face
  - uid: azure-cognitiveservices-face.LargePersonGroupPerson.addFaceFromUrl_2
    name: addFaceFromUrl
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      Add a representative face to a person for identification. The input face
      is

      specified as an image with a targetFace rectangle.
    syntax:
      content: >-
        function addFaceFromUrl(largePersonGroupId: string, personId: string,
        url: string, options: Object, callback: ServiceCallback<PersistedFace>)
      parameters:
        - id: largePersonGroupId
          type:
            - string
          description: ''
        - id: personId
          type:
            - string
          description: ''
        - id: url
          type:
            - string
          description: ''
        - id: options
          type:
            - Object
          description: ''
        - id: callback
          type:
            - ServiceCallback<azure-cognitiveservices-face.PersistedFace>
          description: ''
      return:
        type:
          - Promise<azure-cognitiveservices-face.PersistedFace>
    package: azure-cognitiveservices-face
  - uid: azure-cognitiveservices-face.LargePersonGroupPerson.addFaceFromUrl_1
    name: addFaceFromUrl
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      Add a representative face to a person for identification. The input face
      is

      specified as an image with a targetFace rectangle.
    syntax:
      content: >-
        function addFaceFromUrl(largePersonGroupId: string, personId: string,
        url: string, callback: ServiceCallback<PersistedFace>)
      parameters:
        - id: largePersonGroupId
          type:
            - string
          description: ''
        - id: personId
          type:
            - string
          description: ''
        - id: url
          type:
            - string
          description: ''
        - id: callback
          type:
            - ServiceCallback<azure-cognitiveservices-face.PersistedFace>
          description: ''
      return:
        type:
          - Promise<azure-cognitiveservices-face.PersistedFace>
    package: azure-cognitiveservices-face
  - uid: >-
      azure-cognitiveservices-face.LargePersonGroupPerson.addFaceFromUrlWithHttpOperationResponse
    name: addFaceFromUrlWithHttpOperationResponse
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      Add a representative face to a person for identification. The input face
      is

      specified as an image with a targetFace rectangle.
    syntax:
      content: >-
        function addFaceFromUrlWithHttpOperationResponse(largePersonGroupId:
        string, personId: string, url: string, options?: Object)
      parameters:
        - id: largePersonGroupId
          type:
            - string
          description: |
            Id referencing a particular large person
            group.
        - id: personId
          type:
            - string
          description: |
            Id referencing a particular person.
        - id: url
          type:
            - string
          description: |
            Publicly reachable URL of an image
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - >-
            Promise<HttpOperationResponse<azure-cognitiveservices-face.PersistedFace>>
    package: azure-cognitiveservices-face
  - uid: azure-cognitiveservices-face.LargePersonGroupPerson.create
    name: create
    children: []
    type: method
    langs:
      - typeScript
    summary: Create a new person in a specified large person group.
    syntax:
      content: 'function create(largePersonGroupId: string, options?: Object)'
      parameters:
        - id: largePersonGroupId
          type:
            - string
          description: |
            Id referencing a particular large person
            group.
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<azure-cognitiveservices-face.Person>
    package: azure-cognitiveservices-face
  - uid: azure-cognitiveservices-face.LargePersonGroupPerson.create_1
    name: create
    children: []
    type: method
    langs:
      - typeScript
    summary: Create a new person in a specified large person group.
    syntax:
      content: >-
        function create(largePersonGroupId: string, callback:
        ServiceCallback<Person>)
      parameters:
        - id: largePersonGroupId
          type:
            - string
          description: ''
        - id: callback
          type:
            - ServiceCallback<azure-cognitiveservices-face.Person>
          description: ''
      return:
        type:
          - Promise<azure-cognitiveservices-face.Person>
    package: azure-cognitiveservices-face
  - uid: azure-cognitiveservices-face.LargePersonGroupPerson.create_2
    name: create
    children: []
    type: method
    langs:
      - typeScript
    summary: Create a new person in a specified large person group.
    syntax:
      content: >-
        function create(largePersonGroupId: string, options: Object, callback:
        ServiceCallback<Person>)
      parameters:
        - id: largePersonGroupId
          type:
            - string
          description: ''
        - id: options
          type:
            - Object
          description: ''
        - id: callback
          type:
            - ServiceCallback<azure-cognitiveservices-face.Person>
          description: ''
      return:
        type:
          - Promise<azure-cognitiveservices-face.Person>
    package: azure-cognitiveservices-face
  - uid: >-
      azure-cognitiveservices-face.LargePersonGroupPerson.createWithHttpOperationResponse
    name: createWithHttpOperationResponse
    children: []
    type: method
    langs:
      - typeScript
    summary: Create a new person in a specified large person group.
    syntax:
      content: >-
        function createWithHttpOperationResponse(largePersonGroupId: string,
        options?: Object)
      parameters:
        - id: largePersonGroupId
          type:
            - string
          description: |
            Id referencing a particular large person
            group.
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<HttpOperationResponse<azure-cognitiveservices-face.Person>>
    package: azure-cognitiveservices-face
  - uid: azure-cognitiveservices-face.LargePersonGroupPerson.deleteFace_1
    name: deleteFace
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      Delete a face from a person. Relative feature for the persisted face will
      also be deleted.
    syntax:
      content: >-
        function deleteFace(largePersonGroupId: string, personId: string,
        persistedFaceId: string, callback: ServiceCallback<void>)
      parameters:
        - id: largePersonGroupId
          type:
            - string
          description: ''
        - id: personId
          type:
            - string
          description: ''
        - id: persistedFaceId
          type:
            - string
          description: ''
        - id: callback
          type:
            - ServiceCallback<void>
          description: ''
      return:
        type:
          - Promise<void>
    package: azure-cognitiveservices-face
  - uid: azure-cognitiveservices-face.LargePersonGroupPerson.deleteFace_2
    name: deleteFace
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      Delete a face from a person. Relative feature for the persisted face will
      also be deleted.
    syntax:
      content: >-
        function deleteFace(largePersonGroupId: string, personId: string,
        persistedFaceId: string, options: Object, callback:
        ServiceCallback<void>)
      parameters:
        - id: largePersonGroupId
          type:
            - string
          description: ''
        - id: personId
          type:
            - string
          description: ''
        - id: persistedFaceId
          type:
            - string
          description: ''
        - id: options
          type:
            - Object
          description: ''
        - id: callback
          type:
            - ServiceCallback<void>
          description: ''
      return:
        type:
          - Promise<void>
    package: azure-cognitiveservices-face
  - uid: azure-cognitiveservices-face.LargePersonGroupPerson.deleteFace
    name: deleteFace
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      Delete a face from a person. Relative feature for the persisted face will
      also be deleted.
    syntax:
      content: >-
        function deleteFace(largePersonGroupId: string, personId: string,
        persistedFaceId: string, options?: Object)
      parameters:
        - id: largePersonGroupId
          type:
            - string
          description: |
            Id referencing a particular large person
            group.
        - id: personId
          type:
            - string
          description: |
            Id referencing a particular person.
        - id: persistedFaceId
          type:
            - string
          description: |
            Id referencing a particular persistedFaceId of
            an existing face.
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<void>
    package: azure-cognitiveservices-face
  - uid: >-
      azure-cognitiveservices-face.LargePersonGroupPerson.deleteFaceWithHttpOperationResponse
    name: deleteFaceWithHttpOperationResponse
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      Delete a face from a person. Relative feature for the persisted face will
      also be deleted.
    syntax:
      content: >-
        function deleteFaceWithHttpOperationResponse(largePersonGroupId: string,
        personId: string, persistedFaceId: string, options?: Object)
      parameters:
        - id: largePersonGroupId
          type:
            - string
          description: |
            Id referencing a particular large person
            group.
        - id: personId
          type:
            - string
          description: |
            Id referencing a particular person.
        - id: persistedFaceId
          type:
            - string
          description: |
            Id referencing a particular persistedFaceId of
            an existing face.
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<HttpOperationResponse<void>>
    package: azure-cognitiveservices-face
  - uid: azure-cognitiveservices-face.LargePersonGroupPerson.deleteMethod
    name: deleteMethod
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      Delete an existing person from a large person group. All stored person
      data,

      and face features in the person entry will be deleted.
    syntax:
      content: >-
        function deleteMethod(largePersonGroupId: string, personId: string,
        options?: Object)
      parameters:
        - id: largePersonGroupId
          type:
            - string
          description: |
            Id referencing a particular large person
            group.
        - id: personId
          type:
            - string
          description: |
            Id referencing a particular person.
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<void>
    package: azure-cognitiveservices-face
  - uid: azure-cognitiveservices-face.LargePersonGroupPerson.deleteMethod_1
    name: deleteMethod
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      Delete an existing person from a large person group. All stored person
      data,

      and face features in the person entry will be deleted.
    syntax:
      content: >-
        function deleteMethod(largePersonGroupId: string, personId: string,
        callback: ServiceCallback<void>)
      parameters:
        - id: largePersonGroupId
          type:
            - string
          description: ''
        - id: personId
          type:
            - string
          description: ''
        - id: callback
          type:
            - ServiceCallback<void>
          description: ''
      return:
        type:
          - Promise<void>
    package: azure-cognitiveservices-face
  - uid: azure-cognitiveservices-face.LargePersonGroupPerson.deleteMethod_2
    name: deleteMethod
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      Delete an existing person from a large person group. All stored person
      data,

      and face features in the person entry will be deleted.
    syntax:
      content: >-
        function deleteMethod(largePersonGroupId: string, personId: string,
        options: Object, callback: ServiceCallback<void>)
      parameters:
        - id: largePersonGroupId
          type:
            - string
          description: ''
        - id: personId
          type:
            - string
          description: ''
        - id: options
          type:
            - Object
          description: ''
        - id: callback
          type:
            - ServiceCallback<void>
          description: ''
      return:
        type:
          - Promise<void>
    package: azure-cognitiveservices-face
  - uid: >-
      azure-cognitiveservices-face.LargePersonGroupPerson.deleteMethodWithHttpOperationResponse
    name: deleteMethodWithHttpOperationResponse
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      Delete an existing person from a large person group. All stored person
      data,

      and face features in the person entry will be deleted.
    syntax:
      content: >-
        function deleteMethodWithHttpOperationResponse(largePersonGroupId:
        string, personId: string, options?: Object)
      parameters:
        - id: largePersonGroupId
          type:
            - string
          description: |
            Id referencing a particular large person
            group.
        - id: personId
          type:
            - string
          description: |
            Id referencing a particular person.
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<HttpOperationResponse<void>>
    package: azure-cognitiveservices-face
  - uid: azure-cognitiveservices-face.LargePersonGroupPerson.get
    name: get
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      Retrieve a person's information, including registered persisted faces,
      name

      and userData.
    syntax:
      content: >-
        function get(largePersonGroupId: string, personId: string, options?:
        Object)
      parameters:
        - id: largePersonGroupId
          type:
            - string
          description: |
            Id referencing a particular large person
            group.
        - id: personId
          type:
            - string
          description: |
            Id referencing a particular person.
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<azure-cognitiveservices-face.Person>
    package: azure-cognitiveservices-face
  - uid: azure-cognitiveservices-face.LargePersonGroupPerson.get_1
    name: get
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      Retrieve a person's information, including registered persisted faces,
      name

      and userData.
    syntax:
      content: >-
        function get(largePersonGroupId: string, personId: string, callback:
        ServiceCallback<Person>)
      parameters:
        - id: largePersonGroupId
          type:
            - string
          description: ''
        - id: personId
          type:
            - string
          description: ''
        - id: callback
          type:
            - ServiceCallback<azure-cognitiveservices-face.Person>
          description: ''
      return:
        type:
          - Promise<azure-cognitiveservices-face.Person>
    package: azure-cognitiveservices-face
  - uid: azure-cognitiveservices-face.LargePersonGroupPerson.get_2
    name: get
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      Retrieve a person's information, including registered persisted faces,
      name

      and userData.
    syntax:
      content: >-
        function get(largePersonGroupId: string, personId: string, options:
        Object, callback: ServiceCallback<Person>)
      parameters:
        - id: largePersonGroupId
          type:
            - string
          description: ''
        - id: personId
          type:
            - string
          description: ''
        - id: options
          type:
            - Object
          description: ''
        - id: callback
          type:
            - ServiceCallback<azure-cognitiveservices-face.Person>
          description: ''
      return:
        type:
          - Promise<azure-cognitiveservices-face.Person>
    package: azure-cognitiveservices-face
  - uid: azure-cognitiveservices-face.LargePersonGroupPerson.getFace
    name: getFace
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      Retrieve information about a persisted face (specified by persistedFaceId,
      personId and its belonging largePersonGroupId).
    syntax:
      content: >-
        function getFace(largePersonGroupId: string, personId: string,
        persistedFaceId: string, options?: Object)
      parameters:
        - id: largePersonGroupId
          type:
            - string
          description: |
            Id referencing a particular large person
            group.
        - id: personId
          type:
            - string
          description: |
            Id referencing a particular person.
        - id: persistedFaceId
          type:
            - string
          description: |
            Id referencing a particular persistedFaceId of
            an existing face.
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<azure-cognitiveservices-face.PersistedFace>
    package: azure-cognitiveservices-face
  - uid: azure-cognitiveservices-face.LargePersonGroupPerson.getFace_2
    name: getFace
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      Retrieve information about a persisted face (specified by persistedFaceId,
      personId and its belonging largePersonGroupId).
    syntax:
      content: >-
        function getFace(largePersonGroupId: string, personId: string,
        persistedFaceId: string, options: Object, callback:
        ServiceCallback<PersistedFace>)
      parameters:
        - id: largePersonGroupId
          type:
            - string
          description: ''
        - id: personId
          type:
            - string
          description: ''
        - id: persistedFaceId
          type:
            - string
          description: ''
        - id: options
          type:
            - Object
          description: ''
        - id: callback
          type:
            - ServiceCallback<azure-cognitiveservices-face.PersistedFace>
          description: ''
      return:
        type:
          - Promise<azure-cognitiveservices-face.PersistedFace>
    package: azure-cognitiveservices-face
  - uid: azure-cognitiveservices-face.LargePersonGroupPerson.getFace_1
    name: getFace
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      Retrieve information about a persisted face (specified by persistedFaceId,
      personId and its belonging largePersonGroupId).
    syntax:
      content: >-
        function getFace(largePersonGroupId: string, personId: string,
        persistedFaceId: string, callback: ServiceCallback<PersistedFace>)
      parameters:
        - id: largePersonGroupId
          type:
            - string
          description: ''
        - id: personId
          type:
            - string
          description: ''
        - id: persistedFaceId
          type:
            - string
          description: ''
        - id: callback
          type:
            - ServiceCallback<azure-cognitiveservices-face.PersistedFace>
          description: ''
      return:
        type:
          - Promise<azure-cognitiveservices-face.PersistedFace>
    package: azure-cognitiveservices-face
  - uid: >-
      azure-cognitiveservices-face.LargePersonGroupPerson.getFaceWithHttpOperationResponse
    name: getFaceWithHttpOperationResponse
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      Retrieve information about a persisted face (specified by persistedFaceId,
      personId and its belonging largePersonGroupId).
    syntax:
      content: >-
        function getFaceWithHttpOperationResponse(largePersonGroupId: string,
        personId: string, persistedFaceId: string, options?: Object)
      parameters:
        - id: largePersonGroupId
          type:
            - string
          description: |
            Id referencing a particular large person
            group.
        - id: personId
          type:
            - string
          description: |
            Id referencing a particular person.
        - id: persistedFaceId
          type:
            - string
          description: |
            Id referencing a particular persistedFaceId of
            an existing face.
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - >-
            Promise<HttpOperationResponse<azure-cognitiveservices-face.PersistedFace>>
    package: azure-cognitiveservices-face
  - uid: >-
      azure-cognitiveservices-face.LargePersonGroupPerson.getWithHttpOperationResponse
    name: getWithHttpOperationResponse
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      Retrieve a person's information, including registered persisted faces,
      name

      and userData.
    syntax:
      content: >-
        function getWithHttpOperationResponse(largePersonGroupId: string,
        personId: string, options?: Object)
      parameters:
        - id: largePersonGroupId
          type:
            - string
          description: |
            Id referencing a particular large person
            group.
        - id: personId
          type:
            - string
          description: |
            Id referencing a particular person.
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<HttpOperationResponse<azure-cognitiveservices-face.Person>>
    package: azure-cognitiveservices-face
  - uid: azure-cognitiveservices-face.LargePersonGroupPerson.list
    name: list
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      List all persons in a large person group, and retrieve person information

      (including personId, name, userData and persistedFaceIds of registered
      faces

      of the person).
    syntax:
      content: 'function list(largePersonGroupId: string, options?: Object)'
      parameters:
        - id: largePersonGroupId
          type:
            - string
          description: |
            Id referencing a particular large person
            group.
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - 'Promise<azure-cognitiveservices-face.Person[]>'
    package: azure-cognitiveservices-face
  - uid: azure-cognitiveservices-face.LargePersonGroupPerson.list_1
    name: list
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      List all persons in a large person group, and retrieve person information

      (including personId, name, userData and persistedFaceIds of registered
      faces

      of the person).
    syntax:
      content: >-
        function list(largePersonGroupId: string, callback:
        ServiceCallback<Person[]>)
      parameters:
        - id: largePersonGroupId
          type:
            - string
          description: ''
        - id: callback
          type:
            - 'ServiceCallback<azure-cognitiveservices-face.Person[]>'
          description: ''
      return:
        type:
          - 'Promise<azure-cognitiveservices-face.Person[]>'
    package: azure-cognitiveservices-face
  - uid: azure-cognitiveservices-face.LargePersonGroupPerson.list_2
    name: list
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      List all persons in a large person group, and retrieve person information

      (including personId, name, userData and persistedFaceIds of registered
      faces

      of the person).
    syntax:
      content: >-
        function list(largePersonGroupId: string, options: Object, callback:
        ServiceCallback<Person[]>)
      parameters:
        - id: largePersonGroupId
          type:
            - string
          description: ''
        - id: options
          type:
            - Object
          description: ''
        - id: callback
          type:
            - 'ServiceCallback<azure-cognitiveservices-face.Person[]>'
          description: ''
      return:
        type:
          - 'Promise<azure-cognitiveservices-face.Person[]>'
    package: azure-cognitiveservices-face
  - uid: >-
      azure-cognitiveservices-face.LargePersonGroupPerson.listWithHttpOperationResponse
    name: listWithHttpOperationResponse
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      List all persons in a large person group, and retrieve person information

      (including personId, name, userData and persistedFaceIds of registered
      faces

      of the person).
    syntax:
      content: >-
        function listWithHttpOperationResponse(largePersonGroupId: string,
        options?: Object)
      parameters:
        - id: largePersonGroupId
          type:
            - string
          description: |
            Id referencing a particular large person
            group.
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - >-
            Promise<HttpOperationResponse<azure-cognitiveservices-face.Person[]>>
    package: azure-cognitiveservices-face
  - uid: azure-cognitiveservices-face.LargePersonGroupPerson.update
    name: update
    children: []
    type: method
    langs:
      - typeScript
    summary: Update name or userData of a person.
    syntax:
      content: >-
        function update(largePersonGroupId: string, personId: string, options?:
        Object)
      parameters:
        - id: largePersonGroupId
          type:
            - string
          description: |
            Id referencing a particular large person
            group.
        - id: personId
          type:
            - string
          description: |
            Id referencing a particular person.
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<void>
    package: azure-cognitiveservices-face
  - uid: azure-cognitiveservices-face.LargePersonGroupPerson.update_1
    name: update
    children: []
    type: method
    langs:
      - typeScript
    summary: Update name or userData of a person.
    syntax:
      content: >-
        function update(largePersonGroupId: string, personId: string, callback:
        ServiceCallback<void>)
      parameters:
        - id: largePersonGroupId
          type:
            - string
          description: ''
        - id: personId
          type:
            - string
          description: ''
        - id: callback
          type:
            - ServiceCallback<void>
          description: ''
      return:
        type:
          - Promise<void>
    package: azure-cognitiveservices-face
  - uid: azure-cognitiveservices-face.LargePersonGroupPerson.update_2
    name: update
    children: []
    type: method
    langs:
      - typeScript
    summary: Update name or userData of a person.
    syntax:
      content: >-
        function update(largePersonGroupId: string, personId: string, options:
        Object, callback: ServiceCallback<void>)
      parameters:
        - id: largePersonGroupId
          type:
            - string
          description: ''
        - id: personId
          type:
            - string
          description: ''
        - id: options
          type:
            - Object
          description: ''
        - id: callback
          type:
            - ServiceCallback<void>
          description: ''
      return:
        type:
          - Promise<void>
    package: azure-cognitiveservices-face
  - uid: azure-cognitiveservices-face.LargePersonGroupPerson.updateFace
    name: updateFace
    children: []
    type: method
    langs:
      - typeScript
    summary: Update a person persisted face's userData field.
    syntax:
      content: >-
        function updateFace(largePersonGroupId: string, personId: string,
        persistedFaceId: string, options?: Object)
      parameters:
        - id: largePersonGroupId
          type:
            - string
          description: |
            Id referencing a particular large person
            group.
        - id: personId
          type:
            - string
          description: |
            Id referencing a particular person.
        - id: persistedFaceId
          type:
            - string
          description: |
            Id referencing a particular persistedFaceId of
            an existing face.
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<void>
    package: azure-cognitiveservices-face
  - uid: azure-cognitiveservices-face.LargePersonGroupPerson.updateFace_1
    name: updateFace
    children: []
    type: method
    langs:
      - typeScript
    summary: Update a person persisted face's userData field.
    syntax:
      content: >-
        function updateFace(largePersonGroupId: string, personId: string,
        persistedFaceId: string, callback: ServiceCallback<void>)
      parameters:
        - id: largePersonGroupId
          type:
            - string
          description: ''
        - id: personId
          type:
            - string
          description: ''
        - id: persistedFaceId
          type:
            - string
          description: ''
        - id: callback
          type:
            - ServiceCallback<void>
          description: ''
      return:
        type:
          - Promise<void>
    package: azure-cognitiveservices-face
  - uid: azure-cognitiveservices-face.LargePersonGroupPerson.updateFace_2
    name: updateFace
    children: []
    type: method
    langs:
      - typeScript
    summary: Update a person persisted face's userData field.
    syntax:
      content: >-
        function updateFace(largePersonGroupId: string, personId: string,
        persistedFaceId: string, options: Object, callback:
        ServiceCallback<void>)
      parameters:
        - id: largePersonGroupId
          type:
            - string
          description: ''
        - id: personId
          type:
            - string
          description: ''
        - id: persistedFaceId
          type:
            - string
          description: ''
        - id: options
          type:
            - Object
          description: ''
        - id: callback
          type:
            - ServiceCallback<void>
          description: ''
      return:
        type:
          - Promise<void>
    package: azure-cognitiveservices-face
  - uid: >-
      azure-cognitiveservices-face.LargePersonGroupPerson.updateFaceWithHttpOperationResponse
    name: updateFaceWithHttpOperationResponse
    children: []
    type: method
    langs:
      - typeScript
    summary: Update a person persisted face's userData field.
    syntax:
      content: >-
        function updateFaceWithHttpOperationResponse(largePersonGroupId: string,
        personId: string, persistedFaceId: string, options?: Object)
      parameters:
        - id: largePersonGroupId
          type:
            - string
          description: |
            Id referencing a particular large person
            group.
        - id: personId
          type:
            - string
          description: |
            Id referencing a particular person.
        - id: persistedFaceId
          type:
            - string
          description: |
            Id referencing a particular persistedFaceId of
            an existing face.
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<HttpOperationResponse<void>>
    package: azure-cognitiveservices-face
  - uid: >-
      azure-cognitiveservices-face.LargePersonGroupPerson.updateWithHttpOperationResponse
    name: updateWithHttpOperationResponse
    children: []
    type: method
    langs:
      - typeScript
    summary: Update name or userData of a person.
    syntax:
      content: >-
        function updateWithHttpOperationResponse(largePersonGroupId: string,
        personId: string, options?: Object)
      parameters:
        - id: largePersonGroupId
          type:
            - string
          description: |
            Id referencing a particular large person
            group.
        - id: personId
          type:
            - string
          description: |
            Id referencing a particular person.
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<HttpOperationResponse<void>>
    package: azure-cognitiveservices-face
references:
  - uid: Promise<azure-cognitiveservices-face.PersistedFace>
    name: PersistedFace>
    spec.typeScript:
      - name: Promise<
        fullName: Promise<
      - name: PersistedFace
        fullName: PersistedFace
        uid: azure-cognitiveservices-face.PersistedFace
      - name: '>'
        fullName: '>'
  - uid: ServiceCallback<azure-cognitiveservices-face.PersistedFace>
    name: PersistedFace>
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: PersistedFace
        fullName: PersistedFace
        uid: azure-cognitiveservices-face.PersistedFace
      - name: '>'
        fullName: '>'
  - uid: Promise<HttpOperationResponse<azure-cognitiveservices-face.PersistedFace>>
    name: PersistedFace>>
    spec.typeScript:
      - name: Promise<HttpOperationResponse<
        fullName: Promise<HttpOperationResponse<
      - name: PersistedFace
        fullName: PersistedFace
        uid: azure-cognitiveservices-face.PersistedFace
      - name: '>>'
        fullName: '>>'
  - uid: Promise<azure-cognitiveservices-face.Person>
    name: Person>
    spec.typeScript:
      - name: Promise<
        fullName: Promise<
      - name: Person
        fullName: Person
        uid: azure-cognitiveservices-face.Person
      - name: '>'
        fullName: '>'
  - uid: ServiceCallback<azure-cognitiveservices-face.Person>
    name: Person>
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: Person
        fullName: Person
        uid: azure-cognitiveservices-face.Person
      - name: '>'
        fullName: '>'
  - uid: Promise<HttpOperationResponse<azure-cognitiveservices-face.Person>>
    name: Person>>
    spec.typeScript:
      - name: Promise<HttpOperationResponse<
        fullName: Promise<HttpOperationResponse<
      - name: Person
        fullName: Person
        uid: azure-cognitiveservices-face.Person
      - name: '>>'
        fullName: '>>'
  - uid: 'Promise<azure-cognitiveservices-face.Person[]>'
    name: 'Person[]>'
    spec.typeScript:
      - name: Promise<
        fullName: Promise<
      - name: Person
        fullName: Person
        uid: azure-cognitiveservices-face.Person
      - name: '[]>'
        fullName: '[]>'
  - uid: 'ServiceCallback<azure-cognitiveservices-face.Person[]>'
    name: 'Person[]>'
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: Person
        fullName: Person
        uid: azure-cognitiveservices-face.Person
      - name: '[]>'
        fullName: '[]>'
  - uid: 'Promise<HttpOperationResponse<azure-cognitiveservices-face.Person[]>>'
    name: 'Person[]>>'
    spec.typeScript:
      - name: Promise<HttpOperationResponse<
        fullName: Promise<HttpOperationResponse<
      - name: Person
        fullName: Person
        uid: azure-cognitiveservices-face.Person
      - name: '[]>>'
        fullName: '[]>>'
