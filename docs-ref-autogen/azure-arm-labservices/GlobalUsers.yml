### YamlMime:UniversalReference
items:
  - uid: azure-arm-labservices.GlobalUsers
    name: GlobalUsers
    fullName: GlobalUsers
    children:
      - azure-arm-labservices.GlobalUsers.beginResetPassword
      - azure-arm-labservices.GlobalUsers.beginResetPassword_2
      - azure-arm-labservices.GlobalUsers.beginResetPassword_1
      - >-
        azure-arm-labservices.GlobalUsers.beginResetPasswordWithHttpOperationResponse
      - azure-arm-labservices.GlobalUsers.beginStartEnvironment
      - azure-arm-labservices.GlobalUsers.beginStartEnvironment_2
      - azure-arm-labservices.GlobalUsers.beginStartEnvironment_1
      - >-
        azure-arm-labservices.GlobalUsers.beginStartEnvironmentWithHttpOperationResponse
      - azure-arm-labservices.GlobalUsers.beginStopEnvironment
      - azure-arm-labservices.GlobalUsers.beginStopEnvironment_2
      - azure-arm-labservices.GlobalUsers.beginStopEnvironment_1
      - >-
        azure-arm-labservices.GlobalUsers.beginStopEnvironmentWithHttpOperationResponse
      - azure-arm-labservices.GlobalUsers.getEnvironment
      - azure-arm-labservices.GlobalUsers.getEnvironment_2
      - azure-arm-labservices.GlobalUsers.getEnvironment_1
      - >-
        azure-arm-labservices.GlobalUsers.getEnvironmentWithHttpOperationResponse
      - azure-arm-labservices.GlobalUsers.getOperationBatchStatus
      - azure-arm-labservices.GlobalUsers.getOperationBatchStatus_2
      - azure-arm-labservices.GlobalUsers.getOperationBatchStatus_1
      - >-
        azure-arm-labservices.GlobalUsers.getOperationBatchStatusWithHttpOperationResponse
      - azure-arm-labservices.GlobalUsers.getOperationStatus
      - azure-arm-labservices.GlobalUsers.getOperationStatus_2
      - azure-arm-labservices.GlobalUsers.getOperationStatus_1
      - >-
        azure-arm-labservices.GlobalUsers.getOperationStatusWithHttpOperationResponse
      - azure-arm-labservices.GlobalUsers.getPersonalPreferences
      - azure-arm-labservices.GlobalUsers.getPersonalPreferences_2
      - azure-arm-labservices.GlobalUsers.getPersonalPreferences_1
      - >-
        azure-arm-labservices.GlobalUsers.getPersonalPreferencesWithHttpOperationResponse
      - azure-arm-labservices.GlobalUsers.listEnvironments
      - azure-arm-labservices.GlobalUsers.listEnvironments_2
      - azure-arm-labservices.GlobalUsers.listEnvironments_1
      - >-
        azure-arm-labservices.GlobalUsers.listEnvironmentsWithHttpOperationResponse
      - azure-arm-labservices.GlobalUsers.listLabs
      - azure-arm-labservices.GlobalUsers.listLabs_2
      - azure-arm-labservices.GlobalUsers.listLabs_1
      - azure-arm-labservices.GlobalUsers.listLabsWithHttpOperationResponse
      - azure-arm-labservices.GlobalUsers.register
      - azure-arm-labservices.GlobalUsers.register_2
      - azure-arm-labservices.GlobalUsers.register_1
      - azure-arm-labservices.GlobalUsers.registerWithHttpOperationResponse
      - azure-arm-labservices.GlobalUsers.resetPassword
      - azure-arm-labservices.GlobalUsers.resetPassword_2
      - azure-arm-labservices.GlobalUsers.resetPassword_1
      - azure-arm-labservices.GlobalUsers.resetPasswordWithHttpOperationResponse
      - azure-arm-labservices.GlobalUsers.startEnvironment
      - azure-arm-labservices.GlobalUsers.startEnvironment_2
      - azure-arm-labservices.GlobalUsers.startEnvironment_1
      - >-
        azure-arm-labservices.GlobalUsers.startEnvironmentWithHttpOperationResponse
      - azure-arm-labservices.GlobalUsers.stopEnvironment
      - azure-arm-labservices.GlobalUsers.stopEnvironment_2
      - azure-arm-labservices.GlobalUsers.stopEnvironment_1
      - >-
        azure-arm-labservices.GlobalUsers.stopEnvironmentWithHttpOperationResponse
    langs:
      - typeScript
    type: interface
    summary: ''
    package: azure-arm-labservices
  - uid: azure-arm-labservices.GlobalUsers.beginResetPassword
    name: 'beginResetPassword(string, ResetPasswordPayload, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      Resets the user password on an environment This operation can take a while
      to complete
    syntax:
      content: >-
        function beginResetPassword(userName: string, resetPasswordPayload:
        ResetPasswordPayload, options?: Object)
      parameters:
        - id: userName
          type:
            - string
          description: |
            The name of the user.
        - id: resetPasswordPayload
          type:
            - azure-arm-labservices.ResetPasswordPayload
          description: |
            Represents the payload for resetting
            passwords.
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<void>
    package: azure-arm-labservices
  - uid: azure-arm-labservices.GlobalUsers.beginResetPassword_2
    name: >-
      beginResetPassword(string, ResetPasswordPayload, Object,
      ServiceCallback<void>)
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      Resets the user password on an environment This operation can take a while
      to complete
    syntax:
      content: >-
        function beginResetPassword(userName: string, resetPasswordPayload:
        ResetPasswordPayload, options: Object, callback: ServiceCallback<void>)
      parameters:
        - id: userName
          type:
            - string
          description: ''
        - id: resetPasswordPayload
          type:
            - azure-arm-labservices.ResetPasswordPayload
          description: ''
        - id: options
          type:
            - Object
          description: ''
        - id: callback
          type:
            - ServiceCallback<void>
          description: ''
      return:
        type:
          - Promise<void>
    package: azure-arm-labservices
  - uid: azure-arm-labservices.GlobalUsers.beginResetPassword_1
    name: 'beginResetPassword(string, ResetPasswordPayload, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      Resets the user password on an environment This operation can take a while
      to complete
    syntax:
      content: >-
        function beginResetPassword(userName: string, resetPasswordPayload:
        ResetPasswordPayload, callback: ServiceCallback<void>)
      parameters:
        - id: userName
          type:
            - string
          description: ''
        - id: resetPasswordPayload
          type:
            - azure-arm-labservices.ResetPasswordPayload
          description: ''
        - id: callback
          type:
            - ServiceCallback<void>
          description: ''
      return:
        type:
          - Promise<void>
    package: azure-arm-labservices
  - uid: >-
      azure-arm-labservices.GlobalUsers.beginResetPasswordWithHttpOperationResponse
    name: >-
      beginResetPasswordWithHttpOperationResponse(string, ResetPasswordPayload,
      Object)
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      Resets the user password on an environment This operation can take a while
      to complete
    syntax:
      content: >-
        function beginResetPasswordWithHttpOperationResponse(userName: string,
        resetPasswordPayload: ResetPasswordPayload, options?: Object)
      parameters:
        - id: userName
          type:
            - string
          description: |
            The name of the user.
        - id: resetPasswordPayload
          type:
            - azure-arm-labservices.ResetPasswordPayload
          description: |
            Represents the payload for resetting
            passwords.
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<HttpOperationResponse<void>>
    package: azure-arm-labservices
  - uid: azure-arm-labservices.GlobalUsers.beginStartEnvironment
    name: 'beginStartEnvironment(string, EnvironmentOperationsPayload, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      Starts an environment by starting all resources inside the environment.
      This

      operation can take a while to complete
    syntax:
      content: >-
        function beginStartEnvironment(userName: string,
        environmentOperationsPayload: EnvironmentOperationsPayload, options?:
        Object)
      parameters:
        - id: userName
          type:
            - string
          description: |
            The name of the user.
        - id: environmentOperationsPayload
          type:
            - azure-arm-labservices.EnvironmentOperationsPayload
          description: |
            Represents payload for any
            Environment operations like get, start, stop, connect
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<void>
    package: azure-arm-labservices
  - uid: azure-arm-labservices.GlobalUsers.beginStartEnvironment_2
    name: >-
      beginStartEnvironment(string, EnvironmentOperationsPayload, Object,
      ServiceCallback<void>)
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      Starts an environment by starting all resources inside the environment.
      This

      operation can take a while to complete
    syntax:
      content: >-
        function beginStartEnvironment(userName: string,
        environmentOperationsPayload: EnvironmentOperationsPayload, options:
        Object, callback: ServiceCallback<void>)
      parameters:
        - id: userName
          type:
            - string
          description: ''
        - id: environmentOperationsPayload
          type:
            - azure-arm-labservices.EnvironmentOperationsPayload
          description: ''
        - id: options
          type:
            - Object
          description: ''
        - id: callback
          type:
            - ServiceCallback<void>
          description: ''
      return:
        type:
          - Promise<void>
    package: azure-arm-labservices
  - uid: azure-arm-labservices.GlobalUsers.beginStartEnvironment_1
    name: >-
      beginStartEnvironment(string, EnvironmentOperationsPayload,
      ServiceCallback<void>)
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      Starts an environment by starting all resources inside the environment.
      This

      operation can take a while to complete
    syntax:
      content: >-
        function beginStartEnvironment(userName: string,
        environmentOperationsPayload: EnvironmentOperationsPayload, callback:
        ServiceCallback<void>)
      parameters:
        - id: userName
          type:
            - string
          description: ''
        - id: environmentOperationsPayload
          type:
            - azure-arm-labservices.EnvironmentOperationsPayload
          description: ''
        - id: callback
          type:
            - ServiceCallback<void>
          description: ''
      return:
        type:
          - Promise<void>
    package: azure-arm-labservices
  - uid: >-
      azure-arm-labservices.GlobalUsers.beginStartEnvironmentWithHttpOperationResponse
    name: >-
      beginStartEnvironmentWithHttpOperationResponse(string,
      EnvironmentOperationsPayload, Object)
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      Starts an environment by starting all resources inside the environment.
      This

      operation can take a while to complete
    syntax:
      content: >-
        function beginStartEnvironmentWithHttpOperationResponse(userName:
        string, environmentOperationsPayload: EnvironmentOperationsPayload,
        options?: Object)
      parameters:
        - id: userName
          type:
            - string
          description: |
            The name of the user.
        - id: environmentOperationsPayload
          type:
            - azure-arm-labservices.EnvironmentOperationsPayload
          description: |
            Represents payload for any
            Environment operations like get, start, stop, connect
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<HttpOperationResponse<void>>
    package: azure-arm-labservices
  - uid: azure-arm-labservices.GlobalUsers.beginStopEnvironment
    name: 'beginStopEnvironment(string, EnvironmentOperationsPayload, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      Stops an environment by stopping all resources inside the environment This
      operation can take a while to complete
    syntax:
      content: >-
        function beginStopEnvironment(userName: string,
        environmentOperationsPayload: EnvironmentOperationsPayload, options?:
        Object)
      parameters:
        - id: userName
          type:
            - string
          description: |
            The name of the user.
        - id: environmentOperationsPayload
          type:
            - azure-arm-labservices.EnvironmentOperationsPayload
          description: |
            Represents payload for any
            Environment operations like get, start, stop, connect
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<void>
    package: azure-arm-labservices
  - uid: azure-arm-labservices.GlobalUsers.beginStopEnvironment_2
    name: >-
      beginStopEnvironment(string, EnvironmentOperationsPayload, Object,
      ServiceCallback<void>)
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      Stops an environment by stopping all resources inside the environment This
      operation can take a while to complete
    syntax:
      content: >-
        function beginStopEnvironment(userName: string,
        environmentOperationsPayload: EnvironmentOperationsPayload, options:
        Object, callback: ServiceCallback<void>)
      parameters:
        - id: userName
          type:
            - string
          description: ''
        - id: environmentOperationsPayload
          type:
            - azure-arm-labservices.EnvironmentOperationsPayload
          description: ''
        - id: options
          type:
            - Object
          description: ''
        - id: callback
          type:
            - ServiceCallback<void>
          description: ''
      return:
        type:
          - Promise<void>
    package: azure-arm-labservices
  - uid: azure-arm-labservices.GlobalUsers.beginStopEnvironment_1
    name: >-
      beginStopEnvironment(string, EnvironmentOperationsPayload,
      ServiceCallback<void>)
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      Stops an environment by stopping all resources inside the environment This
      operation can take a while to complete
    syntax:
      content: >-
        function beginStopEnvironment(userName: string,
        environmentOperationsPayload: EnvironmentOperationsPayload, callback:
        ServiceCallback<void>)
      parameters:
        - id: userName
          type:
            - string
          description: ''
        - id: environmentOperationsPayload
          type:
            - azure-arm-labservices.EnvironmentOperationsPayload
          description: ''
        - id: callback
          type:
            - ServiceCallback<void>
          description: ''
      return:
        type:
          - Promise<void>
    package: azure-arm-labservices
  - uid: >-
      azure-arm-labservices.GlobalUsers.beginStopEnvironmentWithHttpOperationResponse
    name: >-
      beginStopEnvironmentWithHttpOperationResponse(string,
      EnvironmentOperationsPayload, Object)
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      Stops an environment by stopping all resources inside the environment This
      operation can take a while to complete
    syntax:
      content: >-
        function beginStopEnvironmentWithHttpOperationResponse(userName: string,
        environmentOperationsPayload: EnvironmentOperationsPayload, options?:
        Object)
      parameters:
        - id: userName
          type:
            - string
          description: |
            The name of the user.
        - id: environmentOperationsPayload
          type:
            - azure-arm-labservices.EnvironmentOperationsPayload
          description: |
            Represents payload for any
            Environment operations like get, start, stop, connect
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<HttpOperationResponse<void>>
    package: azure-arm-labservices
  - uid: azure-arm-labservices.GlobalUsers.getEnvironment
    name: 'getEnvironment(string, EnvironmentOperationsPayload, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Gets the virtual machine details
    syntax:
      content: >-
        function getEnvironment(userName: string, environmentOperationsPayload:
        EnvironmentOperationsPayload, options?: Object)
      parameters:
        - id: userName
          type:
            - string
          description: |
            The name of the user.
        - id: environmentOperationsPayload
          type:
            - azure-arm-labservices.EnvironmentOperationsPayload
          description: |
            Represents payload for any
            Environment operations like get, start, stop, connect
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<azure-arm-labservices.GetEnvironmentResponse>
    package: azure-arm-labservices
  - uid: azure-arm-labservices.GlobalUsers.getEnvironment_2
    name: >-
      getEnvironment(string, EnvironmentOperationsPayload, Object,
      ServiceCallback<GetEnvironmentResponse>)
    children: []
    type: method
    langs:
      - typeScript
    summary: Gets the virtual machine details
    syntax:
      content: >-
        function getEnvironment(userName: string, environmentOperationsPayload:
        EnvironmentOperationsPayload, options: Object, callback:
        ServiceCallback<GetEnvironmentResponse>)
      parameters:
        - id: userName
          type:
            - string
          description: ''
        - id: environmentOperationsPayload
          type:
            - azure-arm-labservices.EnvironmentOperationsPayload
          description: ''
        - id: options
          type:
            - Object
          description: ''
        - id: callback
          type:
            - ServiceCallback<azure-arm-labservices.GetEnvironmentResponse>
          description: ''
      return:
        type:
          - Promise<azure-arm-labservices.GetEnvironmentResponse>
    package: azure-arm-labservices
  - uid: azure-arm-labservices.GlobalUsers.getEnvironment_1
    name: >-
      getEnvironment(string, EnvironmentOperationsPayload,
      ServiceCallback<GetEnvironmentResponse>)
    children: []
    type: method
    langs:
      - typeScript
    summary: Gets the virtual machine details
    syntax:
      content: >-
        function getEnvironment(userName: string, environmentOperationsPayload:
        EnvironmentOperationsPayload, callback:
        ServiceCallback<GetEnvironmentResponse>)
      parameters:
        - id: userName
          type:
            - string
          description: ''
        - id: environmentOperationsPayload
          type:
            - azure-arm-labservices.EnvironmentOperationsPayload
          description: ''
        - id: callback
          type:
            - ServiceCallback<azure-arm-labservices.GetEnvironmentResponse>
          description: ''
      return:
        type:
          - Promise<azure-arm-labservices.GetEnvironmentResponse>
    package: azure-arm-labservices
  - uid: azure-arm-labservices.GlobalUsers.getEnvironmentWithHttpOperationResponse
    name: >-
      getEnvironmentWithHttpOperationResponse(string,
      EnvironmentOperationsPayload, Object)
    children: []
    type: method
    langs:
      - typeScript
    summary: Gets the virtual machine details
    syntax:
      content: >-
        function getEnvironmentWithHttpOperationResponse(userName: string,
        environmentOperationsPayload: EnvironmentOperationsPayload, options?:
        Object)
      parameters:
        - id: userName
          type:
            - string
          description: |
            The name of the user.
        - id: environmentOperationsPayload
          type:
            - azure-arm-labservices.EnvironmentOperationsPayload
          description: |
            Represents payload for any
            Environment operations like get, start, stop, connect
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - >-
            Promise<HttpOperationResponse<azure-arm-labservices.GetEnvironmentResponse>>
    package: azure-arm-labservices
  - uid: azure-arm-labservices.GlobalUsers.getOperationBatchStatus
    name: 'getOperationBatchStatus(string, OperationBatchStatusPayload, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Get batch operation status
    syntax:
      content: >-
        function getOperationBatchStatus(userName: string,
        operationBatchStatusPayload: OperationBatchStatusPayload, options?:
        Object)
      parameters:
        - id: userName
          type:
            - string
          description: |
            The name of the user.
        - id: operationBatchStatusPayload
          type:
            - azure-arm-labservices.OperationBatchStatusPayload
          description: |
            Payload to get the status of an
            operation
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<azure-arm-labservices.OperationBatchStatusResponse>
    package: azure-arm-labservices
  - uid: azure-arm-labservices.GlobalUsers.getOperationBatchStatus_2
    name: >-
      getOperationBatchStatus(string, OperationBatchStatusPayload, Object,
      ServiceCallback<OperationBatchStatusResponse>)
    children: []
    type: method
    langs:
      - typeScript
    summary: Get batch operation status
    syntax:
      content: >-
        function getOperationBatchStatus(userName: string,
        operationBatchStatusPayload: OperationBatchStatusPayload, options:
        Object, callback: ServiceCallback<OperationBatchStatusResponse>)
      parameters:
        - id: userName
          type:
            - string
          description: ''
        - id: operationBatchStatusPayload
          type:
            - azure-arm-labservices.OperationBatchStatusPayload
          description: ''
        - id: options
          type:
            - Object
          description: ''
        - id: callback
          type:
            - >-
              ServiceCallback<azure-arm-labservices.OperationBatchStatusResponse>
          description: ''
      return:
        type:
          - Promise<azure-arm-labservices.OperationBatchStatusResponse>
    package: azure-arm-labservices
  - uid: azure-arm-labservices.GlobalUsers.getOperationBatchStatus_1
    name: >-
      getOperationBatchStatus(string, OperationBatchStatusPayload,
      ServiceCallback<OperationBatchStatusResponse>)
    children: []
    type: method
    langs:
      - typeScript
    summary: Get batch operation status
    syntax:
      content: >-
        function getOperationBatchStatus(userName: string,
        operationBatchStatusPayload: OperationBatchStatusPayload, callback:
        ServiceCallback<OperationBatchStatusResponse>)
      parameters:
        - id: userName
          type:
            - string
          description: ''
        - id: operationBatchStatusPayload
          type:
            - azure-arm-labservices.OperationBatchStatusPayload
          description: ''
        - id: callback
          type:
            - >-
              ServiceCallback<azure-arm-labservices.OperationBatchStatusResponse>
          description: ''
      return:
        type:
          - Promise<azure-arm-labservices.OperationBatchStatusResponse>
    package: azure-arm-labservices
  - uid: >-
      azure-arm-labservices.GlobalUsers.getOperationBatchStatusWithHttpOperationResponse
    name: >-
      getOperationBatchStatusWithHttpOperationResponse(string,
      OperationBatchStatusPayload, Object)
    children: []
    type: method
    langs:
      - typeScript
    summary: Get batch operation status
    syntax:
      content: >-
        function getOperationBatchStatusWithHttpOperationResponse(userName:
        string, operationBatchStatusPayload: OperationBatchStatusPayload,
        options?: Object)
      parameters:
        - id: userName
          type:
            - string
          description: |
            The name of the user.
        - id: operationBatchStatusPayload
          type:
            - azure-arm-labservices.OperationBatchStatusPayload
          description: |
            Payload to get the status of an
            operation
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - >-
            Promise<HttpOperationResponse<azure-arm-labservices.OperationBatchStatusResponse>>
    package: azure-arm-labservices
  - uid: azure-arm-labservices.GlobalUsers.getOperationStatus
    name: 'getOperationStatus(string, OperationStatusPayload, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Gets the status of long running operation
    syntax:
      content: >-
        function getOperationStatus(userName: string, operationStatusPayload:
        OperationStatusPayload, options?: Object)
      parameters:
        - id: userName
          type:
            - string
          description: |
            The name of the user.
        - id: operationStatusPayload
          type:
            - azure-arm-labservices.OperationStatusPayload
          description: |
            Payload to get the status of an
            operation
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<azure-arm-labservices.OperationStatusResponse>
    package: azure-arm-labservices
  - uid: azure-arm-labservices.GlobalUsers.getOperationStatus_2
    name: >-
      getOperationStatus(string, OperationStatusPayload, Object,
      ServiceCallback<OperationStatusResponse>)
    children: []
    type: method
    langs:
      - typeScript
    summary: Gets the status of long running operation
    syntax:
      content: >-
        function getOperationStatus(userName: string, operationStatusPayload:
        OperationStatusPayload, options: Object, callback:
        ServiceCallback<OperationStatusResponse>)
      parameters:
        - id: userName
          type:
            - string
          description: ''
        - id: operationStatusPayload
          type:
            - azure-arm-labservices.OperationStatusPayload
          description: ''
        - id: options
          type:
            - Object
          description: ''
        - id: callback
          type:
            - ServiceCallback<azure-arm-labservices.OperationStatusResponse>
          description: ''
      return:
        type:
          - Promise<azure-arm-labservices.OperationStatusResponse>
    package: azure-arm-labservices
  - uid: azure-arm-labservices.GlobalUsers.getOperationStatus_1
    name: >-
      getOperationStatus(string, OperationStatusPayload,
      ServiceCallback<OperationStatusResponse>)
    children: []
    type: method
    langs:
      - typeScript
    summary: Gets the status of long running operation
    syntax:
      content: >-
        function getOperationStatus(userName: string, operationStatusPayload:
        OperationStatusPayload, callback:
        ServiceCallback<OperationStatusResponse>)
      parameters:
        - id: userName
          type:
            - string
          description: ''
        - id: operationStatusPayload
          type:
            - azure-arm-labservices.OperationStatusPayload
          description: ''
        - id: callback
          type:
            - ServiceCallback<azure-arm-labservices.OperationStatusResponse>
          description: ''
      return:
        type:
          - Promise<azure-arm-labservices.OperationStatusResponse>
    package: azure-arm-labservices
  - uid: >-
      azure-arm-labservices.GlobalUsers.getOperationStatusWithHttpOperationResponse
    name: >-
      getOperationStatusWithHttpOperationResponse(string,
      OperationStatusPayload, Object)
    children: []
    type: method
    langs:
      - typeScript
    summary: Gets the status of long running operation
    syntax:
      content: >-
        function getOperationStatusWithHttpOperationResponse(userName: string,
        operationStatusPayload: OperationStatusPayload, options?: Object)
      parameters:
        - id: userName
          type:
            - string
          description: |
            The name of the user.
        - id: operationStatusPayload
          type:
            - azure-arm-labservices.OperationStatusPayload
          description: |
            Payload to get the status of an
            operation
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - >-
            Promise<HttpOperationResponse<azure-arm-labservices.OperationStatusResponse>>
    package: azure-arm-labservices
  - uid: azure-arm-labservices.GlobalUsers.getPersonalPreferences
    name: >-
      getPersonalPreferences(string, PersonalPreferencesOperationsPayload,
      Object)
    children: []
    type: method
    langs:
      - typeScript
    summary: Get personal preferences for a user
    syntax:
      content: >-
        function getPersonalPreferences(userName: string,
        personalPreferencesOperationsPayload:
        PersonalPreferencesOperationsPayload, options?: Object)
      parameters:
        - id: userName
          type:
            - string
          description: |
            The name of the user.
        - id: personalPreferencesOperationsPayload
          type:
            - azure-arm-labservices.PersonalPreferencesOperationsPayload
          description: |
            Represents payload for
            any Environment operations like get, start, stop, connect
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<azure-arm-labservices.GetPersonalPreferencesResponse>
    package: azure-arm-labservices
  - uid: azure-arm-labservices.GlobalUsers.getPersonalPreferences_2
    name: >-
      getPersonalPreferences(string, PersonalPreferencesOperationsPayload,
      Object, ServiceCallback<GetPersonalPreferencesResponse>)
    children: []
    type: method
    langs:
      - typeScript
    summary: Get personal preferences for a user
    syntax:
      content: >-
        function getPersonalPreferences(userName: string,
        personalPreferencesOperationsPayload:
        PersonalPreferencesOperationsPayload, options: Object, callback:
        ServiceCallback<GetPersonalPreferencesResponse>)
      parameters:
        - id: userName
          type:
            - string
          description: ''
        - id: personalPreferencesOperationsPayload
          type:
            - azure-arm-labservices.PersonalPreferencesOperationsPayload
          description: ''
        - id: options
          type:
            - Object
          description: ''
        - id: callback
          type:
            - >-
              ServiceCallback<azure-arm-labservices.GetPersonalPreferencesResponse>
          description: ''
      return:
        type:
          - Promise<azure-arm-labservices.GetPersonalPreferencesResponse>
    package: azure-arm-labservices
  - uid: azure-arm-labservices.GlobalUsers.getPersonalPreferences_1
    name: >-
      getPersonalPreferences(string, PersonalPreferencesOperationsPayload,
      ServiceCallback<GetPersonalPreferencesResponse>)
    children: []
    type: method
    langs:
      - typeScript
    summary: Get personal preferences for a user
    syntax:
      content: >-
        function getPersonalPreferences(userName: string,
        personalPreferencesOperationsPayload:
        PersonalPreferencesOperationsPayload, callback:
        ServiceCallback<GetPersonalPreferencesResponse>)
      parameters:
        - id: userName
          type:
            - string
          description: ''
        - id: personalPreferencesOperationsPayload
          type:
            - azure-arm-labservices.PersonalPreferencesOperationsPayload
          description: ''
        - id: callback
          type:
            - >-
              ServiceCallback<azure-arm-labservices.GetPersonalPreferencesResponse>
          description: ''
      return:
        type:
          - Promise<azure-arm-labservices.GetPersonalPreferencesResponse>
    package: azure-arm-labservices
  - uid: >-
      azure-arm-labservices.GlobalUsers.getPersonalPreferencesWithHttpOperationResponse
    name: >-
      getPersonalPreferencesWithHttpOperationResponse(string,
      PersonalPreferencesOperationsPayload, Object)
    children: []
    type: method
    langs:
      - typeScript
    summary: Get personal preferences for a user
    syntax:
      content: >-
        function getPersonalPreferencesWithHttpOperationResponse(userName:
        string, personalPreferencesOperationsPayload:
        PersonalPreferencesOperationsPayload, options?: Object)
      parameters:
        - id: userName
          type:
            - string
          description: |
            The name of the user.
        - id: personalPreferencesOperationsPayload
          type:
            - azure-arm-labservices.PersonalPreferencesOperationsPayload
          description: |
            Represents payload for
            any Environment operations like get, start, stop, connect
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - >-
            Promise<HttpOperationResponse<azure-arm-labservices.GetPersonalPreferencesResponse>>
    package: azure-arm-labservices
  - uid: azure-arm-labservices.GlobalUsers.listEnvironments
    name: 'listEnvironments(string, ListEnvironmentsPayload, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: List Environments for the user
    syntax:
      content: >-
        function listEnvironments(userName: string, listEnvironmentsPayload:
        ListEnvironmentsPayload, options?: Object)
      parameters:
        - id: userName
          type:
            - string
          description: |
            The name of the user.
        - id: listEnvironmentsPayload
          type:
            - azure-arm-labservices.ListEnvironmentsPayload
          description: |
            Represents the payload to list
            environments owned by a user
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<azure-arm-labservices.ListEnvironmentsResponse>
    package: azure-arm-labservices
  - uid: azure-arm-labservices.GlobalUsers.listEnvironments_2
    name: >-
      listEnvironments(string, ListEnvironmentsPayload, Object,
      ServiceCallback<ListEnvironmentsResponse>)
    children: []
    type: method
    langs:
      - typeScript
    summary: List Environments for the user
    syntax:
      content: >-
        function listEnvironments(userName: string, listEnvironmentsPayload:
        ListEnvironmentsPayload, options: Object, callback:
        ServiceCallback<ListEnvironmentsResponse>)
      parameters:
        - id: userName
          type:
            - string
          description: ''
        - id: listEnvironmentsPayload
          type:
            - azure-arm-labservices.ListEnvironmentsPayload
          description: ''
        - id: options
          type:
            - Object
          description: ''
        - id: callback
          type:
            - ServiceCallback<azure-arm-labservices.ListEnvironmentsResponse>
          description: ''
      return:
        type:
          - Promise<azure-arm-labservices.ListEnvironmentsResponse>
    package: azure-arm-labservices
  - uid: azure-arm-labservices.GlobalUsers.listEnvironments_1
    name: >-
      listEnvironments(string, ListEnvironmentsPayload,
      ServiceCallback<ListEnvironmentsResponse>)
    children: []
    type: method
    langs:
      - typeScript
    summary: List Environments for the user
    syntax:
      content: >-
        function listEnvironments(userName: string, listEnvironmentsPayload:
        ListEnvironmentsPayload, callback:
        ServiceCallback<ListEnvironmentsResponse>)
      parameters:
        - id: userName
          type:
            - string
          description: ''
        - id: listEnvironmentsPayload
          type:
            - azure-arm-labservices.ListEnvironmentsPayload
          description: ''
        - id: callback
          type:
            - ServiceCallback<azure-arm-labservices.ListEnvironmentsResponse>
          description: ''
      return:
        type:
          - Promise<azure-arm-labservices.ListEnvironmentsResponse>
    package: azure-arm-labservices
  - uid: >-
      azure-arm-labservices.GlobalUsers.listEnvironmentsWithHttpOperationResponse
    name: >-
      listEnvironmentsWithHttpOperationResponse(string, ListEnvironmentsPayload,
      Object)
    children: []
    type: method
    langs:
      - typeScript
    summary: List Environments for the user
    syntax:
      content: >-
        function listEnvironmentsWithHttpOperationResponse(userName: string,
        listEnvironmentsPayload: ListEnvironmentsPayload, options?: Object)
      parameters:
        - id: userName
          type:
            - string
          description: |
            The name of the user.
        - id: listEnvironmentsPayload
          type:
            - azure-arm-labservices.ListEnvironmentsPayload
          description: |
            Represents the payload to list
            environments owned by a user
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - >-
            Promise<HttpOperationResponse<azure-arm-labservices.ListEnvironmentsResponse>>
    package: azure-arm-labservices
  - uid: azure-arm-labservices.GlobalUsers.listLabs
    name: 'listLabs(string, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: List labs for the user.
    syntax:
      content: 'function listLabs(userName: string, options?: Object)'
      parameters:
        - id: userName
          type:
            - string
          description: |
            The name of the user.
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<azure-arm-labservices.ListLabsResponse>
    package: azure-arm-labservices
  - uid: azure-arm-labservices.GlobalUsers.listLabs_2
    name: 'listLabs(string, Object, ServiceCallback<ListLabsResponse>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: List labs for the user.
    syntax:
      content: >-
        function listLabs(userName: string, options: Object, callback:
        ServiceCallback<ListLabsResponse>)
      parameters:
        - id: userName
          type:
            - string
          description: ''
        - id: options
          type:
            - Object
          description: ''
        - id: callback
          type:
            - ServiceCallback<azure-arm-labservices.ListLabsResponse>
          description: ''
      return:
        type:
          - Promise<azure-arm-labservices.ListLabsResponse>
    package: azure-arm-labservices
  - uid: azure-arm-labservices.GlobalUsers.listLabs_1
    name: 'listLabs(string, ServiceCallback<ListLabsResponse>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: List labs for the user.
    syntax:
      content: >-
        function listLabs(userName: string, callback:
        ServiceCallback<ListLabsResponse>)
      parameters:
        - id: userName
          type:
            - string
          description: ''
        - id: callback
          type:
            - ServiceCallback<azure-arm-labservices.ListLabsResponse>
          description: ''
      return:
        type:
          - Promise<azure-arm-labservices.ListLabsResponse>
    package: azure-arm-labservices
  - uid: azure-arm-labservices.GlobalUsers.listLabsWithHttpOperationResponse
    name: 'listLabsWithHttpOperationResponse(string, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: List labs for the user.
    syntax:
      content: >-
        function listLabsWithHttpOperationResponse(userName: string, options?:
        Object)
      parameters:
        - id: userName
          type:
            - string
          description: |
            The name of the user.
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - >-
            Promise<HttpOperationResponse<azure-arm-labservices.ListLabsResponse>>
    package: azure-arm-labservices
  - uid: azure-arm-labservices.GlobalUsers.register
    name: 'register(string, RegisterPayload, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Register a user to a managed lab
    syntax:
      content: >-
        function register(userName: string, registerPayload: RegisterPayload,
        options?: Object)
      parameters:
        - id: userName
          type:
            - string
          description: |
            The name of the user.
        - id: registerPayload
          type:
            - azure-arm-labservices.RegisterPayload
          description: |
            Represents payload for Register action.
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<void>
    package: azure-arm-labservices
  - uid: azure-arm-labservices.GlobalUsers.register_2
    name: 'register(string, RegisterPayload, Object, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Register a user to a managed lab
    syntax:
      content: >-
        function register(userName: string, registerPayload: RegisterPayload,
        options: Object, callback: ServiceCallback<void>)
      parameters:
        - id: userName
          type:
            - string
          description: ''
        - id: registerPayload
          type:
            - azure-arm-labservices.RegisterPayload
          description: ''
        - id: options
          type:
            - Object
          description: ''
        - id: callback
          type:
            - ServiceCallback<void>
          description: ''
      return:
        type:
          - Promise<void>
    package: azure-arm-labservices
  - uid: azure-arm-labservices.GlobalUsers.register_1
    name: 'register(string, RegisterPayload, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Register a user to a managed lab
    syntax:
      content: >-
        function register(userName: string, registerPayload: RegisterPayload,
        callback: ServiceCallback<void>)
      parameters:
        - id: userName
          type:
            - string
          description: ''
        - id: registerPayload
          type:
            - azure-arm-labservices.RegisterPayload
          description: ''
        - id: callback
          type:
            - ServiceCallback<void>
          description: ''
      return:
        type:
          - Promise<void>
    package: azure-arm-labservices
  - uid: azure-arm-labservices.GlobalUsers.registerWithHttpOperationResponse
    name: 'registerWithHttpOperationResponse(string, RegisterPayload, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Register a user to a managed lab
    syntax:
      content: >-
        function registerWithHttpOperationResponse(userName: string,
        registerPayload: RegisterPayload, options?: Object)
      parameters:
        - id: userName
          type:
            - string
          description: |
            The name of the user.
        - id: registerPayload
          type:
            - azure-arm-labservices.RegisterPayload
          description: |
            Represents payload for Register action.
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<HttpOperationResponse<void>>
    package: azure-arm-labservices
  - uid: azure-arm-labservices.GlobalUsers.resetPassword
    name: 'resetPassword(string, ResetPasswordPayload, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      Resets the user password on an environment This operation can take a while
      to complete
    syntax:
      content: >-
        function resetPassword(userName: string, resetPasswordPayload:
        ResetPasswordPayload, options?: Object)
      parameters:
        - id: userName
          type:
            - string
          description: |
            The name of the user.
        - id: resetPasswordPayload
          type:
            - azure-arm-labservices.ResetPasswordPayload
          description: |
            Represents the payload for resetting
            passwords.
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<void>
    package: azure-arm-labservices
  - uid: azure-arm-labservices.GlobalUsers.resetPassword_2
    name: 'resetPassword(string, ResetPasswordPayload, Object, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      Resets the user password on an environment This operation can take a while
      to complete
    syntax:
      content: >-
        function resetPassword(userName: string, resetPasswordPayload:
        ResetPasswordPayload, options: Object, callback: ServiceCallback<void>)
      parameters:
        - id: userName
          type:
            - string
          description: ''
        - id: resetPasswordPayload
          type:
            - azure-arm-labservices.ResetPasswordPayload
          description: ''
        - id: options
          type:
            - Object
          description: ''
        - id: callback
          type:
            - ServiceCallback<void>
          description: ''
      return:
        type:
          - Promise<void>
    package: azure-arm-labservices
  - uid: azure-arm-labservices.GlobalUsers.resetPassword_1
    name: 'resetPassword(string, ResetPasswordPayload, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      Resets the user password on an environment This operation can take a while
      to complete
    syntax:
      content: >-
        function resetPassword(userName: string, resetPasswordPayload:
        ResetPasswordPayload, callback: ServiceCallback<void>)
      parameters:
        - id: userName
          type:
            - string
          description: ''
        - id: resetPasswordPayload
          type:
            - azure-arm-labservices.ResetPasswordPayload
          description: ''
        - id: callback
          type:
            - ServiceCallback<void>
          description: ''
      return:
        type:
          - Promise<void>
    package: azure-arm-labservices
  - uid: azure-arm-labservices.GlobalUsers.resetPasswordWithHttpOperationResponse
    name: >-
      resetPasswordWithHttpOperationResponse(string, ResetPasswordPayload,
      Object)
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      Resets the user password on an environment This operation can take a while
      to complete
    syntax:
      content: >-
        function resetPasswordWithHttpOperationResponse(userName: string,
        resetPasswordPayload: ResetPasswordPayload, options?: Object)
      parameters:
        - id: userName
          type:
            - string
          description: |
            The name of the user.
        - id: resetPasswordPayload
          type:
            - azure-arm-labservices.ResetPasswordPayload
          description: |
            Represents the payload for resetting
            passwords.
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<HttpOperationResponse<void>>
    package: azure-arm-labservices
  - uid: azure-arm-labservices.GlobalUsers.startEnvironment
    name: 'startEnvironment(string, EnvironmentOperationsPayload, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      Starts an environment by starting all resources inside the environment.
      This

      operation can take a while to complete
    syntax:
      content: >-
        function startEnvironment(userName: string,
        environmentOperationsPayload: EnvironmentOperationsPayload, options?:
        Object)
      parameters:
        - id: userName
          type:
            - string
          description: |
            The name of the user.
        - id: environmentOperationsPayload
          type:
            - azure-arm-labservices.EnvironmentOperationsPayload
          description: |
            Represents payload for any
            Environment operations like get, start, stop, connect
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<void>
    package: azure-arm-labservices
  - uid: azure-arm-labservices.GlobalUsers.startEnvironment_2
    name: >-
      startEnvironment(string, EnvironmentOperationsPayload, Object,
      ServiceCallback<void>)
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      Starts an environment by starting all resources inside the environment.
      This

      operation can take a while to complete
    syntax:
      content: >-
        function startEnvironment(userName: string,
        environmentOperationsPayload: EnvironmentOperationsPayload, options:
        Object, callback: ServiceCallback<void>)
      parameters:
        - id: userName
          type:
            - string
          description: ''
        - id: environmentOperationsPayload
          type:
            - azure-arm-labservices.EnvironmentOperationsPayload
          description: ''
        - id: options
          type:
            - Object
          description: ''
        - id: callback
          type:
            - ServiceCallback<void>
          description: ''
      return:
        type:
          - Promise<void>
    package: azure-arm-labservices
  - uid: azure-arm-labservices.GlobalUsers.startEnvironment_1
    name: >-
      startEnvironment(string, EnvironmentOperationsPayload,
      ServiceCallback<void>)
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      Starts an environment by starting all resources inside the environment.
      This

      operation can take a while to complete
    syntax:
      content: >-
        function startEnvironment(userName: string,
        environmentOperationsPayload: EnvironmentOperationsPayload, callback:
        ServiceCallback<void>)
      parameters:
        - id: userName
          type:
            - string
          description: ''
        - id: environmentOperationsPayload
          type:
            - azure-arm-labservices.EnvironmentOperationsPayload
          description: ''
        - id: callback
          type:
            - ServiceCallback<void>
          description: ''
      return:
        type:
          - Promise<void>
    package: azure-arm-labservices
  - uid: >-
      azure-arm-labservices.GlobalUsers.startEnvironmentWithHttpOperationResponse
    name: >-
      startEnvironmentWithHttpOperationResponse(string,
      EnvironmentOperationsPayload, Object)
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      Starts an environment by starting all resources inside the environment.
      This

      operation can take a while to complete
    syntax:
      content: >-
        function startEnvironmentWithHttpOperationResponse(userName: string,
        environmentOperationsPayload: EnvironmentOperationsPayload, options?:
        Object)
      parameters:
        - id: userName
          type:
            - string
          description: |
            The name of the user.
        - id: environmentOperationsPayload
          type:
            - azure-arm-labservices.EnvironmentOperationsPayload
          description: |
            Represents payload for any
            Environment operations like get, start, stop, connect
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<HttpOperationResponse<void>>
    package: azure-arm-labservices
  - uid: azure-arm-labservices.GlobalUsers.stopEnvironment
    name: 'stopEnvironment(string, EnvironmentOperationsPayload, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      Stops an environment by stopping all resources inside the environment This
      operation can take a while to complete
    syntax:
      content: >-
        function stopEnvironment(userName: string, environmentOperationsPayload:
        EnvironmentOperationsPayload, options?: Object)
      parameters:
        - id: userName
          type:
            - string
          description: |
            The name of the user.
        - id: environmentOperationsPayload
          type:
            - azure-arm-labservices.EnvironmentOperationsPayload
          description: |
            Represents payload for any
            Environment operations like get, start, stop, connect
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<void>
    package: azure-arm-labservices
  - uid: azure-arm-labservices.GlobalUsers.stopEnvironment_2
    name: >-
      stopEnvironment(string, EnvironmentOperationsPayload, Object,
      ServiceCallback<void>)
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      Stops an environment by stopping all resources inside the environment This
      operation can take a while to complete
    syntax:
      content: >-
        function stopEnvironment(userName: string, environmentOperationsPayload:
        EnvironmentOperationsPayload, options: Object, callback:
        ServiceCallback<void>)
      parameters:
        - id: userName
          type:
            - string
          description: ''
        - id: environmentOperationsPayload
          type:
            - azure-arm-labservices.EnvironmentOperationsPayload
          description: ''
        - id: options
          type:
            - Object
          description: ''
        - id: callback
          type:
            - ServiceCallback<void>
          description: ''
      return:
        type:
          - Promise<void>
    package: azure-arm-labservices
  - uid: azure-arm-labservices.GlobalUsers.stopEnvironment_1
    name: >-
      stopEnvironment(string, EnvironmentOperationsPayload,
      ServiceCallback<void>)
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      Stops an environment by stopping all resources inside the environment This
      operation can take a while to complete
    syntax:
      content: >-
        function stopEnvironment(userName: string, environmentOperationsPayload:
        EnvironmentOperationsPayload, callback: ServiceCallback<void>)
      parameters:
        - id: userName
          type:
            - string
          description: ''
        - id: environmentOperationsPayload
          type:
            - azure-arm-labservices.EnvironmentOperationsPayload
          description: ''
        - id: callback
          type:
            - ServiceCallback<void>
          description: ''
      return:
        type:
          - Promise<void>
    package: azure-arm-labservices
  - uid: azure-arm-labservices.GlobalUsers.stopEnvironmentWithHttpOperationResponse
    name: >-
      stopEnvironmentWithHttpOperationResponse(string,
      EnvironmentOperationsPayload, Object)
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      Stops an environment by stopping all resources inside the environment This
      operation can take a while to complete
    syntax:
      content: >-
        function stopEnvironmentWithHttpOperationResponse(userName: string,
        environmentOperationsPayload: EnvironmentOperationsPayload, options?:
        Object)
      parameters:
        - id: userName
          type:
            - string
          description: |
            The name of the user.
        - id: environmentOperationsPayload
          type:
            - azure-arm-labservices.EnvironmentOperationsPayload
          description: |
            Represents payload for any
            Environment operations like get, start, stop, connect
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<HttpOperationResponse<void>>
    package: azure-arm-labservices
references:
  - uid: azure-arm-labservices.ResetPasswordPayload
    name: ResetPasswordPayload
    spec.typeScript:
      - name: ResetPasswordPayload
        fullName: ResetPasswordPayload
        uid: azure-arm-labservices.ResetPasswordPayload
  - uid: azure-arm-labservices.EnvironmentOperationsPayload
    name: EnvironmentOperationsPayload
    spec.typeScript:
      - name: EnvironmentOperationsPayload
        fullName: EnvironmentOperationsPayload
        uid: azure-arm-labservices.EnvironmentOperationsPayload
  - uid: Promise<azure-arm-labservices.GetEnvironmentResponse>
    name: GetEnvironmentResponse>
    spec.typeScript:
      - name: Promise<
        fullName: Promise<
      - name: GetEnvironmentResponse
        fullName: GetEnvironmentResponse
        uid: azure-arm-labservices.GetEnvironmentResponse
      - name: '>'
        fullName: '>'
  - uid: ServiceCallback<azure-arm-labservices.GetEnvironmentResponse>
    name: GetEnvironmentResponse>
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: GetEnvironmentResponse
        fullName: GetEnvironmentResponse
        uid: azure-arm-labservices.GetEnvironmentResponse
      - name: '>'
        fullName: '>'
  - uid: >-
      Promise<HttpOperationResponse<azure-arm-labservices.GetEnvironmentResponse>>
    name: GetEnvironmentResponse>>
    spec.typeScript:
      - name: Promise<HttpOperationResponse<
        fullName: Promise<HttpOperationResponse<
      - name: GetEnvironmentResponse
        fullName: GetEnvironmentResponse
        uid: azure-arm-labservices.GetEnvironmentResponse
      - name: '>>'
        fullName: '>>'
  - uid: azure-arm-labservices.OperationBatchStatusPayload
    name: OperationBatchStatusPayload
    spec.typeScript:
      - name: OperationBatchStatusPayload
        fullName: OperationBatchStatusPayload
        uid: azure-arm-labservices.OperationBatchStatusPayload
  - uid: Promise<azure-arm-labservices.OperationBatchStatusResponse>
    name: OperationBatchStatusResponse>
    spec.typeScript:
      - name: Promise<
        fullName: Promise<
      - name: OperationBatchStatusResponse
        fullName: OperationBatchStatusResponse
        uid: azure-arm-labservices.OperationBatchStatusResponse
      - name: '>'
        fullName: '>'
  - uid: ServiceCallback<azure-arm-labservices.OperationBatchStatusResponse>
    name: OperationBatchStatusResponse>
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: OperationBatchStatusResponse
        fullName: OperationBatchStatusResponse
        uid: azure-arm-labservices.OperationBatchStatusResponse
      - name: '>'
        fullName: '>'
  - uid: >-
      Promise<HttpOperationResponse<azure-arm-labservices.OperationBatchStatusResponse>>
    name: OperationBatchStatusResponse>>
    spec.typeScript:
      - name: Promise<HttpOperationResponse<
        fullName: Promise<HttpOperationResponse<
      - name: OperationBatchStatusResponse
        fullName: OperationBatchStatusResponse
        uid: azure-arm-labservices.OperationBatchStatusResponse
      - name: '>>'
        fullName: '>>'
  - uid: azure-arm-labservices.OperationStatusPayload
    name: OperationStatusPayload
    spec.typeScript:
      - name: OperationStatusPayload
        fullName: OperationStatusPayload
        uid: azure-arm-labservices.OperationStatusPayload
  - uid: Promise<azure-arm-labservices.OperationStatusResponse>
    name: OperationStatusResponse>
    spec.typeScript:
      - name: Promise<
        fullName: Promise<
      - name: OperationStatusResponse
        fullName: OperationStatusResponse
        uid: azure-arm-labservices.OperationStatusResponse
      - name: '>'
        fullName: '>'
  - uid: ServiceCallback<azure-arm-labservices.OperationStatusResponse>
    name: OperationStatusResponse>
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: OperationStatusResponse
        fullName: OperationStatusResponse
        uid: azure-arm-labservices.OperationStatusResponse
      - name: '>'
        fullName: '>'
  - uid: >-
      Promise<HttpOperationResponse<azure-arm-labservices.OperationStatusResponse>>
    name: OperationStatusResponse>>
    spec.typeScript:
      - name: Promise<HttpOperationResponse<
        fullName: Promise<HttpOperationResponse<
      - name: OperationStatusResponse
        fullName: OperationStatusResponse
        uid: azure-arm-labservices.OperationStatusResponse
      - name: '>>'
        fullName: '>>'
  - uid: azure-arm-labservices.PersonalPreferencesOperationsPayload
    name: PersonalPreferencesOperationsPayload
    spec.typeScript:
      - name: PersonalPreferencesOperationsPayload
        fullName: PersonalPreferencesOperationsPayload
        uid: azure-arm-labservices.PersonalPreferencesOperationsPayload
  - uid: Promise<azure-arm-labservices.GetPersonalPreferencesResponse>
    name: GetPersonalPreferencesResponse>
    spec.typeScript:
      - name: Promise<
        fullName: Promise<
      - name: GetPersonalPreferencesResponse
        fullName: GetPersonalPreferencesResponse
        uid: azure-arm-labservices.GetPersonalPreferencesResponse
      - name: '>'
        fullName: '>'
  - uid: ServiceCallback<azure-arm-labservices.GetPersonalPreferencesResponse>
    name: GetPersonalPreferencesResponse>
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: GetPersonalPreferencesResponse
        fullName: GetPersonalPreferencesResponse
        uid: azure-arm-labservices.GetPersonalPreferencesResponse
      - name: '>'
        fullName: '>'
  - uid: >-
      Promise<HttpOperationResponse<azure-arm-labservices.GetPersonalPreferencesResponse>>
    name: GetPersonalPreferencesResponse>>
    spec.typeScript:
      - name: Promise<HttpOperationResponse<
        fullName: Promise<HttpOperationResponse<
      - name: GetPersonalPreferencesResponse
        fullName: GetPersonalPreferencesResponse
        uid: azure-arm-labservices.GetPersonalPreferencesResponse
      - name: '>>'
        fullName: '>>'
  - uid: azure-arm-labservices.ListEnvironmentsPayload
    name: ListEnvironmentsPayload
    spec.typeScript:
      - name: ListEnvironmentsPayload
        fullName: ListEnvironmentsPayload
        uid: azure-arm-labservices.ListEnvironmentsPayload
  - uid: Promise<azure-arm-labservices.ListEnvironmentsResponse>
    name: ListEnvironmentsResponse>
    spec.typeScript:
      - name: Promise<
        fullName: Promise<
      - name: ListEnvironmentsResponse
        fullName: ListEnvironmentsResponse
        uid: azure-arm-labservices.ListEnvironmentsResponse
      - name: '>'
        fullName: '>'
  - uid: ServiceCallback<azure-arm-labservices.ListEnvironmentsResponse>
    name: ListEnvironmentsResponse>
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: ListEnvironmentsResponse
        fullName: ListEnvironmentsResponse
        uid: azure-arm-labservices.ListEnvironmentsResponse
      - name: '>'
        fullName: '>'
  - uid: >-
      Promise<HttpOperationResponse<azure-arm-labservices.ListEnvironmentsResponse>>
    name: ListEnvironmentsResponse>>
    spec.typeScript:
      - name: Promise<HttpOperationResponse<
        fullName: Promise<HttpOperationResponse<
      - name: ListEnvironmentsResponse
        fullName: ListEnvironmentsResponse
        uid: azure-arm-labservices.ListEnvironmentsResponse
      - name: '>>'
        fullName: '>>'
  - uid: Promise<azure-arm-labservices.ListLabsResponse>
    name: ListLabsResponse>
    spec.typeScript:
      - name: Promise<
        fullName: Promise<
      - name: ListLabsResponse
        fullName: ListLabsResponse
        uid: azure-arm-labservices.ListLabsResponse
      - name: '>'
        fullName: '>'
  - uid: ServiceCallback<azure-arm-labservices.ListLabsResponse>
    name: ListLabsResponse>
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: ListLabsResponse
        fullName: ListLabsResponse
        uid: azure-arm-labservices.ListLabsResponse
      - name: '>'
        fullName: '>'
  - uid: Promise<HttpOperationResponse<azure-arm-labservices.ListLabsResponse>>
    name: ListLabsResponse>>
    spec.typeScript:
      - name: Promise<HttpOperationResponse<
        fullName: Promise<HttpOperationResponse<
      - name: ListLabsResponse
        fullName: ListLabsResponse
        uid: azure-arm-labservices.ListLabsResponse
      - name: '>>'
        fullName: '>>'
  - uid: azure-arm-labservices.RegisterPayload
    name: RegisterPayload
    spec.typeScript:
      - name: RegisterPayload
        fullName: RegisterPayload
        uid: azure-arm-labservices.RegisterPayload
