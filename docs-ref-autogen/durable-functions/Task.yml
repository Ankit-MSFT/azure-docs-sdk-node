### YamlMime:TSType
name: Task
uid: durable-functions.Task
package: durable-functions
summary: |+
  Represents some pending action. Similar to a native JavaScript promise in
  that it acts as a placeholder for outstanding asynchronous work, but has
  a synchronous implementation and is specific to Durable Functions.
  Tasks are only returned to an orchestration function when a
  [[DurableOrchestrationContext]] operation is not called with `yield`. They
  are useful for parallelization and timeout operations in conjunction with
  Task.all and Task.any.

  We discourage the usage of `instanceof`-style guards on this type,
  as it is subject to change in the future.


  **Example**

  Wait for all parallel operations to complete
  ```javascript
  const operations = context.df.callActivity("GetOperations");

  const tasks = [];
  for (const operation of operations) {
      tasks.push(context.df.callActivity("DoOperation", operation));
  }

  const results = yield context.df.Task.all(tasks);
  ```



  **Example**

  Return the result of the first of two operations to complete
  ```javascript
  const taskA = context.df.callActivity("DoWorkA");
  const taskB = context.df.callActivity("DoWorkB");

  const firstDone = yield context.df.Task.any([taskA, taskB]);

  return firstDone.result;
  ```

fullName: Task
remarks: ''
isPreview: false
isDeprecated: false
type: class
properties:
  - name: exception
    uid: durable-functions.Task.exception
    package: durable-functions
    summary: |-
      The error thrown when attempting to perform the task's action. If
      the Task has not yet completed or has completed successfully,
      `undefined`.
    fullName: exception
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'exception?: Error | undefined'
      return:
        description: ''
        type: Error | undefined
  - name: isCompleted
    uid: durable-functions.Task.isCompleted
    package: durable-functions
    summary: |-
      Whether the task has completed. Note that completion is not
      equivalent to success.
    fullName: isCompleted
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'isCompleted: boolean'
      return:
        description: ''
        type: boolean
  - name: isFaulted
    uid: durable-functions.Task.isFaulted
    package: durable-functions
    summary: Whether the task faulted in some way due to error.
    fullName: isFaulted
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'isFaulted: boolean'
      return:
        description: ''
        type: boolean
  - name: result
    uid: durable-functions.Task.result
    package: durable-functions
    summary: 'The result of the task, if completed. Otherwise `undefined`.'
    fullName: result
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'result?: unknown'
      return:
        description: ''
        type: unknown
