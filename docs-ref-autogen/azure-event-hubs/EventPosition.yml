### YamlMime:UniversalReference
items:
  - uid: azure-event-hubs.EventPosition
    id: azure-event-hubs.EventPosition
    name: EventPosition
    summary: |-
      Represents options can be set during the creation of a event hub receiver.
      Defines a position of an @link~EventData in the event hub partition.
    fullName: azure-event-hubs.EventPosition
    type: Class
    children:
      - 'azure-event-hubs.EventPosition.#ctor'
      - 'azure-event-hubs.EventPosition#isInclusive'
      - 'azure-event-hubs.EventPosition#getExpression'
      - azure-event-hubs.EventPosition.fromOffset
      - azure-event-hubs.EventPosition.fromSequenceNumber
      - azure-event-hubs.EventPosition.fromEnqueuedTime
      - azure-event-hubs.EventPosition.withCustomFilter
      - azure-event-hubs.EventPosition.fromStart
      - azure-event-hubs.EventPosition.fromEnd
    langs:
      - js
  - id: 'azure-event-hubs.EventPosition.#ctor'
    uid: 'azure-event-hubs.EventPosition.#ctor'
    parent: azure-event-hubs.EventPosition
    name: EventPosition()
    fullName: azure-event-hubs.EventPosition.EventPosition()
    summary: |-
      Represents options can be set during the creation of a event hub receiver.
      Defines a position of an @link~EventData in the event hub partition.
    type: Constructor
    syntax:
      content: new EventPosition()
    langs:
      - js
  - uid: 'azure-event-hubs.EventPosition#isInclusive'
    id: 'azure-event-hubs.EventPosition#isInclusive'
    parent: azure-event-hubs.EventPosition
    name: isInclusive
    summary: ''
    fullName: azure-event-hubs.EventPosition.isInclusive
    type: Member
    syntax:
      content: isInclusive
    langs:
      - js
  - uid: 'azure-event-hubs.EventPosition#getExpression'
    id: 'azure-event-hubs.EventPosition#getExpression'
    parent: azure-event-hubs.EventPosition
    name: getExpression()
    summary: Gets the expression (filter clause) that needs to be set on the source.
    fullName: azure-event-hubs.EventPosition.getExpression()
    type: Function
    syntax:
      return:
        type:
          - string
        description: filterExpression
      content: function getExpression()
    langs:
      - js
  - uid: azure-event-hubs.EventPosition.fromOffset
    id: azure-event-hubs.EventPosition.fromOffset
    parent: azure-event-hubs.EventPosition
    name: 'fromOffset(offset, isInclusive)'
    summary: Creates a position at the given offset.
    fullName: 'azure-event-hubs.EventPosition.fromOffset(offset, isInclusive)'
    type: Function
    syntax:
      parameters:
        - id: offset
          type:
            - string
          description: >-
            The offset of the data relative to the Event Hub partition stream.

            The offset is a marker or identifier for an event within the Event
            Hubs stream.

            The identifier is unique within a partition of the Event Hubs
            stream.
        - id: isInclusive
          type:
            - boolean
          description: |-
            If true, the specified event is included;
            otherwise the next event is returned. Default: false.
      return:
        type:
          - azure-event-hubs.EventPosition
        description: EventPosition
      content: 'function fromOffset(offset, isInclusive)'
    langs:
      - js
  - uid: azure-event-hubs.EventPosition.fromSequenceNumber
    id: azure-event-hubs.EventPosition.fromSequenceNumber
    parent: azure-event-hubs.EventPosition
    name: 'fromSequenceNumber(sequenceNumber, isInclusive)'
    summary: Creates a position at the given sequence number.
    fullName: >-
      azure-event-hubs.EventPosition.fromSequenceNumber(sequenceNumber,
      isInclusive)
    type: Function
    syntax:
      parameters:
        - id: sequenceNumber
          type:
            - number
          description: >-
            The logical sequence number of the event within the partition stream
            of the Event Hub.
        - id: isInclusive
          type:
            - boolean
          description: |-
            If true, the specified event is included;
            otherwise the next event is returned. Default false.
      return:
        type:
          - azure-event-hubs.EventPosition
        description: EventPosition
      content: 'function fromSequenceNumber(sequenceNumber, isInclusive)'
    langs:
      - js
  - uid: azure-event-hubs.EventPosition.fromEnqueuedTime
    id: azure-event-hubs.EventPosition.fromEnqueuedTime
    parent: azure-event-hubs.EventPosition
    name: 'fromEnqueuedTime(enqueuedTime, isInclusive)'
    summary: Creates a position at the given enqueued time.
    fullName: 'azure-event-hubs.EventPosition.fromEnqueuedTime(enqueuedTime, isInclusive)'
    type: Function
    syntax:
      parameters:
        - id: enqueuedTime
          type:
            - Date
            - number
          description: >-
            The enqueue time. This value represents the actual time of enqueuing
            the message.
        - id: isInclusive
          type:
            - boolean
          description: >-
            If true, the specified event is included; otherwise the next event
            is returned.
      return:
        type:
          - azure-event-hubs.EventPosition
        description: EventPosition
      content: 'function fromEnqueuedTime(enqueuedTime, isInclusive)'
    langs:
      - js
  - uid: azure-event-hubs.EventPosition.withCustomFilter
    id: azure-event-hubs.EventPosition.withCustomFilter
    parent: azure-event-hubs.EventPosition
    name: withCustomFilter(customFilter)
    summary: Creates a position based on the given custom filter.
    fullName: azure-event-hubs.EventPosition.withCustomFilter(customFilter)
    type: Function
    syntax:
      parameters:
        - id: customFilter
          type:
            - string
          description: >-
            The cutom filter expression that needs to be applied on the
            receiver. This should be used

            only when one of the other methods `fromOffset()`,
            `fromSequenceNumber()`, `fromEnqueuedTime()` is not applicable for

            your scenario.
      content: function withCustomFilter(customFilter)
    langs:
      - js
  - uid: azure-event-hubs.EventPosition.fromStart
    id: azure-event-hubs.EventPosition.fromStart
    parent: azure-event-hubs.EventPosition
    name: fromStart()
    summary: >-
      Returns the position for the start of a stream. Provide this position in
      receiver creation to

      start receiving from the first available event in the partition.
    fullName: azure-event-hubs.EventPosition.fromStart()
    type: Function
    syntax:
      return:
        type:
          - azure-event-hubs.EventPosition
        description: EventPosition
      content: function fromStart()
    langs:
      - js
  - uid: azure-event-hubs.EventPosition.fromEnd
    id: azure-event-hubs.EventPosition.fromEnd
    parent: azure-event-hubs.EventPosition
    name: fromEnd()
    summary: >-
      Returns the position for the end of a stream. Provide this position in
      receiver creation to

      start receiving from the next available event in the partition after the
      receiver is created.
    fullName: azure-event-hubs.EventPosition.fromEnd()
    type: Function
    syntax:
      return:
        type:
          - azure-event-hubs.EventPosition
        description: EventPosition
      content: function fromEnd()
    langs:
      - js
