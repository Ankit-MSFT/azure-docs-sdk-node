### YamlMime:UniversalReference
items:
  - uid: '@microsoft/signalr.HttpResponse'
    name: HttpResponse
    fullName: HttpResponse
    children:
      - '@microsoft/signalr.HttpResponse.content'
      - '@microsoft/signalr.HttpResponse.constructor'
      - '@microsoft/signalr.HttpResponse.constructor_1'
      - '@microsoft/signalr.HttpResponse.constructor_3'
      - '@microsoft/signalr.HttpResponse.constructor_2'
      - '@microsoft/signalr.HttpResponse.statusCode'
      - '@microsoft/signalr.HttpResponse.statusText'
    langs:
      - typeScript
    type: class
    summary: Represents an HTTP response.
    package: '@microsoft/signalr'
  - uid: '@microsoft/signalr.HttpResponse.content'
    name: content
    fullName: content
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    optional: true
    syntax:
      content: 'content?: string | ArrayBuffer | undefined'
      return:
        type:
          - string | ArrayBuffer | undefined
    package: '@microsoft/signalr'
  - uid: '@microsoft/signalr.HttpResponse.constructor'
    name: HttpResponse(number)
    children: []
    type: constructor
    langs:
      - typeScript
    summary: >-
      Constructs a new instance of <xref:%40microsoft%2Fsignalr.HttpResponse>
      with the specified status code.
    syntax:
      content: 'new HttpResponse(statusCode: number)'
      parameters:
        - id: statusCode
          type:
            - number
          description: |
            The status code of the response.
    package: '@microsoft/signalr'
  - uid: '@microsoft/signalr.HttpResponse.constructor_1'
    name: 'HttpResponse(number, string)'
    children: []
    type: constructor
    langs:
      - typeScript
    summary: >-
      Constructs a new instance of <xref:%40microsoft%2Fsignalr.HttpResponse>
      with the specified status code and message.
    syntax:
      content: 'new HttpResponse(statusCode: number, statusText: string)'
      parameters:
        - id: statusCode
          type:
            - number
          description: |
            The status code of the response.
        - id: statusText
          type:
            - string
          description: |
            The status message of the response.
    package: '@microsoft/signalr'
  - uid: '@microsoft/signalr.HttpResponse.constructor_3'
    name: 'HttpResponse(number, string, ArrayBuffer)'
    children: []
    type: constructor
    langs:
      - typeScript
    summary: >-
      Constructs a new instance of <xref:%40microsoft%2Fsignalr.HttpResponse>
      with the specified status code, message and binary content.
    syntax:
      content: >-
        new HttpResponse(statusCode: number, statusText: string, content:
        ArrayBuffer)
      parameters:
        - id: statusCode
          type:
            - number
          description: |
            The status code of the response.
        - id: statusText
          type:
            - string
          description: |
            The status message of the response.
        - id: content
          type:
            - ArrayBuffer
          description: |
            The content of the response.
    package: '@microsoft/signalr'
  - uid: '@microsoft/signalr.HttpResponse.constructor_2'
    name: 'HttpResponse(number, string, string)'
    children: []
    type: constructor
    langs:
      - typeScript
    summary: >-
      Constructs a new instance of <xref:%40microsoft%2Fsignalr.HttpResponse>
      with the specified status code, message and string content.
    syntax:
      content: >-
        new HttpResponse(statusCode: number, statusText: string, content:
        string)
      parameters:
        - id: statusCode
          type:
            - number
          description: |
            The status code of the response.
        - id: statusText
          type:
            - string
          description: |
            The status message of the response.
        - id: content
          type:
            - string
          description: |
            The content of the response.
    package: '@microsoft/signalr'
  - uid: '@microsoft/signalr.HttpResponse.statusCode'
    name: statusCode
    fullName: statusCode
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'statusCode: number'
      return:
        type:
          - number
    package: '@microsoft/signalr'
  - uid: '@microsoft/signalr.HttpResponse.statusText'
    name: statusText
    fullName: statusText
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    optional: true
    syntax:
      content: 'statusText?: string | undefined'
      return:
        type:
          - string | undefined
    package: '@microsoft/signalr'
