### YamlMime:UniversalReference
items:
  - uid: azure-arm-containerregistry.BuildTasks
    id: azure-arm-containerregistry.BuildTasks
    name: BuildTasks
    summary: Class representing a BuildTasks.
    fullName: azure-arm-containerregistry.BuildTasks
    type: Class
    children:
      - 'azure-arm-containerregistry.BuildTasks.#ctor'
      - 'azure-arm-containerregistry.BuildTasks#listWithHttpOperationResponse'
      - 'azure-arm-containerregistry.BuildTasks#list'
      - 'azure-arm-containerregistry.BuildTasks#getWithHttpOperationResponse'
      - 'azure-arm-containerregistry.BuildTasks#get'
      - 'azure-arm-containerregistry.BuildTasks#createWithHttpOperationResponse'
      - 'azure-arm-containerregistry.BuildTasks#create'
      - >-
        azure-arm-containerregistry.BuildTasks#deleteMethodWithHttpOperationResponse
      - 'azure-arm-containerregistry.BuildTasks#deleteMethod'
      - 'azure-arm-containerregistry.BuildTasks#updateWithHttpOperationResponse'
      - 'azure-arm-containerregistry.BuildTasks#update'
      - >-
        azure-arm-containerregistry.BuildTasks#listSourceRepositoryPropertiesWithHttpOperationResponse
      - 'azure-arm-containerregistry.BuildTasks#listSourceRepositoryProperties'
      - >-
        azure-arm-containerregistry.BuildTasks#beginCreateWithHttpOperationResponse
      - 'azure-arm-containerregistry.BuildTasks#beginCreate'
      - >-
        azure-arm-containerregistry.BuildTasks#beginDeleteMethodWithHttpOperationResponse
      - 'azure-arm-containerregistry.BuildTasks#beginDeleteMethod'
      - >-
        azure-arm-containerregistry.BuildTasks#beginUpdateWithHttpOperationResponse
      - 'azure-arm-containerregistry.BuildTasks#beginUpdate'
      - 'azure-arm-containerregistry.BuildTasks#listNextWithHttpOperationResponse'
      - 'azure-arm-containerregistry.BuildTasks#listNext'
    langs:
      - js
  - id: 'azure-arm-containerregistry.BuildTasks.#ctor'
    uid: 'azure-arm-containerregistry.BuildTasks.#ctor'
    parent: azure-arm-containerregistry.BuildTasks
    name: BuildTasks(client)
    fullName: azure-arm-containerregistry.BuildTasks.BuildTasks(client)
    summary: Create a BuildTasks.
    type: Constructor
    syntax:
      parameters:
        - id: client
          type:
            - undefinedContainerRegistryManagementClient
          description: Reference to the service client.
      content: new BuildTasks(client)
    langs:
      - js
  - uid: 'azure-arm-containerregistry.BuildTasks#listWithHttpOperationResponse'
    id: 'azure-arm-containerregistry.BuildTasks#listWithHttpOperationResponse'
    parent: azure-arm-containerregistry.BuildTasks
    name: 'listWithHttpOperationResponse(resourceGroupName, registryName, options)'
    summary: Lists all the build tasks for a specified container registry.
    fullName: >-
      azure-arm-containerregistry.BuildTasks.listWithHttpOperationResponse(resourceGroupName,
      registryName, options)
    tags:
      - originalTitle: resolve
        title: resolve
        text: >-
          {HttpOperationResponse<BuildTaskListResult>} - The deserialized result
          object.
        value: >-
          {HttpOperationResponse<BuildTaskListResult>} - The deserialized result
          object.
      - originalTitle: reject
        title: reject
        text: '{Error} - The error object.'
        value: '{Error} - The error object.'
    type: Function
    syntax:
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |-
            The name of the resource group to which
            the container registry belongs.
        - id: registryName
          type:
            - string
          description: The name of the container registry.
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.filter
          type:
            - string
          description: |-
            The build task filter to apply on the
            operation.
          optional: true
        - id: options.skipToken
          type:
            - string
          description: |-
            $skipToken is supported on get list of
            build tasks, which provides the next page in the list of tasks.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
      return:
        type:
          - Promise
        description: A promise is returned
      content: >-
        function listWithHttpOperationResponse(resourceGroupName, registryName,
        options)
    langs:
      - js
  - uid: 'azure-arm-containerregistry.BuildTasks#list'
    id: 'azure-arm-containerregistry.BuildTasks#list'
    parent: azure-arm-containerregistry.BuildTasks
    name: 'list(resourceGroupName, registryName, options, optionalCallback)'
    summary: Lists all the build tasks for a specified container registry.
    fullName: >-
      azure-arm-containerregistry.BuildTasks.list(resourceGroupName,
      registryName, options, optionalCallback)
    tags:
      - originalTitle: resolve
        title: resolve
        text: '{BuildTaskListResult} - The deserialized result object.'
        value: '{BuildTaskListResult} - The deserialized result object.'
      - originalTitle: reject
        title: reject
        text: |-
          {Error} - The error object.

          {function} optionalCallback(err, result, request, response)

                               {Error}  err        - The Error object if an error occurred, null otherwise.

                               {object} [result]   - The deserialized result object if an error did not occur.
                               See {@link BuildTaskListResult} for more information.

                               {object} [request]  - The HTTP Request object if an error did not occur.

                               {stream} [response] - The HTTP Response stream if an error did not occur.
        value: |-
          {Error} - The error object.

          {function} optionalCallback(err, result, request, response)

                               {Error}  err        - The Error object if an error occurred, null otherwise.

                               {object} [result]   - The deserialized result object if an error did not occur.
                               See {@link BuildTaskListResult} for more information.

                               {object} [request]  - The HTTP Request object if an error did not occur.

                               {stream} [response] - The HTTP Response stream if an error did not occur.
    type: Function
    syntax:
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |-
            The name of the resource group to which
            the container registry belongs.
        - id: registryName
          type:
            - string
          description: The name of the container registry.
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.filter
          type:
            - string
          description: |-
            The build task filter to apply on the
            operation.
          optional: true
        - id: options.skipToken
          type:
            - string
          description: |-
            $skipToken is supported on get list of
            build tasks, which provides the next page in the list of tasks.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
        - id: optionalCallback
          type:
            - function
          description: The optional callback.
          optional: true
      return:
        type:
          - function
          - Promise
        description: |-
          If a callback was passed as the last parameter
          then it returns the callback else returns a Promise.

          {Promise} A promise is returned
      content: >-
        function list(resourceGroupName, registryName, options,
        optionalCallback)
    langs:
      - js
  - uid: 'azure-arm-containerregistry.BuildTasks#getWithHttpOperationResponse'
    id: 'azure-arm-containerregistry.BuildTasks#getWithHttpOperationResponse'
    parent: azure-arm-containerregistry.BuildTasks
    name: >-
      getWithHttpOperationResponse(resourceGroupName, registryName,
      buildTaskName, options)
    summary: Get the properties of a specified build task.
    fullName: >-
      azure-arm-containerregistry.BuildTasks.getWithHttpOperationResponse(resourceGroupName,
      registryName, buildTaskName, options)
    tags:
      - originalTitle: resolve
        title: resolve
        text: '{HttpOperationResponse<BuildTask>} - The deserialized result object.'
        value: '{HttpOperationResponse<BuildTask>} - The deserialized result object.'
      - originalTitle: reject
        title: reject
        text: '{Error} - The error object.'
        value: '{Error} - The error object.'
    type: Function
    syntax:
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |-
            The name of the resource group to which
            the container registry belongs.
        - id: registryName
          type:
            - string
          description: The name of the container registry.
        - id: buildTaskName
          type:
            - string
          description: The name of the container registry build task.
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
      return:
        type:
          - Promise
        description: A promise is returned
      content: >-
        function getWithHttpOperationResponse(resourceGroupName, registryName,
        buildTaskName, options)
    langs:
      - js
  - uid: 'azure-arm-containerregistry.BuildTasks#get'
    id: 'azure-arm-containerregistry.BuildTasks#get'
    parent: azure-arm-containerregistry.BuildTasks
    name: >-
      get(resourceGroupName, registryName, buildTaskName, options,
      optionalCallback)
    summary: Get the properties of a specified build task.
    fullName: >-
      azure-arm-containerregistry.BuildTasks.get(resourceGroupName,
      registryName, buildTaskName, options, optionalCallback)
    tags:
      - originalTitle: resolve
        title: resolve
        text: '{BuildTask} - The deserialized result object.'
        value: '{BuildTask} - The deserialized result object.'
      - originalTitle: reject
        title: reject
        text: |-
          {Error} - The error object.

          {function} optionalCallback(err, result, request, response)

                               {Error}  err        - The Error object if an error occurred, null otherwise.

                               {object} [result]   - The deserialized result object if an error did not occur.
                               See {@link BuildTask} for more information.

                               {object} [request]  - The HTTP Request object if an error did not occur.

                               {stream} [response] - The HTTP Response stream if an error did not occur.
        value: |-
          {Error} - The error object.

          {function} optionalCallback(err, result, request, response)

                               {Error}  err        - The Error object if an error occurred, null otherwise.

                               {object} [result]   - The deserialized result object if an error did not occur.
                               See {@link BuildTask} for more information.

                               {object} [request]  - The HTTP Request object if an error did not occur.

                               {stream} [response] - The HTTP Response stream if an error did not occur.
    type: Function
    syntax:
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |-
            The name of the resource group to which
            the container registry belongs.
        - id: registryName
          type:
            - string
          description: The name of the container registry.
        - id: buildTaskName
          type:
            - string
          description: The name of the container registry build task.
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
        - id: optionalCallback
          type:
            - function
          description: The optional callback.
          optional: true
      return:
        type:
          - function
          - Promise
        description: |-
          If a callback was passed as the last parameter
          then it returns the callback else returns a Promise.

          {Promise} A promise is returned
      content: >-
        function get(resourceGroupName, registryName, buildTaskName, options,
        optionalCallback)
    langs:
      - js
  - uid: 'azure-arm-containerregistry.BuildTasks#createWithHttpOperationResponse'
    id: 'azure-arm-containerregistry.BuildTasks#createWithHttpOperationResponse'
    parent: azure-arm-containerregistry.BuildTasks
    name: >-
      createWithHttpOperationResponse(resourceGroupName, registryName,
      buildTaskName, buildTaskCreateParameters, options)
    summary: >-
      Creates a build task for a container registry with the specified
      parameters.
    fullName: >-
      azure-arm-containerregistry.BuildTasks.createWithHttpOperationResponse(resourceGroupName,
      registryName, buildTaskName, buildTaskCreateParameters, options)
    tags:
      - originalTitle: resolve
        title: resolve
        text: '{HttpOperationResponse<BuildTask>} - The deserialized result object.'
        value: '{HttpOperationResponse<BuildTask>} - The deserialized result object.'
      - originalTitle: reject
        title: reject
        text: '{Error} - The error object.'
        value: '{Error} - The error object.'
    type: Function
    syntax:
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |-
            The name of the resource group to which
            the container registry belongs.
        - id: registryName
          type:
            - string
          description: The name of the container registry.
        - id: buildTaskName
          type:
            - string
          description: The name of the container registry build task.
        - id: buildTaskCreateParameters
          type:
            - object
          description: |-
            The parameters for creating a
            build task.
        - id: buildTaskCreateParameters.alias
          type:
            - string
          description: |-
            The alternative updatable
            name for a build task.
        - id: buildTaskCreateParameters.status
          type:
            - string
          description: |-
            The current status of
            build task. Possible values include: 'Disabled', 'Enabled'
          optional: true
        - id: buildTaskCreateParameters.sourceRepository
          type:
            - object
          description: |-
            The properties
            that describes the source(code) for the build task.
        - id: buildTaskCreateParameters.sourceRepository.sourceControlType
          type:
            - string
          description: >-
            The type of source control service. Possible values include:
            'Github',

            'VisualStudioTeamService'
        - id: buildTaskCreateParameters.sourceRepository.repositoryUrl
          type:
            - string
          description: |-
            The
            full URL to the source code respository
        - id: buildTaskCreateParameters.sourceRepository.isCommitTriggerEnabled
          type:
            - boolean
          description: >-
            The

            value of this property indicates whether the source control commit
            trigger

            is enabled or not.
          optional: true
        - id: >-
            buildTaskCreateParameters.sourceRepository.sourceControlAuthProperties
          type:
            - object
          description: |-
            The
            authorization properties for accessing the source code repository.
          optional: true
        - id: >-
            buildTaskCreateParameters.sourceRepository.sourceControlAuthProperties.tokenType
          type:
            - string
          description: 'The type of Auth token. Possible values include: ''PAT'', ''OAuth'''
          optional: true
        - id: >-
            buildTaskCreateParameters.sourceRepository.sourceControlAuthProperties.token
          type:
            - string
          description: The access token used to access the source control provider.
        - id: >-
            buildTaskCreateParameters.sourceRepository.sourceControlAuthProperties.refreshToken
          type:
            - string
          description: The refresh token used to refresh the access token.
          optional: true
        - id: >-
            buildTaskCreateParameters.sourceRepository.sourceControlAuthProperties.scope
          type:
            - string
          description: The scope of the access token.
          optional: true
        - id: >-
            buildTaskCreateParameters.sourceRepository.sourceControlAuthProperties.expiresIn
          type:
            - number
          description: Time in seconds that the token remains valid
          optional: true
        - id: buildTaskCreateParameters.platform
          type:
            - object
          description: |-
            The platform properties
            against which the build has to happen.
        - id: buildTaskCreateParameters.platform.osType
          type:
            - string
          description: >-
            The operating

            system type required for the build. Possible values include:
            'Windows',

            'Linux'
        - id: buildTaskCreateParameters.platform.cpu
          type:
            - number
          description: |-
            The CPU
            configuration in terms of number of cores required for the build.
          optional: true
        - id: buildTaskCreateParameters.timeout
          type:
            - number
          description: |-
            Build timeout in
            seconds.
          optional: true
        - id: buildTaskCreateParameters.location
          type:
            - string
          description: |-
            The location of the
            resource. This cannot be changed after the resource is created.
        - id: buildTaskCreateParameters.tags
          type:
            - object
          description: The tags of the resource.
          optional: true
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
      return:
        type:
          - Promise
        description: A promise is returned
      content: >-
        function createWithHttpOperationResponse(resourceGroupName,
        registryName, buildTaskName, buildTaskCreateParameters, options)
    langs:
      - js
  - uid: 'azure-arm-containerregistry.BuildTasks#create'
    id: 'azure-arm-containerregistry.BuildTasks#create'
    parent: azure-arm-containerregistry.BuildTasks
    name: >-
      create(resourceGroupName, registryName, buildTaskName,
      buildTaskCreateParameters, options, optionalCallback)
    summary: >-
      Creates a build task for a container registry with the specified
      parameters.
    fullName: >-
      azure-arm-containerregistry.BuildTasks.create(resourceGroupName,
      registryName, buildTaskName, buildTaskCreateParameters, options,
      optionalCallback)
    tags:
      - originalTitle: resolve
        title: resolve
        text: '{BuildTask} - The deserialized result object.'
        value: '{BuildTask} - The deserialized result object.'
      - originalTitle: reject
        title: reject
        text: |-
          {Error} - The error object.

          {function} optionalCallback(err, result, request, response)

                               {Error}  err        - The Error object if an error occurred, null otherwise.

                               {object} [result]   - The deserialized result object if an error did not occur.
                               See {@link BuildTask} for more information.

                               {object} [request]  - The HTTP Request object if an error did not occur.

                               {stream} [response] - The HTTP Response stream if an error did not occur.
        value: |-
          {Error} - The error object.

          {function} optionalCallback(err, result, request, response)

                               {Error}  err        - The Error object if an error occurred, null otherwise.

                               {object} [result]   - The deserialized result object if an error did not occur.
                               See {@link BuildTask} for more information.

                               {object} [request]  - The HTTP Request object if an error did not occur.

                               {stream} [response] - The HTTP Response stream if an error did not occur.
    type: Function
    syntax:
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |-
            The name of the resource group to which
            the container registry belongs.
        - id: registryName
          type:
            - string
          description: The name of the container registry.
        - id: buildTaskName
          type:
            - string
          description: The name of the container registry build task.
        - id: buildTaskCreateParameters
          type:
            - object
          description: |-
            The parameters for creating a
            build task.
        - id: buildTaskCreateParameters.alias
          type:
            - string
          description: |-
            The alternative updatable
            name for a build task.
        - id: buildTaskCreateParameters.status
          type:
            - string
          description: |-
            The current status of
            build task. Possible values include: 'Disabled', 'Enabled'
          optional: true
        - id: buildTaskCreateParameters.sourceRepository
          type:
            - object
          description: |-
            The properties
            that describes the source(code) for the build task.
        - id: buildTaskCreateParameters.sourceRepository.sourceControlType
          type:
            - string
          description: >-
            The type of source control service. Possible values include:
            'Github',

            'VisualStudioTeamService'
        - id: buildTaskCreateParameters.sourceRepository.repositoryUrl
          type:
            - string
          description: |-
            The
            full URL to the source code respository
        - id: buildTaskCreateParameters.sourceRepository.isCommitTriggerEnabled
          type:
            - boolean
          description: >-
            The

            value of this property indicates whether the source control commit
            trigger

            is enabled or not.
          optional: true
        - id: >-
            buildTaskCreateParameters.sourceRepository.sourceControlAuthProperties
          type:
            - object
          description: |-
            The
            authorization properties for accessing the source code repository.
          optional: true
        - id: >-
            buildTaskCreateParameters.sourceRepository.sourceControlAuthProperties.tokenType
          type:
            - string
          description: 'The type of Auth token. Possible values include: ''PAT'', ''OAuth'''
          optional: true
        - id: >-
            buildTaskCreateParameters.sourceRepository.sourceControlAuthProperties.token
          type:
            - string
          description: The access token used to access the source control provider.
        - id: >-
            buildTaskCreateParameters.sourceRepository.sourceControlAuthProperties.refreshToken
          type:
            - string
          description: The refresh token used to refresh the access token.
          optional: true
        - id: >-
            buildTaskCreateParameters.sourceRepository.sourceControlAuthProperties.scope
          type:
            - string
          description: The scope of the access token.
          optional: true
        - id: >-
            buildTaskCreateParameters.sourceRepository.sourceControlAuthProperties.expiresIn
          type:
            - number
          description: Time in seconds that the token remains valid
          optional: true
        - id: buildTaskCreateParameters.platform
          type:
            - object
          description: |-
            The platform properties
            against which the build has to happen.
        - id: buildTaskCreateParameters.platform.osType
          type:
            - string
          description: >-
            The operating

            system type required for the build. Possible values include:
            'Windows',

            'Linux'
        - id: buildTaskCreateParameters.platform.cpu
          type:
            - number
          description: |-
            The CPU
            configuration in terms of number of cores required for the build.
          optional: true
        - id: buildTaskCreateParameters.timeout
          type:
            - number
          description: |-
            Build timeout in
            seconds.
          optional: true
        - id: buildTaskCreateParameters.location
          type:
            - string
          description: |-
            The location of the
            resource. This cannot be changed after the resource is created.
        - id: buildTaskCreateParameters.tags
          type:
            - object
          description: The tags of the resource.
          optional: true
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
        - id: optionalCallback
          type:
            - function
          description: The optional callback.
          optional: true
      return:
        type:
          - function
          - Promise
        description: |-
          If a callback was passed as the last parameter
          then it returns the callback else returns a Promise.

          {Promise} A promise is returned
      content: >-
        function create(resourceGroupName, registryName, buildTaskName,
        buildTaskCreateParameters, options, optionalCallback)
    langs:
      - js
  - uid: >-
      azure-arm-containerregistry.BuildTasks#deleteMethodWithHttpOperationResponse
    id: >-
      azure-arm-containerregistry.BuildTasks#deleteMethodWithHttpOperationResponse
    parent: azure-arm-containerregistry.BuildTasks
    name: >-
      deleteMethodWithHttpOperationResponse(resourceGroupName, registryName,
      buildTaskName, options)
    summary: Deletes a specified build task.
    fullName: >-
      azure-arm-containerregistry.BuildTasks.deleteMethodWithHttpOperationResponse(resourceGroupName,
      registryName, buildTaskName, options)
    tags:
      - originalTitle: resolve
        title: resolve
        text: '{HttpOperationResponse<null>} - The deserialized result object.'
        value: '{HttpOperationResponse<null>} - The deserialized result object.'
      - originalTitle: reject
        title: reject
        text: '{Error} - The error object.'
        value: '{Error} - The error object.'
    type: Function
    syntax:
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |-
            The name of the resource group to which
            the container registry belongs.
        - id: registryName
          type:
            - string
          description: The name of the container registry.
        - id: buildTaskName
          type:
            - string
          description: The name of the container registry build task.
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
      return:
        type:
          - Promise
        description: A promise is returned
      content: >-
        function deleteMethodWithHttpOperationResponse(resourceGroupName,
        registryName, buildTaskName, options)
    langs:
      - js
  - uid: 'azure-arm-containerregistry.BuildTasks#deleteMethod'
    id: 'azure-arm-containerregistry.BuildTasks#deleteMethod'
    parent: azure-arm-containerregistry.BuildTasks
    name: >-
      deleteMethod(resourceGroupName, registryName, buildTaskName, options,
      optionalCallback)
    summary: Deletes a specified build task.
    fullName: >-
      azure-arm-containerregistry.BuildTasks.deleteMethod(resourceGroupName,
      registryName, buildTaskName, options, optionalCallback)
    tags:
      - originalTitle: resolve
        title: resolve
        text: '{null} - The deserialized result object.'
        value: '{null} - The deserialized result object.'
      - originalTitle: reject
        title: reject
        text: |-
          {Error} - The error object.

          {function} optionalCallback(err, result, request, response)

                               {Error}  err        - The Error object if an error occurred, null otherwise.

                               {null} [result]   - The deserialized result object if an error did not occur.

                               {object} [request]  - The HTTP Request object if an error did not occur.

                               {stream} [response] - The HTTP Response stream if an error did not occur.
        value: |-
          {Error} - The error object.

          {function} optionalCallback(err, result, request, response)

                               {Error}  err        - The Error object if an error occurred, null otherwise.

                               {null} [result]   - The deserialized result object if an error did not occur.

                               {object} [request]  - The HTTP Request object if an error did not occur.

                               {stream} [response] - The HTTP Response stream if an error did not occur.
    type: Function
    syntax:
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |-
            The name of the resource group to which
            the container registry belongs.
        - id: registryName
          type:
            - string
          description: The name of the container registry.
        - id: buildTaskName
          type:
            - string
          description: The name of the container registry build task.
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
        - id: optionalCallback
          type:
            - function
          description: The optional callback.
          optional: true
      return:
        type:
          - function
          - Promise
        description: |-
          If a callback was passed as the last parameter
          then it returns the callback else returns a Promise.

          {Promise} A promise is returned
      content: >-
        function deleteMethod(resourceGroupName, registryName, buildTaskName,
        options, optionalCallback)
    langs:
      - js
  - uid: 'azure-arm-containerregistry.BuildTasks#updateWithHttpOperationResponse'
    id: 'azure-arm-containerregistry.BuildTasks#updateWithHttpOperationResponse'
    parent: azure-arm-containerregistry.BuildTasks
    name: >-
      updateWithHttpOperationResponse(resourceGroupName, registryName,
      buildTaskName, buildTaskUpdateParameters, options)
    summary: Updates a build task with the specified parameters.
    fullName: >-
      azure-arm-containerregistry.BuildTasks.updateWithHttpOperationResponse(resourceGroupName,
      registryName, buildTaskName, buildTaskUpdateParameters, options)
    tags:
      - originalTitle: resolve
        title: resolve
        text: '{HttpOperationResponse<BuildTask>} - The deserialized result object.'
        value: '{HttpOperationResponse<BuildTask>} - The deserialized result object.'
      - originalTitle: reject
        title: reject
        text: '{Error} - The error object.'
        value: '{Error} - The error object.'
    type: Function
    syntax:
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |-
            The name of the resource group to which
            the container registry belongs.
        - id: registryName
          type:
            - string
          description: The name of the container registry.
        - id: buildTaskName
          type:
            - string
          description: The name of the container registry build task.
        - id: buildTaskUpdateParameters
          type:
            - object
          description: |-
            The parameters for updating a
            build task.
        - id: buildTaskUpdateParameters.alias
          type:
            - string
          description: |-
            The alternative updatable
            name for a build task.
          optional: true
        - id: buildTaskUpdateParameters.status
          type:
            - string
          description: |-
            The current status of
            build task. Possible values include: 'Disabled', 'Enabled'
          optional: true
        - id: buildTaskUpdateParameters.platform
          type:
            - object
          description: |-
            The platform properties
            against which the build has to happen.
          optional: true
        - id: buildTaskUpdateParameters.platform.osType
          type:
            - string
          description: >-
            The operating

            system type required for the build. Possible values include:
            'Windows',

            'Linux'
        - id: buildTaskUpdateParameters.platform.cpu
          type:
            - number
          description: |-
            The CPU
            configuration in terms of number of cores required for the build.
          optional: true
        - id: buildTaskUpdateParameters.timeout
          type:
            - number
          description: |-
            Build timeout in
            seconds.
          optional: true
        - id: buildTaskUpdateParameters.sourceRepository
          type:
            - object
          description: |-
            The properties
            that describes the source(code) for the build task.
          optional: true
        - id: >-
            buildTaskUpdateParameters.sourceRepository.sourceControlAuthProperties
          type:
            - object
          description: |-
            The
            authorization properties for accessing the source code repository.
          optional: true
        - id: >-
            buildTaskUpdateParameters.sourceRepository.sourceControlAuthProperties.tokenType
          type:
            - string
          description: 'The type of Auth token. Possible values include: ''PAT'', ''OAuth'''
          optional: true
        - id: >-
            buildTaskUpdateParameters.sourceRepository.sourceControlAuthProperties.token
          type:
            - string
          description: The access token used to access the source control provider.
        - id: >-
            buildTaskUpdateParameters.sourceRepository.sourceControlAuthProperties.refreshToken
          type:
            - string
          description: The refresh token used to refresh the access token.
          optional: true
        - id: >-
            buildTaskUpdateParameters.sourceRepository.sourceControlAuthProperties.scope
          type:
            - string
          description: The scope of the access token.
          optional: true
        - id: >-
            buildTaskUpdateParameters.sourceRepository.sourceControlAuthProperties.expiresIn
          type:
            - number
          description: Time in seconds that the token remains valid
          optional: true
        - id: buildTaskUpdateParameters.sourceRepository.isCommitTriggerEnabled
          type:
            - boolean
          description: >-
            The

            value of this property indicates whether the source control commit
            trigger

            is enabled or not.
          optional: true
        - id: buildTaskUpdateParameters.tags
          type:
            - object
          description: The ARM resource tags.
          optional: true
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
      return:
        type:
          - Promise
        description: A promise is returned
      content: >-
        function updateWithHttpOperationResponse(resourceGroupName,
        registryName, buildTaskName, buildTaskUpdateParameters, options)
    langs:
      - js
  - uid: 'azure-arm-containerregistry.BuildTasks#update'
    id: 'azure-arm-containerregistry.BuildTasks#update'
    parent: azure-arm-containerregistry.BuildTasks
    name: >-
      update(resourceGroupName, registryName, buildTaskName,
      buildTaskUpdateParameters, options, optionalCallback)
    summary: Updates a build task with the specified parameters.
    fullName: >-
      azure-arm-containerregistry.BuildTasks.update(resourceGroupName,
      registryName, buildTaskName, buildTaskUpdateParameters, options,
      optionalCallback)
    tags:
      - originalTitle: resolve
        title: resolve
        text: '{BuildTask} - The deserialized result object.'
        value: '{BuildTask} - The deserialized result object.'
      - originalTitle: reject
        title: reject
        text: |-
          {Error} - The error object.

          {function} optionalCallback(err, result, request, response)

                               {Error}  err        - The Error object if an error occurred, null otherwise.

                               {object} [result]   - The deserialized result object if an error did not occur.
                               See {@link BuildTask} for more information.

                               {object} [request]  - The HTTP Request object if an error did not occur.

                               {stream} [response] - The HTTP Response stream if an error did not occur.
        value: |-
          {Error} - The error object.

          {function} optionalCallback(err, result, request, response)

                               {Error}  err        - The Error object if an error occurred, null otherwise.

                               {object} [result]   - The deserialized result object if an error did not occur.
                               See {@link BuildTask} for more information.

                               {object} [request]  - The HTTP Request object if an error did not occur.

                               {stream} [response] - The HTTP Response stream if an error did not occur.
    type: Function
    syntax:
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |-
            The name of the resource group to which
            the container registry belongs.
        - id: registryName
          type:
            - string
          description: The name of the container registry.
        - id: buildTaskName
          type:
            - string
          description: The name of the container registry build task.
        - id: buildTaskUpdateParameters
          type:
            - object
          description: |-
            The parameters for updating a
            build task.
        - id: buildTaskUpdateParameters.alias
          type:
            - string
          description: |-
            The alternative updatable
            name for a build task.
          optional: true
        - id: buildTaskUpdateParameters.status
          type:
            - string
          description: |-
            The current status of
            build task. Possible values include: 'Disabled', 'Enabled'
          optional: true
        - id: buildTaskUpdateParameters.platform
          type:
            - object
          description: |-
            The platform properties
            against which the build has to happen.
          optional: true
        - id: buildTaskUpdateParameters.platform.osType
          type:
            - string
          description: >-
            The operating

            system type required for the build. Possible values include:
            'Windows',

            'Linux'
        - id: buildTaskUpdateParameters.platform.cpu
          type:
            - number
          description: |-
            The CPU
            configuration in terms of number of cores required for the build.
          optional: true
        - id: buildTaskUpdateParameters.timeout
          type:
            - number
          description: |-
            Build timeout in
            seconds.
          optional: true
        - id: buildTaskUpdateParameters.sourceRepository
          type:
            - object
          description: |-
            The properties
            that describes the source(code) for the build task.
          optional: true
        - id: >-
            buildTaskUpdateParameters.sourceRepository.sourceControlAuthProperties
          type:
            - object
          description: |-
            The
            authorization properties for accessing the source code repository.
          optional: true
        - id: >-
            buildTaskUpdateParameters.sourceRepository.sourceControlAuthProperties.tokenType
          type:
            - string
          description: 'The type of Auth token. Possible values include: ''PAT'', ''OAuth'''
          optional: true
        - id: >-
            buildTaskUpdateParameters.sourceRepository.sourceControlAuthProperties.token
          type:
            - string
          description: The access token used to access the source control provider.
        - id: >-
            buildTaskUpdateParameters.sourceRepository.sourceControlAuthProperties.refreshToken
          type:
            - string
          description: The refresh token used to refresh the access token.
          optional: true
        - id: >-
            buildTaskUpdateParameters.sourceRepository.sourceControlAuthProperties.scope
          type:
            - string
          description: The scope of the access token.
          optional: true
        - id: >-
            buildTaskUpdateParameters.sourceRepository.sourceControlAuthProperties.expiresIn
          type:
            - number
          description: Time in seconds that the token remains valid
          optional: true
        - id: buildTaskUpdateParameters.sourceRepository.isCommitTriggerEnabled
          type:
            - boolean
          description: >-
            The

            value of this property indicates whether the source control commit
            trigger

            is enabled or not.
          optional: true
        - id: buildTaskUpdateParameters.tags
          type:
            - object
          description: The ARM resource tags.
          optional: true
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
        - id: optionalCallback
          type:
            - function
          description: The optional callback.
          optional: true
      return:
        type:
          - function
          - Promise
        description: |-
          If a callback was passed as the last parameter
          then it returns the callback else returns a Promise.

          {Promise} A promise is returned
      content: >-
        function update(resourceGroupName, registryName, buildTaskName,
        buildTaskUpdateParameters, options, optionalCallback)
    langs:
      - js
  - uid: >-
      azure-arm-containerregistry.BuildTasks#listSourceRepositoryPropertiesWithHttpOperationResponse
    id: >-
      azure-arm-containerregistry.BuildTasks#listSourceRepositoryPropertiesWithHttpOperationResponse
    parent: azure-arm-containerregistry.BuildTasks
    name: >-
      listSourceRepositoryPropertiesWithHttpOperationResponse(resourceGroupName,
      registryName, buildTaskName, options)
    summary: Get the source control properties for a build task.
    fullName: >-
      azure-arm-containerregistry.BuildTasks.listSourceRepositoryPropertiesWithHttpOperationResponse(resourceGroupName,
      registryName, buildTaskName, options)
    tags:
      - originalTitle: resolve
        title: resolve
        text: >-
          {HttpOperationResponse<SourceRepositoryProperties>} - The deserialized
          result object.
        value: >-
          {HttpOperationResponse<SourceRepositoryProperties>} - The deserialized
          result object.
      - originalTitle: reject
        title: reject
        text: '{Error} - The error object.'
        value: '{Error} - The error object.'
    type: Function
    syntax:
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |-
            The name of the resource group to which
            the container registry belongs.
        - id: registryName
          type:
            - string
          description: The name of the container registry.
        - id: buildTaskName
          type:
            - string
          description: The name of the container registry build task.
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
      return:
        type:
          - Promise
        description: A promise is returned
      content: >-
        function
        listSourceRepositoryPropertiesWithHttpOperationResponse(resourceGroupName,
        registryName, buildTaskName, options)
    langs:
      - js
  - uid: 'azure-arm-containerregistry.BuildTasks#listSourceRepositoryProperties'
    id: 'azure-arm-containerregistry.BuildTasks#listSourceRepositoryProperties'
    parent: azure-arm-containerregistry.BuildTasks
    name: >-
      listSourceRepositoryProperties(resourceGroupName, registryName,
      buildTaskName, options, optionalCallback)
    summary: Get the source control properties for a build task.
    fullName: >-
      azure-arm-containerregistry.BuildTasks.listSourceRepositoryProperties(resourceGroupName,
      registryName, buildTaskName, options, optionalCallback)
    tags:
      - originalTitle: resolve
        title: resolve
        text: '{SourceRepositoryProperties} - The deserialized result object.'
        value: '{SourceRepositoryProperties} - The deserialized result object.'
      - originalTitle: reject
        title: reject
        text: |-
          {Error} - The error object.

          {function} optionalCallback(err, result, request, response)

                               {Error}  err        - The Error object if an error occurred, null otherwise.

                               {object} [result]   - The deserialized result object if an error did not occur.
                               See {@link SourceRepositoryProperties} for more
                               information.

                               {object} [request]  - The HTTP Request object if an error did not occur.

                               {stream} [response] - The HTTP Response stream if an error did not occur.
        value: |-
          {Error} - The error object.

          {function} optionalCallback(err, result, request, response)

                               {Error}  err        - The Error object if an error occurred, null otherwise.

                               {object} [result]   - The deserialized result object if an error did not occur.
                               See {@link SourceRepositoryProperties} for more
                               information.

                               {object} [request]  - The HTTP Request object if an error did not occur.

                               {stream} [response] - The HTTP Response stream if an error did not occur.
    type: Function
    syntax:
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |-
            The name of the resource group to which
            the container registry belongs.
        - id: registryName
          type:
            - string
          description: The name of the container registry.
        - id: buildTaskName
          type:
            - string
          description: The name of the container registry build task.
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
        - id: optionalCallback
          type:
            - function
          description: The optional callback.
          optional: true
      return:
        type:
          - function
          - Promise
        description: |-
          If a callback was passed as the last parameter
          then it returns the callback else returns a Promise.

          {Promise} A promise is returned
      content: >-
        function listSourceRepositoryProperties(resourceGroupName, registryName,
        buildTaskName, options, optionalCallback)
    langs:
      - js
  - uid: >-
      azure-arm-containerregistry.BuildTasks#beginCreateWithHttpOperationResponse
    id: >-
      azure-arm-containerregistry.BuildTasks#beginCreateWithHttpOperationResponse
    parent: azure-arm-containerregistry.BuildTasks
    name: >-
      beginCreateWithHttpOperationResponse(resourceGroupName, registryName,
      buildTaskName, buildTaskCreateParameters, options)
    summary: >-
      Creates a build task for a container registry with the specified
      parameters.
    fullName: >-
      azure-arm-containerregistry.BuildTasks.beginCreateWithHttpOperationResponse(resourceGroupName,
      registryName, buildTaskName, buildTaskCreateParameters, options)
    tags:
      - originalTitle: resolve
        title: resolve
        text: '{HttpOperationResponse<BuildTask>} - The deserialized result object.'
        value: '{HttpOperationResponse<BuildTask>} - The deserialized result object.'
      - originalTitle: reject
        title: reject
        text: '{Error} - The error object.'
        value: '{Error} - The error object.'
    type: Function
    syntax:
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |-
            The name of the resource group to which
            the container registry belongs.
        - id: registryName
          type:
            - string
          description: The name of the container registry.
        - id: buildTaskName
          type:
            - string
          description: The name of the container registry build task.
        - id: buildTaskCreateParameters
          type:
            - object
          description: |-
            The parameters for creating a
            build task.
        - id: buildTaskCreateParameters.alias
          type:
            - string
          description: |-
            The alternative updatable
            name for a build task.
        - id: buildTaskCreateParameters.status
          type:
            - string
          description: |-
            The current status of
            build task. Possible values include: 'Disabled', 'Enabled'
          optional: true
        - id: buildTaskCreateParameters.sourceRepository
          type:
            - object
          description: |-
            The properties
            that describes the source(code) for the build task.
        - id: buildTaskCreateParameters.sourceRepository.sourceControlType
          type:
            - string
          description: >-
            The type of source control service. Possible values include:
            'Github',

            'VisualStudioTeamService'
        - id: buildTaskCreateParameters.sourceRepository.repositoryUrl
          type:
            - string
          description: |-
            The
            full URL to the source code respository
        - id: buildTaskCreateParameters.sourceRepository.isCommitTriggerEnabled
          type:
            - boolean
          description: >-
            The

            value of this property indicates whether the source control commit
            trigger

            is enabled or not.
          optional: true
        - id: >-
            buildTaskCreateParameters.sourceRepository.sourceControlAuthProperties
          type:
            - object
          description: |-
            The
            authorization properties for accessing the source code repository.
          optional: true
        - id: >-
            buildTaskCreateParameters.sourceRepository.sourceControlAuthProperties.tokenType
          type:
            - string
          description: 'The type of Auth token. Possible values include: ''PAT'', ''OAuth'''
          optional: true
        - id: >-
            buildTaskCreateParameters.sourceRepository.sourceControlAuthProperties.token
          type:
            - string
          description: The access token used to access the source control provider.
        - id: >-
            buildTaskCreateParameters.sourceRepository.sourceControlAuthProperties.refreshToken
          type:
            - string
          description: The refresh token used to refresh the access token.
          optional: true
        - id: >-
            buildTaskCreateParameters.sourceRepository.sourceControlAuthProperties.scope
          type:
            - string
          description: The scope of the access token.
          optional: true
        - id: >-
            buildTaskCreateParameters.sourceRepository.sourceControlAuthProperties.expiresIn
          type:
            - number
          description: Time in seconds that the token remains valid
          optional: true
        - id: buildTaskCreateParameters.platform
          type:
            - object
          description: |-
            The platform properties
            against which the build has to happen.
        - id: buildTaskCreateParameters.platform.osType
          type:
            - string
          description: >-
            The operating

            system type required for the build. Possible values include:
            'Windows',

            'Linux'
        - id: buildTaskCreateParameters.platform.cpu
          type:
            - number
          description: |-
            The CPU
            configuration in terms of number of cores required for the build.
          optional: true
        - id: buildTaskCreateParameters.timeout
          type:
            - number
          description: |-
            Build timeout in
            seconds.
          optional: true
        - id: buildTaskCreateParameters.location
          type:
            - string
          description: |-
            The location of the
            resource. This cannot be changed after the resource is created.
        - id: buildTaskCreateParameters.tags
          type:
            - object
          description: The tags of the resource.
          optional: true
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
      return:
        type:
          - Promise
        description: A promise is returned
      content: >-
        function beginCreateWithHttpOperationResponse(resourceGroupName,
        registryName, buildTaskName, buildTaskCreateParameters, options)
    langs:
      - js
  - uid: 'azure-arm-containerregistry.BuildTasks#beginCreate'
    id: 'azure-arm-containerregistry.BuildTasks#beginCreate'
    parent: azure-arm-containerregistry.BuildTasks
    name: >-
      beginCreate(resourceGroupName, registryName, buildTaskName,
      buildTaskCreateParameters, options, optionalCallback)
    summary: >-
      Creates a build task for a container registry with the specified
      parameters.
    fullName: >-
      azure-arm-containerregistry.BuildTasks.beginCreate(resourceGroupName,
      registryName, buildTaskName, buildTaskCreateParameters, options,
      optionalCallback)
    tags:
      - originalTitle: resolve
        title: resolve
        text: '{BuildTask} - The deserialized result object.'
        value: '{BuildTask} - The deserialized result object.'
      - originalTitle: reject
        title: reject
        text: |-
          {Error} - The error object.

          {function} optionalCallback(err, result, request, response)

                               {Error}  err        - The Error object if an error occurred, null otherwise.

                               {object} [result]   - The deserialized result object if an error did not occur.
                               See {@link BuildTask} for more information.

                               {object} [request]  - The HTTP Request object if an error did not occur.

                               {stream} [response] - The HTTP Response stream if an error did not occur.
        value: |-
          {Error} - The error object.

          {function} optionalCallback(err, result, request, response)

                               {Error}  err        - The Error object if an error occurred, null otherwise.

                               {object} [result]   - The deserialized result object if an error did not occur.
                               See {@link BuildTask} for more information.

                               {object} [request]  - The HTTP Request object if an error did not occur.

                               {stream} [response] - The HTTP Response stream if an error did not occur.
    type: Function
    syntax:
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |-
            The name of the resource group to which
            the container registry belongs.
        - id: registryName
          type:
            - string
          description: The name of the container registry.
        - id: buildTaskName
          type:
            - string
          description: The name of the container registry build task.
        - id: buildTaskCreateParameters
          type:
            - object
          description: |-
            The parameters for creating a
            build task.
        - id: buildTaskCreateParameters.alias
          type:
            - string
          description: |-
            The alternative updatable
            name for a build task.
        - id: buildTaskCreateParameters.status
          type:
            - string
          description: |-
            The current status of
            build task. Possible values include: 'Disabled', 'Enabled'
          optional: true
        - id: buildTaskCreateParameters.sourceRepository
          type:
            - object
          description: |-
            The properties
            that describes the source(code) for the build task.
        - id: buildTaskCreateParameters.sourceRepository.sourceControlType
          type:
            - string
          description: >-
            The type of source control service. Possible values include:
            'Github',

            'VisualStudioTeamService'
        - id: buildTaskCreateParameters.sourceRepository.repositoryUrl
          type:
            - string
          description: |-
            The
            full URL to the source code respository
        - id: buildTaskCreateParameters.sourceRepository.isCommitTriggerEnabled
          type:
            - boolean
          description: >-
            The

            value of this property indicates whether the source control commit
            trigger

            is enabled or not.
          optional: true
        - id: >-
            buildTaskCreateParameters.sourceRepository.sourceControlAuthProperties
          type:
            - object
          description: |-
            The
            authorization properties for accessing the source code repository.
          optional: true
        - id: >-
            buildTaskCreateParameters.sourceRepository.sourceControlAuthProperties.tokenType
          type:
            - string
          description: 'The type of Auth token. Possible values include: ''PAT'', ''OAuth'''
          optional: true
        - id: >-
            buildTaskCreateParameters.sourceRepository.sourceControlAuthProperties.token
          type:
            - string
          description: The access token used to access the source control provider.
        - id: >-
            buildTaskCreateParameters.sourceRepository.sourceControlAuthProperties.refreshToken
          type:
            - string
          description: The refresh token used to refresh the access token.
          optional: true
        - id: >-
            buildTaskCreateParameters.sourceRepository.sourceControlAuthProperties.scope
          type:
            - string
          description: The scope of the access token.
          optional: true
        - id: >-
            buildTaskCreateParameters.sourceRepository.sourceControlAuthProperties.expiresIn
          type:
            - number
          description: Time in seconds that the token remains valid
          optional: true
        - id: buildTaskCreateParameters.platform
          type:
            - object
          description: |-
            The platform properties
            against which the build has to happen.
        - id: buildTaskCreateParameters.platform.osType
          type:
            - string
          description: >-
            The operating

            system type required for the build. Possible values include:
            'Windows',

            'Linux'
        - id: buildTaskCreateParameters.platform.cpu
          type:
            - number
          description: |-
            The CPU
            configuration in terms of number of cores required for the build.
          optional: true
        - id: buildTaskCreateParameters.timeout
          type:
            - number
          description: |-
            Build timeout in
            seconds.
          optional: true
        - id: buildTaskCreateParameters.location
          type:
            - string
          description: |-
            The location of the
            resource. This cannot be changed after the resource is created.
        - id: buildTaskCreateParameters.tags
          type:
            - object
          description: The tags of the resource.
          optional: true
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
        - id: optionalCallback
          type:
            - function
          description: The optional callback.
          optional: true
      return:
        type:
          - function
          - Promise
        description: |-
          If a callback was passed as the last parameter
          then it returns the callback else returns a Promise.

          {Promise} A promise is returned
      content: >-
        function beginCreate(resourceGroupName, registryName, buildTaskName,
        buildTaskCreateParameters, options, optionalCallback)
    langs:
      - js
  - uid: >-
      azure-arm-containerregistry.BuildTasks#beginDeleteMethodWithHttpOperationResponse
    id: >-
      azure-arm-containerregistry.BuildTasks#beginDeleteMethodWithHttpOperationResponse
    parent: azure-arm-containerregistry.BuildTasks
    name: >-
      beginDeleteMethodWithHttpOperationResponse(resourceGroupName,
      registryName, buildTaskName, options)
    summary: Deletes a specified build task.
    fullName: >-
      azure-arm-containerregistry.BuildTasks.beginDeleteMethodWithHttpOperationResponse(resourceGroupName,
      registryName, buildTaskName, options)
    tags:
      - originalTitle: resolve
        title: resolve
        text: '{HttpOperationResponse<null>} - The deserialized result object.'
        value: '{HttpOperationResponse<null>} - The deserialized result object.'
      - originalTitle: reject
        title: reject
        text: '{Error} - The error object.'
        value: '{Error} - The error object.'
    type: Function
    syntax:
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |-
            The name of the resource group to which
            the container registry belongs.
        - id: registryName
          type:
            - string
          description: The name of the container registry.
        - id: buildTaskName
          type:
            - string
          description: The name of the container registry build task.
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
      return:
        type:
          - Promise
        description: A promise is returned
      content: >-
        function beginDeleteMethodWithHttpOperationResponse(resourceGroupName,
        registryName, buildTaskName, options)
    langs:
      - js
  - uid: 'azure-arm-containerregistry.BuildTasks#beginDeleteMethod'
    id: 'azure-arm-containerregistry.BuildTasks#beginDeleteMethod'
    parent: azure-arm-containerregistry.BuildTasks
    name: >-
      beginDeleteMethod(resourceGroupName, registryName, buildTaskName, options,
      optionalCallback)
    summary: Deletes a specified build task.
    fullName: >-
      azure-arm-containerregistry.BuildTasks.beginDeleteMethod(resourceGroupName,
      registryName, buildTaskName, options, optionalCallback)
    tags:
      - originalTitle: resolve
        title: resolve
        text: '{null} - The deserialized result object.'
        value: '{null} - The deserialized result object.'
      - originalTitle: reject
        title: reject
        text: |-
          {Error} - The error object.

          {function} optionalCallback(err, result, request, response)

                               {Error}  err        - The Error object if an error occurred, null otherwise.

                               {null} [result]   - The deserialized result object if an error did not occur.

                               {object} [request]  - The HTTP Request object if an error did not occur.

                               {stream} [response] - The HTTP Response stream if an error did not occur.
        value: |-
          {Error} - The error object.

          {function} optionalCallback(err, result, request, response)

                               {Error}  err        - The Error object if an error occurred, null otherwise.

                               {null} [result]   - The deserialized result object if an error did not occur.

                               {object} [request]  - The HTTP Request object if an error did not occur.

                               {stream} [response] - The HTTP Response stream if an error did not occur.
    type: Function
    syntax:
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |-
            The name of the resource group to which
            the container registry belongs.
        - id: registryName
          type:
            - string
          description: The name of the container registry.
        - id: buildTaskName
          type:
            - string
          description: The name of the container registry build task.
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
        - id: optionalCallback
          type:
            - function
          description: The optional callback.
          optional: true
      return:
        type:
          - function
          - Promise
        description: |-
          If a callback was passed as the last parameter
          then it returns the callback else returns a Promise.

          {Promise} A promise is returned
      content: >-
        function beginDeleteMethod(resourceGroupName, registryName,
        buildTaskName, options, optionalCallback)
    langs:
      - js
  - uid: >-
      azure-arm-containerregistry.BuildTasks#beginUpdateWithHttpOperationResponse
    id: >-
      azure-arm-containerregistry.BuildTasks#beginUpdateWithHttpOperationResponse
    parent: azure-arm-containerregistry.BuildTasks
    name: >-
      beginUpdateWithHttpOperationResponse(resourceGroupName, registryName,
      buildTaskName, buildTaskUpdateParameters, options)
    summary: Updates a build task with the specified parameters.
    fullName: >-
      azure-arm-containerregistry.BuildTasks.beginUpdateWithHttpOperationResponse(resourceGroupName,
      registryName, buildTaskName, buildTaskUpdateParameters, options)
    tags:
      - originalTitle: resolve
        title: resolve
        text: '{HttpOperationResponse<BuildTask>} - The deserialized result object.'
        value: '{HttpOperationResponse<BuildTask>} - The deserialized result object.'
      - originalTitle: reject
        title: reject
        text: '{Error} - The error object.'
        value: '{Error} - The error object.'
    type: Function
    syntax:
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |-
            The name of the resource group to which
            the container registry belongs.
        - id: registryName
          type:
            - string
          description: The name of the container registry.
        - id: buildTaskName
          type:
            - string
          description: The name of the container registry build task.
        - id: buildTaskUpdateParameters
          type:
            - object
          description: |-
            The parameters for updating a
            build task.
        - id: buildTaskUpdateParameters.alias
          type:
            - string
          description: |-
            The alternative updatable
            name for a build task.
          optional: true
        - id: buildTaskUpdateParameters.status
          type:
            - string
          description: |-
            The current status of
            build task. Possible values include: 'Disabled', 'Enabled'
          optional: true
        - id: buildTaskUpdateParameters.platform
          type:
            - object
          description: |-
            The platform properties
            against which the build has to happen.
          optional: true
        - id: buildTaskUpdateParameters.platform.osType
          type:
            - string
          description: >-
            The operating

            system type required for the build. Possible values include:
            'Windows',

            'Linux'
        - id: buildTaskUpdateParameters.platform.cpu
          type:
            - number
          description: |-
            The CPU
            configuration in terms of number of cores required for the build.
          optional: true
        - id: buildTaskUpdateParameters.timeout
          type:
            - number
          description: |-
            Build timeout in
            seconds.
          optional: true
        - id: buildTaskUpdateParameters.sourceRepository
          type:
            - object
          description: |-
            The properties
            that describes the source(code) for the build task.
          optional: true
        - id: >-
            buildTaskUpdateParameters.sourceRepository.sourceControlAuthProperties
          type:
            - object
          description: |-
            The
            authorization properties for accessing the source code repository.
          optional: true
        - id: >-
            buildTaskUpdateParameters.sourceRepository.sourceControlAuthProperties.tokenType
          type:
            - string
          description: 'The type of Auth token. Possible values include: ''PAT'', ''OAuth'''
          optional: true
        - id: >-
            buildTaskUpdateParameters.sourceRepository.sourceControlAuthProperties.token
          type:
            - string
          description: The access token used to access the source control provider.
        - id: >-
            buildTaskUpdateParameters.sourceRepository.sourceControlAuthProperties.refreshToken
          type:
            - string
          description: The refresh token used to refresh the access token.
          optional: true
        - id: >-
            buildTaskUpdateParameters.sourceRepository.sourceControlAuthProperties.scope
          type:
            - string
          description: The scope of the access token.
          optional: true
        - id: >-
            buildTaskUpdateParameters.sourceRepository.sourceControlAuthProperties.expiresIn
          type:
            - number
          description: Time in seconds that the token remains valid
          optional: true
        - id: buildTaskUpdateParameters.sourceRepository.isCommitTriggerEnabled
          type:
            - boolean
          description: >-
            The

            value of this property indicates whether the source control commit
            trigger

            is enabled or not.
          optional: true
        - id: buildTaskUpdateParameters.tags
          type:
            - object
          description: The ARM resource tags.
          optional: true
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
      return:
        type:
          - Promise
        description: A promise is returned
      content: >-
        function beginUpdateWithHttpOperationResponse(resourceGroupName,
        registryName, buildTaskName, buildTaskUpdateParameters, options)
    langs:
      - js
  - uid: 'azure-arm-containerregistry.BuildTasks#beginUpdate'
    id: 'azure-arm-containerregistry.BuildTasks#beginUpdate'
    parent: azure-arm-containerregistry.BuildTasks
    name: >-
      beginUpdate(resourceGroupName, registryName, buildTaskName,
      buildTaskUpdateParameters, options, optionalCallback)
    summary: Updates a build task with the specified parameters.
    fullName: >-
      azure-arm-containerregistry.BuildTasks.beginUpdate(resourceGroupName,
      registryName, buildTaskName, buildTaskUpdateParameters, options,
      optionalCallback)
    tags:
      - originalTitle: resolve
        title: resolve
        text: '{BuildTask} - The deserialized result object.'
        value: '{BuildTask} - The deserialized result object.'
      - originalTitle: reject
        title: reject
        text: |-
          {Error} - The error object.

          {function} optionalCallback(err, result, request, response)

                               {Error}  err        - The Error object if an error occurred, null otherwise.

                               {object} [result]   - The deserialized result object if an error did not occur.
                               See {@link BuildTask} for more information.

                               {object} [request]  - The HTTP Request object if an error did not occur.

                               {stream} [response] - The HTTP Response stream if an error did not occur.
        value: |-
          {Error} - The error object.

          {function} optionalCallback(err, result, request, response)

                               {Error}  err        - The Error object if an error occurred, null otherwise.

                               {object} [result]   - The deserialized result object if an error did not occur.
                               See {@link BuildTask} for more information.

                               {object} [request]  - The HTTP Request object if an error did not occur.

                               {stream} [response] - The HTTP Response stream if an error did not occur.
    type: Function
    syntax:
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |-
            The name of the resource group to which
            the container registry belongs.
        - id: registryName
          type:
            - string
          description: The name of the container registry.
        - id: buildTaskName
          type:
            - string
          description: The name of the container registry build task.
        - id: buildTaskUpdateParameters
          type:
            - object
          description: |-
            The parameters for updating a
            build task.
        - id: buildTaskUpdateParameters.alias
          type:
            - string
          description: |-
            The alternative updatable
            name for a build task.
          optional: true
        - id: buildTaskUpdateParameters.status
          type:
            - string
          description: |-
            The current status of
            build task. Possible values include: 'Disabled', 'Enabled'
          optional: true
        - id: buildTaskUpdateParameters.platform
          type:
            - object
          description: |-
            The platform properties
            against which the build has to happen.
          optional: true
        - id: buildTaskUpdateParameters.platform.osType
          type:
            - string
          description: >-
            The operating

            system type required for the build. Possible values include:
            'Windows',

            'Linux'
        - id: buildTaskUpdateParameters.platform.cpu
          type:
            - number
          description: |-
            The CPU
            configuration in terms of number of cores required for the build.
          optional: true
        - id: buildTaskUpdateParameters.timeout
          type:
            - number
          description: |-
            Build timeout in
            seconds.
          optional: true
        - id: buildTaskUpdateParameters.sourceRepository
          type:
            - object
          description: |-
            The properties
            that describes the source(code) for the build task.
          optional: true
        - id: >-
            buildTaskUpdateParameters.sourceRepository.sourceControlAuthProperties
          type:
            - object
          description: |-
            The
            authorization properties for accessing the source code repository.
          optional: true
        - id: >-
            buildTaskUpdateParameters.sourceRepository.sourceControlAuthProperties.tokenType
          type:
            - string
          description: 'The type of Auth token. Possible values include: ''PAT'', ''OAuth'''
          optional: true
        - id: >-
            buildTaskUpdateParameters.sourceRepository.sourceControlAuthProperties.token
          type:
            - string
          description: The access token used to access the source control provider.
        - id: >-
            buildTaskUpdateParameters.sourceRepository.sourceControlAuthProperties.refreshToken
          type:
            - string
          description: The refresh token used to refresh the access token.
          optional: true
        - id: >-
            buildTaskUpdateParameters.sourceRepository.sourceControlAuthProperties.scope
          type:
            - string
          description: The scope of the access token.
          optional: true
        - id: >-
            buildTaskUpdateParameters.sourceRepository.sourceControlAuthProperties.expiresIn
          type:
            - number
          description: Time in seconds that the token remains valid
          optional: true
        - id: buildTaskUpdateParameters.sourceRepository.isCommitTriggerEnabled
          type:
            - boolean
          description: >-
            The

            value of this property indicates whether the source control commit
            trigger

            is enabled or not.
          optional: true
        - id: buildTaskUpdateParameters.tags
          type:
            - object
          description: The ARM resource tags.
          optional: true
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
        - id: optionalCallback
          type:
            - function
          description: The optional callback.
          optional: true
      return:
        type:
          - function
          - Promise
        description: |-
          If a callback was passed as the last parameter
          then it returns the callback else returns a Promise.

          {Promise} A promise is returned
      content: >-
        function beginUpdate(resourceGroupName, registryName, buildTaskName,
        buildTaskUpdateParameters, options, optionalCallback)
    langs:
      - js
  - uid: 'azure-arm-containerregistry.BuildTasks#listNextWithHttpOperationResponse'
    id: 'azure-arm-containerregistry.BuildTasks#listNextWithHttpOperationResponse'
    parent: azure-arm-containerregistry.BuildTasks
    name: 'listNextWithHttpOperationResponse(nextPageLink, options)'
    summary: Lists all the build tasks for a specified container registry.
    fullName: >-
      azure-arm-containerregistry.BuildTasks.listNextWithHttpOperationResponse(nextPageLink,
      options)
    tags:
      - originalTitle: resolve
        title: resolve
        text: >-
          {HttpOperationResponse<BuildTaskListResult>} - The deserialized result
          object.
        value: >-
          {HttpOperationResponse<BuildTaskListResult>} - The deserialized result
          object.
      - originalTitle: reject
        title: reject
        text: '{Error} - The error object.'
        value: '{Error} - The error object.'
    type: Function
    syntax:
      parameters:
        - id: nextPageLink
          type:
            - string
          description: |-
            The NextLink from the previous successful call
            to List operation.
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
      return:
        type:
          - Promise
        description: A promise is returned
      content: 'function listNextWithHttpOperationResponse(nextPageLink, options)'
    langs:
      - js
  - uid: 'azure-arm-containerregistry.BuildTasks#listNext'
    id: 'azure-arm-containerregistry.BuildTasks#listNext'
    parent: azure-arm-containerregistry.BuildTasks
    name: 'listNext(nextPageLink, options, optionalCallback)'
    summary: Lists all the build tasks for a specified container registry.
    fullName: >-
      azure-arm-containerregistry.BuildTasks.listNext(nextPageLink, options,
      optionalCallback)
    tags:
      - originalTitle: resolve
        title: resolve
        text: '{BuildTaskListResult} - The deserialized result object.'
        value: '{BuildTaskListResult} - The deserialized result object.'
      - originalTitle: reject
        title: reject
        text: |-
          {Error} - The error object.

          {function} optionalCallback(err, result, request, response)

                               {Error}  err        - The Error object if an error occurred, null otherwise.

                               {object} [result]   - The deserialized result object if an error did not occur.
                               See {@link BuildTaskListResult} for more information.

                               {object} [request]  - The HTTP Request object if an error did not occur.

                               {stream} [response] - The HTTP Response stream if an error did not occur.
        value: |-
          {Error} - The error object.

          {function} optionalCallback(err, result, request, response)

                               {Error}  err        - The Error object if an error occurred, null otherwise.

                               {object} [result]   - The deserialized result object if an error did not occur.
                               See {@link BuildTaskListResult} for more information.

                               {object} [request]  - The HTTP Request object if an error did not occur.

                               {stream} [response] - The HTTP Response stream if an error did not occur.
    type: Function
    syntax:
      parameters:
        - id: nextPageLink
          type:
            - string
          description: |-
            The NextLink from the previous successful call
            to List operation.
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
        - id: optionalCallback
          type:
            - function
          description: The optional callback.
          optional: true
      return:
        type:
          - function
          - Promise
        description: |-
          If a callback was passed as the last parameter
          then it returns the callback else returns a Promise.

          {Promise} A promise is returned
      content: 'function listNext(nextPageLink, options, optionalCallback)'
    langs:
      - js
