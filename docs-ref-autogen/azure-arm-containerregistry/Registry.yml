### YamlMime:UniversalReference
items:
  - uid: azure-arm-containerregistry.Registry
    name: Registry
    fullName: Registry
    children:
      - azure-arm-containerregistry.Registry.adminUserEnabled
      - azure-arm-containerregistry.Registry.creationDate
      - azure-arm-containerregistry.Registry.loginServer
      - azure-arm-containerregistry.Registry.provisioningState
      - azure-arm-containerregistry.Registry.sku
      - azure-arm-containerregistry.Registry.status
      - azure-arm-containerregistry.Registry.storageAccount
    langs:
      - typeScript
    type: interface
    summary: ''
    extends:
      name: azure-arm-containerregistry.Resource
    package: azure-arm-containerregistry
  - uid: azure-arm-containerregistry.Registry.adminUserEnabled
    name: adminUserEnabled
    fullName: adminUserEnabled
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    optional: true
    syntax:
      content: 'adminUserEnabled?: boolean'
      return:
        type:
          - boolean
    package: azure-arm-containerregistry
  - uid: azure-arm-containerregistry.Registry.creationDate
    name: creationDate
    fullName: creationDate
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    optional: true
    syntax:
      content: 'creationDate?: Date'
      return:
        type:
          - Date
    package: azure-arm-containerregistry
  - uid: azure-arm-containerregistry.Registry.loginServer
    name: loginServer
    fullName: loginServer
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    optional: true
    syntax:
      content: 'loginServer?: string'
      return:
        type:
          - string
    package: azure-arm-containerregistry
  - uid: azure-arm-containerregistry.Registry.provisioningState
    name: provisioningState
    fullName: provisioningState
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    optional: true
    syntax:
      content: 'provisioningState?: string'
      return:
        type:
          - string
    package: azure-arm-containerregistry
  - uid: azure-arm-containerregistry.Registry.sku
    name: sku
    fullName: sku
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'sku: Sku'
      return:
        type:
          - azure-arm-containerregistry.Sku
    package: azure-arm-containerregistry
  - uid: azure-arm-containerregistry.Registry.status
    name: status
    fullName: status
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    optional: true
    syntax:
      content: 'status?: Status'
      return:
        type:
          - azure-arm-containerregistry.Status
    package: azure-arm-containerregistry
  - uid: azure-arm-containerregistry.Registry.storageAccount
    name: storageAccount
    fullName: storageAccount
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    optional: true
    syntax:
      content: 'storageAccount?: StorageAccountProperties'
      return:
        type:
          - azure-arm-containerregistry.StorageAccountProperties
    package: azure-arm-containerregistry
references:
  - uid: azure-arm-containerregistry.Resource
    name: Resource
    spec.typeScript:
      - name: Resource
        fullName: Resource
        uid: azure-arm-containerregistry.Resource
  - uid: azure-arm-containerregistry.Sku
    name: Sku
    spec.typeScript:
      - name: Sku
        fullName: Sku
        uid: azure-arm-containerregistry.Sku
  - uid: azure-arm-containerregistry.Status
    name: Status
    spec.typeScript:
      - name: Status
        fullName: Status
        uid: azure-arm-containerregistry.Status
  - uid: azure-arm-containerregistry.StorageAccountProperties
    name: StorageAccountProperties
    spec.typeScript:
      - name: StorageAccountProperties
        fullName: StorageAccountProperties
        uid: azure-arm-containerregistry.StorageAccountProperties
