### YamlMime:UniversalReference
items:
  - uid: azure-arm-sb.Namespaces
    name: Namespaces
    fullName: Namespaces
    children:
      - azure-arm-sb.Namespaces.beginCreateOrUpdate
      - azure-arm-sb.Namespaces.beginCreateOrUpdate_1
      - azure-arm-sb.Namespaces.beginCreateOrUpdate_2
      - azure-arm-sb.Namespaces.beginCreateOrUpdateWithHttpOperationResponse
      - azure-arm-sb.Namespaces.beginDeleteMethod
      - azure-arm-sb.Namespaces.beginDeleteMethod_1
      - azure-arm-sb.Namespaces.beginDeleteMethod_2
      - azure-arm-sb.Namespaces.beginDeleteMethodWithHttpOperationResponse
      - azure-arm-sb.Namespaces.checkNameAvailabilityMethod_1
      - azure-arm-sb.Namespaces.checkNameAvailabilityMethod
      - azure-arm-sb.Namespaces.checkNameAvailabilityMethod_2
      - >-
        azure-arm-sb.Namespaces.checkNameAvailabilityMethodWithHttpOperationResponse
      - azure-arm-sb.Namespaces.createOrUpdate
      - azure-arm-sb.Namespaces.createOrUpdate_1
      - azure-arm-sb.Namespaces.createOrUpdate_2
      - azure-arm-sb.Namespaces.createOrUpdateAuthorizationRule_2
      - azure-arm-sb.Namespaces.createOrUpdateAuthorizationRule
      - azure-arm-sb.Namespaces.createOrUpdateAuthorizationRule_1
      - >-
        azure-arm-sb.Namespaces.createOrUpdateAuthorizationRuleWithHttpOperationResponse
      - azure-arm-sb.Namespaces.createOrUpdateIpFilterRule_1
      - azure-arm-sb.Namespaces.createOrUpdateIpFilterRule_2
      - azure-arm-sb.Namespaces.createOrUpdateIpFilterRule
      - >-
        azure-arm-sb.Namespaces.createOrUpdateIpFilterRuleWithHttpOperationResponse
      - azure-arm-sb.Namespaces.createOrUpdateVirtualNetworkRule
      - azure-arm-sb.Namespaces.createOrUpdateVirtualNetworkRule_1
      - azure-arm-sb.Namespaces.createOrUpdateVirtualNetworkRule_2
      - >-
        azure-arm-sb.Namespaces.createOrUpdateVirtualNetworkRuleWithHttpOperationResponse
      - azure-arm-sb.Namespaces.createOrUpdateWithHttpOperationResponse
      - azure-arm-sb.Namespaces.deleteAuthorizationRule_1
      - azure-arm-sb.Namespaces.deleteAuthorizationRule
      - azure-arm-sb.Namespaces.deleteAuthorizationRule_2
      - azure-arm-sb.Namespaces.deleteAuthorizationRuleWithHttpOperationResponse
      - azure-arm-sb.Namespaces.deleteIpFilterRule_1
      - azure-arm-sb.Namespaces.deleteIpFilterRule_2
      - azure-arm-sb.Namespaces.deleteIpFilterRule
      - azure-arm-sb.Namespaces.deleteIpFilterRuleWithHttpOperationResponse
      - azure-arm-sb.Namespaces.deleteMethod_1
      - azure-arm-sb.Namespaces.deleteMethod_2
      - azure-arm-sb.Namespaces.deleteMethod
      - azure-arm-sb.Namespaces.deleteMethodWithHttpOperationResponse
      - azure-arm-sb.Namespaces.deleteVirtualNetworkRule
      - azure-arm-sb.Namespaces.deleteVirtualNetworkRule_1
      - azure-arm-sb.Namespaces.deleteVirtualNetworkRule_2
      - >-
        azure-arm-sb.Namespaces.deleteVirtualNetworkRuleWithHttpOperationResponse
      - azure-arm-sb.Namespaces.get_1
      - azure-arm-sb.Namespaces.get
      - azure-arm-sb.Namespaces.get_2
      - azure-arm-sb.Namespaces.getAuthorizationRule_1
      - azure-arm-sb.Namespaces.getAuthorizationRule_2
      - azure-arm-sb.Namespaces.getAuthorizationRule
      - azure-arm-sb.Namespaces.getAuthorizationRuleWithHttpOperationResponse
      - azure-arm-sb.Namespaces.getIpFilterRule
      - azure-arm-sb.Namespaces.getIpFilterRule_1
      - azure-arm-sb.Namespaces.getIpFilterRule_2
      - azure-arm-sb.Namespaces.getIpFilterRuleWithHttpOperationResponse
      - azure-arm-sb.Namespaces.getVirtualNetworkRule
      - azure-arm-sb.Namespaces.getVirtualNetworkRule_1
      - azure-arm-sb.Namespaces.getVirtualNetworkRule_2
      - azure-arm-sb.Namespaces.getVirtualNetworkRuleWithHttpOperationResponse
      - azure-arm-sb.Namespaces.getWithHttpOperationResponse
      - azure-arm-sb.Namespaces.list_1
      - azure-arm-sb.Namespaces.list_2
      - azure-arm-sb.Namespaces.list
      - azure-arm-sb.Namespaces.listAuthorizationRules_2
      - azure-arm-sb.Namespaces.listAuthorizationRules
      - azure-arm-sb.Namespaces.listAuthorizationRules_1
      - azure-arm-sb.Namespaces.listAuthorizationRulesNext
      - azure-arm-sb.Namespaces.listAuthorizationRulesNext_2
      - azure-arm-sb.Namespaces.listAuthorizationRulesNext_1
      - >-
        azure-arm-sb.Namespaces.listAuthorizationRulesNextWithHttpOperationResponse
      - azure-arm-sb.Namespaces.listAuthorizationRulesWithHttpOperationResponse
      - azure-arm-sb.Namespaces.listByResourceGroup_1
      - azure-arm-sb.Namespaces.listByResourceGroup
      - azure-arm-sb.Namespaces.listByResourceGroup_2
      - azure-arm-sb.Namespaces.listByResourceGroupNext
      - azure-arm-sb.Namespaces.listByResourceGroupNext_2
      - azure-arm-sb.Namespaces.listByResourceGroupNext_1
      - azure-arm-sb.Namespaces.listByResourceGroupNextWithHttpOperationResponse
      - azure-arm-sb.Namespaces.listByResourceGroupWithHttpOperationResponse
      - azure-arm-sb.Namespaces.listIpFilterRules
      - azure-arm-sb.Namespaces.listIpFilterRules_2
      - azure-arm-sb.Namespaces.listIpFilterRules_1
      - azure-arm-sb.Namespaces.listIpFilterRulesNext
      - azure-arm-sb.Namespaces.listIpFilterRulesNext_1
      - azure-arm-sb.Namespaces.listIpFilterRulesNext_2
      - azure-arm-sb.Namespaces.listIpFilterRulesNextWithHttpOperationResponse
      - azure-arm-sb.Namespaces.listIpFilterRulesWithHttpOperationResponse
      - azure-arm-sb.Namespaces.listKeys
      - azure-arm-sb.Namespaces.listKeys_2
      - azure-arm-sb.Namespaces.listKeys_1
      - azure-arm-sb.Namespaces.listKeysWithHttpOperationResponse
      - azure-arm-sb.Namespaces.listNext
      - azure-arm-sb.Namespaces.listNext_1
      - azure-arm-sb.Namespaces.listNext_2
      - azure-arm-sb.Namespaces.listNextWithHttpOperationResponse
      - azure-arm-sb.Namespaces.listVirtualNetworkRules
      - azure-arm-sb.Namespaces.listVirtualNetworkRules_1
      - azure-arm-sb.Namespaces.listVirtualNetworkRules_2
      - azure-arm-sb.Namespaces.listVirtualNetworkRulesNext
      - azure-arm-sb.Namespaces.listVirtualNetworkRulesNext_1
      - azure-arm-sb.Namespaces.listVirtualNetworkRulesNext_2
      - >-
        azure-arm-sb.Namespaces.listVirtualNetworkRulesNextWithHttpOperationResponse
      - azure-arm-sb.Namespaces.listVirtualNetworkRulesWithHttpOperationResponse
      - azure-arm-sb.Namespaces.listWithHttpOperationResponse
      - azure-arm-sb.Namespaces.regenerateKeys
      - azure-arm-sb.Namespaces.regenerateKeys_1
      - azure-arm-sb.Namespaces.regenerateKeys_2
      - azure-arm-sb.Namespaces.regenerateKeysWithHttpOperationResponse
      - azure-arm-sb.Namespaces.update
      - azure-arm-sb.Namespaces.update_1
      - azure-arm-sb.Namespaces.update_2
      - azure-arm-sb.Namespaces.updateWithHttpOperationResponse
    langs:
      - typeScript
    type: interface
    summary: ''
    package: azure-arm-sb
  - uid: azure-arm-sb.Namespaces.beginCreateOrUpdate
    name: beginCreateOrUpdate
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      Creates or updates a service namespace. Once created, this namespace's
      resource manifest is immutable. This operation is idempotent.
    syntax:
      content: >-
        function beginCreateOrUpdate(resourceGroupName: string, namespaceName:
        string, parameters: SBNamespace, options?: Object)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |
            Name of the Resource group within the
            Azure subscription.
        - id: namespaceName
          type:
            - string
          description: |
            The namespace name.
        - id: parameters
          type:
            - azure-arm-sb.SBNamespace
          description: |
            Parameters supplied to create a namespace
            resource.
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<azure-arm-sb.SBNamespace>
    package: azure-arm-sb
  - uid: azure-arm-sb.Namespaces.beginCreateOrUpdate_1
    name: beginCreateOrUpdate
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      Creates or updates a service namespace. Once created, this namespace's
      resource manifest is immutable. This operation is idempotent.
    syntax:
      content: >-
        function beginCreateOrUpdate(resourceGroupName: string, namespaceName:
        string, parameters: SBNamespace, callback: ServiceCallback<SBNamespace>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: ''
        - id: namespaceName
          type:
            - string
          description: ''
        - id: parameters
          type:
            - azure-arm-sb.SBNamespace
          description: ''
        - id: callback
          type:
            - ServiceCallback<azure-arm-sb.SBNamespace>
          description: ''
      return:
        type:
          - Promise<azure-arm-sb.SBNamespace>
    package: azure-arm-sb
  - uid: azure-arm-sb.Namespaces.beginCreateOrUpdate_2
    name: beginCreateOrUpdate
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      Creates or updates a service namespace. Once created, this namespace's
      resource manifest is immutable. This operation is idempotent.
    syntax:
      content: >-
        function beginCreateOrUpdate(resourceGroupName: string, namespaceName:
        string, parameters: SBNamespace, options: Object, callback:
        ServiceCallback<SBNamespace>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: ''
        - id: namespaceName
          type:
            - string
          description: ''
        - id: parameters
          type:
            - azure-arm-sb.SBNamespace
          description: ''
        - id: options
          type:
            - Object
          description: ''
        - id: callback
          type:
            - ServiceCallback<azure-arm-sb.SBNamespace>
          description: ''
      return:
        type:
          - Promise<azure-arm-sb.SBNamespace>
    package: azure-arm-sb
  - uid: azure-arm-sb.Namespaces.beginCreateOrUpdateWithHttpOperationResponse
    name: beginCreateOrUpdateWithHttpOperationResponse
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      Creates or updates a service namespace. Once created, this namespace's
      resource manifest is immutable. This operation is idempotent.
    syntax:
      content: >-
        function beginCreateOrUpdateWithHttpOperationResponse(resourceGroupName:
        string, namespaceName: string, parameters: SBNamespace, options?:
        Object)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |
            Name of the Resource group within the
            Azure subscription.
        - id: namespaceName
          type:
            - string
          description: |
            The namespace name.
        - id: parameters
          type:
            - azure-arm-sb.SBNamespace
          description: |
            Parameters supplied to create a namespace
            resource.
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<HttpOperationResponse<azure-arm-sb.SBNamespace>>
    package: azure-arm-sb
  - uid: azure-arm-sb.Namespaces.beginDeleteMethod
    name: beginDeleteMethod
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      Deletes an existing namespace. This operation also removes all associated
      resources under the namespace.
    syntax:
      content: >-
        function beginDeleteMethod(resourceGroupName: string, namespaceName:
        string, options?: Object)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |
            Name of the Resource group within the
            Azure subscription.
        - id: namespaceName
          type:
            - string
          description: |
            The namespace name
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<void>
    package: azure-arm-sb
  - uid: azure-arm-sb.Namespaces.beginDeleteMethod_1
    name: beginDeleteMethod
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      Deletes an existing namespace. This operation also removes all associated
      resources under the namespace.
    syntax:
      content: >-
        function beginDeleteMethod(resourceGroupName: string, namespaceName:
        string, callback: ServiceCallback<void>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: ''
        - id: namespaceName
          type:
            - string
          description: ''
        - id: callback
          type:
            - ServiceCallback<void>
          description: ''
      return:
        type:
          - Promise<void>
    package: azure-arm-sb
  - uid: azure-arm-sb.Namespaces.beginDeleteMethod_2
    name: beginDeleteMethod
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      Deletes an existing namespace. This operation also removes all associated
      resources under the namespace.
    syntax:
      content: >-
        function beginDeleteMethod(resourceGroupName: string, namespaceName:
        string, options: Object, callback: ServiceCallback<void>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: ''
        - id: namespaceName
          type:
            - string
          description: ''
        - id: options
          type:
            - Object
          description: ''
        - id: callback
          type:
            - ServiceCallback<void>
          description: ''
      return:
        type:
          - Promise<void>
    package: azure-arm-sb
  - uid: azure-arm-sb.Namespaces.beginDeleteMethodWithHttpOperationResponse
    name: beginDeleteMethodWithHttpOperationResponse
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      Deletes an existing namespace. This operation also removes all associated
      resources under the namespace.
    syntax:
      content: >-
        function beginDeleteMethodWithHttpOperationResponse(resourceGroupName:
        string, namespaceName: string, options?: Object)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |
            Name of the Resource group within the
            Azure subscription.
        - id: namespaceName
          type:
            - string
          description: |
            The namespace name
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<HttpOperationResponse<void>>
    package: azure-arm-sb
  - uid: azure-arm-sb.Namespaces.checkNameAvailabilityMethod_1
    name: checkNameAvailabilityMethod
    children: []
    type: method
    langs:
      - typeScript
    summary: Check the give namespace name availability.
    syntax:
      content: >-
        function checkNameAvailabilityMethod(parameters: CheckNameAvailability,
        callback: ServiceCallback<CheckNameAvailabilityResult>)
      parameters:
        - id: parameters
          type:
            - azure-arm-sb.CheckNameAvailability
          description: ''
        - id: callback
          type:
            - ServiceCallback<azure-arm-sb.CheckNameAvailabilityResult>
          description: ''
      return:
        type:
          - Promise<azure-arm-sb.CheckNameAvailabilityResult>
    package: azure-arm-sb
  - uid: azure-arm-sb.Namespaces.checkNameAvailabilityMethod
    name: checkNameAvailabilityMethod
    children: []
    type: method
    langs:
      - typeScript
    summary: Check the give namespace name availability.
    syntax:
      content: >-
        function checkNameAvailabilityMethod(parameters: CheckNameAvailability,
        options?: Object)
      parameters:
        - id: parameters
          type:
            - azure-arm-sb.CheckNameAvailability
          description: |
            Parameters to check availability of the given
            namespace name
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<azure-arm-sb.CheckNameAvailabilityResult>
    package: azure-arm-sb
  - uid: azure-arm-sb.Namespaces.checkNameAvailabilityMethod_2
    name: checkNameAvailabilityMethod
    children: []
    type: method
    langs:
      - typeScript
    summary: Check the give namespace name availability.
    syntax:
      content: >-
        function checkNameAvailabilityMethod(parameters: CheckNameAvailability,
        options: Object, callback: ServiceCallback<CheckNameAvailabilityResult>)
      parameters:
        - id: parameters
          type:
            - azure-arm-sb.CheckNameAvailability
          description: ''
        - id: options
          type:
            - Object
          description: ''
        - id: callback
          type:
            - ServiceCallback<azure-arm-sb.CheckNameAvailabilityResult>
          description: ''
      return:
        type:
          - Promise<azure-arm-sb.CheckNameAvailabilityResult>
    package: azure-arm-sb
  - uid: >-
      azure-arm-sb.Namespaces.checkNameAvailabilityMethodWithHttpOperationResponse
    name: checkNameAvailabilityMethodWithHttpOperationResponse
    children: []
    type: method
    langs:
      - typeScript
    summary: Check the give namespace name availability.
    syntax:
      content: >-
        function
        checkNameAvailabilityMethodWithHttpOperationResponse(parameters:
        CheckNameAvailability, options?: Object)
      parameters:
        - id: parameters
          type:
            - azure-arm-sb.CheckNameAvailability
          description: |
            Parameters to check availability of the given
            namespace name
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - >-
            Promise<HttpOperationResponse<azure-arm-sb.CheckNameAvailabilityResult>>
    package: azure-arm-sb
  - uid: azure-arm-sb.Namespaces.createOrUpdate
    name: createOrUpdate
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      Creates or updates a service namespace. Once created, this namespace's
      resource manifest is immutable. This operation is idempotent.
    syntax:
      content: >-
        function createOrUpdate(resourceGroupName: string, namespaceName:
        string, parameters: SBNamespace, options?: Object)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |
            Name of the Resource group within the
            Azure subscription.
        - id: namespaceName
          type:
            - string
          description: |
            The namespace name.
        - id: parameters
          type:
            - azure-arm-sb.SBNamespace
          description: |
            Parameters supplied to create a namespace
            resource.
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<azure-arm-sb.SBNamespace>
    package: azure-arm-sb
  - uid: azure-arm-sb.Namespaces.createOrUpdate_1
    name: createOrUpdate
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      Creates or updates a service namespace. Once created, this namespace's
      resource manifest is immutable. This operation is idempotent.
    syntax:
      content: >-
        function createOrUpdate(resourceGroupName: string, namespaceName:
        string, parameters: SBNamespace, callback: ServiceCallback<SBNamespace>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: ''
        - id: namespaceName
          type:
            - string
          description: ''
        - id: parameters
          type:
            - azure-arm-sb.SBNamespace
          description: ''
        - id: callback
          type:
            - ServiceCallback<azure-arm-sb.SBNamespace>
          description: ''
      return:
        type:
          - Promise<azure-arm-sb.SBNamespace>
    package: azure-arm-sb
  - uid: azure-arm-sb.Namespaces.createOrUpdate_2
    name: createOrUpdate
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      Creates or updates a service namespace. Once created, this namespace's
      resource manifest is immutable. This operation is idempotent.
    syntax:
      content: >-
        function createOrUpdate(resourceGroupName: string, namespaceName:
        string, parameters: SBNamespace, options: Object, callback:
        ServiceCallback<SBNamespace>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: ''
        - id: namespaceName
          type:
            - string
          description: ''
        - id: parameters
          type:
            - azure-arm-sb.SBNamespace
          description: ''
        - id: options
          type:
            - Object
          description: ''
        - id: callback
          type:
            - ServiceCallback<azure-arm-sb.SBNamespace>
          description: ''
      return:
        type:
          - Promise<azure-arm-sb.SBNamespace>
    package: azure-arm-sb
  - uid: azure-arm-sb.Namespaces.createOrUpdateAuthorizationRule_2
    name: createOrUpdateAuthorizationRule
    children: []
    type: method
    langs:
      - typeScript
    summary: Creates or updates an authorization rule for a namespace.
    syntax:
      content: >-
        function createOrUpdateAuthorizationRule(resourceGroupName: string,
        namespaceName: string, authorizationRuleName: string, parameters:
        SBAuthorizationRule, options: Object, callback:
        ServiceCallback<SBAuthorizationRule>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: ''
        - id: namespaceName
          type:
            - string
          description: ''
        - id: authorizationRuleName
          type:
            - string
          description: ''
        - id: parameters
          type:
            - azure-arm-sb.SBAuthorizationRule
          description: ''
        - id: options
          type:
            - Object
          description: ''
        - id: callback
          type:
            - ServiceCallback<azure-arm-sb.SBAuthorizationRule>
          description: ''
      return:
        type:
          - Promise<azure-arm-sb.SBAuthorizationRule>
    package: azure-arm-sb
  - uid: azure-arm-sb.Namespaces.createOrUpdateAuthorizationRule
    name: createOrUpdateAuthorizationRule
    children: []
    type: method
    langs:
      - typeScript
    summary: Creates or updates an authorization rule for a namespace.
    syntax:
      content: >-
        function createOrUpdateAuthorizationRule(resourceGroupName: string,
        namespaceName: string, authorizationRuleName: string, parameters:
        SBAuthorizationRule, options?: Object)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |
            Name of the Resource group within the
            Azure subscription.
        - id: namespaceName
          type:
            - string
          description: |
            The namespace name
        - id: authorizationRuleName
          type:
            - string
          description: |
            The authorizationrule name.
        - id: parameters
          type:
            - azure-arm-sb.SBAuthorizationRule
          description: |
            The shared access authorization rule.
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<azure-arm-sb.SBAuthorizationRule>
    package: azure-arm-sb
  - uid: azure-arm-sb.Namespaces.createOrUpdateAuthorizationRule_1
    name: createOrUpdateAuthorizationRule
    children: []
    type: method
    langs:
      - typeScript
    summary: Creates or updates an authorization rule for a namespace.
    syntax:
      content: >-
        function createOrUpdateAuthorizationRule(resourceGroupName: string,
        namespaceName: string, authorizationRuleName: string, parameters:
        SBAuthorizationRule, callback: ServiceCallback<SBAuthorizationRule>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: ''
        - id: namespaceName
          type:
            - string
          description: ''
        - id: authorizationRuleName
          type:
            - string
          description: ''
        - id: parameters
          type:
            - azure-arm-sb.SBAuthorizationRule
          description: ''
        - id: callback
          type:
            - ServiceCallback<azure-arm-sb.SBAuthorizationRule>
          description: ''
      return:
        type:
          - Promise<azure-arm-sb.SBAuthorizationRule>
    package: azure-arm-sb
  - uid: >-
      azure-arm-sb.Namespaces.createOrUpdateAuthorizationRuleWithHttpOperationResponse
    name: createOrUpdateAuthorizationRuleWithHttpOperationResponse
    children: []
    type: method
    langs:
      - typeScript
    summary: Creates or updates an authorization rule for a namespace.
    syntax:
      content: >-
        function
        createOrUpdateAuthorizationRuleWithHttpOperationResponse(resourceGroupName:
        string, namespaceName: string, authorizationRuleName: string,
        parameters: SBAuthorizationRule, options?: Object)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |
            Name of the Resource group within the
            Azure subscription.
        - id: namespaceName
          type:
            - string
          description: |
            The namespace name
        - id: authorizationRuleName
          type:
            - string
          description: |
            The authorizationrule name.
        - id: parameters
          type:
            - azure-arm-sb.SBAuthorizationRule
          description: |
            The shared access authorization rule.
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<HttpOperationResponse<azure-arm-sb.SBAuthorizationRule>>
    package: azure-arm-sb
  - uid: azure-arm-sb.Namespaces.createOrUpdateIpFilterRule_1
    name: createOrUpdateIpFilterRule
    children: []
    type: method
    langs:
      - typeScript
    summary: Creates or updates an IpFilterRule for a Namespace.
    syntax:
      content: >-
        function createOrUpdateIpFilterRule(resourceGroupName: string,
        namespaceName: string, ipFilterRuleName: string, parameters:
        IpFilterRule, callback: ServiceCallback<IpFilterRule>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: ''
        - id: namespaceName
          type:
            - string
          description: ''
        - id: ipFilterRuleName
          type:
            - string
          description: ''
        - id: parameters
          type:
            - azure-arm-sb.IpFilterRule
          description: ''
        - id: callback
          type:
            - ServiceCallback<azure-arm-sb.IpFilterRule>
          description: ''
      return:
        type:
          - Promise<azure-arm-sb.IpFilterRule>
    package: azure-arm-sb
  - uid: azure-arm-sb.Namespaces.createOrUpdateIpFilterRule_2
    name: createOrUpdateIpFilterRule
    children: []
    type: method
    langs:
      - typeScript
    summary: Creates or updates an IpFilterRule for a Namespace.
    syntax:
      content: >-
        function createOrUpdateIpFilterRule(resourceGroupName: string,
        namespaceName: string, ipFilterRuleName: string, parameters:
        IpFilterRule, options: Object, callback: ServiceCallback<IpFilterRule>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: ''
        - id: namespaceName
          type:
            - string
          description: ''
        - id: ipFilterRuleName
          type:
            - string
          description: ''
        - id: parameters
          type:
            - azure-arm-sb.IpFilterRule
          description: ''
        - id: options
          type:
            - Object
          description: ''
        - id: callback
          type:
            - ServiceCallback<azure-arm-sb.IpFilterRule>
          description: ''
      return:
        type:
          - Promise<azure-arm-sb.IpFilterRule>
    package: azure-arm-sb
  - uid: azure-arm-sb.Namespaces.createOrUpdateIpFilterRule
    name: createOrUpdateIpFilterRule
    children: []
    type: method
    langs:
      - typeScript
    summary: Creates or updates an IpFilterRule for a Namespace.
    syntax:
      content: >-
        function createOrUpdateIpFilterRule(resourceGroupName: string,
        namespaceName: string, ipFilterRuleName: string, parameters:
        IpFilterRule, options?: Object)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |
            Name of the Resource group within the
            Azure subscription.
        - id: namespaceName
          type:
            - string
          description: |
            The namespace name
        - id: ipFilterRuleName
          type:
            - string
          description: |
            The IP Filter Rule name.
        - id: parameters
          type:
            - azure-arm-sb.IpFilterRule
          description: |
            The Namespace IpFilterRule.
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<azure-arm-sb.IpFilterRule>
    package: azure-arm-sb
  - uid: >-
      azure-arm-sb.Namespaces.createOrUpdateIpFilterRuleWithHttpOperationResponse
    name: createOrUpdateIpFilterRuleWithHttpOperationResponse
    children: []
    type: method
    langs:
      - typeScript
    summary: Creates or updates an IpFilterRule for a Namespace.
    syntax:
      content: >-
        function
        createOrUpdateIpFilterRuleWithHttpOperationResponse(resourceGroupName:
        string, namespaceName: string, ipFilterRuleName: string, parameters:
        IpFilterRule, options?: Object)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |
            Name of the Resource group within the
            Azure subscription.
        - id: namespaceName
          type:
            - string
          description: |
            The namespace name
        - id: ipFilterRuleName
          type:
            - string
          description: |
            The IP Filter Rule name.
        - id: parameters
          type:
            - azure-arm-sb.IpFilterRule
          description: |
            The Namespace IpFilterRule.
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<HttpOperationResponse<azure-arm-sb.IpFilterRule>>
    package: azure-arm-sb
  - uid: azure-arm-sb.Namespaces.createOrUpdateVirtualNetworkRule
    name: createOrUpdateVirtualNetworkRule
    children: []
    type: method
    langs:
      - typeScript
    summary: Creates or updates an VirtualNetworkRule for a Namespace.
    syntax:
      content: >-
        function createOrUpdateVirtualNetworkRule(resourceGroupName: string,
        namespaceName: string, virtualNetworkRuleName: string, parameters:
        VirtualNetworkRule, options?: Object)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |
            Name of the Resource group within the
            Azure subscription.
        - id: namespaceName
          type:
            - string
          description: |
            The namespace name
        - id: virtualNetworkRuleName
          type:
            - string
          description: |
            The Virtual Network Rule name.
        - id: parameters
          type:
            - azure-arm-sb.VirtualNetworkRule
          description: |
            The Namespace VirtualNetworkRule.
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<azure-arm-sb.VirtualNetworkRule>
    package: azure-arm-sb
  - uid: azure-arm-sb.Namespaces.createOrUpdateVirtualNetworkRule_1
    name: createOrUpdateVirtualNetworkRule
    children: []
    type: method
    langs:
      - typeScript
    summary: Creates or updates an VirtualNetworkRule for a Namespace.
    syntax:
      content: >-
        function createOrUpdateVirtualNetworkRule(resourceGroupName: string,
        namespaceName: string, virtualNetworkRuleName: string, parameters:
        VirtualNetworkRule, callback: ServiceCallback<VirtualNetworkRule>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: ''
        - id: namespaceName
          type:
            - string
          description: ''
        - id: virtualNetworkRuleName
          type:
            - string
          description: ''
        - id: parameters
          type:
            - azure-arm-sb.VirtualNetworkRule
          description: ''
        - id: callback
          type:
            - ServiceCallback<azure-arm-sb.VirtualNetworkRule>
          description: ''
      return:
        type:
          - Promise<azure-arm-sb.VirtualNetworkRule>
    package: azure-arm-sb
  - uid: azure-arm-sb.Namespaces.createOrUpdateVirtualNetworkRule_2
    name: createOrUpdateVirtualNetworkRule
    children: []
    type: method
    langs:
      - typeScript
    summary: Creates or updates an VirtualNetworkRule for a Namespace.
    syntax:
      content: >-
        function createOrUpdateVirtualNetworkRule(resourceGroupName: string,
        namespaceName: string, virtualNetworkRuleName: string, parameters:
        VirtualNetworkRule, options: Object, callback:
        ServiceCallback<VirtualNetworkRule>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: ''
        - id: namespaceName
          type:
            - string
          description: ''
        - id: virtualNetworkRuleName
          type:
            - string
          description: ''
        - id: parameters
          type:
            - azure-arm-sb.VirtualNetworkRule
          description: ''
        - id: options
          type:
            - Object
          description: ''
        - id: callback
          type:
            - ServiceCallback<azure-arm-sb.VirtualNetworkRule>
          description: ''
      return:
        type:
          - Promise<azure-arm-sb.VirtualNetworkRule>
    package: azure-arm-sb
  - uid: >-
      azure-arm-sb.Namespaces.createOrUpdateVirtualNetworkRuleWithHttpOperationResponse
    name: createOrUpdateVirtualNetworkRuleWithHttpOperationResponse
    children: []
    type: method
    langs:
      - typeScript
    summary: Creates or updates an VirtualNetworkRule for a Namespace.
    syntax:
      content: >-
        function
        createOrUpdateVirtualNetworkRuleWithHttpOperationResponse(resourceGroupName:
        string, namespaceName: string, virtualNetworkRuleName: string,
        parameters: VirtualNetworkRule, options?: Object)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |
            Name of the Resource group within the
            Azure subscription.
        - id: namespaceName
          type:
            - string
          description: |
            The namespace name
        - id: virtualNetworkRuleName
          type:
            - string
          description: |
            The Virtual Network Rule name.
        - id: parameters
          type:
            - azure-arm-sb.VirtualNetworkRule
          description: |
            The Namespace VirtualNetworkRule.
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<HttpOperationResponse<azure-arm-sb.VirtualNetworkRule>>
    package: azure-arm-sb
  - uid: azure-arm-sb.Namespaces.createOrUpdateWithHttpOperationResponse
    name: createOrUpdateWithHttpOperationResponse
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      Creates or updates a service namespace. Once created, this namespace's
      resource manifest is immutable. This operation is idempotent.
    syntax:
      content: >-
        function createOrUpdateWithHttpOperationResponse(resourceGroupName:
        string, namespaceName: string, parameters: SBNamespace, options?:
        Object)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |
            Name of the Resource group within the
            Azure subscription.
        - id: namespaceName
          type:
            - string
          description: |
            The namespace name.
        - id: parameters
          type:
            - azure-arm-sb.SBNamespace
          description: |
            Parameters supplied to create a namespace
            resource.
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<HttpOperationResponse<azure-arm-sb.SBNamespace>>
    package: azure-arm-sb
  - uid: azure-arm-sb.Namespaces.deleteAuthorizationRule_1
    name: deleteAuthorizationRule
    children: []
    type: method
    langs:
      - typeScript
    summary: Deletes a namespace authorization rule.
    syntax:
      content: >-
        function deleteAuthorizationRule(resourceGroupName: string,
        namespaceName: string, authorizationRuleName: string, callback:
        ServiceCallback<void>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: ''
        - id: namespaceName
          type:
            - string
          description: ''
        - id: authorizationRuleName
          type:
            - string
          description: ''
        - id: callback
          type:
            - ServiceCallback<void>
          description: ''
      return:
        type:
          - Promise<void>
    package: azure-arm-sb
  - uid: azure-arm-sb.Namespaces.deleteAuthorizationRule
    name: deleteAuthorizationRule
    children: []
    type: method
    langs:
      - typeScript
    summary: Deletes a namespace authorization rule.
    syntax:
      content: >-
        function deleteAuthorizationRule(resourceGroupName: string,
        namespaceName: string, authorizationRuleName: string, options?: Object)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |
            Name of the Resource group within the
            Azure subscription.
        - id: namespaceName
          type:
            - string
          description: |
            The namespace name
        - id: authorizationRuleName
          type:
            - string
          description: |
            The authorizationrule name.
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<void>
    package: azure-arm-sb
  - uid: azure-arm-sb.Namespaces.deleteAuthorizationRule_2
    name: deleteAuthorizationRule
    children: []
    type: method
    langs:
      - typeScript
    summary: Deletes a namespace authorization rule.
    syntax:
      content: >-
        function deleteAuthorizationRule(resourceGroupName: string,
        namespaceName: string, authorizationRuleName: string, options: Object,
        callback: ServiceCallback<void>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: ''
        - id: namespaceName
          type:
            - string
          description: ''
        - id: authorizationRuleName
          type:
            - string
          description: ''
        - id: options
          type:
            - Object
          description: ''
        - id: callback
          type:
            - ServiceCallback<void>
          description: ''
      return:
        type:
          - Promise<void>
    package: azure-arm-sb
  - uid: azure-arm-sb.Namespaces.deleteAuthorizationRuleWithHttpOperationResponse
    name: deleteAuthorizationRuleWithHttpOperationResponse
    children: []
    type: method
    langs:
      - typeScript
    summary: Deletes a namespace authorization rule.
    syntax:
      content: >-
        function
        deleteAuthorizationRuleWithHttpOperationResponse(resourceGroupName:
        string, namespaceName: string, authorizationRuleName: string, options?:
        Object)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |
            Name of the Resource group within the
            Azure subscription.
        - id: namespaceName
          type:
            - string
          description: |
            The namespace name
        - id: authorizationRuleName
          type:
            - string
          description: |
            The authorizationrule name.
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<HttpOperationResponse<void>>
    package: azure-arm-sb
  - uid: azure-arm-sb.Namespaces.deleteIpFilterRule_1
    name: deleteIpFilterRule
    children: []
    type: method
    langs:
      - typeScript
    summary: Deletes an IpFilterRule for a Namespace.
    syntax:
      content: >-
        function deleteIpFilterRule(resourceGroupName: string, namespaceName:
        string, ipFilterRuleName: string, callback: ServiceCallback<void>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: ''
        - id: namespaceName
          type:
            - string
          description: ''
        - id: ipFilterRuleName
          type:
            - string
          description: ''
        - id: callback
          type:
            - ServiceCallback<void>
          description: ''
      return:
        type:
          - Promise<void>
    package: azure-arm-sb
  - uid: azure-arm-sb.Namespaces.deleteIpFilterRule_2
    name: deleteIpFilterRule
    children: []
    type: method
    langs:
      - typeScript
    summary: Deletes an IpFilterRule for a Namespace.
    syntax:
      content: >-
        function deleteIpFilterRule(resourceGroupName: string, namespaceName:
        string, ipFilterRuleName: string, options: Object, callback:
        ServiceCallback<void>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: ''
        - id: namespaceName
          type:
            - string
          description: ''
        - id: ipFilterRuleName
          type:
            - string
          description: ''
        - id: options
          type:
            - Object
          description: ''
        - id: callback
          type:
            - ServiceCallback<void>
          description: ''
      return:
        type:
          - Promise<void>
    package: azure-arm-sb
  - uid: azure-arm-sb.Namespaces.deleteIpFilterRule
    name: deleteIpFilterRule
    children: []
    type: method
    langs:
      - typeScript
    summary: Deletes an IpFilterRule for a Namespace.
    syntax:
      content: >-
        function deleteIpFilterRule(resourceGroupName: string, namespaceName:
        string, ipFilterRuleName: string, options?: Object)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |
            Name of the Resource group within the
            Azure subscription.
        - id: namespaceName
          type:
            - string
          description: |
            The namespace name
        - id: ipFilterRuleName
          type:
            - string
          description: |
            The IP Filter Rule name.
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<void>
    package: azure-arm-sb
  - uid: azure-arm-sb.Namespaces.deleteIpFilterRuleWithHttpOperationResponse
    name: deleteIpFilterRuleWithHttpOperationResponse
    children: []
    type: method
    langs:
      - typeScript
    summary: Deletes an IpFilterRule for a Namespace.
    syntax:
      content: >-
        function deleteIpFilterRuleWithHttpOperationResponse(resourceGroupName:
        string, namespaceName: string, ipFilterRuleName: string, options?:
        Object)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |
            Name of the Resource group within the
            Azure subscription.
        - id: namespaceName
          type:
            - string
          description: |
            The namespace name
        - id: ipFilterRuleName
          type:
            - string
          description: |
            The IP Filter Rule name.
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<HttpOperationResponse<void>>
    package: azure-arm-sb
  - uid: azure-arm-sb.Namespaces.deleteMethod_1
    name: deleteMethod
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      Deletes an existing namespace. This operation also removes all associated
      resources under the namespace.
    syntax:
      content: >-
        function deleteMethod(resourceGroupName: string, namespaceName: string,
        callback: ServiceCallback<void>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: ''
        - id: namespaceName
          type:
            - string
          description: ''
        - id: callback
          type:
            - ServiceCallback<void>
          description: ''
      return:
        type:
          - Promise<void>
    package: azure-arm-sb
  - uid: azure-arm-sb.Namespaces.deleteMethod_2
    name: deleteMethod
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      Deletes an existing namespace. This operation also removes all associated
      resources under the namespace.
    syntax:
      content: >-
        function deleteMethod(resourceGroupName: string, namespaceName: string,
        options: Object, callback: ServiceCallback<void>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: ''
        - id: namespaceName
          type:
            - string
          description: ''
        - id: options
          type:
            - Object
          description: ''
        - id: callback
          type:
            - ServiceCallback<void>
          description: ''
      return:
        type:
          - Promise<void>
    package: azure-arm-sb
  - uid: azure-arm-sb.Namespaces.deleteMethod
    name: deleteMethod
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      Deletes an existing namespace. This operation also removes all associated
      resources under the namespace.
    syntax:
      content: >-
        function deleteMethod(resourceGroupName: string, namespaceName: string,
        options?: Object)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |
            Name of the Resource group within the
            Azure subscription.
        - id: namespaceName
          type:
            - string
          description: |
            The namespace name
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<void>
    package: azure-arm-sb
  - uid: azure-arm-sb.Namespaces.deleteMethodWithHttpOperationResponse
    name: deleteMethodWithHttpOperationResponse
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      Deletes an existing namespace. This operation also removes all associated
      resources under the namespace.
    syntax:
      content: >-
        function deleteMethodWithHttpOperationResponse(resourceGroupName:
        string, namespaceName: string, options?: Object)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |
            Name of the Resource group within the
            Azure subscription.
        - id: namespaceName
          type:
            - string
          description: |
            The namespace name
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<HttpOperationResponse<void>>
    package: azure-arm-sb
  - uid: azure-arm-sb.Namespaces.deleteVirtualNetworkRule
    name: deleteVirtualNetworkRule
    children: []
    type: method
    langs:
      - typeScript
    summary: Deletes an VirtualNetworkRule for a Namespace.
    syntax:
      content: >-
        function deleteVirtualNetworkRule(resourceGroupName: string,
        namespaceName: string, virtualNetworkRuleName: string, options?: Object)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |
            Name of the Resource group within the
            Azure subscription.
        - id: namespaceName
          type:
            - string
          description: |
            The namespace name
        - id: virtualNetworkRuleName
          type:
            - string
          description: |
            The Virtual Network Rule name.
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<void>
    package: azure-arm-sb
  - uid: azure-arm-sb.Namespaces.deleteVirtualNetworkRule_1
    name: deleteVirtualNetworkRule
    children: []
    type: method
    langs:
      - typeScript
    summary: Deletes an VirtualNetworkRule for a Namespace.
    syntax:
      content: >-
        function deleteVirtualNetworkRule(resourceGroupName: string,
        namespaceName: string, virtualNetworkRuleName: string, callback:
        ServiceCallback<void>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: ''
        - id: namespaceName
          type:
            - string
          description: ''
        - id: virtualNetworkRuleName
          type:
            - string
          description: ''
        - id: callback
          type:
            - ServiceCallback<void>
          description: ''
      return:
        type:
          - Promise<void>
    package: azure-arm-sb
  - uid: azure-arm-sb.Namespaces.deleteVirtualNetworkRule_2
    name: deleteVirtualNetworkRule
    children: []
    type: method
    langs:
      - typeScript
    summary: Deletes an VirtualNetworkRule for a Namespace.
    syntax:
      content: >-
        function deleteVirtualNetworkRule(resourceGroupName: string,
        namespaceName: string, virtualNetworkRuleName: string, options: Object,
        callback: ServiceCallback<void>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: ''
        - id: namespaceName
          type:
            - string
          description: ''
        - id: virtualNetworkRuleName
          type:
            - string
          description: ''
        - id: options
          type:
            - Object
          description: ''
        - id: callback
          type:
            - ServiceCallback<void>
          description: ''
      return:
        type:
          - Promise<void>
    package: azure-arm-sb
  - uid: azure-arm-sb.Namespaces.deleteVirtualNetworkRuleWithHttpOperationResponse
    name: deleteVirtualNetworkRuleWithHttpOperationResponse
    children: []
    type: method
    langs:
      - typeScript
    summary: Deletes an VirtualNetworkRule for a Namespace.
    syntax:
      content: >-
        function
        deleteVirtualNetworkRuleWithHttpOperationResponse(resourceGroupName:
        string, namespaceName: string, virtualNetworkRuleName: string, options?:
        Object)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |
            Name of the Resource group within the
            Azure subscription.
        - id: namespaceName
          type:
            - string
          description: |
            The namespace name
        - id: virtualNetworkRuleName
          type:
            - string
          description: |
            The Virtual Network Rule name.
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<HttpOperationResponse<void>>
    package: azure-arm-sb
  - uid: azure-arm-sb.Namespaces.get_1
    name: get
    children: []
    type: method
    langs:
      - typeScript
    summary: Gets a description for the specified namespace.
    syntax:
      content: >-
        function get(resourceGroupName: string, namespaceName: string, callback:
        ServiceCallback<SBNamespace>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: ''
        - id: namespaceName
          type:
            - string
          description: ''
        - id: callback
          type:
            - ServiceCallback<azure-arm-sb.SBNamespace>
          description: ''
      return:
        type:
          - Promise<azure-arm-sb.SBNamespace>
    package: azure-arm-sb
  - uid: azure-arm-sb.Namespaces.get
    name: get
    children: []
    type: method
    langs:
      - typeScript
    summary: Gets a description for the specified namespace.
    syntax:
      content: >-
        function get(resourceGroupName: string, namespaceName: string, options?:
        Object)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |
            Name of the Resource group within the
            Azure subscription.
        - id: namespaceName
          type:
            - string
          description: |
            The namespace name
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<azure-arm-sb.SBNamespace>
    package: azure-arm-sb
  - uid: azure-arm-sb.Namespaces.get_2
    name: get
    children: []
    type: method
    langs:
      - typeScript
    summary: Gets a description for the specified namespace.
    syntax:
      content: >-
        function get(resourceGroupName: string, namespaceName: string, options:
        Object, callback: ServiceCallback<SBNamespace>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: ''
        - id: namespaceName
          type:
            - string
          description: ''
        - id: options
          type:
            - Object
          description: ''
        - id: callback
          type:
            - ServiceCallback<azure-arm-sb.SBNamespace>
          description: ''
      return:
        type:
          - Promise<azure-arm-sb.SBNamespace>
    package: azure-arm-sb
  - uid: azure-arm-sb.Namespaces.getAuthorizationRule_1
    name: getAuthorizationRule
    children: []
    type: method
    langs:
      - typeScript
    summary: Gets an authorization rule for a namespace by rule name.
    syntax:
      content: >-
        function getAuthorizationRule(resourceGroupName: string, namespaceName:
        string, authorizationRuleName: string, callback:
        ServiceCallback<SBAuthorizationRule>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: ''
        - id: namespaceName
          type:
            - string
          description: ''
        - id: authorizationRuleName
          type:
            - string
          description: ''
        - id: callback
          type:
            - ServiceCallback<azure-arm-sb.SBAuthorizationRule>
          description: ''
      return:
        type:
          - Promise<azure-arm-sb.SBAuthorizationRule>
    package: azure-arm-sb
  - uid: azure-arm-sb.Namespaces.getAuthorizationRule_2
    name: getAuthorizationRule
    children: []
    type: method
    langs:
      - typeScript
    summary: Gets an authorization rule for a namespace by rule name.
    syntax:
      content: >-
        function getAuthorizationRule(resourceGroupName: string, namespaceName:
        string, authorizationRuleName: string, options: Object, callback:
        ServiceCallback<SBAuthorizationRule>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: ''
        - id: namespaceName
          type:
            - string
          description: ''
        - id: authorizationRuleName
          type:
            - string
          description: ''
        - id: options
          type:
            - Object
          description: ''
        - id: callback
          type:
            - ServiceCallback<azure-arm-sb.SBAuthorizationRule>
          description: ''
      return:
        type:
          - Promise<azure-arm-sb.SBAuthorizationRule>
    package: azure-arm-sb
  - uid: azure-arm-sb.Namespaces.getAuthorizationRule
    name: getAuthorizationRule
    children: []
    type: method
    langs:
      - typeScript
    summary: Gets an authorization rule for a namespace by rule name.
    syntax:
      content: >-
        function getAuthorizationRule(resourceGroupName: string, namespaceName:
        string, authorizationRuleName: string, options?: Object)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |
            Name of the Resource group within the
            Azure subscription.
        - id: namespaceName
          type:
            - string
          description: |
            The namespace name
        - id: authorizationRuleName
          type:
            - string
          description: |
            The authorizationrule name.
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<azure-arm-sb.SBAuthorizationRule>
    package: azure-arm-sb
  - uid: azure-arm-sb.Namespaces.getAuthorizationRuleWithHttpOperationResponse
    name: getAuthorizationRuleWithHttpOperationResponse
    children: []
    type: method
    langs:
      - typeScript
    summary: Gets an authorization rule for a namespace by rule name.
    syntax:
      content: >-
        function
        getAuthorizationRuleWithHttpOperationResponse(resourceGroupName: string,
        namespaceName: string, authorizationRuleName: string, options?: Object)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |
            Name of the Resource group within the
            Azure subscription.
        - id: namespaceName
          type:
            - string
          description: |
            The namespace name
        - id: authorizationRuleName
          type:
            - string
          description: |
            The authorizationrule name.
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<HttpOperationResponse<azure-arm-sb.SBAuthorizationRule>>
    package: azure-arm-sb
  - uid: azure-arm-sb.Namespaces.getIpFilterRule
    name: getIpFilterRule
    children: []
    type: method
    langs:
      - typeScript
    summary: Gets an IpFilterRule for a Namespace by rule name.
    syntax:
      content: >-
        function getIpFilterRule(resourceGroupName: string, namespaceName:
        string, ipFilterRuleName: string, options?: Object)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |
            Name of the Resource group within the
            Azure subscription.
        - id: namespaceName
          type:
            - string
          description: |
            The namespace name
        - id: ipFilterRuleName
          type:
            - string
          description: |
            The IP Filter Rule name.
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<azure-arm-sb.IpFilterRule>
    package: azure-arm-sb
  - uid: azure-arm-sb.Namespaces.getIpFilterRule_1
    name: getIpFilterRule
    children: []
    type: method
    langs:
      - typeScript
    summary: Gets an IpFilterRule for a Namespace by rule name.
    syntax:
      content: >-
        function getIpFilterRule(resourceGroupName: string, namespaceName:
        string, ipFilterRuleName: string, callback:
        ServiceCallback<IpFilterRule>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: ''
        - id: namespaceName
          type:
            - string
          description: ''
        - id: ipFilterRuleName
          type:
            - string
          description: ''
        - id: callback
          type:
            - ServiceCallback<azure-arm-sb.IpFilterRule>
          description: ''
      return:
        type:
          - Promise<azure-arm-sb.IpFilterRule>
    package: azure-arm-sb
  - uid: azure-arm-sb.Namespaces.getIpFilterRule_2
    name: getIpFilterRule
    children: []
    type: method
    langs:
      - typeScript
    summary: Gets an IpFilterRule for a Namespace by rule name.
    syntax:
      content: >-
        function getIpFilterRule(resourceGroupName: string, namespaceName:
        string, ipFilterRuleName: string, options: Object, callback:
        ServiceCallback<IpFilterRule>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: ''
        - id: namespaceName
          type:
            - string
          description: ''
        - id: ipFilterRuleName
          type:
            - string
          description: ''
        - id: options
          type:
            - Object
          description: ''
        - id: callback
          type:
            - ServiceCallback<azure-arm-sb.IpFilterRule>
          description: ''
      return:
        type:
          - Promise<azure-arm-sb.IpFilterRule>
    package: azure-arm-sb
  - uid: azure-arm-sb.Namespaces.getIpFilterRuleWithHttpOperationResponse
    name: getIpFilterRuleWithHttpOperationResponse
    children: []
    type: method
    langs:
      - typeScript
    summary: Gets an IpFilterRule for a Namespace by rule name.
    syntax:
      content: >-
        function getIpFilterRuleWithHttpOperationResponse(resourceGroupName:
        string, namespaceName: string, ipFilterRuleName: string, options?:
        Object)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |
            Name of the Resource group within the
            Azure subscription.
        - id: namespaceName
          type:
            - string
          description: |
            The namespace name
        - id: ipFilterRuleName
          type:
            - string
          description: |
            The IP Filter Rule name.
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<HttpOperationResponse<azure-arm-sb.IpFilterRule>>
    package: azure-arm-sb
  - uid: azure-arm-sb.Namespaces.getVirtualNetworkRule
    name: getVirtualNetworkRule
    children: []
    type: method
    langs:
      - typeScript
    summary: Gets an VirtualNetworkRule for a Namespace by rule name.
    syntax:
      content: >-
        function getVirtualNetworkRule(resourceGroupName: string, namespaceName:
        string, virtualNetworkRuleName: string, options?: Object)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |
            Name of the Resource group within the
            Azure subscription.
        - id: namespaceName
          type:
            - string
          description: |
            The namespace name
        - id: virtualNetworkRuleName
          type:
            - string
          description: |
            The Virtual Network Rule name.
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<azure-arm-sb.VirtualNetworkRule>
    package: azure-arm-sb
  - uid: azure-arm-sb.Namespaces.getVirtualNetworkRule_1
    name: getVirtualNetworkRule
    children: []
    type: method
    langs:
      - typeScript
    summary: Gets an VirtualNetworkRule for a Namespace by rule name.
    syntax:
      content: >-
        function getVirtualNetworkRule(resourceGroupName: string, namespaceName:
        string, virtualNetworkRuleName: string, callback:
        ServiceCallback<VirtualNetworkRule>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: ''
        - id: namespaceName
          type:
            - string
          description: ''
        - id: virtualNetworkRuleName
          type:
            - string
          description: ''
        - id: callback
          type:
            - ServiceCallback<azure-arm-sb.VirtualNetworkRule>
          description: ''
      return:
        type:
          - Promise<azure-arm-sb.VirtualNetworkRule>
    package: azure-arm-sb
  - uid: azure-arm-sb.Namespaces.getVirtualNetworkRule_2
    name: getVirtualNetworkRule
    children: []
    type: method
    langs:
      - typeScript
    summary: Gets an VirtualNetworkRule for a Namespace by rule name.
    syntax:
      content: >-
        function getVirtualNetworkRule(resourceGroupName: string, namespaceName:
        string, virtualNetworkRuleName: string, options: Object, callback:
        ServiceCallback<VirtualNetworkRule>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: ''
        - id: namespaceName
          type:
            - string
          description: ''
        - id: virtualNetworkRuleName
          type:
            - string
          description: ''
        - id: options
          type:
            - Object
          description: ''
        - id: callback
          type:
            - ServiceCallback<azure-arm-sb.VirtualNetworkRule>
          description: ''
      return:
        type:
          - Promise<azure-arm-sb.VirtualNetworkRule>
    package: azure-arm-sb
  - uid: azure-arm-sb.Namespaces.getVirtualNetworkRuleWithHttpOperationResponse
    name: getVirtualNetworkRuleWithHttpOperationResponse
    children: []
    type: method
    langs:
      - typeScript
    summary: Gets an VirtualNetworkRule for a Namespace by rule name.
    syntax:
      content: >-
        function
        getVirtualNetworkRuleWithHttpOperationResponse(resourceGroupName:
        string, namespaceName: string, virtualNetworkRuleName: string, options?:
        Object)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |
            Name of the Resource group within the
            Azure subscription.
        - id: namespaceName
          type:
            - string
          description: |
            The namespace name
        - id: virtualNetworkRuleName
          type:
            - string
          description: |
            The Virtual Network Rule name.
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<HttpOperationResponse<azure-arm-sb.VirtualNetworkRule>>
    package: azure-arm-sb
  - uid: azure-arm-sb.Namespaces.getWithHttpOperationResponse
    name: getWithHttpOperationResponse
    children: []
    type: method
    langs:
      - typeScript
    summary: Gets a description for the specified namespace.
    syntax:
      content: >-
        function getWithHttpOperationResponse(resourceGroupName: string,
        namespaceName: string, options?: Object)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |
            Name of the Resource group within the
            Azure subscription.
        - id: namespaceName
          type:
            - string
          description: |
            The namespace name
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<HttpOperationResponse<azure-arm-sb.SBNamespace>>
    package: azure-arm-sb
  - uid: azure-arm-sb.Namespaces.list_1
    name: list
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      Gets all the available namespaces within the subscription, irrespective of
      the resource groups.
    syntax:
      content: 'function list(callback: ServiceCallback<SBNamespaceListResult>)'
      parameters:
        - id: callback
          type:
            - ServiceCallback<azure-arm-sb.SBNamespaceListResult>
          description: ''
      return:
        type:
          - Promise<azure-arm-sb.SBNamespaceListResult>
    package: azure-arm-sb
  - uid: azure-arm-sb.Namespaces.list_2
    name: list
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      Gets all the available namespaces within the subscription, irrespective of
      the resource groups.
    syntax:
      content: >-
        function list(options: Object, callback:
        ServiceCallback<SBNamespaceListResult>)
      parameters:
        - id: options
          type:
            - Object
          description: ''
        - id: callback
          type:
            - ServiceCallback<azure-arm-sb.SBNamespaceListResult>
          description: ''
      return:
        type:
          - Promise<azure-arm-sb.SBNamespaceListResult>
    package: azure-arm-sb
  - uid: azure-arm-sb.Namespaces.list
    name: list
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      Gets all the available namespaces within the subscription, irrespective of
      the resource groups.
    syntax:
      content: 'function list(options?: Object)'
      parameters:
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<azure-arm-sb.SBNamespaceListResult>
    package: azure-arm-sb
  - uid: azure-arm-sb.Namespaces.listAuthorizationRules_2
    name: listAuthorizationRules
    children: []
    type: method
    langs:
      - typeScript
    summary: Gets the authorization rules for a namespace.
    syntax:
      content: >-
        function listAuthorizationRules(resourceGroupName: string,
        namespaceName: string, options: Object, callback:
        ServiceCallback<SBAuthorizationRuleListResult>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: ''
        - id: namespaceName
          type:
            - string
          description: ''
        - id: options
          type:
            - Object
          description: ''
        - id: callback
          type:
            - ServiceCallback<azure-arm-sb.SBAuthorizationRuleListResult>
          description: ''
      return:
        type:
          - Promise<azure-arm-sb.SBAuthorizationRuleListResult>
    package: azure-arm-sb
  - uid: azure-arm-sb.Namespaces.listAuthorizationRules
    name: listAuthorizationRules
    children: []
    type: method
    langs:
      - typeScript
    summary: Gets the authorization rules for a namespace.
    syntax:
      content: >-
        function listAuthorizationRules(resourceGroupName: string,
        namespaceName: string, options?: Object)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |
            Name of the Resource group within the
            Azure subscription.
        - id: namespaceName
          type:
            - string
          description: |
            The namespace name
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<azure-arm-sb.SBAuthorizationRuleListResult>
    package: azure-arm-sb
  - uid: azure-arm-sb.Namespaces.listAuthorizationRules_1
    name: listAuthorizationRules
    children: []
    type: method
    langs:
      - typeScript
    summary: Gets the authorization rules for a namespace.
    syntax:
      content: >-
        function listAuthorizationRules(resourceGroupName: string,
        namespaceName: string, callback:
        ServiceCallback<SBAuthorizationRuleListResult>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: ''
        - id: namespaceName
          type:
            - string
          description: ''
        - id: callback
          type:
            - ServiceCallback<azure-arm-sb.SBAuthorizationRuleListResult>
          description: ''
      return:
        type:
          - Promise<azure-arm-sb.SBAuthorizationRuleListResult>
    package: azure-arm-sb
  - uid: azure-arm-sb.Namespaces.listAuthorizationRulesNext
    name: listAuthorizationRulesNext
    children: []
    type: method
    langs:
      - typeScript
    summary: Gets the authorization rules for a namespace.
    syntax:
      content: >-
        function listAuthorizationRulesNext(nextPageLink: string, options?:
        Object)
      parameters:
        - id: nextPageLink
          type:
            - string
          description: |
            The NextLink from the previous successful call
            to List operation.
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<azure-arm-sb.SBAuthorizationRuleListResult>
    package: azure-arm-sb
  - uid: azure-arm-sb.Namespaces.listAuthorizationRulesNext_2
    name: listAuthorizationRulesNext
    children: []
    type: method
    langs:
      - typeScript
    summary: Gets the authorization rules for a namespace.
    syntax:
      content: >-
        function listAuthorizationRulesNext(nextPageLink: string, options:
        Object, callback: ServiceCallback<SBAuthorizationRuleListResult>)
      parameters:
        - id: nextPageLink
          type:
            - string
          description: ''
        - id: options
          type:
            - Object
          description: ''
        - id: callback
          type:
            - ServiceCallback<azure-arm-sb.SBAuthorizationRuleListResult>
          description: ''
      return:
        type:
          - Promise<azure-arm-sb.SBAuthorizationRuleListResult>
    package: azure-arm-sb
  - uid: azure-arm-sb.Namespaces.listAuthorizationRulesNext_1
    name: listAuthorizationRulesNext
    children: []
    type: method
    langs:
      - typeScript
    summary: Gets the authorization rules for a namespace.
    syntax:
      content: >-
        function listAuthorizationRulesNext(nextPageLink: string, callback:
        ServiceCallback<SBAuthorizationRuleListResult>)
      parameters:
        - id: nextPageLink
          type:
            - string
          description: ''
        - id: callback
          type:
            - ServiceCallback<azure-arm-sb.SBAuthorizationRuleListResult>
          description: ''
      return:
        type:
          - Promise<azure-arm-sb.SBAuthorizationRuleListResult>
    package: azure-arm-sb
  - uid: >-
      azure-arm-sb.Namespaces.listAuthorizationRulesNextWithHttpOperationResponse
    name: listAuthorizationRulesNextWithHttpOperationResponse
    children: []
    type: method
    langs:
      - typeScript
    summary: Gets the authorization rules for a namespace.
    syntax:
      content: >-
        function
        listAuthorizationRulesNextWithHttpOperationResponse(nextPageLink:
        string, options?: Object)
      parameters:
        - id: nextPageLink
          type:
            - string
          description: |
            The NextLink from the previous successful call
            to List operation.
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - >-
            Promise<HttpOperationResponse<azure-arm-sb.SBAuthorizationRuleListResult>>
    package: azure-arm-sb
  - uid: azure-arm-sb.Namespaces.listAuthorizationRulesWithHttpOperationResponse
    name: listAuthorizationRulesWithHttpOperationResponse
    children: []
    type: method
    langs:
      - typeScript
    summary: Gets the authorization rules for a namespace.
    syntax:
      content: >-
        function
        listAuthorizationRulesWithHttpOperationResponse(resourceGroupName:
        string, namespaceName: string, options?: Object)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |
            Name of the Resource group within the
            Azure subscription.
        - id: namespaceName
          type:
            - string
          description: |
            The namespace name
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - >-
            Promise<HttpOperationResponse<azure-arm-sb.SBAuthorizationRuleListResult>>
    package: azure-arm-sb
  - uid: azure-arm-sb.Namespaces.listByResourceGroup_1
    name: listByResourceGroup
    children: []
    type: method
    langs:
      - typeScript
    summary: Gets the available namespaces within a resource group.
    syntax:
      content: >-
        function listByResourceGroup(resourceGroupName: string, callback:
        ServiceCallback<SBNamespaceListResult>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: ''
        - id: callback
          type:
            - ServiceCallback<azure-arm-sb.SBNamespaceListResult>
          description: ''
      return:
        type:
          - Promise<azure-arm-sb.SBNamespaceListResult>
    package: azure-arm-sb
  - uid: azure-arm-sb.Namespaces.listByResourceGroup
    name: listByResourceGroup
    children: []
    type: method
    langs:
      - typeScript
    summary: Gets the available namespaces within a resource group.
    syntax:
      content: >-
        function listByResourceGroup(resourceGroupName: string, options?:
        Object)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |
            Name of the Resource group within the
            Azure subscription.
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<azure-arm-sb.SBNamespaceListResult>
    package: azure-arm-sb
  - uid: azure-arm-sb.Namespaces.listByResourceGroup_2
    name: listByResourceGroup
    children: []
    type: method
    langs:
      - typeScript
    summary: Gets the available namespaces within a resource group.
    syntax:
      content: >-
        function listByResourceGroup(resourceGroupName: string, options: Object,
        callback: ServiceCallback<SBNamespaceListResult>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: ''
        - id: options
          type:
            - Object
          description: ''
        - id: callback
          type:
            - ServiceCallback<azure-arm-sb.SBNamespaceListResult>
          description: ''
      return:
        type:
          - Promise<azure-arm-sb.SBNamespaceListResult>
    package: azure-arm-sb
  - uid: azure-arm-sb.Namespaces.listByResourceGroupNext
    name: listByResourceGroupNext
    children: []
    type: method
    langs:
      - typeScript
    summary: Gets the available namespaces within a resource group.
    syntax:
      content: 'function listByResourceGroupNext(nextPageLink: string, options?: Object)'
      parameters:
        - id: nextPageLink
          type:
            - string
          description: |
            The NextLink from the previous successful call
            to List operation.
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<azure-arm-sb.SBNamespaceListResult>
    package: azure-arm-sb
  - uid: azure-arm-sb.Namespaces.listByResourceGroupNext_2
    name: listByResourceGroupNext
    children: []
    type: method
    langs:
      - typeScript
    summary: Gets the available namespaces within a resource group.
    syntax:
      content: >-
        function listByResourceGroupNext(nextPageLink: string, options: Object,
        callback: ServiceCallback<SBNamespaceListResult>)
      parameters:
        - id: nextPageLink
          type:
            - string
          description: ''
        - id: options
          type:
            - Object
          description: ''
        - id: callback
          type:
            - ServiceCallback<azure-arm-sb.SBNamespaceListResult>
          description: ''
      return:
        type:
          - Promise<azure-arm-sb.SBNamespaceListResult>
    package: azure-arm-sb
  - uid: azure-arm-sb.Namespaces.listByResourceGroupNext_1
    name: listByResourceGroupNext
    children: []
    type: method
    langs:
      - typeScript
    summary: Gets the available namespaces within a resource group.
    syntax:
      content: >-
        function listByResourceGroupNext(nextPageLink: string, callback:
        ServiceCallback<SBNamespaceListResult>)
      parameters:
        - id: nextPageLink
          type:
            - string
          description: ''
        - id: callback
          type:
            - ServiceCallback<azure-arm-sb.SBNamespaceListResult>
          description: ''
      return:
        type:
          - Promise<azure-arm-sb.SBNamespaceListResult>
    package: azure-arm-sb
  - uid: azure-arm-sb.Namespaces.listByResourceGroupNextWithHttpOperationResponse
    name: listByResourceGroupNextWithHttpOperationResponse
    children: []
    type: method
    langs:
      - typeScript
    summary: Gets the available namespaces within a resource group.
    syntax:
      content: >-
        function listByResourceGroupNextWithHttpOperationResponse(nextPageLink:
        string, options?: Object)
      parameters:
        - id: nextPageLink
          type:
            - string
          description: |
            The NextLink from the previous successful call
            to List operation.
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<HttpOperationResponse<azure-arm-sb.SBNamespaceListResult>>
    package: azure-arm-sb
  - uid: azure-arm-sb.Namespaces.listByResourceGroupWithHttpOperationResponse
    name: listByResourceGroupWithHttpOperationResponse
    children: []
    type: method
    langs:
      - typeScript
    summary: Gets the available namespaces within a resource group.
    syntax:
      content: >-
        function listByResourceGroupWithHttpOperationResponse(resourceGroupName:
        string, options?: Object)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |
            Name of the Resource group within the
            Azure subscription.
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<HttpOperationResponse<azure-arm-sb.SBNamespaceListResult>>
    package: azure-arm-sb
  - uid: azure-arm-sb.Namespaces.listIpFilterRules
    name: listIpFilterRules
    children: []
    type: method
    langs:
      - typeScript
    summary: Gets a list of IP Filter rules for a Namespace.
    syntax:
      content: >-
        function listIpFilterRules(resourceGroupName: string, namespaceName:
        string, options?: Object)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |
            Name of the Resource group within the
            Azure subscription.
        - id: namespaceName
          type:
            - string
          description: |
            The namespace name
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<azure-arm-sb.IpFilterRuleListResult>
    package: azure-arm-sb
  - uid: azure-arm-sb.Namespaces.listIpFilterRules_2
    name: listIpFilterRules
    children: []
    type: method
    langs:
      - typeScript
    summary: Gets a list of IP Filter rules for a Namespace.
    syntax:
      content: >-
        function listIpFilterRules(resourceGroupName: string, namespaceName:
        string, options: Object, callback:
        ServiceCallback<IpFilterRuleListResult>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: ''
        - id: namespaceName
          type:
            - string
          description: ''
        - id: options
          type:
            - Object
          description: ''
        - id: callback
          type:
            - ServiceCallback<azure-arm-sb.IpFilterRuleListResult>
          description: ''
      return:
        type:
          - Promise<azure-arm-sb.IpFilterRuleListResult>
    package: azure-arm-sb
  - uid: azure-arm-sb.Namespaces.listIpFilterRules_1
    name: listIpFilterRules
    children: []
    type: method
    langs:
      - typeScript
    summary: Gets a list of IP Filter rules for a Namespace.
    syntax:
      content: >-
        function listIpFilterRules(resourceGroupName: string, namespaceName:
        string, callback: ServiceCallback<IpFilterRuleListResult>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: ''
        - id: namespaceName
          type:
            - string
          description: ''
        - id: callback
          type:
            - ServiceCallback<azure-arm-sb.IpFilterRuleListResult>
          description: ''
      return:
        type:
          - Promise<azure-arm-sb.IpFilterRuleListResult>
    package: azure-arm-sb
  - uid: azure-arm-sb.Namespaces.listIpFilterRulesNext
    name: listIpFilterRulesNext
    children: []
    type: method
    langs:
      - typeScript
    summary: Gets a list of IP Filter rules for a Namespace.
    syntax:
      content: 'function listIpFilterRulesNext(nextPageLink: string, options?: Object)'
      parameters:
        - id: nextPageLink
          type:
            - string
          description: |
            The NextLink from the previous successful call
            to List operation.
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<azure-arm-sb.IpFilterRuleListResult>
    package: azure-arm-sb
  - uid: azure-arm-sb.Namespaces.listIpFilterRulesNext_1
    name: listIpFilterRulesNext
    children: []
    type: method
    langs:
      - typeScript
    summary: Gets a list of IP Filter rules for a Namespace.
    syntax:
      content: >-
        function listIpFilterRulesNext(nextPageLink: string, callback:
        ServiceCallback<IpFilterRuleListResult>)
      parameters:
        - id: nextPageLink
          type:
            - string
          description: ''
        - id: callback
          type:
            - ServiceCallback<azure-arm-sb.IpFilterRuleListResult>
          description: ''
      return:
        type:
          - Promise<azure-arm-sb.IpFilterRuleListResult>
    package: azure-arm-sb
  - uid: azure-arm-sb.Namespaces.listIpFilterRulesNext_2
    name: listIpFilterRulesNext
    children: []
    type: method
    langs:
      - typeScript
    summary: Gets a list of IP Filter rules for a Namespace.
    syntax:
      content: >-
        function listIpFilterRulesNext(nextPageLink: string, options: Object,
        callback: ServiceCallback<IpFilterRuleListResult>)
      parameters:
        - id: nextPageLink
          type:
            - string
          description: ''
        - id: options
          type:
            - Object
          description: ''
        - id: callback
          type:
            - ServiceCallback<azure-arm-sb.IpFilterRuleListResult>
          description: ''
      return:
        type:
          - Promise<azure-arm-sb.IpFilterRuleListResult>
    package: azure-arm-sb
  - uid: azure-arm-sb.Namespaces.listIpFilterRulesNextWithHttpOperationResponse
    name: listIpFilterRulesNextWithHttpOperationResponse
    children: []
    type: method
    langs:
      - typeScript
    summary: Gets a list of IP Filter rules for a Namespace.
    syntax:
      content: >-
        function listIpFilterRulesNextWithHttpOperationResponse(nextPageLink:
        string, options?: Object)
      parameters:
        - id: nextPageLink
          type:
            - string
          description: |
            The NextLink from the previous successful call
            to List operation.
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<HttpOperationResponse<azure-arm-sb.IpFilterRuleListResult>>
    package: azure-arm-sb
  - uid: azure-arm-sb.Namespaces.listIpFilterRulesWithHttpOperationResponse
    name: listIpFilterRulesWithHttpOperationResponse
    children: []
    type: method
    langs:
      - typeScript
    summary: Gets a list of IP Filter rules for a Namespace.
    syntax:
      content: >-
        function listIpFilterRulesWithHttpOperationResponse(resourceGroupName:
        string, namespaceName: string, options?: Object)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |
            Name of the Resource group within the
            Azure subscription.
        - id: namespaceName
          type:
            - string
          description: |
            The namespace name
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<HttpOperationResponse<azure-arm-sb.IpFilterRuleListResult>>
    package: azure-arm-sb
  - uid: azure-arm-sb.Namespaces.listKeys
    name: listKeys
    children: []
    type: method
    langs:
      - typeScript
    summary: Gets the primary and secondary connection strings for the namespace.
    syntax:
      content: >-
        function listKeys(resourceGroupName: string, namespaceName: string,
        authorizationRuleName: string, options?: Object)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |
            Name of the Resource group within the
            Azure subscription.
        - id: namespaceName
          type:
            - string
          description: |
            The namespace name
        - id: authorizationRuleName
          type:
            - string
          description: |
            The authorizationrule name.
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<azure-arm-sb.AccessKeys>
    package: azure-arm-sb
  - uid: azure-arm-sb.Namespaces.listKeys_2
    name: listKeys
    children: []
    type: method
    langs:
      - typeScript
    summary: Gets the primary and secondary connection strings for the namespace.
    syntax:
      content: >-
        function listKeys(resourceGroupName: string, namespaceName: string,
        authorizationRuleName: string, options: Object, callback:
        ServiceCallback<AccessKeys>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: ''
        - id: namespaceName
          type:
            - string
          description: ''
        - id: authorizationRuleName
          type:
            - string
          description: ''
        - id: options
          type:
            - Object
          description: ''
        - id: callback
          type:
            - ServiceCallback<azure-arm-sb.AccessKeys>
          description: ''
      return:
        type:
          - Promise<azure-arm-sb.AccessKeys>
    package: azure-arm-sb
  - uid: azure-arm-sb.Namespaces.listKeys_1
    name: listKeys
    children: []
    type: method
    langs:
      - typeScript
    summary: Gets the primary and secondary connection strings for the namespace.
    syntax:
      content: >-
        function listKeys(resourceGroupName: string, namespaceName: string,
        authorizationRuleName: string, callback: ServiceCallback<AccessKeys>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: ''
        - id: namespaceName
          type:
            - string
          description: ''
        - id: authorizationRuleName
          type:
            - string
          description: ''
        - id: callback
          type:
            - ServiceCallback<azure-arm-sb.AccessKeys>
          description: ''
      return:
        type:
          - Promise<azure-arm-sb.AccessKeys>
    package: azure-arm-sb
  - uid: azure-arm-sb.Namespaces.listKeysWithHttpOperationResponse
    name: listKeysWithHttpOperationResponse
    children: []
    type: method
    langs:
      - typeScript
    summary: Gets the primary and secondary connection strings for the namespace.
    syntax:
      content: >-
        function listKeysWithHttpOperationResponse(resourceGroupName: string,
        namespaceName: string, authorizationRuleName: string, options?: Object)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |
            Name of the Resource group within the
            Azure subscription.
        - id: namespaceName
          type:
            - string
          description: |
            The namespace name
        - id: authorizationRuleName
          type:
            - string
          description: |
            The authorizationrule name.
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<HttpOperationResponse<azure-arm-sb.AccessKeys>>
    package: azure-arm-sb
  - uid: azure-arm-sb.Namespaces.listNext
    name: listNext
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      Gets all the available namespaces within the subscription, irrespective of
      the resource groups.
    syntax:
      content: 'function listNext(nextPageLink: string, options?: Object)'
      parameters:
        - id: nextPageLink
          type:
            - string
          description: |
            The NextLink from the previous successful call
            to List operation.
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<azure-arm-sb.SBNamespaceListResult>
    package: azure-arm-sb
  - uid: azure-arm-sb.Namespaces.listNext_1
    name: listNext
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      Gets all the available namespaces within the subscription, irrespective of
      the resource groups.
    syntax:
      content: >-
        function listNext(nextPageLink: string, callback:
        ServiceCallback<SBNamespaceListResult>)
      parameters:
        - id: nextPageLink
          type:
            - string
          description: ''
        - id: callback
          type:
            - ServiceCallback<azure-arm-sb.SBNamespaceListResult>
          description: ''
      return:
        type:
          - Promise<azure-arm-sb.SBNamespaceListResult>
    package: azure-arm-sb
  - uid: azure-arm-sb.Namespaces.listNext_2
    name: listNext
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      Gets all the available namespaces within the subscription, irrespective of
      the resource groups.
    syntax:
      content: >-
        function listNext(nextPageLink: string, options: Object, callback:
        ServiceCallback<SBNamespaceListResult>)
      parameters:
        - id: nextPageLink
          type:
            - string
          description: ''
        - id: options
          type:
            - Object
          description: ''
        - id: callback
          type:
            - ServiceCallback<azure-arm-sb.SBNamespaceListResult>
          description: ''
      return:
        type:
          - Promise<azure-arm-sb.SBNamespaceListResult>
    package: azure-arm-sb
  - uid: azure-arm-sb.Namespaces.listNextWithHttpOperationResponse
    name: listNextWithHttpOperationResponse
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      Gets all the available namespaces within the subscription, irrespective of
      the resource groups.
    syntax:
      content: >-
        function listNextWithHttpOperationResponse(nextPageLink: string,
        options?: Object)
      parameters:
        - id: nextPageLink
          type:
            - string
          description: |
            The NextLink from the previous successful call
            to List operation.
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<HttpOperationResponse<azure-arm-sb.SBNamespaceListResult>>
    package: azure-arm-sb
  - uid: azure-arm-sb.Namespaces.listVirtualNetworkRules
    name: listVirtualNetworkRules
    children: []
    type: method
    langs:
      - typeScript
    summary: Gets a list of VirtualNetwork rules for a Namespace.
    syntax:
      content: >-
        function listVirtualNetworkRules(resourceGroupName: string,
        namespaceName: string, options?: Object)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |
            Name of the Resource group within the
            Azure subscription.
        - id: namespaceName
          type:
            - string
          description: |
            The namespace name
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<azure-arm-sb.VirtualNetworkRuleListResult>
    package: azure-arm-sb
  - uid: azure-arm-sb.Namespaces.listVirtualNetworkRules_1
    name: listVirtualNetworkRules
    children: []
    type: method
    langs:
      - typeScript
    summary: Gets a list of VirtualNetwork rules for a Namespace.
    syntax:
      content: >-
        function listVirtualNetworkRules(resourceGroupName: string,
        namespaceName: string, callback:
        ServiceCallback<VirtualNetworkRuleListResult>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: ''
        - id: namespaceName
          type:
            - string
          description: ''
        - id: callback
          type:
            - ServiceCallback<azure-arm-sb.VirtualNetworkRuleListResult>
          description: ''
      return:
        type:
          - Promise<azure-arm-sb.VirtualNetworkRuleListResult>
    package: azure-arm-sb
  - uid: azure-arm-sb.Namespaces.listVirtualNetworkRules_2
    name: listVirtualNetworkRules
    children: []
    type: method
    langs:
      - typeScript
    summary: Gets a list of VirtualNetwork rules for a Namespace.
    syntax:
      content: >-
        function listVirtualNetworkRules(resourceGroupName: string,
        namespaceName: string, options: Object, callback:
        ServiceCallback<VirtualNetworkRuleListResult>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: ''
        - id: namespaceName
          type:
            - string
          description: ''
        - id: options
          type:
            - Object
          description: ''
        - id: callback
          type:
            - ServiceCallback<azure-arm-sb.VirtualNetworkRuleListResult>
          description: ''
      return:
        type:
          - Promise<azure-arm-sb.VirtualNetworkRuleListResult>
    package: azure-arm-sb
  - uid: azure-arm-sb.Namespaces.listVirtualNetworkRulesNext
    name: listVirtualNetworkRulesNext
    children: []
    type: method
    langs:
      - typeScript
    summary: Gets a list of VirtualNetwork rules for a Namespace.
    syntax:
      content: >-
        function listVirtualNetworkRulesNext(nextPageLink: string, options?:
        Object)
      parameters:
        - id: nextPageLink
          type:
            - string
          description: |
            The NextLink from the previous successful call
            to List operation.
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<azure-arm-sb.VirtualNetworkRuleListResult>
    package: azure-arm-sb
  - uid: azure-arm-sb.Namespaces.listVirtualNetworkRulesNext_1
    name: listVirtualNetworkRulesNext
    children: []
    type: method
    langs:
      - typeScript
    summary: Gets a list of VirtualNetwork rules for a Namespace.
    syntax:
      content: >-
        function listVirtualNetworkRulesNext(nextPageLink: string, callback:
        ServiceCallback<VirtualNetworkRuleListResult>)
      parameters:
        - id: nextPageLink
          type:
            - string
          description: ''
        - id: callback
          type:
            - ServiceCallback<azure-arm-sb.VirtualNetworkRuleListResult>
          description: ''
      return:
        type:
          - Promise<azure-arm-sb.VirtualNetworkRuleListResult>
    package: azure-arm-sb
  - uid: azure-arm-sb.Namespaces.listVirtualNetworkRulesNext_2
    name: listVirtualNetworkRulesNext
    children: []
    type: method
    langs:
      - typeScript
    summary: Gets a list of VirtualNetwork rules for a Namespace.
    syntax:
      content: >-
        function listVirtualNetworkRulesNext(nextPageLink: string, options:
        Object, callback: ServiceCallback<VirtualNetworkRuleListResult>)
      parameters:
        - id: nextPageLink
          type:
            - string
          description: ''
        - id: options
          type:
            - Object
          description: ''
        - id: callback
          type:
            - ServiceCallback<azure-arm-sb.VirtualNetworkRuleListResult>
          description: ''
      return:
        type:
          - Promise<azure-arm-sb.VirtualNetworkRuleListResult>
    package: azure-arm-sb
  - uid: >-
      azure-arm-sb.Namespaces.listVirtualNetworkRulesNextWithHttpOperationResponse
    name: listVirtualNetworkRulesNextWithHttpOperationResponse
    children: []
    type: method
    langs:
      - typeScript
    summary: Gets a list of VirtualNetwork rules for a Namespace.
    syntax:
      content: >-
        function
        listVirtualNetworkRulesNextWithHttpOperationResponse(nextPageLink:
        string, options?: Object)
      parameters:
        - id: nextPageLink
          type:
            - string
          description: |
            The NextLink from the previous successful call
            to List operation.
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - >-
            Promise<HttpOperationResponse<azure-arm-sb.VirtualNetworkRuleListResult>>
    package: azure-arm-sb
  - uid: azure-arm-sb.Namespaces.listVirtualNetworkRulesWithHttpOperationResponse
    name: listVirtualNetworkRulesWithHttpOperationResponse
    children: []
    type: method
    langs:
      - typeScript
    summary: Gets a list of VirtualNetwork rules for a Namespace.
    syntax:
      content: >-
        function
        listVirtualNetworkRulesWithHttpOperationResponse(resourceGroupName:
        string, namespaceName: string, options?: Object)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |
            Name of the Resource group within the
            Azure subscription.
        - id: namespaceName
          type:
            - string
          description: |
            The namespace name
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - >-
            Promise<HttpOperationResponse<azure-arm-sb.VirtualNetworkRuleListResult>>
    package: azure-arm-sb
  - uid: azure-arm-sb.Namespaces.listWithHttpOperationResponse
    name: listWithHttpOperationResponse
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      Gets all the available namespaces within the subscription, irrespective of
      the resource groups.
    syntax:
      content: 'function listWithHttpOperationResponse(options?: Object)'
      parameters:
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<HttpOperationResponse<azure-arm-sb.SBNamespaceListResult>>
    package: azure-arm-sb
  - uid: azure-arm-sb.Namespaces.regenerateKeys
    name: regenerateKeys
    children: []
    type: method
    langs:
      - typeScript
    summary: Regenerates the primary or secondary connection strings for the namespace.
    syntax:
      content: >-
        function regenerateKeys(resourceGroupName: string, namespaceName:
        string, authorizationRuleName: string, parameters:
        RegenerateAccessKeyParameters, options?: Object)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |
            Name of the Resource group within the
            Azure subscription.
        - id: namespaceName
          type:
            - string
          description: |
            The namespace name
        - id: authorizationRuleName
          type:
            - string
          description: |
            The authorizationrule name.
        - id: parameters
          type:
            - azure-arm-sb.RegenerateAccessKeyParameters
          description: |
            Parameters supplied to regenerate the
            authorization rule.
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<azure-arm-sb.AccessKeys>
    package: azure-arm-sb
  - uid: azure-arm-sb.Namespaces.regenerateKeys_1
    name: regenerateKeys
    children: []
    type: method
    langs:
      - typeScript
    summary: Regenerates the primary or secondary connection strings for the namespace.
    syntax:
      content: >-
        function regenerateKeys(resourceGroupName: string, namespaceName:
        string, authorizationRuleName: string, parameters:
        RegenerateAccessKeyParameters, callback: ServiceCallback<AccessKeys>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: ''
        - id: namespaceName
          type:
            - string
          description: ''
        - id: authorizationRuleName
          type:
            - string
          description: ''
        - id: parameters
          type:
            - azure-arm-sb.RegenerateAccessKeyParameters
          description: ''
        - id: callback
          type:
            - ServiceCallback<azure-arm-sb.AccessKeys>
          description: ''
      return:
        type:
          - Promise<azure-arm-sb.AccessKeys>
    package: azure-arm-sb
  - uid: azure-arm-sb.Namespaces.regenerateKeys_2
    name: regenerateKeys
    children: []
    type: method
    langs:
      - typeScript
    summary: Regenerates the primary or secondary connection strings for the namespace.
    syntax:
      content: >-
        function regenerateKeys(resourceGroupName: string, namespaceName:
        string, authorizationRuleName: string, parameters:
        RegenerateAccessKeyParameters, options: Object, callback:
        ServiceCallback<AccessKeys>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: ''
        - id: namespaceName
          type:
            - string
          description: ''
        - id: authorizationRuleName
          type:
            - string
          description: ''
        - id: parameters
          type:
            - azure-arm-sb.RegenerateAccessKeyParameters
          description: ''
        - id: options
          type:
            - Object
          description: ''
        - id: callback
          type:
            - ServiceCallback<azure-arm-sb.AccessKeys>
          description: ''
      return:
        type:
          - Promise<azure-arm-sb.AccessKeys>
    package: azure-arm-sb
  - uid: azure-arm-sb.Namespaces.regenerateKeysWithHttpOperationResponse
    name: regenerateKeysWithHttpOperationResponse
    children: []
    type: method
    langs:
      - typeScript
    summary: Regenerates the primary or secondary connection strings for the namespace.
    syntax:
      content: >-
        function regenerateKeysWithHttpOperationResponse(resourceGroupName:
        string, namespaceName: string, authorizationRuleName: string,
        parameters: RegenerateAccessKeyParameters, options?: Object)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |
            Name of the Resource group within the
            Azure subscription.
        - id: namespaceName
          type:
            - string
          description: |
            The namespace name
        - id: authorizationRuleName
          type:
            - string
          description: |
            The authorizationrule name.
        - id: parameters
          type:
            - azure-arm-sb.RegenerateAccessKeyParameters
          description: |
            Parameters supplied to regenerate the
            authorization rule.
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<HttpOperationResponse<azure-arm-sb.AccessKeys>>
    package: azure-arm-sb
  - uid: azure-arm-sb.Namespaces.update
    name: update
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      Updates a service namespace. Once created, this namespace's resource
      manifest is immutable. This operation is idempotent.
    syntax:
      content: >-
        function update(resourceGroupName: string, namespaceName: string,
        parameters: SBNamespaceUpdateParameters, options?: Object)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |
            Name of the Resource group within the
            Azure subscription.
        - id: namespaceName
          type:
            - string
          description: |
            The namespace name
        - id: parameters
          type:
            - azure-arm-sb.SBNamespaceUpdateParameters
          description: |
            Parameters supplied to update a namespace
            resource.
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<azure-arm-sb.SBNamespace>
    package: azure-arm-sb
  - uid: azure-arm-sb.Namespaces.update_1
    name: update
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      Updates a service namespace. Once created, this namespace's resource
      manifest is immutable. This operation is idempotent.
    syntax:
      content: >-
        function update(resourceGroupName: string, namespaceName: string,
        parameters: SBNamespaceUpdateParameters, callback:
        ServiceCallback<SBNamespace>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: ''
        - id: namespaceName
          type:
            - string
          description: ''
        - id: parameters
          type:
            - azure-arm-sb.SBNamespaceUpdateParameters
          description: ''
        - id: callback
          type:
            - ServiceCallback<azure-arm-sb.SBNamespace>
          description: ''
      return:
        type:
          - Promise<azure-arm-sb.SBNamespace>
    package: azure-arm-sb
  - uid: azure-arm-sb.Namespaces.update_2
    name: update
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      Updates a service namespace. Once created, this namespace's resource
      manifest is immutable. This operation is idempotent.
    syntax:
      content: >-
        function update(resourceGroupName: string, namespaceName: string,
        parameters: SBNamespaceUpdateParameters, options: Object, callback:
        ServiceCallback<SBNamespace>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: ''
        - id: namespaceName
          type:
            - string
          description: ''
        - id: parameters
          type:
            - azure-arm-sb.SBNamespaceUpdateParameters
          description: ''
        - id: options
          type:
            - Object
          description: ''
        - id: callback
          type:
            - ServiceCallback<azure-arm-sb.SBNamespace>
          description: ''
      return:
        type:
          - Promise<azure-arm-sb.SBNamespace>
    package: azure-arm-sb
  - uid: azure-arm-sb.Namespaces.updateWithHttpOperationResponse
    name: updateWithHttpOperationResponse
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      Updates a service namespace. Once created, this namespace's resource
      manifest is immutable. This operation is idempotent.
    syntax:
      content: >-
        function updateWithHttpOperationResponse(resourceGroupName: string,
        namespaceName: string, parameters: SBNamespaceUpdateParameters,
        options?: Object)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |
            Name of the Resource group within the
            Azure subscription.
        - id: namespaceName
          type:
            - string
          description: |
            The namespace name
        - id: parameters
          type:
            - azure-arm-sb.SBNamespaceUpdateParameters
          description: |
            Parameters supplied to update a namespace
            resource.
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<HttpOperationResponse<azure-arm-sb.SBNamespace>>
    package: azure-arm-sb
references:
  - uid: azure-arm-sb.SBNamespace
    name: SBNamespace
    spec.typeScript:
      - name: SBNamespace
        fullName: SBNamespace
        uid: azure-arm-sb.SBNamespace
  - uid: Promise<azure-arm-sb.SBNamespace>
    name: SBNamespace>
    spec.typeScript:
      - name: Promise<
        fullName: Promise<
      - name: SBNamespace
        fullName: SBNamespace
        uid: azure-arm-sb.SBNamespace
      - name: '>'
        fullName: '>'
  - uid: ServiceCallback<azure-arm-sb.SBNamespace>
    name: SBNamespace>
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: SBNamespace
        fullName: SBNamespace
        uid: azure-arm-sb.SBNamespace
      - name: '>'
        fullName: '>'
  - uid: Promise<HttpOperationResponse<azure-arm-sb.SBNamespace>>
    name: SBNamespace>>
    spec.typeScript:
      - name: Promise<HttpOperationResponse<
        fullName: Promise<HttpOperationResponse<
      - name: SBNamespace
        fullName: SBNamespace
        uid: azure-arm-sb.SBNamespace
      - name: '>>'
        fullName: '>>'
  - uid: azure-arm-sb.CheckNameAvailability
    name: CheckNameAvailability
    spec.typeScript:
      - name: CheckNameAvailability
        fullName: CheckNameAvailability
        uid: azure-arm-sb.CheckNameAvailability
  - uid: Promise<azure-arm-sb.CheckNameAvailabilityResult>
    name: CheckNameAvailabilityResult>
    spec.typeScript:
      - name: Promise<
        fullName: Promise<
      - name: CheckNameAvailabilityResult
        fullName: CheckNameAvailabilityResult
        uid: azure-arm-sb.CheckNameAvailabilityResult
      - name: '>'
        fullName: '>'
  - uid: ServiceCallback<azure-arm-sb.CheckNameAvailabilityResult>
    name: CheckNameAvailabilityResult>
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: CheckNameAvailabilityResult
        fullName: CheckNameAvailabilityResult
        uid: azure-arm-sb.CheckNameAvailabilityResult
      - name: '>'
        fullName: '>'
  - uid: Promise<HttpOperationResponse<azure-arm-sb.CheckNameAvailabilityResult>>
    name: CheckNameAvailabilityResult>>
    spec.typeScript:
      - name: Promise<HttpOperationResponse<
        fullName: Promise<HttpOperationResponse<
      - name: CheckNameAvailabilityResult
        fullName: CheckNameAvailabilityResult
        uid: azure-arm-sb.CheckNameAvailabilityResult
      - name: '>>'
        fullName: '>>'
  - uid: azure-arm-sb.SBAuthorizationRule
    name: SBAuthorizationRule
    spec.typeScript:
      - name: SBAuthorizationRule
        fullName: SBAuthorizationRule
        uid: azure-arm-sb.SBAuthorizationRule
  - uid: Promise<azure-arm-sb.SBAuthorizationRule>
    name: SBAuthorizationRule>
    spec.typeScript:
      - name: Promise<
        fullName: Promise<
      - name: SBAuthorizationRule
        fullName: SBAuthorizationRule
        uid: azure-arm-sb.SBAuthorizationRule
      - name: '>'
        fullName: '>'
  - uid: ServiceCallback<azure-arm-sb.SBAuthorizationRule>
    name: SBAuthorizationRule>
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: SBAuthorizationRule
        fullName: SBAuthorizationRule
        uid: azure-arm-sb.SBAuthorizationRule
      - name: '>'
        fullName: '>'
  - uid: Promise<HttpOperationResponse<azure-arm-sb.SBAuthorizationRule>>
    name: SBAuthorizationRule>>
    spec.typeScript:
      - name: Promise<HttpOperationResponse<
        fullName: Promise<HttpOperationResponse<
      - name: SBAuthorizationRule
        fullName: SBAuthorizationRule
        uid: azure-arm-sb.SBAuthorizationRule
      - name: '>>'
        fullName: '>>'
  - uid: azure-arm-sb.IpFilterRule
    name: IpFilterRule
    spec.typeScript:
      - name: IpFilterRule
        fullName: IpFilterRule
        uid: azure-arm-sb.IpFilterRule
  - uid: Promise<azure-arm-sb.IpFilterRule>
    name: IpFilterRule>
    spec.typeScript:
      - name: Promise<
        fullName: Promise<
      - name: IpFilterRule
        fullName: IpFilterRule
        uid: azure-arm-sb.IpFilterRule
      - name: '>'
        fullName: '>'
  - uid: ServiceCallback<azure-arm-sb.IpFilterRule>
    name: IpFilterRule>
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: IpFilterRule
        fullName: IpFilterRule
        uid: azure-arm-sb.IpFilterRule
      - name: '>'
        fullName: '>'
  - uid: Promise<HttpOperationResponse<azure-arm-sb.IpFilterRule>>
    name: IpFilterRule>>
    spec.typeScript:
      - name: Promise<HttpOperationResponse<
        fullName: Promise<HttpOperationResponse<
      - name: IpFilterRule
        fullName: IpFilterRule
        uid: azure-arm-sb.IpFilterRule
      - name: '>>'
        fullName: '>>'
  - uid: azure-arm-sb.VirtualNetworkRule
    name: VirtualNetworkRule
    spec.typeScript:
      - name: VirtualNetworkRule
        fullName: VirtualNetworkRule
        uid: azure-arm-sb.VirtualNetworkRule
  - uid: Promise<azure-arm-sb.VirtualNetworkRule>
    name: VirtualNetworkRule>
    spec.typeScript:
      - name: Promise<
        fullName: Promise<
      - name: VirtualNetworkRule
        fullName: VirtualNetworkRule
        uid: azure-arm-sb.VirtualNetworkRule
      - name: '>'
        fullName: '>'
  - uid: ServiceCallback<azure-arm-sb.VirtualNetworkRule>
    name: VirtualNetworkRule>
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: VirtualNetworkRule
        fullName: VirtualNetworkRule
        uid: azure-arm-sb.VirtualNetworkRule
      - name: '>'
        fullName: '>'
  - uid: Promise<HttpOperationResponse<azure-arm-sb.VirtualNetworkRule>>
    name: VirtualNetworkRule>>
    spec.typeScript:
      - name: Promise<HttpOperationResponse<
        fullName: Promise<HttpOperationResponse<
      - name: VirtualNetworkRule
        fullName: VirtualNetworkRule
        uid: azure-arm-sb.VirtualNetworkRule
      - name: '>>'
        fullName: '>>'
  - uid: Promise<azure-arm-sb.SBNamespaceListResult>
    name: SBNamespaceListResult>
    spec.typeScript:
      - name: Promise<
        fullName: Promise<
      - name: SBNamespaceListResult
        fullName: SBNamespaceListResult
        uid: azure-arm-sb.SBNamespaceListResult
      - name: '>'
        fullName: '>'
  - uid: ServiceCallback<azure-arm-sb.SBNamespaceListResult>
    name: SBNamespaceListResult>
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: SBNamespaceListResult
        fullName: SBNamespaceListResult
        uid: azure-arm-sb.SBNamespaceListResult
      - name: '>'
        fullName: '>'
  - uid: Promise<azure-arm-sb.SBAuthorizationRuleListResult>
    name: SBAuthorizationRuleListResult>
    spec.typeScript:
      - name: Promise<
        fullName: Promise<
      - name: SBAuthorizationRuleListResult
        fullName: SBAuthorizationRuleListResult
        uid: azure-arm-sb.SBAuthorizationRuleListResult
      - name: '>'
        fullName: '>'
  - uid: ServiceCallback<azure-arm-sb.SBAuthorizationRuleListResult>
    name: SBAuthorizationRuleListResult>
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: SBAuthorizationRuleListResult
        fullName: SBAuthorizationRuleListResult
        uid: azure-arm-sb.SBAuthorizationRuleListResult
      - name: '>'
        fullName: '>'
  - uid: Promise<HttpOperationResponse<azure-arm-sb.SBAuthorizationRuleListResult>>
    name: SBAuthorizationRuleListResult>>
    spec.typeScript:
      - name: Promise<HttpOperationResponse<
        fullName: Promise<HttpOperationResponse<
      - name: SBAuthorizationRuleListResult
        fullName: SBAuthorizationRuleListResult
        uid: azure-arm-sb.SBAuthorizationRuleListResult
      - name: '>>'
        fullName: '>>'
  - uid: Promise<HttpOperationResponse<azure-arm-sb.SBNamespaceListResult>>
    name: SBNamespaceListResult>>
    spec.typeScript:
      - name: Promise<HttpOperationResponse<
        fullName: Promise<HttpOperationResponse<
      - name: SBNamespaceListResult
        fullName: SBNamespaceListResult
        uid: azure-arm-sb.SBNamespaceListResult
      - name: '>>'
        fullName: '>>'
  - uid: Promise<azure-arm-sb.IpFilterRuleListResult>
    name: IpFilterRuleListResult>
    spec.typeScript:
      - name: Promise<
        fullName: Promise<
      - name: IpFilterRuleListResult
        fullName: IpFilterRuleListResult
        uid: azure-arm-sb.IpFilterRuleListResult
      - name: '>'
        fullName: '>'
  - uid: ServiceCallback<azure-arm-sb.IpFilterRuleListResult>
    name: IpFilterRuleListResult>
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: IpFilterRuleListResult
        fullName: IpFilterRuleListResult
        uid: azure-arm-sb.IpFilterRuleListResult
      - name: '>'
        fullName: '>'
  - uid: Promise<HttpOperationResponse<azure-arm-sb.IpFilterRuleListResult>>
    name: IpFilterRuleListResult>>
    spec.typeScript:
      - name: Promise<HttpOperationResponse<
        fullName: Promise<HttpOperationResponse<
      - name: IpFilterRuleListResult
        fullName: IpFilterRuleListResult
        uid: azure-arm-sb.IpFilterRuleListResult
      - name: '>>'
        fullName: '>>'
  - uid: Promise<azure-arm-sb.AccessKeys>
    name: AccessKeys>
    spec.typeScript:
      - name: Promise<
        fullName: Promise<
      - name: AccessKeys
        fullName: AccessKeys
        uid: azure-arm-sb.AccessKeys
      - name: '>'
        fullName: '>'
  - uid: ServiceCallback<azure-arm-sb.AccessKeys>
    name: AccessKeys>
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: AccessKeys
        fullName: AccessKeys
        uid: azure-arm-sb.AccessKeys
      - name: '>'
        fullName: '>'
  - uid: Promise<HttpOperationResponse<azure-arm-sb.AccessKeys>>
    name: AccessKeys>>
    spec.typeScript:
      - name: Promise<HttpOperationResponse<
        fullName: Promise<HttpOperationResponse<
      - name: AccessKeys
        fullName: AccessKeys
        uid: azure-arm-sb.AccessKeys
      - name: '>>'
        fullName: '>>'
  - uid: Promise<azure-arm-sb.VirtualNetworkRuleListResult>
    name: VirtualNetworkRuleListResult>
    spec.typeScript:
      - name: Promise<
        fullName: Promise<
      - name: VirtualNetworkRuleListResult
        fullName: VirtualNetworkRuleListResult
        uid: azure-arm-sb.VirtualNetworkRuleListResult
      - name: '>'
        fullName: '>'
  - uid: ServiceCallback<azure-arm-sb.VirtualNetworkRuleListResult>
    name: VirtualNetworkRuleListResult>
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: VirtualNetworkRuleListResult
        fullName: VirtualNetworkRuleListResult
        uid: azure-arm-sb.VirtualNetworkRuleListResult
      - name: '>'
        fullName: '>'
  - uid: Promise<HttpOperationResponse<azure-arm-sb.VirtualNetworkRuleListResult>>
    name: VirtualNetworkRuleListResult>>
    spec.typeScript:
      - name: Promise<HttpOperationResponse<
        fullName: Promise<HttpOperationResponse<
      - name: VirtualNetworkRuleListResult
        fullName: VirtualNetworkRuleListResult
        uid: azure-arm-sb.VirtualNetworkRuleListResult
      - name: '>>'
        fullName: '>>'
  - uid: azure-arm-sb.RegenerateAccessKeyParameters
    name: RegenerateAccessKeyParameters
    spec.typeScript:
      - name: RegenerateAccessKeyParameters
        fullName: RegenerateAccessKeyParameters
        uid: azure-arm-sb.RegenerateAccessKeyParameters
  - uid: azure-arm-sb.SBNamespaceUpdateParameters
    name: SBNamespaceUpdateParameters
    spec.typeScript:
      - name: SBNamespaceUpdateParameters
        fullName: SBNamespaceUpdateParameters
        uid: azure-arm-sb.SBNamespaceUpdateParameters
