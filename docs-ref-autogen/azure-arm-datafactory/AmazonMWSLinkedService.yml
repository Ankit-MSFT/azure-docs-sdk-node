### YamlMime:UniversalReference
items:
  - uid: azure-arm-datafactory.AmazonMWSLinkedService
    name: AmazonMWSLinkedService
    fullName: AmazonMWSLinkedService
    children:
      - azure-arm-datafactory.AmazonMWSLinkedService.accessKeyId
      - azure-arm-datafactory.AmazonMWSLinkedService.encryptedCredential
      - azure-arm-datafactory.AmazonMWSLinkedService.endpoint
      - azure-arm-datafactory.AmazonMWSLinkedService.marketplaceID
      - azure-arm-datafactory.AmazonMWSLinkedService.mwsAuthToken
      - azure-arm-datafactory.AmazonMWSLinkedService.secretKey
      - azure-arm-datafactory.AmazonMWSLinkedService.sellerID
      - azure-arm-datafactory.AmazonMWSLinkedService.useEncryptedEndpoints
      - azure-arm-datafactory.AmazonMWSLinkedService.useHostVerification
      - azure-arm-datafactory.AmazonMWSLinkedService.usePeerVerification
    langs:
      - typeScript
    type: interface
    summary: ''
    extends:
      name: azure-arm-datafactory.LinkedService
    package: azure-arm-datafactory
  - uid: azure-arm-datafactory.AmazonMWSLinkedService.accessKeyId
    name: accessKeyId
    fullName: accessKeyId
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'accessKeyId: any'
      return:
        type:
          - any
    package: azure-arm-datafactory
  - uid: azure-arm-datafactory.AmazonMWSLinkedService.encryptedCredential
    name: encryptedCredential
    fullName: encryptedCredential
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    optional: true
    syntax:
      content: 'encryptedCredential?: any'
      return:
        type:
          - any
    package: azure-arm-datafactory
  - uid: azure-arm-datafactory.AmazonMWSLinkedService.endpoint
    name: endpoint
    fullName: endpoint
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'endpoint: any'
      return:
        type:
          - any
    package: azure-arm-datafactory
  - uid: azure-arm-datafactory.AmazonMWSLinkedService.marketplaceID
    name: marketplaceID
    fullName: marketplaceID
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'marketplaceID: any'
      return:
        type:
          - any
    package: azure-arm-datafactory
  - uid: azure-arm-datafactory.AmazonMWSLinkedService.mwsAuthToken
    name: mwsAuthToken
    fullName: mwsAuthToken
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    optional: true
    syntax:
      content: 'mwsAuthToken?: SecretBase'
      return:
        type:
          - azure-arm-datafactory.SecretBase
    package: azure-arm-datafactory
  - uid: azure-arm-datafactory.AmazonMWSLinkedService.secretKey
    name: secretKey
    fullName: secretKey
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    optional: true
    syntax:
      content: 'secretKey?: SecretBase'
      return:
        type:
          - azure-arm-datafactory.SecretBase
    package: azure-arm-datafactory
  - uid: azure-arm-datafactory.AmazonMWSLinkedService.sellerID
    name: sellerID
    fullName: sellerID
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'sellerID: any'
      return:
        type:
          - any
    package: azure-arm-datafactory
  - uid: azure-arm-datafactory.AmazonMWSLinkedService.useEncryptedEndpoints
    name: useEncryptedEndpoints
    fullName: useEncryptedEndpoints
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    optional: true
    syntax:
      content: 'useEncryptedEndpoints?: any'
      return:
        type:
          - any
    package: azure-arm-datafactory
  - uid: azure-arm-datafactory.AmazonMWSLinkedService.useHostVerification
    name: useHostVerification
    fullName: useHostVerification
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    optional: true
    syntax:
      content: 'useHostVerification?: any'
      return:
        type:
          - any
    package: azure-arm-datafactory
  - uid: azure-arm-datafactory.AmazonMWSLinkedService.usePeerVerification
    name: usePeerVerification
    fullName: usePeerVerification
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    optional: true
    syntax:
      content: 'usePeerVerification?: any'
      return:
        type:
          - any
    package: azure-arm-datafactory
references:
  - uid: azure-arm-datafactory.LinkedService
    name: LinkedService
    spec.typeScript:
      - name: LinkedService
        fullName: LinkedService
        uid: azure-arm-datafactory.LinkedService
  - uid: azure-arm-datafactory.SecretBase
    name: SecretBase
    spec.typeScript:
      - name: SecretBase
        fullName: SecretBase
        uid: azure-arm-datafactory.SecretBase
