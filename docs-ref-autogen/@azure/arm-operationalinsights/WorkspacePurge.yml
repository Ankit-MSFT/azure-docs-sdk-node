### YamlMime:UniversalReference
items:
  - uid: '@azure/arm-operationalinsights.WorkspacePurge'
    name: WorkspacePurge
    fullName: WorkspacePurge
    children:
      - '@azure/arm-operationalinsights.WorkspacePurge.getPurgeStatus'
      - '@azure/arm-operationalinsights.WorkspacePurge.getPurgeStatus_2'
      - '@azure/arm-operationalinsights.WorkspacePurge.getPurgeStatus_1'
      - '@azure/arm-operationalinsights.WorkspacePurge.purge'
      - '@azure/arm-operationalinsights.WorkspacePurge.purge_2'
      - '@azure/arm-operationalinsights.WorkspacePurge.purge_1'
      - '@azure/arm-operationalinsights.WorkspacePurge.constructor'
    langs:
      - typeScript
    type: class
    summary: Class representing a WorkspacePurge.
    package: '@azure/arm-operationalinsights'
  - uid: '@azure/arm-operationalinsights.WorkspacePurge.getPurgeStatus'
    name: 'getPurgeStatus(string, string, string, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Gets status of an ongoing purge operation.
    syntax:
      content: >-
        function getPurgeStatus(resourceGroupName: string, workspaceName:
        string, purgeId: string, options?: msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: The name of the resource group. The name is case insensitive.
        - id: workspaceName
          type:
            - string
          description: The name of the workspace.
        - id: purgeId
          type:
            - string
          description: >-
            In a purge status request, this is the Id of the operation the
            status of which is

            returned.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.WorkspacePurgeGetPurgeStatusResponse>
        description: Promise<Models.WorkspacePurgeGetPurgeStatusResponse>
    package: '@azure/arm-operationalinsights'
  - uid: '@azure/arm-operationalinsights.WorkspacePurge.getPurgeStatus_2'
    name: >-
      getPurgeStatus(string, string, string, RequestOptionsBase,
      ServiceCallback<WorkspacePurgeStatusResponse>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function getPurgeStatus(resourceGroupName: string, workspaceName:
        string, purgeId: string, options: RequestOptionsBase, callback:
        ServiceCallback<WorkspacePurgeStatusResponse>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: The name of the resource group. The name is case insensitive.
        - id: workspaceName
          type:
            - string
          description: The name of the workspace.
        - id: purgeId
          type:
            - string
          description: >-
            In a purge status request, this is the Id of the operation the
            status of which is

            returned.
        - id: options
          type:
            - RequestOptionsBase
          description: The optional parameters
        - id: callback
          type:
            - >-
              ServiceCallback<@azure/arm-operationalinsights.WorkspacePurgeStatusResponse>
          description: |
            The callback
    package: '@azure/arm-operationalinsights'
  - uid: '@azure/arm-operationalinsights.WorkspacePurge.getPurgeStatus_1'
    name: >-
      getPurgeStatus(string, string, string,
      ServiceCallback<WorkspacePurgeStatusResponse>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function getPurgeStatus(resourceGroupName: string, workspaceName:
        string, purgeId: string, callback:
        ServiceCallback<WorkspacePurgeStatusResponse>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: The name of the resource group. The name is case insensitive.
        - id: workspaceName
          type:
            - string
          description: The name of the workspace.
        - id: purgeId
          type:
            - string
          description: >-
            In a purge status request, this is the Id of the operation the
            status of which is

            returned.
        - id: callback
          type:
            - >-
              ServiceCallback<@azure/arm-operationalinsights.WorkspacePurgeStatusResponse>
          description: |
            The callback
    package: '@azure/arm-operationalinsights'
  - uid: '@azure/arm-operationalinsights.WorkspacePurge.purge'
    name: 'purge(string, string, WorkspacePurgeBody, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      Purges data in an Log Analytics workspace by a set of user-defined
      filters.

      In order to manage system resources, purge requests are throttled at 50
      requests per hour. You

      should batch the execution of purge requests by sending a single command
      whose predicate

      includes all user identities that require purging. Use the in operator to
      specify multiple

      identities. You should run the query prior to using for a purge request to
      verify that the

      results are expected.
    syntax:
      content: >-
        function purge(resourceGroupName: string, workspaceName: string, body:
        WorkspacePurgeBody, options?: msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: The name of the resource group. The name is case insensitive.
        - id: workspaceName
          type:
            - string
          description: The name of the workspace.
        - id: body
          type:
            - '@azure/arm-operationalinsights.WorkspacePurgeBody'
          description: >-
            Describes the body of a request to purge data in a single table of
            an Log Analytics

            Workspace
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.WorkspacePurgePurgeResponse>
        description: Promise<Models.WorkspacePurgePurgeResponse>
    package: '@azure/arm-operationalinsights'
  - uid: '@azure/arm-operationalinsights.WorkspacePurge.purge_2'
    name: >-
      purge(string, string, WorkspacePurgeBody, RequestOptionsBase,
      ServiceCallback<WorkspacePurgeResponse>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function purge(resourceGroupName: string, workspaceName: string, body:
        WorkspacePurgeBody, options: RequestOptionsBase, callback:
        ServiceCallback<WorkspacePurgeResponse>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: The name of the resource group. The name is case insensitive.
        - id: workspaceName
          type:
            - string
          description: The name of the workspace.
        - id: body
          type:
            - '@azure/arm-operationalinsights.WorkspacePurgeBody'
          description: >-
            Describes the body of a request to purge data in a single table of
            an Log Analytics

            Workspace
        - id: options
          type:
            - RequestOptionsBase
          description: The optional parameters
        - id: callback
          type:
            - >-
              ServiceCallback<@azure/arm-operationalinsights.WorkspacePurgeResponse>
          description: |
            The callback
    package: '@azure/arm-operationalinsights'
  - uid: '@azure/arm-operationalinsights.WorkspacePurge.purge_1'
    name: >-
      purge(string, string, WorkspacePurgeBody,
      ServiceCallback<WorkspacePurgeResponse>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function purge(resourceGroupName: string, workspaceName: string, body:
        WorkspacePurgeBody, callback: ServiceCallback<WorkspacePurgeResponse>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: The name of the resource group. The name is case insensitive.
        - id: workspaceName
          type:
            - string
          description: The name of the workspace.
        - id: body
          type:
            - '@azure/arm-operationalinsights.WorkspacePurgeBody'
          description: >-
            Describes the body of a request to purge data in a single table of
            an Log Analytics

            Workspace
        - id: callback
          type:
            - >-
              ServiceCallback<@azure/arm-operationalinsights.WorkspacePurgeResponse>
          description: |
            The callback
    package: '@azure/arm-operationalinsights'
  - uid: '@azure/arm-operationalinsights.WorkspacePurge.constructor'
    name: WorkspacePurge(OperationalInsightsManagementClientContext)
    children: []
    type: constructor
    langs:
      - typeScript
    summary: Create a WorkspacePurge.
    syntax:
      content: 'new WorkspacePurge(client: OperationalInsightsManagementClientContext)'
      parameters:
        - id: client
          type:
            - >-
              @azure/arm-operationalinsights.OperationalInsightsManagementClientContext
          description: |
            Reference to the service client.
    package: '@azure/arm-operationalinsights'
references:
  - uid: '@azure/arm-operationalinsights.OperationalInsightsManagementClientContext'
    name: OperationalInsightsManagementClientContext
    spec.typeScript:
      - name: OperationalInsightsManagementClientContext
        fullName: OperationalInsightsManagementClientContext
        uid: >-
          @azure/arm-operationalinsights.OperationalInsightsManagementClientContext
  - uid: >-
      ServiceCallback<@azure/arm-operationalinsights.WorkspacePurgeStatusResponse>
    name: WorkspacePurgeStatusResponse>
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: WorkspacePurgeStatusResponse
        fullName: WorkspacePurgeStatusResponse
        uid: '@azure/arm-operationalinsights.WorkspacePurgeStatusResponse'
      - name: '>'
        fullName: '>'
  - uid: '@azure/arm-operationalinsights.WorkspacePurgeBody'
    name: WorkspacePurgeBody
    spec.typeScript:
      - name: WorkspacePurgeBody
        fullName: WorkspacePurgeBody
        uid: '@azure/arm-operationalinsights.WorkspacePurgeBody'
  - uid: ServiceCallback<@azure/arm-operationalinsights.WorkspacePurgeResponse>
    name: WorkspacePurgeResponse>
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: WorkspacePurgeResponse
        fullName: WorkspacePurgeResponse
        uid: '@azure/arm-operationalinsights.WorkspacePurgeResponse'
      - name: '>'
        fullName: '>'
