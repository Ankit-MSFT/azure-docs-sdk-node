### YamlMime:UniversalReference
items:
  - uid: '@azure/arm-operationalinsights.LinkedStorageAccounts'
    name: LinkedStorageAccounts
    fullName: LinkedStorageAccounts
    children:
      - '@azure/arm-operationalinsights.LinkedStorageAccounts.createOrUpdate'
      - '@azure/arm-operationalinsights.LinkedStorageAccounts.createOrUpdate_2'
      - '@azure/arm-operationalinsights.LinkedStorageAccounts.createOrUpdate_1'
      - '@azure/arm-operationalinsights.LinkedStorageAccounts.deleteMethod'
      - '@azure/arm-operationalinsights.LinkedStorageAccounts.deleteMethod_2'
      - '@azure/arm-operationalinsights.LinkedStorageAccounts.deleteMethod_1'
      - '@azure/arm-operationalinsights.LinkedStorageAccounts.get'
      - '@azure/arm-operationalinsights.LinkedStorageAccounts.get_2'
      - '@azure/arm-operationalinsights.LinkedStorageAccounts.get_1'
      - '@azure/arm-operationalinsights.LinkedStorageAccounts.constructor'
      - '@azure/arm-operationalinsights.LinkedStorageAccounts.listByWorkspace'
      - '@azure/arm-operationalinsights.LinkedStorageAccounts.listByWorkspace_2'
      - '@azure/arm-operationalinsights.LinkedStorageAccounts.listByWorkspace_1'
    langs:
      - typeScript
    type: class
    summary: Class representing a LinkedStorageAccounts.
    package: '@azure/arm-operationalinsights'
  - uid: '@azure/arm-operationalinsights.LinkedStorageAccounts.createOrUpdate'
    name: >-
      createOrUpdate(string, string, Models.DataSourceType,
      LinkedStorageAccountsResource, msRest.RequestOptionsBase)
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      Create or Update a link relation between current workspace and a group of
      storage accounts of a

      specific data source type.
    syntax:
      content: >-
        function createOrUpdate(resourceGroupName: string, workspaceName:
        string, dataSourceType: Models.DataSourceType, parameters:
        LinkedStorageAccountsResource, options?: msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: The name of the resource group. The name is case insensitive.
        - id: workspaceName
          type:
            - string
          description: The name of the workspace.
        - id: dataSourceType
          type:
            - Models.DataSourceType
          description: |-
            Linked storage accounts type. Possible values include: 'CustomLogs',
            'AzureWatson', 'Query', 'Alerts'
        - id: parameters
          type:
            - '@azure/arm-operationalinsights.LinkedStorageAccountsResource'
          description: The parameters required to create or update linked storage accounts.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.LinkedStorageAccountsCreateOrUpdateResponse>
        description: Promise<Models.LinkedStorageAccountsCreateOrUpdateResponse>
    package: '@azure/arm-operationalinsights'
  - uid: '@azure/arm-operationalinsights.LinkedStorageAccounts.createOrUpdate_2'
    name: >-
      createOrUpdate(string, string, Models.DataSourceType,
      LinkedStorageAccountsResource, RequestOptionsBase,
      ServiceCallback<LinkedStorageAccountsResource>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function createOrUpdate(resourceGroupName: string, workspaceName:
        string, dataSourceType: Models.DataSourceType, parameters:
        LinkedStorageAccountsResource, options: RequestOptionsBase, callback:
        ServiceCallback<LinkedStorageAccountsResource>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: The name of the resource group. The name is case insensitive.
        - id: workspaceName
          type:
            - string
          description: The name of the workspace.
        - id: dataSourceType
          type:
            - Models.DataSourceType
          description: |-
            Linked storage accounts type. Possible values include: 'CustomLogs',
            'AzureWatson', 'Query', 'Alerts'
        - id: parameters
          type:
            - '@azure/arm-operationalinsights.LinkedStorageAccountsResource'
          description: The parameters required to create or update linked storage accounts.
        - id: options
          type:
            - RequestOptionsBase
          description: The optional parameters
        - id: callback
          type:
            - >-
              ServiceCallback<@azure/arm-operationalinsights.LinkedStorageAccountsResource>
          description: |
            The callback
    package: '@azure/arm-operationalinsights'
  - uid: '@azure/arm-operationalinsights.LinkedStorageAccounts.createOrUpdate_1'
    name: >-
      createOrUpdate(string, string, Models.DataSourceType,
      LinkedStorageAccountsResource,
      ServiceCallback<LinkedStorageAccountsResource>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function createOrUpdate(resourceGroupName: string, workspaceName:
        string, dataSourceType: Models.DataSourceType, parameters:
        LinkedStorageAccountsResource, callback:
        ServiceCallback<LinkedStorageAccountsResource>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: The name of the resource group. The name is case insensitive.
        - id: workspaceName
          type:
            - string
          description: The name of the workspace.
        - id: dataSourceType
          type:
            - Models.DataSourceType
          description: |-
            Linked storage accounts type. Possible values include: 'CustomLogs',
            'AzureWatson', 'Query', 'Alerts'
        - id: parameters
          type:
            - '@azure/arm-operationalinsights.LinkedStorageAccountsResource'
          description: The parameters required to create or update linked storage accounts.
        - id: callback
          type:
            - >-
              ServiceCallback<@azure/arm-operationalinsights.LinkedStorageAccountsResource>
          description: |
            The callback
    package: '@azure/arm-operationalinsights'
  - uid: '@azure/arm-operationalinsights.LinkedStorageAccounts.deleteMethod'
    name: >-
      deleteMethod(string, string, Models.DataSourceType,
      msRest.RequestOptionsBase)
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      Deletes all linked storage accounts of a specific data source type
      associated with the specified

      workspace.
    syntax:
      content: >-
        function deleteMethod(resourceGroupName: string, workspaceName: string,
        dataSourceType: Models.DataSourceType, options?:
        msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: The name of the resource group. The name is case insensitive.
        - id: workspaceName
          type:
            - string
          description: The name of the workspace.
        - id: dataSourceType
          type:
            - Models.DataSourceType
          description: |-
            Linked storage accounts type. Possible values include: 'CustomLogs',
            'AzureWatson', 'Query', 'Alerts'
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<RestResponse>
        description: Promise<msRest.RestResponse>
    package: '@azure/arm-operationalinsights'
  - uid: '@azure/arm-operationalinsights.LinkedStorageAccounts.deleteMethod_2'
    name: >-
      deleteMethod(string, string, Models.DataSourceType, RequestOptionsBase,
      ServiceCallback<void>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function deleteMethod(resourceGroupName: string, workspaceName: string,
        dataSourceType: Models.DataSourceType, options: RequestOptionsBase,
        callback: ServiceCallback<void>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: The name of the resource group. The name is case insensitive.
        - id: workspaceName
          type:
            - string
          description: The name of the workspace.
        - id: dataSourceType
          type:
            - Models.DataSourceType
          description: |-
            Linked storage accounts type. Possible values include: 'CustomLogs',
            'AzureWatson', 'Query', 'Alerts'
        - id: options
          type:
            - RequestOptionsBase
          description: The optional parameters
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            The callback
    package: '@azure/arm-operationalinsights'
  - uid: '@azure/arm-operationalinsights.LinkedStorageAccounts.deleteMethod_1'
    name: 'deleteMethod(string, string, Models.DataSourceType, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function deleteMethod(resourceGroupName: string, workspaceName: string,
        dataSourceType: Models.DataSourceType, callback: ServiceCallback<void>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: The name of the resource group. The name is case insensitive.
        - id: workspaceName
          type:
            - string
          description: The name of the workspace.
        - id: dataSourceType
          type:
            - Models.DataSourceType
          description: |-
            Linked storage accounts type. Possible values include: 'CustomLogs',
            'AzureWatson', 'Query', 'Alerts'
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            The callback
    package: '@azure/arm-operationalinsights'
  - uid: '@azure/arm-operationalinsights.LinkedStorageAccounts.get'
    name: 'get(string, string, Models.DataSourceType, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      Gets all linked storage account of a specific data source type associated
      with the specified

      workspace.
    syntax:
      content: >-
        function get(resourceGroupName: string, workspaceName: string,
        dataSourceType: Models.DataSourceType, options?:
        msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: The name of the resource group. The name is case insensitive.
        - id: workspaceName
          type:
            - string
          description: The name of the workspace.
        - id: dataSourceType
          type:
            - Models.DataSourceType
          description: |-
            Linked storage accounts type. Possible values include: 'CustomLogs',
            'AzureWatson', 'Query', 'Alerts'
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.LinkedStorageAccountsGetResponse>
        description: Promise<Models.LinkedStorageAccountsGetResponse>
    package: '@azure/arm-operationalinsights'
  - uid: '@azure/arm-operationalinsights.LinkedStorageAccounts.get_2'
    name: >-
      get(string, string, Models.DataSourceType, RequestOptionsBase,
      ServiceCallback<LinkedStorageAccountsResource>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function get(resourceGroupName: string, workspaceName: string,
        dataSourceType: Models.DataSourceType, options: RequestOptionsBase,
        callback: ServiceCallback<LinkedStorageAccountsResource>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: The name of the resource group. The name is case insensitive.
        - id: workspaceName
          type:
            - string
          description: The name of the workspace.
        - id: dataSourceType
          type:
            - Models.DataSourceType
          description: |-
            Linked storage accounts type. Possible values include: 'CustomLogs',
            'AzureWatson', 'Query', 'Alerts'
        - id: options
          type:
            - RequestOptionsBase
          description: The optional parameters
        - id: callback
          type:
            - >-
              ServiceCallback<@azure/arm-operationalinsights.LinkedStorageAccountsResource>
          description: |
            The callback
    package: '@azure/arm-operationalinsights'
  - uid: '@azure/arm-operationalinsights.LinkedStorageAccounts.get_1'
    name: >-
      get(string, string, Models.DataSourceType,
      ServiceCallback<LinkedStorageAccountsResource>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function get(resourceGroupName: string, workspaceName: string,
        dataSourceType: Models.DataSourceType, callback:
        ServiceCallback<LinkedStorageAccountsResource>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: The name of the resource group. The name is case insensitive.
        - id: workspaceName
          type:
            - string
          description: The name of the workspace.
        - id: dataSourceType
          type:
            - Models.DataSourceType
          description: |-
            Linked storage accounts type. Possible values include: 'CustomLogs',
            'AzureWatson', 'Query', 'Alerts'
        - id: callback
          type:
            - >-
              ServiceCallback<@azure/arm-operationalinsights.LinkedStorageAccountsResource>
          description: |
            The callback
    package: '@azure/arm-operationalinsights'
  - uid: '@azure/arm-operationalinsights.LinkedStorageAccounts.constructor'
    name: LinkedStorageAccounts(OperationalInsightsManagementClientContext)
    children: []
    type: constructor
    langs:
      - typeScript
    summary: Create a LinkedStorageAccounts.
    syntax:
      content: >-
        new LinkedStorageAccounts(client:
        OperationalInsightsManagementClientContext)
      parameters:
        - id: client
          type:
            - >-
              @azure/arm-operationalinsights.OperationalInsightsManagementClientContext
          description: |
            Reference to the service client.
    package: '@azure/arm-operationalinsights'
  - uid: '@azure/arm-operationalinsights.LinkedStorageAccounts.listByWorkspace'
    name: 'listByWorkspace(string, string, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      Gets all linked storage accounts associated with the specified workspace,
      storage accounts will

      be sorted by their data source type.
    syntax:
      content: >-
        function listByWorkspace(resourceGroupName: string, workspaceName:
        string, options?: msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: The name of the resource group. The name is case insensitive.
        - id: workspaceName
          type:
            - string
          description: The name of the workspace.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.LinkedStorageAccountsListByWorkspaceResponse>
        description: Promise<Models.LinkedStorageAccountsListByWorkspaceResponse>
    package: '@azure/arm-operationalinsights'
  - uid: '@azure/arm-operationalinsights.LinkedStorageAccounts.listByWorkspace_2'
    name: >-
      listByWorkspace(string, string, RequestOptionsBase,
      ServiceCallback<LinkedStorageAccountsListResult>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function listByWorkspace(resourceGroupName: string, workspaceName:
        string, options: RequestOptionsBase, callback:
        ServiceCallback<LinkedStorageAccountsListResult>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: The name of the resource group. The name is case insensitive.
        - id: workspaceName
          type:
            - string
          description: The name of the workspace.
        - id: options
          type:
            - RequestOptionsBase
          description: The optional parameters
        - id: callback
          type:
            - >-
              ServiceCallback<@azure/arm-operationalinsights.LinkedStorageAccountsListResult>
          description: |
            The callback
    package: '@azure/arm-operationalinsights'
  - uid: '@azure/arm-operationalinsights.LinkedStorageAccounts.listByWorkspace_1'
    name: >-
      listByWorkspace(string, string,
      ServiceCallback<LinkedStorageAccountsListResult>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function listByWorkspace(resourceGroupName: string, workspaceName:
        string, callback: ServiceCallback<LinkedStorageAccountsListResult>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: The name of the resource group. The name is case insensitive.
        - id: workspaceName
          type:
            - string
          description: The name of the workspace.
        - id: callback
          type:
            - >-
              ServiceCallback<@azure/arm-operationalinsights.LinkedStorageAccountsListResult>
          description: |
            The callback
    package: '@azure/arm-operationalinsights'
references:
  - uid: '@azure/arm-operationalinsights.OperationalInsightsManagementClientContext'
    name: OperationalInsightsManagementClientContext
    spec.typeScript:
      - name: OperationalInsightsManagementClientContext
        fullName: OperationalInsightsManagementClientContext
        uid: >-
          @azure/arm-operationalinsights.OperationalInsightsManagementClientContext
  - uid: '@azure/arm-operationalinsights.LinkedStorageAccountsResource'
    name: LinkedStorageAccountsResource
    spec.typeScript:
      - name: LinkedStorageAccountsResource
        fullName: LinkedStorageAccountsResource
        uid: '@azure/arm-operationalinsights.LinkedStorageAccountsResource'
  - uid: >-
      ServiceCallback<@azure/arm-operationalinsights.LinkedStorageAccountsResource>
    name: LinkedStorageAccountsResource>
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: LinkedStorageAccountsResource
        fullName: LinkedStorageAccountsResource
        uid: '@azure/arm-operationalinsights.LinkedStorageAccountsResource'
      - name: '>'
        fullName: '>'
  - uid: >-
      ServiceCallback<@azure/arm-operationalinsights.LinkedStorageAccountsListResult>
    name: LinkedStorageAccountsListResult>
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: LinkedStorageAccountsListResult
        fullName: LinkedStorageAccountsListResult
        uid: '@azure/arm-operationalinsights.LinkedStorageAccountsListResult'
      - name: '>'
        fullName: '>'
