### YamlMime:UniversalReference
items:
  - uid: '@azure/arm-operationalinsights.Clusters'
    name: Clusters
    fullName: Clusters
    children:
      - '@azure/arm-operationalinsights.Clusters.beginCreateOrUpdate'
      - '@azure/arm-operationalinsights.Clusters.beginDeleteMethod'
      - '@azure/arm-operationalinsights.Clusters.constructor'
      - '@azure/arm-operationalinsights.Clusters.createOrUpdate'
      - '@azure/arm-operationalinsights.Clusters.deleteMethod'
      - '@azure/arm-operationalinsights.Clusters.get'
      - '@azure/arm-operationalinsights.Clusters.get_2'
      - '@azure/arm-operationalinsights.Clusters.get_1'
      - '@azure/arm-operationalinsights.Clusters.list'
      - '@azure/arm-operationalinsights.Clusters.list_2'
      - '@azure/arm-operationalinsights.Clusters.list_1'
      - '@azure/arm-operationalinsights.Clusters.listByResourceGroup'
      - '@azure/arm-operationalinsights.Clusters.listByResourceGroup_2'
      - '@azure/arm-operationalinsights.Clusters.listByResourceGroup_1'
      - '@azure/arm-operationalinsights.Clusters.listByResourceGroupNext'
      - '@azure/arm-operationalinsights.Clusters.listByResourceGroupNext_2'
      - '@azure/arm-operationalinsights.Clusters.listByResourceGroupNext_1'
      - '@azure/arm-operationalinsights.Clusters.listNext'
      - '@azure/arm-operationalinsights.Clusters.listNext_2'
      - '@azure/arm-operationalinsights.Clusters.listNext_1'
      - '@azure/arm-operationalinsights.Clusters.update'
      - '@azure/arm-operationalinsights.Clusters.update_2'
      - '@azure/arm-operationalinsights.Clusters.update_1'
    langs:
      - typeScript
    type: class
    summary: Class representing a Clusters.
    package: '@azure/arm-operationalinsights'
  - uid: '@azure/arm-operationalinsights.Clusters.beginCreateOrUpdate'
    name: 'beginCreateOrUpdate(string, string, Cluster, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Create or update a Log Analytics cluster.
    syntax:
      content: >-
        function beginCreateOrUpdate(resourceGroupName: string, clusterName:
        string, parameters: Cluster, options?: msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: The name of the resource group. The name is case insensitive.
        - id: clusterName
          type:
            - string
          description: The name of the Log Analytics cluster.
        - id: parameters
          type:
            - '@azure/arm-operationalinsights.Cluster'
          description: The parameters required to create or update a Log Analytics cluster.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<LROPoller>
        description: Promise<msRestAzure.LROPoller>
    package: '@azure/arm-operationalinsights'
  - uid: '@azure/arm-operationalinsights.Clusters.beginDeleteMethod'
    name: 'beginDeleteMethod(string, string, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Deletes a cluster instance.
    syntax:
      content: >-
        function beginDeleteMethod(resourceGroupName: string, clusterName:
        string, options?: msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: The name of the resource group. The name is case insensitive.
        - id: clusterName
          type:
            - string
          description: Name of the Log Analytics Cluster.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<LROPoller>
        description: Promise<msRestAzure.LROPoller>
    package: '@azure/arm-operationalinsights'
  - uid: '@azure/arm-operationalinsights.Clusters.constructor'
    name: Clusters(OperationalInsightsManagementClientContext)
    children: []
    type: constructor
    langs:
      - typeScript
    summary: Create a Clusters.
    syntax:
      content: 'new Clusters(client: OperationalInsightsManagementClientContext)'
      parameters:
        - id: client
          type:
            - >-
              @azure/arm-operationalinsights.OperationalInsightsManagementClientContext
          description: |
            Reference to the service client.
    package: '@azure/arm-operationalinsights'
  - uid: '@azure/arm-operationalinsights.Clusters.createOrUpdate'
    name: 'createOrUpdate(string, string, Cluster, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Create or update a Log Analytics cluster.
    syntax:
      content: >-
        function createOrUpdate(resourceGroupName: string, clusterName: string,
        parameters: Cluster, options?: msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: The name of the resource group. The name is case insensitive.
        - id: clusterName
          type:
            - string
          description: The name of the Log Analytics cluster.
        - id: parameters
          type:
            - '@azure/arm-operationalinsights.Cluster'
          description: The parameters required to create or update a Log Analytics cluster.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.ClustersCreateOrUpdateResponse>
        description: Promise<Models.ClustersCreateOrUpdateResponse>
    package: '@azure/arm-operationalinsights'
  - uid: '@azure/arm-operationalinsights.Clusters.deleteMethod'
    name: 'deleteMethod(string, string, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Deletes a cluster instance.
    syntax:
      content: >-
        function deleteMethod(resourceGroupName: string, clusterName: string,
        options?: msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: The name of the resource group. The name is case insensitive.
        - id: clusterName
          type:
            - string
          description: Name of the Log Analytics Cluster.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<RestResponse>
        description: Promise<msRest.RestResponse>
    package: '@azure/arm-operationalinsights'
  - uid: '@azure/arm-operationalinsights.Clusters.get'
    name: 'get(string, string, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Gets a Log Analytics cluster instance.
    syntax:
      content: >-
        function get(resourceGroupName: string, clusterName: string, options?:
        msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: The name of the resource group. The name is case insensitive.
        - id: clusterName
          type:
            - string
          description: Name of the Log Analytics Cluster.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.ClustersGetResponse>
        description: Promise<Models.ClustersGetResponse>
    package: '@azure/arm-operationalinsights'
  - uid: '@azure/arm-operationalinsights.Clusters.get_2'
    name: 'get(string, string, RequestOptionsBase, ServiceCallback<Cluster>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function get(resourceGroupName: string, clusterName: string, options:
        RequestOptionsBase, callback: ServiceCallback<Cluster>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: The name of the resource group. The name is case insensitive.
        - id: clusterName
          type:
            - string
          description: Name of the Log Analytics Cluster.
        - id: options
          type:
            - RequestOptionsBase
          description: The optional parameters
        - id: callback
          type:
            - ServiceCallback<@azure/arm-operationalinsights.Cluster>
          description: |
            The callback
    package: '@azure/arm-operationalinsights'
  - uid: '@azure/arm-operationalinsights.Clusters.get_1'
    name: 'get(string, string, ServiceCallback<Cluster>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function get(resourceGroupName: string, clusterName: string, callback:
        ServiceCallback<Cluster>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: The name of the resource group. The name is case insensitive.
        - id: clusterName
          type:
            - string
          description: Name of the Log Analytics Cluster.
        - id: callback
          type:
            - ServiceCallback<@azure/arm-operationalinsights.Cluster>
          description: |
            The callback
    package: '@azure/arm-operationalinsights'
  - uid: '@azure/arm-operationalinsights.Clusters.list'
    name: list(msRest.RequestOptionsBase)
    children: []
    type: method
    langs:
      - typeScript
    summary: Gets the Log Analytics clusters in a subscription.
    syntax:
      content: 'function list(options?: msRest.RequestOptionsBase)'
      parameters:
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.ClustersListResponse>
        description: Promise<Models.ClustersListResponse>
    package: '@azure/arm-operationalinsights'
  - uid: '@azure/arm-operationalinsights.Clusters.list_2'
    name: 'list(RequestOptionsBase, ServiceCallback<ClusterListResult>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function list(options: RequestOptionsBase, callback:
        ServiceCallback<ClusterListResult>)
      parameters:
        - id: options
          type:
            - RequestOptionsBase
          description: The optional parameters
        - id: callback
          type:
            - ServiceCallback<@azure/arm-operationalinsights.ClusterListResult>
          description: |
            The callback
    package: '@azure/arm-operationalinsights'
  - uid: '@azure/arm-operationalinsights.Clusters.list_1'
    name: list(ServiceCallback<ClusterListResult>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function list(callback: ServiceCallback<ClusterListResult>)'
      parameters:
        - id: callback
          type:
            - ServiceCallback<@azure/arm-operationalinsights.ClusterListResult>
          description: |
            The callback
    package: '@azure/arm-operationalinsights'
  - uid: '@azure/arm-operationalinsights.Clusters.listByResourceGroup'
    name: 'listByResourceGroup(string, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Gets Log Analytics clusters in a resource group.
    syntax:
      content: >-
        function listByResourceGroup(resourceGroupName: string, options?:
        msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: The name of the resource group. The name is case insensitive.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.ClustersListByResourceGroupResponse>
        description: Promise<Models.ClustersListByResourceGroupResponse>
    package: '@azure/arm-operationalinsights'
  - uid: '@azure/arm-operationalinsights.Clusters.listByResourceGroup_2'
    name: >-
      listByResourceGroup(string, RequestOptionsBase,
      ServiceCallback<ClusterListResult>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function listByResourceGroup(resourceGroupName: string, options:
        RequestOptionsBase, callback: ServiceCallback<ClusterListResult>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: The name of the resource group. The name is case insensitive.
        - id: options
          type:
            - RequestOptionsBase
          description: The optional parameters
        - id: callback
          type:
            - ServiceCallback<@azure/arm-operationalinsights.ClusterListResult>
          description: |
            The callback
    package: '@azure/arm-operationalinsights'
  - uid: '@azure/arm-operationalinsights.Clusters.listByResourceGroup_1'
    name: 'listByResourceGroup(string, ServiceCallback<ClusterListResult>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function listByResourceGroup(resourceGroupName: string, callback:
        ServiceCallback<ClusterListResult>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: The name of the resource group. The name is case insensitive.
        - id: callback
          type:
            - ServiceCallback<@azure/arm-operationalinsights.ClusterListResult>
          description: |
            The callback
    package: '@azure/arm-operationalinsights'
  - uid: '@azure/arm-operationalinsights.Clusters.listByResourceGroupNext'
    name: 'listByResourceGroupNext(string, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Gets Log Analytics clusters in a resource group.
    syntax:
      content: >-
        function listByResourceGroupNext(nextPageLink: string, options?:
        msRest.RequestOptionsBase)
      parameters:
        - id: nextPageLink
          type:
            - string
          description: The NextLink from the previous successful call to List operation.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.ClustersListByResourceGroupNextResponse>
        description: Promise<Models.ClustersListByResourceGroupNextResponse>
    package: '@azure/arm-operationalinsights'
  - uid: '@azure/arm-operationalinsights.Clusters.listByResourceGroupNext_2'
    name: >-
      listByResourceGroupNext(string, RequestOptionsBase,
      ServiceCallback<ClusterListResult>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function listByResourceGroupNext(nextPageLink: string, options:
        RequestOptionsBase, callback: ServiceCallback<ClusterListResult>)
      parameters:
        - id: nextPageLink
          type:
            - string
          description: The NextLink from the previous successful call to List operation.
        - id: options
          type:
            - RequestOptionsBase
          description: The optional parameters
        - id: callback
          type:
            - ServiceCallback<@azure/arm-operationalinsights.ClusterListResult>
          description: |
            The callback
    package: '@azure/arm-operationalinsights'
  - uid: '@azure/arm-operationalinsights.Clusters.listByResourceGroupNext_1'
    name: 'listByResourceGroupNext(string, ServiceCallback<ClusterListResult>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function listByResourceGroupNext(nextPageLink: string, callback:
        ServiceCallback<ClusterListResult>)
      parameters:
        - id: nextPageLink
          type:
            - string
          description: The NextLink from the previous successful call to List operation.
        - id: callback
          type:
            - ServiceCallback<@azure/arm-operationalinsights.ClusterListResult>
          description: |
            The callback
    package: '@azure/arm-operationalinsights'
  - uid: '@azure/arm-operationalinsights.Clusters.listNext'
    name: 'listNext(string, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Gets the Log Analytics clusters in a subscription.
    syntax:
      content: >-
        function listNext(nextPageLink: string, options?:
        msRest.RequestOptionsBase)
      parameters:
        - id: nextPageLink
          type:
            - string
          description: The NextLink from the previous successful call to List operation.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.ClustersListNextResponse>
        description: Promise<Models.ClustersListNextResponse>
    package: '@azure/arm-operationalinsights'
  - uid: '@azure/arm-operationalinsights.Clusters.listNext_2'
    name: 'listNext(string, RequestOptionsBase, ServiceCallback<ClusterListResult>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function listNext(nextPageLink: string, options: RequestOptionsBase,
        callback: ServiceCallback<ClusterListResult>)
      parameters:
        - id: nextPageLink
          type:
            - string
          description: The NextLink from the previous successful call to List operation.
        - id: options
          type:
            - RequestOptionsBase
          description: The optional parameters
        - id: callback
          type:
            - ServiceCallback<@azure/arm-operationalinsights.ClusterListResult>
          description: |
            The callback
    package: '@azure/arm-operationalinsights'
  - uid: '@azure/arm-operationalinsights.Clusters.listNext_1'
    name: 'listNext(string, ServiceCallback<ClusterListResult>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function listNext(nextPageLink: string, callback:
        ServiceCallback<ClusterListResult>)
      parameters:
        - id: nextPageLink
          type:
            - string
          description: The NextLink from the previous successful call to List operation.
        - id: callback
          type:
            - ServiceCallback<@azure/arm-operationalinsights.ClusterListResult>
          description: |
            The callback
    package: '@azure/arm-operationalinsights'
  - uid: '@azure/arm-operationalinsights.Clusters.update'
    name: 'update(string, string, ClusterPatch, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Updates a Log Analytics cluster.
    syntax:
      content: >-
        function update(resourceGroupName: string, clusterName: string,
        parameters: ClusterPatch, options?: msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: The name of the resource group. The name is case insensitive.
        - id: clusterName
          type:
            - string
          description: Name of the Log Analytics Cluster.
        - id: parameters
          type:
            - '@azure/arm-operationalinsights.ClusterPatch'
          description: The parameters required to patch a Log Analytics cluster.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.ClustersUpdateResponse>
        description: Promise<Models.ClustersUpdateResponse>
    package: '@azure/arm-operationalinsights'
  - uid: '@azure/arm-operationalinsights.Clusters.update_2'
    name: >-
      update(string, string, ClusterPatch, RequestOptionsBase,
      ServiceCallback<Cluster>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function update(resourceGroupName: string, clusterName: string,
        parameters: ClusterPatch, options: RequestOptionsBase, callback:
        ServiceCallback<Cluster>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: The name of the resource group. The name is case insensitive.
        - id: clusterName
          type:
            - string
          description: Name of the Log Analytics Cluster.
        - id: parameters
          type:
            - '@azure/arm-operationalinsights.ClusterPatch'
          description: The parameters required to patch a Log Analytics cluster.
        - id: options
          type:
            - RequestOptionsBase
          description: The optional parameters
        - id: callback
          type:
            - ServiceCallback<@azure/arm-operationalinsights.Cluster>
          description: |
            The callback
    package: '@azure/arm-operationalinsights'
  - uid: '@azure/arm-operationalinsights.Clusters.update_1'
    name: 'update(string, string, ClusterPatch, ServiceCallback<Cluster>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function update(resourceGroupName: string, clusterName: string,
        parameters: ClusterPatch, callback: ServiceCallback<Cluster>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: The name of the resource group. The name is case insensitive.
        - id: clusterName
          type:
            - string
          description: Name of the Log Analytics Cluster.
        - id: parameters
          type:
            - '@azure/arm-operationalinsights.ClusterPatch'
          description: The parameters required to patch a Log Analytics cluster.
        - id: callback
          type:
            - ServiceCallback<@azure/arm-operationalinsights.Cluster>
          description: |
            The callback
    package: '@azure/arm-operationalinsights'
references:
  - uid: '@azure/arm-operationalinsights.OperationalInsightsManagementClientContext'
    name: OperationalInsightsManagementClientContext
    spec.typeScript:
      - name: OperationalInsightsManagementClientContext
        fullName: OperationalInsightsManagementClientContext
        uid: >-
          @azure/arm-operationalinsights.OperationalInsightsManagementClientContext
  - uid: '@azure/arm-operationalinsights.Cluster'
    name: Cluster
    spec.typeScript:
      - name: Cluster
        fullName: Cluster
        uid: '@azure/arm-operationalinsights.Cluster'
  - uid: ServiceCallback<@azure/arm-operationalinsights.Cluster>
    name: Cluster>
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: Cluster
        fullName: Cluster
        uid: '@azure/arm-operationalinsights.Cluster'
      - name: '>'
        fullName: '>'
  - uid: ServiceCallback<@azure/arm-operationalinsights.ClusterListResult>
    name: ClusterListResult>
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: ClusterListResult
        fullName: ClusterListResult
        uid: '@azure/arm-operationalinsights.ClusterListResult'
      - name: '>'
        fullName: '>'
  - uid: '@azure/arm-operationalinsights.ClusterPatch'
    name: ClusterPatch
    spec.typeScript:
      - name: ClusterPatch
        fullName: ClusterPatch
        uid: '@azure/arm-operationalinsights.ClusterPatch'
