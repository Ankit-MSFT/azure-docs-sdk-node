### YamlMime:TSType
name: Connectors
uid: '@azure/arm-customerinsights.Connectors'
package: '@azure/arm-customerinsights'
summary: Class representing a Connectors.
fullName: Connectors
remarks: ''
isPreview: false
isDeprecated: false
type: class
constructors:
  - name: Connectors(CustomerInsightsManagementClientContext)
    uid: '@azure/arm-customerinsights.Connectors.constructor'
    package: '@azure/arm-customerinsights'
    summary: Create a Connectors.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'new Connectors(client: CustomerInsightsManagementClientContext)'
      parameters:
        - id: client
          type: >-
            <xref
            uid="@azure/arm-customerinsights.CustomerInsightsManagementClientContext"
            />
          description: |
            Reference to the service client.
methods:
  - name: >-
      beginCreateOrUpdate(string, string, string, ConnectorResourceFormat,
      msRest.RequestOptionsBase)
    uid: '@azure/arm-customerinsights.Connectors.beginCreateOrUpdate'
    package: '@azure/arm-customerinsights'
    summary: Creates a connector or updates an existing connector in the hub.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function beginCreateOrUpdate(resourceGroupName: string, hubName: string,
        connectorName: string, parameters: ConnectorResourceFormat, options?:
        msRest.RequestOptionsBase): Promise<LROPoller>
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group.
        - id: hubName
          type: string
          description: The name of the hub.
        - id: connectorName
          type: string
          description: The name of the connector.
        - id: parameters
          type: <xref uid="@azure/arm-customerinsights.ConnectorResourceFormat" />
          description: Parameters supplied to the CreateOrUpdate Connector operation.
        - id: options
          type: <xref uid="msRest.RequestOptionsBase" />
          description: ''
      return:
        description: Promise<msRestAzure.LROPoller>
        type: Promise&lt;LROPoller&gt;
  - name: 'beginDeleteMethod(string, string, string, msRest.RequestOptionsBase)'
    uid: '@azure/arm-customerinsights.Connectors.beginDeleteMethod'
    package: '@azure/arm-customerinsights'
    summary: Deletes a connector in the hub.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function beginDeleteMethod(resourceGroupName: string, hubName: string,
        connectorName: string, options?: msRest.RequestOptionsBase):
        Promise<LROPoller>
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group.
        - id: hubName
          type: string
          description: The name of the hub.
        - id: connectorName
          type: string
          description: The name of the connector.
        - id: options
          type: <xref uid="msRest.RequestOptionsBase" />
          description: ''
      return:
        description: Promise<msRestAzure.LROPoller>
        type: Promise&lt;LROPoller&gt;
  - name: >-
      createOrUpdate(string, string, string, ConnectorResourceFormat,
      msRest.RequestOptionsBase)
    uid: '@azure/arm-customerinsights.Connectors.createOrUpdate'
    package: '@azure/arm-customerinsights'
    summary: Creates a connector or updates an existing connector in the hub.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function createOrUpdate(resourceGroupName: string, hubName: string,
        connectorName: string, parameters: ConnectorResourceFormat, options?:
        msRest.RequestOptionsBase):
        Promise<Models.ConnectorsCreateOrUpdateResponse>
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group.
        - id: hubName
          type: string
          description: The name of the hub.
        - id: connectorName
          type: string
          description: The name of the connector.
        - id: parameters
          type: <xref uid="@azure/arm-customerinsights.ConnectorResourceFormat" />
          description: Parameters supplied to the CreateOrUpdate Connector operation.
        - id: options
          type: <xref uid="msRest.RequestOptionsBase" />
          description: ''
      return:
        description: Promise<Models.ConnectorsCreateOrUpdateResponse>
        type: Promise&lt;<xref uid="Models.ConnectorsCreateOrUpdateResponse" />&gt;
  - name: 'deleteMethod(string, string, string, msRest.RequestOptionsBase)'
    uid: '@azure/arm-customerinsights.Connectors.deleteMethod'
    package: '@azure/arm-customerinsights'
    summary: Deletes a connector in the hub.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function deleteMethod(resourceGroupName: string, hubName: string,
        connectorName: string, options?: msRest.RequestOptionsBase):
        Promise<RestResponse>
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group.
        - id: hubName
          type: string
          description: The name of the hub.
        - id: connectorName
          type: string
          description: The name of the connector.
        - id: options
          type: <xref uid="msRest.RequestOptionsBase" />
          description: ''
      return:
        description: Promise<msRest.RestResponse>
        type: Promise&lt;RestResponse&gt;
  - name: 'get(string, string, string, msRest.RequestOptionsBase)'
    uid: '@azure/arm-customerinsights.Connectors.get'
    package: '@azure/arm-customerinsights'
    summary: Gets a connector in the hub.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function get(resourceGroupName: string, hubName: string, connectorName:
        string, options?: msRest.RequestOptionsBase):
        Promise<Models.ConnectorsGetResponse>
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group.
        - id: hubName
          type: string
          description: The name of the hub.
        - id: connectorName
          type: string
          description: The name of the connector.
        - id: options
          type: <xref uid="msRest.RequestOptionsBase" />
          description: ''
      return:
        description: Promise<Models.ConnectorsGetResponse>
        type: Promise&lt;<xref uid="Models.ConnectorsGetResponse" />&gt;
  - name: >-
      get(string, string, string, RequestOptionsBase,
      ServiceCallback<ConnectorResourceFormat>)
    uid: '@azure/arm-customerinsights.Connectors.get_2'
    package: '@azure/arm-customerinsights'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function get(resourceGroupName: string, hubName: string, connectorName:
        string, options: RequestOptionsBase, callback:
        ServiceCallback<ConnectorResourceFormat>)
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group.
        - id: hubName
          type: string
          description: The name of the hub.
        - id: connectorName
          type: string
          description: The name of the connector.
        - id: options
          type: RequestOptionsBase
          description: The optional parameters
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/arm-customerinsights.ConnectorResourceFormat" />&gt;
          description: |
            The callback
  - name: 'get(string, string, string, ServiceCallback<ConnectorResourceFormat>)'
    uid: '@azure/arm-customerinsights.Connectors.get_1'
    package: '@azure/arm-customerinsights'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function get(resourceGroupName: string, hubName: string, connectorName:
        string, callback: ServiceCallback<ConnectorResourceFormat>)
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group.
        - id: hubName
          type: string
          description: The name of the hub.
        - id: connectorName
          type: string
          description: The name of the connector.
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/arm-customerinsights.ConnectorResourceFormat" />&gt;
          description: |
            The callback
  - name: 'listByHub(string, string, msRest.RequestOptionsBase)'
    uid: '@azure/arm-customerinsights.Connectors.listByHub'
    package: '@azure/arm-customerinsights'
    summary: Gets all the connectors in the specified hub.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listByHub(resourceGroupName: string, hubName: string, options?:
        msRest.RequestOptionsBase): Promise<Models.ConnectorsListByHubResponse>
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group.
        - id: hubName
          type: string
          description: The name of the hub.
        - id: options
          type: <xref uid="msRest.RequestOptionsBase" />
          description: ''
      return:
        description: Promise<Models.ConnectorsListByHubResponse>
        type: Promise&lt;<xref uid="Models.ConnectorsListByHubResponse" />&gt;
  - name: >-
      listByHub(string, string, RequestOptionsBase,
      ServiceCallback<ConnectorListResult>)
    uid: '@azure/arm-customerinsights.Connectors.listByHub_2'
    package: '@azure/arm-customerinsights'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listByHub(resourceGroupName: string, hubName: string, options:
        RequestOptionsBase, callback: ServiceCallback<ConnectorListResult>)
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group.
        - id: hubName
          type: string
          description: The name of the hub.
        - id: options
          type: RequestOptionsBase
          description: The optional parameters
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/arm-customerinsights.ConnectorListResult" />&gt;
          description: |
            The callback
  - name: 'listByHub(string, string, ServiceCallback<ConnectorListResult>)'
    uid: '@azure/arm-customerinsights.Connectors.listByHub_1'
    package: '@azure/arm-customerinsights'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listByHub(resourceGroupName: string, hubName: string, callback:
        ServiceCallback<ConnectorListResult>)
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group.
        - id: hubName
          type: string
          description: The name of the hub.
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/arm-customerinsights.ConnectorListResult" />&gt;
          description: |
            The callback
  - name: 'listByHubNext(string, msRest.RequestOptionsBase)'
    uid: '@azure/arm-customerinsights.Connectors.listByHubNext'
    package: '@azure/arm-customerinsights'
    summary: Gets all the connectors in the specified hub.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listByHubNext(nextPageLink: string, options?:
        msRest.RequestOptionsBase):
        Promise<Models.ConnectorsListByHubNextResponse>
      parameters:
        - id: nextPageLink
          type: string
          description: The NextLink from the previous successful call to List operation.
        - id: options
          type: <xref uid="msRest.RequestOptionsBase" />
          description: ''
      return:
        description: Promise<Models.ConnectorsListByHubNextResponse>
        type: Promise&lt;<xref uid="Models.ConnectorsListByHubNextResponse" />&gt;
  - name: >-
      listByHubNext(string, RequestOptionsBase,
      ServiceCallback<ConnectorListResult>)
    uid: '@azure/arm-customerinsights.Connectors.listByHubNext_2'
    package: '@azure/arm-customerinsights'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listByHubNext(nextPageLink: string, options:
        RequestOptionsBase, callback: ServiceCallback<ConnectorListResult>)
      parameters:
        - id: nextPageLink
          type: string
          description: The NextLink from the previous successful call to List operation.
        - id: options
          type: RequestOptionsBase
          description: The optional parameters
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/arm-customerinsights.ConnectorListResult" />&gt;
          description: |
            The callback
  - name: 'listByHubNext(string, ServiceCallback<ConnectorListResult>)'
    uid: '@azure/arm-customerinsights.Connectors.listByHubNext_1'
    package: '@azure/arm-customerinsights'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listByHubNext(nextPageLink: string, callback:
        ServiceCallback<ConnectorListResult>)
      parameters:
        - id: nextPageLink
          type: string
          description: The NextLink from the previous successful call to List operation.
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/arm-customerinsights.ConnectorListResult" />&gt;
          description: |
            The callback
