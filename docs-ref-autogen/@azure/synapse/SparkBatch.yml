### YamlMime:UniversalReference
items:
  - uid: '@azure/synapse.SparkBatch'
    name: SparkBatch
    fullName: SparkBatch
    children:
      - '@azure/synapse.SparkBatch.create'
      - '@azure/synapse.SparkBatch.create_1'
      - '@azure/synapse.SparkBatch.create_2'
      - '@azure/synapse.SparkBatch.deleteMethod'
      - '@azure/synapse.SparkBatch.deleteMethod_2'
      - '@azure/synapse.SparkBatch.deleteMethod_1'
      - '@azure/synapse.SparkBatch.get'
      - '@azure/synapse.SparkBatch.get_1'
      - '@azure/synapse.SparkBatch.get_2'
      - '@azure/synapse.SparkBatch.list'
      - '@azure/synapse.SparkBatch.list_1'
      - '@azure/synapse.SparkBatch.list_2'
      - '@azure/synapse.SparkBatch.constructor'
    langs:
      - typeScript
    type: class
    summary: Class representing a SparkBatch.
    package: '@azure/synapse'
  - uid: '@azure/synapse.SparkBatch.create'
    name: >-
      create(string, string, ExtendedLivyBatchRequest,
      Models.SparkBatchCreateOptionalParams)
    children: []
    type: method
    langs:
      - typeScript
    summary: Create new spark batch job.
    syntax:
      content: >-
        function create(workspaceName: string, sparkPoolName: string,
        livyRequest: ExtendedLivyBatchRequest, options?:
        Models.SparkBatchCreateOptionalParams)
      parameters:
        - id: workspaceName
          type:
            - string
          description: The name of the workspace to execute operations on.
        - id: sparkPoolName
          type:
            - string
          description: Name of the spark pool. "ondemand" targets the ondemand pool.
        - id: livyRequest
          type:
            - '@azure/synapse.ExtendedLivyBatchRequest'
          description: Livy compatible batch job request payload.
        - id: options
          type:
            - Models.SparkBatchCreateOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.SparkBatchCreateResponse>
        description: Promise<Models.SparkBatchCreateResponse>
    package: '@azure/synapse'
  - uid: '@azure/synapse.SparkBatch.create_1'
    name: >-
      create(string, string, ExtendedLivyBatchRequest,
      ServiceCallback<ExtendedLivyBatchResponse>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function create(workspaceName: string, sparkPoolName: string,
        livyRequest: ExtendedLivyBatchRequest, callback:
        ServiceCallback<ExtendedLivyBatchResponse>)
      parameters:
        - id: workspaceName
          type:
            - string
          description: The name of the workspace to execute operations on.
        - id: sparkPoolName
          type:
            - string
          description: Name of the spark pool. "ondemand" targets the ondemand pool.
        - id: livyRequest
          type:
            - '@azure/synapse.ExtendedLivyBatchRequest'
          description: Livy compatible batch job request payload.
        - id: callback
          type:
            - ServiceCallback<@azure/synapse.ExtendedLivyBatchResponse>
          description: |
            The callback
    package: '@azure/synapse'
  - uid: '@azure/synapse.SparkBatch.create_2'
    name: >-
      create(string, string, ExtendedLivyBatchRequest,
      SparkBatchCreateOptionalParams,
      ServiceCallback<ExtendedLivyBatchResponse>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function create(workspaceName: string, sparkPoolName: string,
        livyRequest: ExtendedLivyBatchRequest, options:
        SparkBatchCreateOptionalParams, callback:
        ServiceCallback<ExtendedLivyBatchResponse>)
      parameters:
        - id: workspaceName
          type:
            - string
          description: The name of the workspace to execute operations on.
        - id: sparkPoolName
          type:
            - string
          description: Name of the spark pool. "ondemand" targets the ondemand pool.
        - id: livyRequest
          type:
            - '@azure/synapse.ExtendedLivyBatchRequest'
          description: Livy compatible batch job request payload.
        - id: options
          type:
            - '@azure/synapse.SparkBatchCreateOptionalParams'
          description: The optional parameters
        - id: callback
          type:
            - ServiceCallback<@azure/synapse.ExtendedLivyBatchResponse>
          description: |
            The callback
    package: '@azure/synapse'
  - uid: '@azure/synapse.SparkBatch.deleteMethod'
    name: 'deleteMethod(string, string, number, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Cancels a running spark batch job.
    syntax:
      content: >-
        function deleteMethod(workspaceName: string, sparkPoolName: string,
        batchId: number, options?: msRest.RequestOptionsBase)
      parameters:
        - id: workspaceName
          type:
            - string
          description: The name of the workspace to execute operations on.
        - id: sparkPoolName
          type:
            - string
          description: Name of the spark pool. "ondemand" targets the ondemand pool.
        - id: batchId
          type:
            - number
          description: Identifier for the batch job.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<RestResponse>
        description: Promise<msRest.RestResponse>
    package: '@azure/synapse'
  - uid: '@azure/synapse.SparkBatch.deleteMethod_2'
    name: >-
      deleteMethod(string, string, number, RequestOptionsBase,
      ServiceCallback<void>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function deleteMethod(workspaceName: string, sparkPoolName: string,
        batchId: number, options: RequestOptionsBase, callback:
        ServiceCallback<void>)
      parameters:
        - id: workspaceName
          type:
            - string
          description: The name of the workspace to execute operations on.
        - id: sparkPoolName
          type:
            - string
          description: Name of the spark pool. "ondemand" targets the ondemand pool.
        - id: batchId
          type:
            - number
          description: Identifier for the batch job.
        - id: options
          type:
            - RequestOptionsBase
          description: The optional parameters
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            The callback
    package: '@azure/synapse'
  - uid: '@azure/synapse.SparkBatch.deleteMethod_1'
    name: 'deleteMethod(string, string, number, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function deleteMethod(workspaceName: string, sparkPoolName: string,
        batchId: number, callback: ServiceCallback<void>)
      parameters:
        - id: workspaceName
          type:
            - string
          description: The name of the workspace to execute operations on.
        - id: sparkPoolName
          type:
            - string
          description: Name of the spark pool. "ondemand" targets the ondemand pool.
        - id: batchId
          type:
            - number
          description: Identifier for the batch job.
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            The callback
    package: '@azure/synapse'
  - uid: '@azure/synapse.SparkBatch.get'
    name: 'get(string, string, number, Models.SparkBatchGetOptionalParams)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Gets a single spark batch job.
    syntax:
      content: >-
        function get(workspaceName: string, sparkPoolName: string, batchId:
        number, options?: Models.SparkBatchGetOptionalParams)
      parameters:
        - id: workspaceName
          type:
            - string
          description: The name of the workspace to execute operations on.
        - id: sparkPoolName
          type:
            - string
          description: Name of the spark pool. "ondemand" targets the ondemand pool.
        - id: batchId
          type:
            - number
          description: Identifier for the batch job.
        - id: options
          type:
            - Models.SparkBatchGetOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.SparkBatchGetResponse>
        description: Promise<Models.SparkBatchGetResponse>
    package: '@azure/synapse'
  - uid: '@azure/synapse.SparkBatch.get_1'
    name: 'get(string, string, number, ServiceCallback<ExtendedLivyBatchResponse>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function get(workspaceName: string, sparkPoolName: string, batchId:
        number, callback: ServiceCallback<ExtendedLivyBatchResponse>)
      parameters:
        - id: workspaceName
          type:
            - string
          description: The name of the workspace to execute operations on.
        - id: sparkPoolName
          type:
            - string
          description: Name of the spark pool. "ondemand" targets the ondemand pool.
        - id: batchId
          type:
            - number
          description: Identifier for the batch job.
        - id: callback
          type:
            - ServiceCallback<@azure/synapse.ExtendedLivyBatchResponse>
          description: |
            The callback
    package: '@azure/synapse'
  - uid: '@azure/synapse.SparkBatch.get_2'
    name: >-
      get(string, string, number, SparkBatchGetOptionalParams,
      ServiceCallback<ExtendedLivyBatchResponse>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function get(workspaceName: string, sparkPoolName: string, batchId:
        number, options: SparkBatchGetOptionalParams, callback:
        ServiceCallback<ExtendedLivyBatchResponse>)
      parameters:
        - id: workspaceName
          type:
            - string
          description: The name of the workspace to execute operations on.
        - id: sparkPoolName
          type:
            - string
          description: Name of the spark pool. "ondemand" targets the ondemand pool.
        - id: batchId
          type:
            - number
          description: Identifier for the batch job.
        - id: options
          type:
            - '@azure/synapse.SparkBatchGetOptionalParams'
          description: The optional parameters
        - id: callback
          type:
            - ServiceCallback<@azure/synapse.ExtendedLivyBatchResponse>
          description: |
            The callback
    package: '@azure/synapse'
  - uid: '@azure/synapse.SparkBatch.list'
    name: 'list(string, string, Models.SparkBatchListOptionalParams)'
    children: []
    type: method
    langs:
      - typeScript
    summary: List all spark batch jobs which are running under a particular spark pool.
    syntax:
      content: >-
        function list(workspaceName: string, sparkPoolName: string, options?:
        Models.SparkBatchListOptionalParams)
      parameters:
        - id: workspaceName
          type:
            - string
          description: The name of the workspace to execute operations on.
        - id: sparkPoolName
          type:
            - string
          description: Name of the spark pool. "ondemand" targets the ondemand pool.
        - id: options
          type:
            - Models.SparkBatchListOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.SparkBatchListResponse>
        description: Promise<Models.SparkBatchListResponse>
    package: '@azure/synapse'
  - uid: '@azure/synapse.SparkBatch.list_1'
    name: 'list(string, string, ServiceCallback<ExtendedLivyListBatchResponse>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function list(workspaceName: string, sparkPoolName: string, callback:
        ServiceCallback<ExtendedLivyListBatchResponse>)
      parameters:
        - id: workspaceName
          type:
            - string
          description: The name of the workspace to execute operations on.
        - id: sparkPoolName
          type:
            - string
          description: Name of the spark pool. "ondemand" targets the ondemand pool.
        - id: callback
          type:
            - ServiceCallback<@azure/synapse.ExtendedLivyListBatchResponse>
          description: |
            The callback
    package: '@azure/synapse'
  - uid: '@azure/synapse.SparkBatch.list_2'
    name: >-
      list(string, string, SparkBatchListOptionalParams,
      ServiceCallback<ExtendedLivyListBatchResponse>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function list(workspaceName: string, sparkPoolName: string, options:
        SparkBatchListOptionalParams, callback:
        ServiceCallback<ExtendedLivyListBatchResponse>)
      parameters:
        - id: workspaceName
          type:
            - string
          description: The name of the workspace to execute operations on.
        - id: sparkPoolName
          type:
            - string
          description: Name of the spark pool. "ondemand" targets the ondemand pool.
        - id: options
          type:
            - '@azure/synapse.SparkBatchListOptionalParams'
          description: The optional parameters
        - id: callback
          type:
            - ServiceCallback<@azure/synapse.ExtendedLivyListBatchResponse>
          description: |
            The callback
    package: '@azure/synapse'
  - uid: '@azure/synapse.SparkBatch.constructor'
    name: SparkBatch(SynapseClientContext)
    children: []
    type: constructor
    langs:
      - typeScript
    summary: Create a SparkBatch.
    syntax:
      content: 'new SparkBatch(client: SynapseClientContext)'
      parameters:
        - id: client
          type:
            - '@azure/synapse.SynapseClientContext'
          description: |
            Reference to the service client.
    package: '@azure/synapse'
references:
  - uid: '@azure/synapse.SynapseClientContext'
    name: SynapseClientContext
    spec.typeScript:
      - name: SynapseClientContext
        fullName: SynapseClientContext
        uid: '@azure/synapse.SynapseClientContext'
  - uid: '@azure/synapse.ExtendedLivyBatchRequest'
    name: ExtendedLivyBatchRequest
    spec.typeScript:
      - name: ExtendedLivyBatchRequest
        fullName: ExtendedLivyBatchRequest
        uid: '@azure/synapse.ExtendedLivyBatchRequest'
  - uid: ServiceCallback<@azure/synapse.ExtendedLivyBatchResponse>
    name: ExtendedLivyBatchResponse>
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: ExtendedLivyBatchResponse
        fullName: ExtendedLivyBatchResponse
        uid: '@azure/synapse.ExtendedLivyBatchResponse'
      - name: '>'
        fullName: '>'
  - uid: '@azure/synapse.SparkBatchCreateOptionalParams'
    name: SparkBatchCreateOptionalParams
    spec.typeScript:
      - name: SparkBatchCreateOptionalParams
        fullName: SparkBatchCreateOptionalParams
        uid: '@azure/synapse.SparkBatchCreateOptionalParams'
  - uid: '@azure/synapse.SparkBatchGetOptionalParams'
    name: SparkBatchGetOptionalParams
    spec.typeScript:
      - name: SparkBatchGetOptionalParams
        fullName: SparkBatchGetOptionalParams
        uid: '@azure/synapse.SparkBatchGetOptionalParams'
  - uid: ServiceCallback<@azure/synapse.ExtendedLivyListBatchResponse>
    name: ExtendedLivyListBatchResponse>
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: ExtendedLivyListBatchResponse
        fullName: ExtendedLivyListBatchResponse
        uid: '@azure/synapse.ExtendedLivyListBatchResponse'
      - name: '>'
        fullName: '>'
  - uid: '@azure/synapse.SparkBatchListOptionalParams'
    name: SparkBatchListOptionalParams
    spec.typeScript:
      - name: SparkBatchListOptionalParams
        fullName: SparkBatchListOptionalParams
        uid: '@azure/synapse.SparkBatchListOptionalParams'
