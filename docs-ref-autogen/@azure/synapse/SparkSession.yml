### YamlMime:UniversalReference
items:
  - uid: '@azure/synapse.SparkSession'
    name: SparkSession
    fullName: SparkSession
    children:
      - '@azure/synapse.SparkSession.create'
      - '@azure/synapse.SparkSession.create_1'
      - '@azure/synapse.SparkSession.create_2'
      - '@azure/synapse.SparkSession.createStatement'
      - '@azure/synapse.SparkSession.createStatement_2'
      - '@azure/synapse.SparkSession.createStatement_1'
      - '@azure/synapse.SparkSession.deleteMethod'
      - '@azure/synapse.SparkSession.deleteMethod_2'
      - '@azure/synapse.SparkSession.deleteMethod_1'
      - '@azure/synapse.SparkSession.deleteStatement'
      - '@azure/synapse.SparkSession.deleteStatement_2'
      - '@azure/synapse.SparkSession.deleteStatement_1'
      - '@azure/synapse.SparkSession.get'
      - '@azure/synapse.SparkSession.get_1'
      - '@azure/synapse.SparkSession.get_2'
      - '@azure/synapse.SparkSession.getStatement'
      - '@azure/synapse.SparkSession.getStatement_2'
      - '@azure/synapse.SparkSession.getStatement_1'
      - '@azure/synapse.SparkSession.list'
      - '@azure/synapse.SparkSession.list_1'
      - '@azure/synapse.SparkSession.list_2'
      - '@azure/synapse.SparkSession.listStatements'
      - '@azure/synapse.SparkSession.listStatements_2'
      - '@azure/synapse.SparkSession.listStatements_1'
      - '@azure/synapse.SparkSession.resetTimeout'
      - '@azure/synapse.SparkSession.resetTimeout_2'
      - '@azure/synapse.SparkSession.resetTimeout_1'
      - '@azure/synapse.SparkSession.constructor'
    langs:
      - typeScript
    type: class
    summary: Class representing a SparkSession.
    package: '@azure/synapse'
  - uid: '@azure/synapse.SparkSession.create'
    name: >-
      create(string, string, ExtendedLivySessionRequest,
      Models.SparkSessionCreateOptionalParams)
    children: []
    type: method
    langs:
      - typeScript
    summary: Create new spark session.
    syntax:
      content: >-
        function create(workspaceName: string, sparkPoolName: string,
        livyRequest: ExtendedLivySessionRequest, options?:
        Models.SparkSessionCreateOptionalParams)
      parameters:
        - id: workspaceName
          type:
            - string
          description: The name of the workspace to execute operations on.
        - id: sparkPoolName
          type:
            - string
          description: Name of the spark pool. "ondemand" targets the ondemand pool.
        - id: livyRequest
          type:
            - '@azure/synapse.ExtendedLivySessionRequest'
          description: Livy compatible batch job request payload.
        - id: options
          type:
            - Models.SparkSessionCreateOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.SparkSessionCreateResponse>
        description: Promise<Models.SparkSessionCreateResponse>
    package: '@azure/synapse'
  - uid: '@azure/synapse.SparkSession.create_1'
    name: >-
      create(string, string, ExtendedLivySessionRequest,
      ServiceCallback<ExtendedLivySessionResponse>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function create(workspaceName: string, sparkPoolName: string,
        livyRequest: ExtendedLivySessionRequest, callback:
        ServiceCallback<ExtendedLivySessionResponse>)
      parameters:
        - id: workspaceName
          type:
            - string
          description: The name of the workspace to execute operations on.
        - id: sparkPoolName
          type:
            - string
          description: Name of the spark pool. "ondemand" targets the ondemand pool.
        - id: livyRequest
          type:
            - '@azure/synapse.ExtendedLivySessionRequest'
          description: Livy compatible batch job request payload.
        - id: callback
          type:
            - ServiceCallback<@azure/synapse.ExtendedLivySessionResponse>
          description: |
            The callback
    package: '@azure/synapse'
  - uid: '@azure/synapse.SparkSession.create_2'
    name: >-
      create(string, string, ExtendedLivySessionRequest,
      SparkSessionCreateOptionalParams,
      ServiceCallback<ExtendedLivySessionResponse>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function create(workspaceName: string, sparkPoolName: string,
        livyRequest: ExtendedLivySessionRequest, options:
        SparkSessionCreateOptionalParams, callback:
        ServiceCallback<ExtendedLivySessionResponse>)
      parameters:
        - id: workspaceName
          type:
            - string
          description: The name of the workspace to execute operations on.
        - id: sparkPoolName
          type:
            - string
          description: Name of the spark pool. "ondemand" targets the ondemand pool.
        - id: livyRequest
          type:
            - '@azure/synapse.ExtendedLivySessionRequest'
          description: Livy compatible batch job request payload.
        - id: options
          type:
            - '@azure/synapse.SparkSessionCreateOptionalParams'
          description: The optional parameters
        - id: callback
          type:
            - ServiceCallback<@azure/synapse.ExtendedLivySessionResponse>
          description: |
            The callback
    package: '@azure/synapse'
  - uid: '@azure/synapse.SparkSession.createStatement'
    name: >-
      createStatement(string, string, number, LivyStatementRequestBody,
      msRest.RequestOptionsBase)
    children: []
    type: method
    langs:
      - typeScript
    summary: Create statement within a spark session.
    syntax:
      content: >-
        function createStatement(workspaceName: string, sparkPoolName: string,
        sessionId: number, livyRequest: LivyStatementRequestBody, options?:
        msRest.RequestOptionsBase)
      parameters:
        - id: workspaceName
          type:
            - string
          description: The name of the workspace to execute operations on.
        - id: sparkPoolName
          type:
            - string
          description: Name of the spark pool. "ondemand" targets the ondemand pool.
        - id: sessionId
          type:
            - number
          description: Identifier for the session.
        - id: livyRequest
          type:
            - '@azure/synapse.LivyStatementRequestBody'
          description: Livy compatible batch job request payload.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.SparkSessionCreateStatementResponse>
        description: Promise<Models.SparkSessionCreateStatementResponse>
    package: '@azure/synapse'
  - uid: '@azure/synapse.SparkSession.createStatement_2'
    name: >-
      createStatement(string, string, number, LivyStatementRequestBody,
      RequestOptionsBase, ServiceCallback<LivyStatementResponseBody>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function createStatement(workspaceName: string, sparkPoolName: string,
        sessionId: number, livyRequest: LivyStatementRequestBody, options:
        RequestOptionsBase, callback:
        ServiceCallback<LivyStatementResponseBody>)
      parameters:
        - id: workspaceName
          type:
            - string
          description: The name of the workspace to execute operations on.
        - id: sparkPoolName
          type:
            - string
          description: Name of the spark pool. "ondemand" targets the ondemand pool.
        - id: sessionId
          type:
            - number
          description: Identifier for the session.
        - id: livyRequest
          type:
            - '@azure/synapse.LivyStatementRequestBody'
          description: Livy compatible batch job request payload.
        - id: options
          type:
            - RequestOptionsBase
          description: The optional parameters
        - id: callback
          type:
            - ServiceCallback<@azure/synapse.LivyStatementResponseBody>
          description: |
            The callback
    package: '@azure/synapse'
  - uid: '@azure/synapse.SparkSession.createStatement_1'
    name: >-
      createStatement(string, string, number, LivyStatementRequestBody,
      ServiceCallback<LivyStatementResponseBody>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function createStatement(workspaceName: string, sparkPoolName: string,
        sessionId: number, livyRequest: LivyStatementRequestBody, callback:
        ServiceCallback<LivyStatementResponseBody>)
      parameters:
        - id: workspaceName
          type:
            - string
          description: The name of the workspace to execute operations on.
        - id: sparkPoolName
          type:
            - string
          description: Name of the spark pool. "ondemand" targets the ondemand pool.
        - id: sessionId
          type:
            - number
          description: Identifier for the session.
        - id: livyRequest
          type:
            - '@azure/synapse.LivyStatementRequestBody'
          description: Livy compatible batch job request payload.
        - id: callback
          type:
            - ServiceCallback<@azure/synapse.LivyStatementResponseBody>
          description: |
            The callback
    package: '@azure/synapse'
  - uid: '@azure/synapse.SparkSession.deleteMethod'
    name: 'deleteMethod(string, string, number, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Cancels a running spark session.
    syntax:
      content: >-
        function deleteMethod(workspaceName: string, sparkPoolName: string,
        sessionId: number, options?: msRest.RequestOptionsBase)
      parameters:
        - id: workspaceName
          type:
            - string
          description: The name of the workspace to execute operations on.
        - id: sparkPoolName
          type:
            - string
          description: |-
            Name of the spark pool. "ondemand"
            targets the ondemand pool.
        - id: sessionId
          type:
            - number
          description: Identifier for the session.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<RestResponse>
        description: Promise<msRest.RestResponse>
    package: '@azure/synapse'
  - uid: '@azure/synapse.SparkSession.deleteMethod_2'
    name: >-
      deleteMethod(string, string, number, RequestOptionsBase,
      ServiceCallback<void>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function deleteMethod(workspaceName: string, sparkPoolName: string,
        sessionId: number, options: RequestOptionsBase, callback:
        ServiceCallback<void>)
      parameters:
        - id: workspaceName
          type:
            - string
          description: The name of the workspace to execute operations on.
        - id: sparkPoolName
          type:
            - string
          description: |-
            Name of the spark pool. "ondemand"
            targets the ondemand pool.
        - id: sessionId
          type:
            - number
          description: Identifier for the session.
        - id: options
          type:
            - RequestOptionsBase
          description: The optional parameters
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            The callback
    package: '@azure/synapse'
  - uid: '@azure/synapse.SparkSession.deleteMethod_1'
    name: 'deleteMethod(string, string, number, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function deleteMethod(workspaceName: string, sparkPoolName: string,
        sessionId: number, callback: ServiceCallback<void>)
      parameters:
        - id: workspaceName
          type:
            - string
          description: The name of the workspace to execute operations on.
        - id: sparkPoolName
          type:
            - string
          description: |-
            Name of the spark pool. "ondemand"
            targets the ondemand pool.
        - id: sessionId
          type:
            - number
          description: Identifier for the session.
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            The callback
    package: '@azure/synapse'
  - uid: '@azure/synapse.SparkSession.deleteStatement'
    name: 'deleteStatement(string, string, number, number, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Kill a statement within a session.
    syntax:
      content: >-
        function deleteStatement(workspaceName: string, sparkPoolName: string,
        sessionId: number, statementId: number, options?:
        msRest.RequestOptionsBase)
      parameters:
        - id: workspaceName
          type:
            - string
          description: The name of the workspace to execute operations on.
        - id: sparkPoolName
          type:
            - string
          description: Name of the spark pool. "ondemand" targets the ondemand pool.
        - id: sessionId
          type:
            - number
          description: Identifier for the session.
        - id: statementId
          type:
            - number
          description: Identifier for the statement.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.SparkSessionDeleteStatementResponse>
        description: Promise<Models.SparkSessionDeleteStatementResponse>
    package: '@azure/synapse'
  - uid: '@azure/synapse.SparkSession.deleteStatement_2'
    name: >-
      deleteStatement(string, string, number, number, RequestOptionsBase,
      ServiceCallback<LivyStatementCancellationResponse>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function deleteStatement(workspaceName: string, sparkPoolName: string,
        sessionId: number, statementId: number, options: RequestOptionsBase,
        callback: ServiceCallback<LivyStatementCancellationResponse>)
      parameters:
        - id: workspaceName
          type:
            - string
          description: The name of the workspace to execute operations on.
        - id: sparkPoolName
          type:
            - string
          description: Name of the spark pool. "ondemand" targets the ondemand pool.
        - id: sessionId
          type:
            - number
          description: Identifier for the session.
        - id: statementId
          type:
            - number
          description: Identifier for the statement.
        - id: options
          type:
            - RequestOptionsBase
          description: The optional parameters
        - id: callback
          type:
            - ServiceCallback<@azure/synapse.LivyStatementCancellationResponse>
          description: |
            The callback
    package: '@azure/synapse'
  - uid: '@azure/synapse.SparkSession.deleteStatement_1'
    name: >-
      deleteStatement(string, string, number, number,
      ServiceCallback<LivyStatementCancellationResponse>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function deleteStatement(workspaceName: string, sparkPoolName: string,
        sessionId: number, statementId: number, callback:
        ServiceCallback<LivyStatementCancellationResponse>)
      parameters:
        - id: workspaceName
          type:
            - string
          description: The name of the workspace to execute operations on.
        - id: sparkPoolName
          type:
            - string
          description: Name of the spark pool. "ondemand" targets the ondemand pool.
        - id: sessionId
          type:
            - number
          description: Identifier for the session.
        - id: statementId
          type:
            - number
          description: Identifier for the statement.
        - id: callback
          type:
            - ServiceCallback<@azure/synapse.LivyStatementCancellationResponse>
          description: |
            The callback
    package: '@azure/synapse'
  - uid: '@azure/synapse.SparkSession.get'
    name: 'get(string, string, number, Models.SparkSessionGetOptionalParams)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Gets a single spark session.
    syntax:
      content: >-
        function get(workspaceName: string, sparkPoolName: string, sessionId:
        number, options?: Models.SparkSessionGetOptionalParams)
      parameters:
        - id: workspaceName
          type:
            - string
          description: The name of the workspace to execute operations on.
        - id: sparkPoolName
          type:
            - string
          description: Name of the spark pool. "ondemand" targets the ondemand pool.
        - id: sessionId
          type:
            - number
          description: Identifier for the session.
        - id: options
          type:
            - Models.SparkSessionGetOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.SparkSessionGetResponse>
        description: Promise<Models.SparkSessionGetResponse>
    package: '@azure/synapse'
  - uid: '@azure/synapse.SparkSession.get_1'
    name: 'get(string, string, number, ServiceCallback<ExtendedLivySessionResponse>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function get(workspaceName: string, sparkPoolName: string, sessionId:
        number, callback: ServiceCallback<ExtendedLivySessionResponse>)
      parameters:
        - id: workspaceName
          type:
            - string
          description: The name of the workspace to execute operations on.
        - id: sparkPoolName
          type:
            - string
          description: Name of the spark pool. "ondemand" targets the ondemand pool.
        - id: sessionId
          type:
            - number
          description: Identifier for the session.
        - id: callback
          type:
            - ServiceCallback<@azure/synapse.ExtendedLivySessionResponse>
          description: |
            The callback
    package: '@azure/synapse'
  - uid: '@azure/synapse.SparkSession.get_2'
    name: >-
      get(string, string, number, SparkSessionGetOptionalParams,
      ServiceCallback<ExtendedLivySessionResponse>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function get(workspaceName: string, sparkPoolName: string, sessionId:
        number, options: SparkSessionGetOptionalParams, callback:
        ServiceCallback<ExtendedLivySessionResponse>)
      parameters:
        - id: workspaceName
          type:
            - string
          description: The name of the workspace to execute operations on.
        - id: sparkPoolName
          type:
            - string
          description: Name of the spark pool. "ondemand" targets the ondemand pool.
        - id: sessionId
          type:
            - number
          description: Identifier for the session.
        - id: options
          type:
            - '@azure/synapse.SparkSessionGetOptionalParams'
          description: The optional parameters
        - id: callback
          type:
            - ServiceCallback<@azure/synapse.ExtendedLivySessionResponse>
          description: |
            The callback
    package: '@azure/synapse'
  - uid: '@azure/synapse.SparkSession.getStatement'
    name: 'getStatement(string, string, number, number, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Gets a single statement within a spark session.
    syntax:
      content: >-
        function getStatement(workspaceName: string, sparkPoolName: string,
        sessionId: number, statementId: number, options?:
        msRest.RequestOptionsBase)
      parameters:
        - id: workspaceName
          type:
            - string
          description: The name of the workspace to execute operations on.
        - id: sparkPoolName
          type:
            - string
          description: Name of the spark pool. "ondemand" targets the ondemand pool.
        - id: sessionId
          type:
            - number
          description: Identifier for the session.
        - id: statementId
          type:
            - number
          description: Identifier for the statement.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.SparkSessionGetStatementResponse>
        description: Promise<Models.SparkSessionGetStatementResponse>
    package: '@azure/synapse'
  - uid: '@azure/synapse.SparkSession.getStatement_2'
    name: >-
      getStatement(string, string, number, number, RequestOptionsBase,
      ServiceCallback<LivyStatementResponseBody>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function getStatement(workspaceName: string, sparkPoolName: string,
        sessionId: number, statementId: number, options: RequestOptionsBase,
        callback: ServiceCallback<LivyStatementResponseBody>)
      parameters:
        - id: workspaceName
          type:
            - string
          description: The name of the workspace to execute operations on.
        - id: sparkPoolName
          type:
            - string
          description: Name of the spark pool. "ondemand" targets the ondemand pool.
        - id: sessionId
          type:
            - number
          description: Identifier for the session.
        - id: statementId
          type:
            - number
          description: Identifier for the statement.
        - id: options
          type:
            - RequestOptionsBase
          description: The optional parameters
        - id: callback
          type:
            - ServiceCallback<@azure/synapse.LivyStatementResponseBody>
          description: |
            The callback
    package: '@azure/synapse'
  - uid: '@azure/synapse.SparkSession.getStatement_1'
    name: >-
      getStatement(string, string, number, number,
      ServiceCallback<LivyStatementResponseBody>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function getStatement(workspaceName: string, sparkPoolName: string,
        sessionId: number, statementId: number, callback:
        ServiceCallback<LivyStatementResponseBody>)
      parameters:
        - id: workspaceName
          type:
            - string
          description: The name of the workspace to execute operations on.
        - id: sparkPoolName
          type:
            - string
          description: Name of the spark pool. "ondemand" targets the ondemand pool.
        - id: sessionId
          type:
            - number
          description: Identifier for the session.
        - id: statementId
          type:
            - number
          description: Identifier for the statement.
        - id: callback
          type:
            - ServiceCallback<@azure/synapse.LivyStatementResponseBody>
          description: |
            The callback
    package: '@azure/synapse'
  - uid: '@azure/synapse.SparkSession.list'
    name: 'list(string, string, Models.SparkSessionListOptionalParams)'
    children: []
    type: method
    langs:
      - typeScript
    summary: List all spark sessions which are running under a particular spark pool.
    syntax:
      content: >-
        function list(workspaceName: string, sparkPoolName: string, options?:
        Models.SparkSessionListOptionalParams)
      parameters:
        - id: workspaceName
          type:
            - string
          description: The name of the workspace to execute operations on.
        - id: sparkPoolName
          type:
            - string
          description: Name of the spark pool. "ondemand" targets the ondemand pool.
        - id: options
          type:
            - Models.SparkSessionListOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.SparkSessionListResponse>
        description: Promise<Models.SparkSessionListResponse>
    package: '@azure/synapse'
  - uid: '@azure/synapse.SparkSession.list_1'
    name: 'list(string, string, ServiceCallback<ExtendedLivyListSessionResponse>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function list(workspaceName: string, sparkPoolName: string, callback:
        ServiceCallback<ExtendedLivyListSessionResponse>)
      parameters:
        - id: workspaceName
          type:
            - string
          description: The name of the workspace to execute operations on.
        - id: sparkPoolName
          type:
            - string
          description: Name of the spark pool. "ondemand" targets the ondemand pool.
        - id: callback
          type:
            - ServiceCallback<@azure/synapse.ExtendedLivyListSessionResponse>
          description: |
            The callback
    package: '@azure/synapse'
  - uid: '@azure/synapse.SparkSession.list_2'
    name: >-
      list(string, string, SparkSessionListOptionalParams,
      ServiceCallback<ExtendedLivyListSessionResponse>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function list(workspaceName: string, sparkPoolName: string, options:
        SparkSessionListOptionalParams, callback:
        ServiceCallback<ExtendedLivyListSessionResponse>)
      parameters:
        - id: workspaceName
          type:
            - string
          description: The name of the workspace to execute operations on.
        - id: sparkPoolName
          type:
            - string
          description: Name of the spark pool. "ondemand" targets the ondemand pool.
        - id: options
          type:
            - '@azure/synapse.SparkSessionListOptionalParams'
          description: The optional parameters
        - id: callback
          type:
            - ServiceCallback<@azure/synapse.ExtendedLivyListSessionResponse>
          description: |
            The callback
    package: '@azure/synapse'
  - uid: '@azure/synapse.SparkSession.listStatements'
    name: 'listStatements(string, string, number, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Gets a list of statements within a spark session.
    syntax:
      content: >-
        function listStatements(workspaceName: string, sparkPoolName: string,
        sessionId: number, options?: msRest.RequestOptionsBase)
      parameters:
        - id: workspaceName
          type:
            - string
          description: The name of the workspace to execute operations on.
        - id: sparkPoolName
          type:
            - string
          description: Name of the spark pool. "ondemand" targets the ondemand pool.
        - id: sessionId
          type:
            - number
          description: Identifier for the session.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.SparkSessionListStatementsResponse>
        description: Promise<Models.SparkSessionListStatementsResponse>
    package: '@azure/synapse'
  - uid: '@azure/synapse.SparkSession.listStatements_2'
    name: >-
      listStatements(string, string, number, RequestOptionsBase,
      ServiceCallback<LivyStatementsResponseBody>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function listStatements(workspaceName: string, sparkPoolName: string,
        sessionId: number, options: RequestOptionsBase, callback:
        ServiceCallback<LivyStatementsResponseBody>)
      parameters:
        - id: workspaceName
          type:
            - string
          description: The name of the workspace to execute operations on.
        - id: sparkPoolName
          type:
            - string
          description: Name of the spark pool. "ondemand" targets the ondemand pool.
        - id: sessionId
          type:
            - number
          description: Identifier for the session.
        - id: options
          type:
            - RequestOptionsBase
          description: The optional parameters
        - id: callback
          type:
            - ServiceCallback<@azure/synapse.LivyStatementsResponseBody>
          description: |
            The callback
    package: '@azure/synapse'
  - uid: '@azure/synapse.SparkSession.listStatements_1'
    name: >-
      listStatements(string, string, number,
      ServiceCallback<LivyStatementsResponseBody>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function listStatements(workspaceName: string, sparkPoolName: string,
        sessionId: number, callback:
        ServiceCallback<LivyStatementsResponseBody>)
      parameters:
        - id: workspaceName
          type:
            - string
          description: The name of the workspace to execute operations on.
        - id: sparkPoolName
          type:
            - string
          description: Name of the spark pool. "ondemand" targets the ondemand pool.
        - id: sessionId
          type:
            - number
          description: Identifier for the session.
        - id: callback
          type:
            - ServiceCallback<@azure/synapse.LivyStatementsResponseBody>
          description: |
            The callback
    package: '@azure/synapse'
  - uid: '@azure/synapse.SparkSession.resetTimeout'
    name: 'resetTimeout(string, string, number, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      Sends a keep alive call to the current session to reset the session
      timeout.
    syntax:
      content: >-
        function resetTimeout(workspaceName: string, sparkPoolName: string,
        sessionId: number, options?: msRest.RequestOptionsBase)
      parameters:
        - id: workspaceName
          type:
            - string
          description: The name of the workspace to execute operations on.
        - id: sparkPoolName
          type:
            - string
          description: |-
            Name of the spark pool. "ondemand"
            targets the ondemand pool.
        - id: sessionId
          type:
            - number
          description: Identifier for the session.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<RestResponse>
        description: Promise<msRest.RestResponse>
    package: '@azure/synapse'
  - uid: '@azure/synapse.SparkSession.resetTimeout_2'
    name: >-
      resetTimeout(string, string, number, RequestOptionsBase,
      ServiceCallback<void>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function resetTimeout(workspaceName: string, sparkPoolName: string,
        sessionId: number, options: RequestOptionsBase, callback:
        ServiceCallback<void>)
      parameters:
        - id: workspaceName
          type:
            - string
          description: The name of the workspace to execute operations on.
        - id: sparkPoolName
          type:
            - string
          description: |-
            Name of the spark pool. "ondemand"
            targets the ondemand pool.
        - id: sessionId
          type:
            - number
          description: Identifier for the session.
        - id: options
          type:
            - RequestOptionsBase
          description: The optional parameters
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            The callback
    package: '@azure/synapse'
  - uid: '@azure/synapse.SparkSession.resetTimeout_1'
    name: 'resetTimeout(string, string, number, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function resetTimeout(workspaceName: string, sparkPoolName: string,
        sessionId: number, callback: ServiceCallback<void>)
      parameters:
        - id: workspaceName
          type:
            - string
          description: The name of the workspace to execute operations on.
        - id: sparkPoolName
          type:
            - string
          description: |-
            Name of the spark pool. "ondemand"
            targets the ondemand pool.
        - id: sessionId
          type:
            - number
          description: Identifier for the session.
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            The callback
    package: '@azure/synapse'
  - uid: '@azure/synapse.SparkSession.constructor'
    name: SparkSession(SynapseClientContext)
    children: []
    type: constructor
    langs:
      - typeScript
    summary: Create a SparkSession.
    syntax:
      content: 'new SparkSession(client: SynapseClientContext)'
      parameters:
        - id: client
          type:
            - '@azure/synapse.SynapseClientContext'
          description: |
            Reference to the service client.
    package: '@azure/synapse'
references:
  - uid: '@azure/synapse.SynapseClientContext'
    name: SynapseClientContext
    spec.typeScript:
      - name: SynapseClientContext
        fullName: SynapseClientContext
        uid: '@azure/synapse.SynapseClientContext'
  - uid: '@azure/synapse.ExtendedLivySessionRequest'
    name: ExtendedLivySessionRequest
    spec.typeScript:
      - name: ExtendedLivySessionRequest
        fullName: ExtendedLivySessionRequest
        uid: '@azure/synapse.ExtendedLivySessionRequest'
  - uid: ServiceCallback<@azure/synapse.ExtendedLivySessionResponse>
    name: ExtendedLivySessionResponse>
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: ExtendedLivySessionResponse
        fullName: ExtendedLivySessionResponse
        uid: '@azure/synapse.ExtendedLivySessionResponse'
      - name: '>'
        fullName: '>'
  - uid: '@azure/synapse.SparkSessionCreateOptionalParams'
    name: SparkSessionCreateOptionalParams
    spec.typeScript:
      - name: SparkSessionCreateOptionalParams
        fullName: SparkSessionCreateOptionalParams
        uid: '@azure/synapse.SparkSessionCreateOptionalParams'
  - uid: '@azure/synapse.LivyStatementRequestBody'
    name: LivyStatementRequestBody
    spec.typeScript:
      - name: LivyStatementRequestBody
        fullName: LivyStatementRequestBody
        uid: '@azure/synapse.LivyStatementRequestBody'
  - uid: ServiceCallback<@azure/synapse.LivyStatementResponseBody>
    name: LivyStatementResponseBody>
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: LivyStatementResponseBody
        fullName: LivyStatementResponseBody
        uid: '@azure/synapse.LivyStatementResponseBody'
      - name: '>'
        fullName: '>'
  - uid: ServiceCallback<@azure/synapse.LivyStatementCancellationResponse>
    name: LivyStatementCancellationResponse>
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: LivyStatementCancellationResponse
        fullName: LivyStatementCancellationResponse
        uid: '@azure/synapse.LivyStatementCancellationResponse'
      - name: '>'
        fullName: '>'
  - uid: '@azure/synapse.SparkSessionGetOptionalParams'
    name: SparkSessionGetOptionalParams
    spec.typeScript:
      - name: SparkSessionGetOptionalParams
        fullName: SparkSessionGetOptionalParams
        uid: '@azure/synapse.SparkSessionGetOptionalParams'
  - uid: ServiceCallback<@azure/synapse.ExtendedLivyListSessionResponse>
    name: ExtendedLivyListSessionResponse>
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: ExtendedLivyListSessionResponse
        fullName: ExtendedLivyListSessionResponse
        uid: '@azure/synapse.ExtendedLivyListSessionResponse'
      - name: '>'
        fullName: '>'
  - uid: '@azure/synapse.SparkSessionListOptionalParams'
    name: SparkSessionListOptionalParams
    spec.typeScript:
      - name: SparkSessionListOptionalParams
        fullName: SparkSessionListOptionalParams
        uid: '@azure/synapse.SparkSessionListOptionalParams'
  - uid: ServiceCallback<@azure/synapse.LivyStatementsResponseBody>
    name: LivyStatementsResponseBody>
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: LivyStatementsResponseBody
        fullName: LivyStatementsResponseBody
        uid: '@azure/synapse.LivyStatementsResponseBody'
      - name: '>'
        fullName: '>'
