### YamlMime:UniversalReference
items:
  - uid: '@azure/arm-security.Assessments'
    name: Assessments
    fullName: Assessments
    children:
      - '@azure/arm-security.Assessments.constructor'
      - '@azure/arm-security.Assessments.createOrUpdate'
      - '@azure/arm-security.Assessments.createOrUpdate_2'
      - '@azure/arm-security.Assessments.createOrUpdate_1'
      - '@azure/arm-security.Assessments.deleteMethod'
      - '@azure/arm-security.Assessments.deleteMethod_2'
      - '@azure/arm-security.Assessments.deleteMethod_1'
      - '@azure/arm-security.Assessments.get_2'
      - '@azure/arm-security.Assessments.get'
      - '@azure/arm-security.Assessments.get_1'
      - '@azure/arm-security.Assessments.list'
      - '@azure/arm-security.Assessments.list_2'
      - '@azure/arm-security.Assessments.list_1'
      - '@azure/arm-security.Assessments.listNext'
      - '@azure/arm-security.Assessments.listNext_2'
      - '@azure/arm-security.Assessments.listNext_1'
    langs:
      - typeScript
    type: class
    summary: Class representing a Assessments.
    package: '@azure/arm-security'
  - uid: '@azure/arm-security.Assessments.constructor'
    name: Assessments(SecurityCenterContext)
    children: []
    type: constructor
    langs:
      - typeScript
    summary: Create a Assessments.
    syntax:
      content: 'new Assessments(client: SecurityCenterContext)'
      parameters:
        - id: client
          type:
            - '@azure/arm-security.SecurityCenterContext'
          description: |
            Reference to the service client.
    package: '@azure/arm-security'
  - uid: '@azure/arm-security.Assessments.createOrUpdate'
    name: >-
      createOrUpdate(string, string, SecurityAssessment,
      msRest.RequestOptionsBase)
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      Create a security assessment on your resource. An assessment metadata that
      describes this

      assessment must be predefined with the same name before inserting the
      assessment result
    syntax:
      content: >-
        function createOrUpdate(resourceId: string, assessmentName: string,
        assessment: SecurityAssessment, options?: msRest.RequestOptionsBase)
      parameters:
        - id: resourceId
          type:
            - string
          description: The identifier of the resource.
        - id: assessmentName
          type:
            - string
          description: The Assessment Key - Unique key for the assessment type
        - id: assessment
          type:
            - '@azure/arm-security.SecurityAssessment'
          description: Calculated assessment on a pre-defined assessment metadata
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.AssessmentsCreateOrUpdateResponse>
        description: Promise<Models.AssessmentsCreateOrUpdateResponse>
    package: '@azure/arm-security'
  - uid: '@azure/arm-security.Assessments.createOrUpdate_2'
    name: >-
      createOrUpdate(string, string, SecurityAssessment, RequestOptionsBase,
      ServiceCallback<SecurityAssessment>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function createOrUpdate(resourceId: string, assessmentName: string,
        assessment: SecurityAssessment, options: RequestOptionsBase, callback:
        ServiceCallback<SecurityAssessment>)
      parameters:
        - id: resourceId
          type:
            - string
          description: The identifier of the resource.
        - id: assessmentName
          type:
            - string
          description: The Assessment Key - Unique key for the assessment type
        - id: assessment
          type:
            - '@azure/arm-security.SecurityAssessment'
          description: Calculated assessment on a pre-defined assessment metadata
        - id: options
          type:
            - RequestOptionsBase
          description: The optional parameters
        - id: callback
          type:
            - ServiceCallback<@azure/arm-security.SecurityAssessment>
          description: |
            The callback
    package: '@azure/arm-security'
  - uid: '@azure/arm-security.Assessments.createOrUpdate_1'
    name: >-
      createOrUpdate(string, string, SecurityAssessment,
      ServiceCallback<SecurityAssessment>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function createOrUpdate(resourceId: string, assessmentName: string,
        assessment: SecurityAssessment, callback:
        ServiceCallback<SecurityAssessment>)
      parameters:
        - id: resourceId
          type:
            - string
          description: The identifier of the resource.
        - id: assessmentName
          type:
            - string
          description: The Assessment Key - Unique key for the assessment type
        - id: assessment
          type:
            - '@azure/arm-security.SecurityAssessment'
          description: Calculated assessment on a pre-defined assessment metadata
        - id: callback
          type:
            - ServiceCallback<@azure/arm-security.SecurityAssessment>
          description: |
            The callback
    package: '@azure/arm-security'
  - uid: '@azure/arm-security.Assessments.deleteMethod'
    name: 'deleteMethod(string, string, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      Delete a security assessment on your resource. An assessment metadata that
      describes this

      assessment must be predefined with the same name before inserting the
      assessment result
    syntax:
      content: >-
        function deleteMethod(resourceId: string, assessmentName: string,
        options?: msRest.RequestOptionsBase)
      parameters:
        - id: resourceId
          type:
            - string
          description: The identifier of the resource.
        - id: assessmentName
          type:
            - string
          description: The Assessment Key - Unique key for the assessment type
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<RestResponse>
        description: Promise<msRest.RestResponse>
    package: '@azure/arm-security'
  - uid: '@azure/arm-security.Assessments.deleteMethod_2'
    name: 'deleteMethod(string, string, RequestOptionsBase, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function deleteMethod(resourceId: string, assessmentName: string,
        options: RequestOptionsBase, callback: ServiceCallback<void>)
      parameters:
        - id: resourceId
          type:
            - string
          description: The identifier of the resource.
        - id: assessmentName
          type:
            - string
          description: The Assessment Key - Unique key for the assessment type
        - id: options
          type:
            - RequestOptionsBase
          description: The optional parameters
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            The callback
    package: '@azure/arm-security'
  - uid: '@azure/arm-security.Assessments.deleteMethod_1'
    name: 'deleteMethod(string, string, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function deleteMethod(resourceId: string, assessmentName: string,
        callback: ServiceCallback<void>)
      parameters:
        - id: resourceId
          type:
            - string
          description: The identifier of the resource.
        - id: assessmentName
          type:
            - string
          description: The Assessment Key - Unique key for the assessment type
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            The callback
    package: '@azure/arm-security'
  - uid: '@azure/arm-security.Assessments.get_2'
    name: >-
      get(string, string, AssessmentsGetOptionalParams,
      ServiceCallback<SecurityAssessment>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function get(resourceId: string, assessmentName: string, options:
        AssessmentsGetOptionalParams, callback:
        ServiceCallback<SecurityAssessment>)
      parameters:
        - id: resourceId
          type:
            - string
          description: The identifier of the resource.
        - id: assessmentName
          type:
            - string
          description: The Assessment Key - Unique key for the assessment type
        - id: options
          type:
            - '@azure/arm-security.AssessmentsGetOptionalParams'
          description: The optional parameters
        - id: callback
          type:
            - ServiceCallback<@azure/arm-security.SecurityAssessment>
          description: |
            The callback
    package: '@azure/arm-security'
  - uid: '@azure/arm-security.Assessments.get'
    name: 'get(string, string, Models.AssessmentsGetOptionalParams)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Get a security assessment on your scanned resource
    syntax:
      content: >-
        function get(resourceId: string, assessmentName: string, options?:
        Models.AssessmentsGetOptionalParams)
      parameters:
        - id: resourceId
          type:
            - string
          description: The identifier of the resource.
        - id: assessmentName
          type:
            - string
          description: The Assessment Key - Unique key for the assessment type
        - id: options
          type:
            - Models.AssessmentsGetOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.AssessmentsGetResponse>
        description: Promise<Models.AssessmentsGetResponse>
    package: '@azure/arm-security'
  - uid: '@azure/arm-security.Assessments.get_1'
    name: 'get(string, string, ServiceCallback<SecurityAssessment>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function get(resourceId: string, assessmentName: string, callback:
        ServiceCallback<SecurityAssessment>)
      parameters:
        - id: resourceId
          type:
            - string
          description: The identifier of the resource.
        - id: assessmentName
          type:
            - string
          description: The Assessment Key - Unique key for the assessment type
        - id: callback
          type:
            - ServiceCallback<@azure/arm-security.SecurityAssessment>
          description: |
            The callback
    package: '@azure/arm-security'
  - uid: '@azure/arm-security.Assessments.list'
    name: 'list(string, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Get security assessments on all your scanned resources inside a scope
    syntax:
      content: 'function list(scope: string, options?: msRest.RequestOptionsBase)'
      parameters:
        - id: scope
          type:
            - string
          description: >-
            Scope of the query, can be subscription

            (/subscriptions/0b06d9ea-afe6-4779-bd59-30e5c2d9d13f) or management
            group

            (/providers/Microsoft.Management/managementGroups/mgName).
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.AssessmentsListResponse>
        description: Promise<Models.AssessmentsListResponse>
    package: '@azure/arm-security'
  - uid: '@azure/arm-security.Assessments.list_2'
    name: 'list(string, RequestOptionsBase, ServiceCallback<SecurityAssessmentList>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function list(scope: string, options: RequestOptionsBase, callback:
        ServiceCallback<SecurityAssessmentList>)
      parameters:
        - id: scope
          type:
            - string
          description: >-
            Scope of the query, can be subscription

            (/subscriptions/0b06d9ea-afe6-4779-bd59-30e5c2d9d13f) or management
            group

            (/providers/Microsoft.Management/managementGroups/mgName).
        - id: options
          type:
            - RequestOptionsBase
          description: The optional parameters
        - id: callback
          type:
            - ServiceCallback<@azure/arm-security.SecurityAssessmentList>
          description: |
            The callback
    package: '@azure/arm-security'
  - uid: '@azure/arm-security.Assessments.list_1'
    name: 'list(string, ServiceCallback<SecurityAssessmentList>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function list(scope: string, callback:
        ServiceCallback<SecurityAssessmentList>)
      parameters:
        - id: scope
          type:
            - string
          description: >-
            Scope of the query, can be subscription

            (/subscriptions/0b06d9ea-afe6-4779-bd59-30e5c2d9d13f) or management
            group

            (/providers/Microsoft.Management/managementGroups/mgName).
        - id: callback
          type:
            - ServiceCallback<@azure/arm-security.SecurityAssessmentList>
          description: |
            The callback
    package: '@azure/arm-security'
  - uid: '@azure/arm-security.Assessments.listNext'
    name: 'listNext(string, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Get security assessments on all your scanned resources inside a scope
    syntax:
      content: >-
        function listNext(nextPageLink: string, options?:
        msRest.RequestOptionsBase)
      parameters:
        - id: nextPageLink
          type:
            - string
          description: The NextLink from the previous successful call to List operation.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.AssessmentsListNextResponse>
        description: Promise<Models.AssessmentsListNextResponse>
    package: '@azure/arm-security'
  - uid: '@azure/arm-security.Assessments.listNext_2'
    name: >-
      listNext(string, RequestOptionsBase,
      ServiceCallback<SecurityAssessmentList>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function listNext(nextPageLink: string, options: RequestOptionsBase,
        callback: ServiceCallback<SecurityAssessmentList>)
      parameters:
        - id: nextPageLink
          type:
            - string
          description: The NextLink from the previous successful call to List operation.
        - id: options
          type:
            - RequestOptionsBase
          description: The optional parameters
        - id: callback
          type:
            - ServiceCallback<@azure/arm-security.SecurityAssessmentList>
          description: |
            The callback
    package: '@azure/arm-security'
  - uid: '@azure/arm-security.Assessments.listNext_1'
    name: 'listNext(string, ServiceCallback<SecurityAssessmentList>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function listNext(nextPageLink: string, callback:
        ServiceCallback<SecurityAssessmentList>)
      parameters:
        - id: nextPageLink
          type:
            - string
          description: The NextLink from the previous successful call to List operation.
        - id: callback
          type:
            - ServiceCallback<@azure/arm-security.SecurityAssessmentList>
          description: |
            The callback
    package: '@azure/arm-security'
references:
  - uid: '@azure/arm-security.SecurityCenterContext'
    name: SecurityCenterContext
    spec.typeScript:
      - name: SecurityCenterContext
        fullName: SecurityCenterContext
        uid: '@azure/arm-security.SecurityCenterContext'
  - uid: '@azure/arm-security.SecurityAssessment'
    name: SecurityAssessment
    spec.typeScript:
      - name: SecurityAssessment
        fullName: SecurityAssessment
        uid: '@azure/arm-security.SecurityAssessment'
  - uid: ServiceCallback<@azure/arm-security.SecurityAssessment>
    name: SecurityAssessment>
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: SecurityAssessment
        fullName: SecurityAssessment
        uid: '@azure/arm-security.SecurityAssessment'
      - name: '>'
        fullName: '>'
  - uid: '@azure/arm-security.AssessmentsGetOptionalParams'
    name: AssessmentsGetOptionalParams
    spec.typeScript:
      - name: AssessmentsGetOptionalParams
        fullName: AssessmentsGetOptionalParams
        uid: '@azure/arm-security.AssessmentsGetOptionalParams'
  - uid: ServiceCallback<@azure/arm-security.SecurityAssessmentList>
    name: SecurityAssessmentList>
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: SecurityAssessmentList
        fullName: SecurityAssessmentList
        uid: '@azure/arm-security.SecurityAssessmentList'
      - name: '>'
        fullName: '>'
