### YamlMime:UniversalReference
items:
  - uid: '@azure/arm-security.SubAssessments'
    name: SubAssessments
    fullName: SubAssessments
    children:
      - '@azure/arm-security.SubAssessments.get'
      - '@azure/arm-security.SubAssessments.get_2'
      - '@azure/arm-security.SubAssessments.get_1'
      - '@azure/arm-security.SubAssessments.list'
      - '@azure/arm-security.SubAssessments.list_2'
      - '@azure/arm-security.SubAssessments.list_1'
      - '@azure/arm-security.SubAssessments.listAll'
      - '@azure/arm-security.SubAssessments.listAll_2'
      - '@azure/arm-security.SubAssessments.listAll_1'
      - '@azure/arm-security.SubAssessments.listAllNext'
      - '@azure/arm-security.SubAssessments.listAllNext_2'
      - '@azure/arm-security.SubAssessments.listAllNext_1'
      - '@azure/arm-security.SubAssessments.listNext'
      - '@azure/arm-security.SubAssessments.listNext_2'
      - '@azure/arm-security.SubAssessments.listNext_1'
      - '@azure/arm-security.SubAssessments.constructor'
    langs:
      - typeScript
    type: class
    summary: Class representing a SubAssessments.
    package: '@azure/arm-security'
  - uid: '@azure/arm-security.SubAssessments.get'
    name: 'get(string, string, string, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Get a security sub-assessment on your scanned resource
    syntax:
      content: >-
        function get(scope: string, assessmentName: string, subAssessmentName:
        string, options?: msRest.RequestOptionsBase)
      parameters:
        - id: scope
          type:
            - string
          description: >-
            Scope of the query, can be subscription

            (/subscriptions/0b06d9ea-afe6-4779-bd59-30e5c2d9d13f) or management
            group

            (/providers/Microsoft.Management/managementGroups/mgName).
        - id: assessmentName
          type:
            - string
          description: The Assessment Key - Unique key for the assessment type
        - id: subAssessmentName
          type:
            - string
          description: The Sub-Assessment Key - Unique key for the sub-assessment type
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.SubAssessmentsGetResponse>
        description: Promise<Models.SubAssessmentsGetResponse>
    package: '@azure/arm-security'
  - uid: '@azure/arm-security.SubAssessments.get_2'
    name: >-
      get(string, string, string, RequestOptionsBase,
      ServiceCallback<SecuritySubAssessment>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function get(scope: string, assessmentName: string, subAssessmentName:
        string, options: RequestOptionsBase, callback:
        ServiceCallback<SecuritySubAssessment>)
      parameters:
        - id: scope
          type:
            - string
          description: >-
            Scope of the query, can be subscription

            (/subscriptions/0b06d9ea-afe6-4779-bd59-30e5c2d9d13f) or management
            group

            (/providers/Microsoft.Management/managementGroups/mgName).
        - id: assessmentName
          type:
            - string
          description: The Assessment Key - Unique key for the assessment type
        - id: subAssessmentName
          type:
            - string
          description: The Sub-Assessment Key - Unique key for the sub-assessment type
        - id: options
          type:
            - RequestOptionsBase
          description: The optional parameters
        - id: callback
          type:
            - ServiceCallback<@azure/arm-security.SecuritySubAssessment>
          description: |
            The callback
    package: '@azure/arm-security'
  - uid: '@azure/arm-security.SubAssessments.get_1'
    name: 'get(string, string, string, ServiceCallback<SecuritySubAssessment>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function get(scope: string, assessmentName: string, subAssessmentName:
        string, callback: ServiceCallback<SecuritySubAssessment>)
      parameters:
        - id: scope
          type:
            - string
          description: >-
            Scope of the query, can be subscription

            (/subscriptions/0b06d9ea-afe6-4779-bd59-30e5c2d9d13f) or management
            group

            (/providers/Microsoft.Management/managementGroups/mgName).
        - id: assessmentName
          type:
            - string
          description: The Assessment Key - Unique key for the assessment type
        - id: subAssessmentName
          type:
            - string
          description: The Sub-Assessment Key - Unique key for the sub-assessment type
        - id: callback
          type:
            - ServiceCallback<@azure/arm-security.SecuritySubAssessment>
          description: |
            The callback
    package: '@azure/arm-security'
  - uid: '@azure/arm-security.SubAssessments.list'
    name: 'list(string, string, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Get security sub-assessments on all your scanned resources inside a scope
    syntax:
      content: >-
        function list(scope: string, assessmentName: string, options?:
        msRest.RequestOptionsBase)
      parameters:
        - id: scope
          type:
            - string
          description: >-
            Scope of the query, can be subscription

            (/subscriptions/0b06d9ea-afe6-4779-bd59-30e5c2d9d13f) or management
            group

            (/providers/Microsoft.Management/managementGroups/mgName).
        - id: assessmentName
          type:
            - string
          description: The Assessment Key - Unique key for the assessment type
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.SubAssessmentsListResponse>
        description: Promise<Models.SubAssessmentsListResponse>
    package: '@azure/arm-security'
  - uid: '@azure/arm-security.SubAssessments.list_2'
    name: >-
      list(string, string, RequestOptionsBase,
      ServiceCallback<SecuritySubAssessmentList>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function list(scope: string, assessmentName: string, options:
        RequestOptionsBase, callback:
        ServiceCallback<SecuritySubAssessmentList>)
      parameters:
        - id: scope
          type:
            - string
          description: >-
            Scope of the query, can be subscription

            (/subscriptions/0b06d9ea-afe6-4779-bd59-30e5c2d9d13f) or management
            group

            (/providers/Microsoft.Management/managementGroups/mgName).
        - id: assessmentName
          type:
            - string
          description: The Assessment Key - Unique key for the assessment type
        - id: options
          type:
            - RequestOptionsBase
          description: The optional parameters
        - id: callback
          type:
            - ServiceCallback<@azure/arm-security.SecuritySubAssessmentList>
          description: |
            The callback
    package: '@azure/arm-security'
  - uid: '@azure/arm-security.SubAssessments.list_1'
    name: 'list(string, string, ServiceCallback<SecuritySubAssessmentList>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function list(scope: string, assessmentName: string, callback:
        ServiceCallback<SecuritySubAssessmentList>)
      parameters:
        - id: scope
          type:
            - string
          description: >-
            Scope of the query, can be subscription

            (/subscriptions/0b06d9ea-afe6-4779-bd59-30e5c2d9d13f) or management
            group

            (/providers/Microsoft.Management/managementGroups/mgName).
        - id: assessmentName
          type:
            - string
          description: The Assessment Key - Unique key for the assessment type
        - id: callback
          type:
            - ServiceCallback<@azure/arm-security.SecuritySubAssessmentList>
          description: |
            The callback
    package: '@azure/arm-security'
  - uid: '@azure/arm-security.SubAssessments.listAll'
    name: 'listAll(string, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      Get security sub-assessments on all your scanned resources inside a
      subscription scope
    syntax:
      content: 'function listAll(scope: string, options?: msRest.RequestOptionsBase)'
      parameters:
        - id: scope
          type:
            - string
          description: >-
            Scope of the query, can be subscription

            (/subscriptions/0b06d9ea-afe6-4779-bd59-30e5c2d9d13f) or management
            group

            (/providers/Microsoft.Management/managementGroups/mgName).
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.SubAssessmentsListAllResponse>
        description: Promise<Models.SubAssessmentsListAllResponse>
    package: '@azure/arm-security'
  - uid: '@azure/arm-security.SubAssessments.listAll_2'
    name: >-
      listAll(string, RequestOptionsBase,
      ServiceCallback<SecuritySubAssessmentList>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function listAll(scope: string, options: RequestOptionsBase, callback:
        ServiceCallback<SecuritySubAssessmentList>)
      parameters:
        - id: scope
          type:
            - string
          description: >-
            Scope of the query, can be subscription

            (/subscriptions/0b06d9ea-afe6-4779-bd59-30e5c2d9d13f) or management
            group

            (/providers/Microsoft.Management/managementGroups/mgName).
        - id: options
          type:
            - RequestOptionsBase
          description: The optional parameters
        - id: callback
          type:
            - ServiceCallback<@azure/arm-security.SecuritySubAssessmentList>
          description: |
            The callback
    package: '@azure/arm-security'
  - uid: '@azure/arm-security.SubAssessments.listAll_1'
    name: 'listAll(string, ServiceCallback<SecuritySubAssessmentList>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function listAll(scope: string, callback:
        ServiceCallback<SecuritySubAssessmentList>)
      parameters:
        - id: scope
          type:
            - string
          description: >-
            Scope of the query, can be subscription

            (/subscriptions/0b06d9ea-afe6-4779-bd59-30e5c2d9d13f) or management
            group

            (/providers/Microsoft.Management/managementGroups/mgName).
        - id: callback
          type:
            - ServiceCallback<@azure/arm-security.SecuritySubAssessmentList>
          description: |
            The callback
    package: '@azure/arm-security'
  - uid: '@azure/arm-security.SubAssessments.listAllNext'
    name: 'listAllNext(string, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      Get security sub-assessments on all your scanned resources inside a
      subscription scope
    syntax:
      content: >-
        function listAllNext(nextPageLink: string, options?:
        msRest.RequestOptionsBase)
      parameters:
        - id: nextPageLink
          type:
            - string
          description: The NextLink from the previous successful call to List operation.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.SubAssessmentsListAllNextResponse>
        description: Promise<Models.SubAssessmentsListAllNextResponse>
    package: '@azure/arm-security'
  - uid: '@azure/arm-security.SubAssessments.listAllNext_2'
    name: >-
      listAllNext(string, RequestOptionsBase,
      ServiceCallback<SecuritySubAssessmentList>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function listAllNext(nextPageLink: string, options: RequestOptionsBase,
        callback: ServiceCallback<SecuritySubAssessmentList>)
      parameters:
        - id: nextPageLink
          type:
            - string
          description: The NextLink from the previous successful call to List operation.
        - id: options
          type:
            - RequestOptionsBase
          description: The optional parameters
        - id: callback
          type:
            - ServiceCallback<@azure/arm-security.SecuritySubAssessmentList>
          description: |
            The callback
    package: '@azure/arm-security'
  - uid: '@azure/arm-security.SubAssessments.listAllNext_1'
    name: 'listAllNext(string, ServiceCallback<SecuritySubAssessmentList>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function listAllNext(nextPageLink: string, callback:
        ServiceCallback<SecuritySubAssessmentList>)
      parameters:
        - id: nextPageLink
          type:
            - string
          description: The NextLink from the previous successful call to List operation.
        - id: callback
          type:
            - ServiceCallback<@azure/arm-security.SecuritySubAssessmentList>
          description: |
            The callback
    package: '@azure/arm-security'
  - uid: '@azure/arm-security.SubAssessments.listNext'
    name: 'listNext(string, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Get security sub-assessments on all your scanned resources inside a scope
    syntax:
      content: >-
        function listNext(nextPageLink: string, options?:
        msRest.RequestOptionsBase)
      parameters:
        - id: nextPageLink
          type:
            - string
          description: The NextLink from the previous successful call to List operation.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.SubAssessmentsListNextResponse>
        description: Promise<Models.SubAssessmentsListNextResponse>
    package: '@azure/arm-security'
  - uid: '@azure/arm-security.SubAssessments.listNext_2'
    name: >-
      listNext(string, RequestOptionsBase,
      ServiceCallback<SecuritySubAssessmentList>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function listNext(nextPageLink: string, options: RequestOptionsBase,
        callback: ServiceCallback<SecuritySubAssessmentList>)
      parameters:
        - id: nextPageLink
          type:
            - string
          description: The NextLink from the previous successful call to List operation.
        - id: options
          type:
            - RequestOptionsBase
          description: The optional parameters
        - id: callback
          type:
            - ServiceCallback<@azure/arm-security.SecuritySubAssessmentList>
          description: |
            The callback
    package: '@azure/arm-security'
  - uid: '@azure/arm-security.SubAssessments.listNext_1'
    name: 'listNext(string, ServiceCallback<SecuritySubAssessmentList>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function listNext(nextPageLink: string, callback:
        ServiceCallback<SecuritySubAssessmentList>)
      parameters:
        - id: nextPageLink
          type:
            - string
          description: The NextLink from the previous successful call to List operation.
        - id: callback
          type:
            - ServiceCallback<@azure/arm-security.SecuritySubAssessmentList>
          description: |
            The callback
    package: '@azure/arm-security'
  - uid: '@azure/arm-security.SubAssessments.constructor'
    name: SubAssessments(SecurityCenterContext)
    children: []
    type: constructor
    langs:
      - typeScript
    summary: Create a SubAssessments.
    syntax:
      content: 'new SubAssessments(client: SecurityCenterContext)'
      parameters:
        - id: client
          type:
            - '@azure/arm-security.SecurityCenterContext'
          description: |
            Reference to the service client.
    package: '@azure/arm-security'
references:
  - uid: '@azure/arm-security.SecurityCenterContext'
    name: SecurityCenterContext
    spec.typeScript:
      - name: SecurityCenterContext
        fullName: SecurityCenterContext
        uid: '@azure/arm-security.SecurityCenterContext'
  - uid: ServiceCallback<@azure/arm-security.SecuritySubAssessment>
    name: SecuritySubAssessment>
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: SecuritySubAssessment
        fullName: SecuritySubAssessment
        uid: '@azure/arm-security.SecuritySubAssessment'
      - name: '>'
        fullName: '>'
  - uid: ServiceCallback<@azure/arm-security.SecuritySubAssessmentList>
    name: SecuritySubAssessmentList>
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: SecuritySubAssessmentList
        fullName: SecuritySubAssessmentList
        uid: '@azure/arm-security.SecuritySubAssessmentList'
      - name: '>'
        fullName: '>'
