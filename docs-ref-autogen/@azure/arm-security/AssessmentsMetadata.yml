### YamlMime:UniversalReference
items:
  - uid: '@azure/arm-security.AssessmentsMetadata'
    name: AssessmentsMetadata
    fullName: AssessmentsMetadata
    children:
      - '@azure/arm-security.AssessmentsMetadata.constructor'
      - '@azure/arm-security.AssessmentsMetadata.createInSubscription'
      - '@azure/arm-security.AssessmentsMetadata.createInSubscription_2'
      - '@azure/arm-security.AssessmentsMetadata.createInSubscription_1'
      - '@azure/arm-security.AssessmentsMetadata.deleteInSubscription'
      - '@azure/arm-security.AssessmentsMetadata.deleteInSubscription_2'
      - '@azure/arm-security.AssessmentsMetadata.deleteInSubscription_1'
      - '@azure/arm-security.AssessmentsMetadata.get'
      - '@azure/arm-security.AssessmentsMetadata.get_2'
      - '@azure/arm-security.AssessmentsMetadata.get_1'
      - '@azure/arm-security.AssessmentsMetadata.getInSubscription'
      - '@azure/arm-security.AssessmentsMetadata.getInSubscription_2'
      - '@azure/arm-security.AssessmentsMetadata.getInSubscription_1'
      - '@azure/arm-security.AssessmentsMetadata.list'
      - '@azure/arm-security.AssessmentsMetadata.list_2'
      - '@azure/arm-security.AssessmentsMetadata.list_1'
      - '@azure/arm-security.AssessmentsMetadata.listBySubscription'
      - '@azure/arm-security.AssessmentsMetadata.listBySubscription_2'
      - '@azure/arm-security.AssessmentsMetadata.listBySubscription_1'
      - '@azure/arm-security.AssessmentsMetadata.listBySubscriptionNext'
      - '@azure/arm-security.AssessmentsMetadata.listBySubscriptionNext_2'
      - '@azure/arm-security.AssessmentsMetadata.listBySubscriptionNext_1'
      - '@azure/arm-security.AssessmentsMetadata.listNext'
      - '@azure/arm-security.AssessmentsMetadata.listNext_2'
      - '@azure/arm-security.AssessmentsMetadata.listNext_1'
    langs:
      - typeScript
    type: class
    summary: Class representing a AssessmentsMetadata.
    package: '@azure/arm-security'
  - uid: '@azure/arm-security.AssessmentsMetadata.constructor'
    name: AssessmentsMetadata(SecurityCenterContext)
    children: []
    type: constructor
    langs:
      - typeScript
    summary: Create a AssessmentsMetadata.
    syntax:
      content: 'new AssessmentsMetadata(client: SecurityCenterContext)'
      parameters:
        - id: client
          type:
            - '@azure/arm-security.SecurityCenterContext'
          description: |
            Reference to the service client.
    package: '@azure/arm-security'
  - uid: '@azure/arm-security.AssessmentsMetadata.createInSubscription'
    name: >-
      createInSubscription(string, SecurityAssessmentMetadata,
      msRest.RequestOptionsBase)
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      Create metadata information on an assessment type in a specific
      subscription
    syntax:
      content: >-
        function createInSubscription(assessmentMetadataName: string,
        assessmentMetadata: SecurityAssessmentMetadata, options?:
        msRest.RequestOptionsBase)
      parameters:
        - id: assessmentMetadataName
          type:
            - string
          description: The Assessment Key - Unique key for the assessment type
        - id: assessmentMetadata
          type:
            - '@azure/arm-security.SecurityAssessmentMetadata'
          description: AssessmentMetadata object
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.AssessmentsMetadataCreateInSubscriptionResponse>
        description: Promise<Models.AssessmentsMetadataCreateInSubscriptionResponse>
    package: '@azure/arm-security'
  - uid: '@azure/arm-security.AssessmentsMetadata.createInSubscription_2'
    name: >-
      createInSubscription(string, SecurityAssessmentMetadata,
      RequestOptionsBase, ServiceCallback<SecurityAssessmentMetadata>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function createInSubscription(assessmentMetadataName: string,
        assessmentMetadata: SecurityAssessmentMetadata, options:
        RequestOptionsBase, callback:
        ServiceCallback<SecurityAssessmentMetadata>)
      parameters:
        - id: assessmentMetadataName
          type:
            - string
          description: The Assessment Key - Unique key for the assessment type
        - id: assessmentMetadata
          type:
            - '@azure/arm-security.SecurityAssessmentMetadata'
          description: AssessmentMetadata object
        - id: options
          type:
            - RequestOptionsBase
          description: The optional parameters
        - id: callback
          type:
            - ServiceCallback<@azure/arm-security.SecurityAssessmentMetadata>
          description: |
            The callback
    package: '@azure/arm-security'
  - uid: '@azure/arm-security.AssessmentsMetadata.createInSubscription_1'
    name: >-
      createInSubscription(string, SecurityAssessmentMetadata,
      ServiceCallback<SecurityAssessmentMetadata>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function createInSubscription(assessmentMetadataName: string,
        assessmentMetadata: SecurityAssessmentMetadata, callback:
        ServiceCallback<SecurityAssessmentMetadata>)
      parameters:
        - id: assessmentMetadataName
          type:
            - string
          description: The Assessment Key - Unique key for the assessment type
        - id: assessmentMetadata
          type:
            - '@azure/arm-security.SecurityAssessmentMetadata'
          description: AssessmentMetadata object
        - id: callback
          type:
            - ServiceCallback<@azure/arm-security.SecurityAssessmentMetadata>
          description: |
            The callback
    package: '@azure/arm-security'
  - uid: '@azure/arm-security.AssessmentsMetadata.deleteInSubscription'
    name: 'deleteInSubscription(string, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      Delete metadata information on an assessment type in a specific
      subscription, will cause the

      deletion of all the assessments of that type in that subscription
    syntax:
      content: >-
        function deleteInSubscription(assessmentMetadataName: string, options?:
        msRest.RequestOptionsBase)
      parameters:
        - id: assessmentMetadataName
          type:
            - string
          description: The Assessment Key - Unique key for the assessment type
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<RestResponse>
        description: Promise<msRest.RestResponse>
    package: '@azure/arm-security'
  - uid: '@azure/arm-security.AssessmentsMetadata.deleteInSubscription_2'
    name: 'deleteInSubscription(string, RequestOptionsBase, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function deleteInSubscription(assessmentMetadataName: string, options:
        RequestOptionsBase, callback: ServiceCallback<void>)
      parameters:
        - id: assessmentMetadataName
          type:
            - string
          description: The Assessment Key - Unique key for the assessment type
        - id: options
          type:
            - RequestOptionsBase
          description: The optional parameters
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            The callback
    package: '@azure/arm-security'
  - uid: '@azure/arm-security.AssessmentsMetadata.deleteInSubscription_1'
    name: 'deleteInSubscription(string, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function deleteInSubscription(assessmentMetadataName: string, callback:
        ServiceCallback<void>)
      parameters:
        - id: assessmentMetadataName
          type:
            - string
          description: The Assessment Key - Unique key for the assessment type
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            The callback
    package: '@azure/arm-security'
  - uid: '@azure/arm-security.AssessmentsMetadata.get'
    name: 'get(string, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Get metadata information on an assessment type
    syntax:
      content: >-
        function get(assessmentMetadataName: string, options?:
        msRest.RequestOptionsBase)
      parameters:
        - id: assessmentMetadataName
          type:
            - string
          description: The Assessment Key - Unique key for the assessment type
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.AssessmentsMetadataGetResponse>
        description: Promise<Models.AssessmentsMetadataGetResponse>
    package: '@azure/arm-security'
  - uid: '@azure/arm-security.AssessmentsMetadata.get_2'
    name: >-
      get(string, RequestOptionsBase,
      ServiceCallback<SecurityAssessmentMetadata>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function get(assessmentMetadataName: string, options:
        RequestOptionsBase, callback:
        ServiceCallback<SecurityAssessmentMetadata>)
      parameters:
        - id: assessmentMetadataName
          type:
            - string
          description: The Assessment Key - Unique key for the assessment type
        - id: options
          type:
            - RequestOptionsBase
          description: The optional parameters
        - id: callback
          type:
            - ServiceCallback<@azure/arm-security.SecurityAssessmentMetadata>
          description: |
            The callback
    package: '@azure/arm-security'
  - uid: '@azure/arm-security.AssessmentsMetadata.get_1'
    name: 'get(string, ServiceCallback<SecurityAssessmentMetadata>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function get(assessmentMetadataName: string, callback:
        ServiceCallback<SecurityAssessmentMetadata>)
      parameters:
        - id: assessmentMetadataName
          type:
            - string
          description: The Assessment Key - Unique key for the assessment type
        - id: callback
          type:
            - ServiceCallback<@azure/arm-security.SecurityAssessmentMetadata>
          description: |
            The callback
    package: '@azure/arm-security'
  - uid: '@azure/arm-security.AssessmentsMetadata.getInSubscription'
    name: 'getInSubscription(string, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Get metadata information on an assessment type in a specific subscription
    syntax:
      content: >-
        function getInSubscription(assessmentMetadataName: string, options?:
        msRest.RequestOptionsBase)
      parameters:
        - id: assessmentMetadataName
          type:
            - string
          description: The Assessment Key - Unique key for the assessment type
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.AssessmentsMetadataGetInSubscriptionResponse>
        description: Promise<Models.AssessmentsMetadataGetInSubscriptionResponse>
    package: '@azure/arm-security'
  - uid: '@azure/arm-security.AssessmentsMetadata.getInSubscription_2'
    name: >-
      getInSubscription(string, RequestOptionsBase,
      ServiceCallback<SecurityAssessmentMetadata>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function getInSubscription(assessmentMetadataName: string, options:
        RequestOptionsBase, callback:
        ServiceCallback<SecurityAssessmentMetadata>)
      parameters:
        - id: assessmentMetadataName
          type:
            - string
          description: The Assessment Key - Unique key for the assessment type
        - id: options
          type:
            - RequestOptionsBase
          description: The optional parameters
        - id: callback
          type:
            - ServiceCallback<@azure/arm-security.SecurityAssessmentMetadata>
          description: |
            The callback
    package: '@azure/arm-security'
  - uid: '@azure/arm-security.AssessmentsMetadata.getInSubscription_1'
    name: 'getInSubscription(string, ServiceCallback<SecurityAssessmentMetadata>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function getInSubscription(assessmentMetadataName: string, callback:
        ServiceCallback<SecurityAssessmentMetadata>)
      parameters:
        - id: assessmentMetadataName
          type:
            - string
          description: The Assessment Key - Unique key for the assessment type
        - id: callback
          type:
            - ServiceCallback<@azure/arm-security.SecurityAssessmentMetadata>
          description: |
            The callback
    package: '@azure/arm-security'
  - uid: '@azure/arm-security.AssessmentsMetadata.list'
    name: list(msRest.RequestOptionsBase)
    children: []
    type: method
    langs:
      - typeScript
    summary: Get metadata information on all assessment types
    syntax:
      content: 'function list(options?: msRest.RequestOptionsBase)'
      parameters:
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.AssessmentsMetadataListResponse>
        description: Promise<Models.AssessmentsMetadataListResponse>
    package: '@azure/arm-security'
  - uid: '@azure/arm-security.AssessmentsMetadata.list_2'
    name: 'list(RequestOptionsBase, ServiceCallback<SecurityAssessmentMetadataList>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function list(options: RequestOptionsBase, callback:
        ServiceCallback<SecurityAssessmentMetadataList>)
      parameters:
        - id: options
          type:
            - RequestOptionsBase
          description: The optional parameters
        - id: callback
          type:
            - >-
              ServiceCallback<@azure/arm-security.SecurityAssessmentMetadataList>
          description: |
            The callback
    package: '@azure/arm-security'
  - uid: '@azure/arm-security.AssessmentsMetadata.list_1'
    name: list(ServiceCallback<SecurityAssessmentMetadataList>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function list(callback: ServiceCallback<SecurityAssessmentMetadataList>)'
      parameters:
        - id: callback
          type:
            - >-
              ServiceCallback<@azure/arm-security.SecurityAssessmentMetadataList>
          description: |
            The callback
    package: '@azure/arm-security'
  - uid: '@azure/arm-security.AssessmentsMetadata.listBySubscription'
    name: listBySubscription(msRest.RequestOptionsBase)
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      Get metadata information on all assessment types in a specific
      subscription
    syntax:
      content: 'function listBySubscription(options?: msRest.RequestOptionsBase)'
      parameters:
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.AssessmentsMetadataListBySubscriptionResponse>
        description: Promise<Models.AssessmentsMetadataListBySubscriptionResponse>
    package: '@azure/arm-security'
  - uid: '@azure/arm-security.AssessmentsMetadata.listBySubscription_2'
    name: >-
      listBySubscription(RequestOptionsBase,
      ServiceCallback<SecurityAssessmentMetadataList>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function listBySubscription(options: RequestOptionsBase, callback:
        ServiceCallback<SecurityAssessmentMetadataList>)
      parameters:
        - id: options
          type:
            - RequestOptionsBase
          description: The optional parameters
        - id: callback
          type:
            - >-
              ServiceCallback<@azure/arm-security.SecurityAssessmentMetadataList>
          description: |
            The callback
    package: '@azure/arm-security'
  - uid: '@azure/arm-security.AssessmentsMetadata.listBySubscription_1'
    name: listBySubscription(ServiceCallback<SecurityAssessmentMetadataList>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function listBySubscription(callback:
        ServiceCallback<SecurityAssessmentMetadataList>)
      parameters:
        - id: callback
          type:
            - >-
              ServiceCallback<@azure/arm-security.SecurityAssessmentMetadataList>
          description: |
            The callback
    package: '@azure/arm-security'
  - uid: '@azure/arm-security.AssessmentsMetadata.listBySubscriptionNext'
    name: 'listBySubscriptionNext(string, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      Get metadata information on all assessment types in a specific
      subscription
    syntax:
      content: >-
        function listBySubscriptionNext(nextPageLink: string, options?:
        msRest.RequestOptionsBase)
      parameters:
        - id: nextPageLink
          type:
            - string
          description: The NextLink from the previous successful call to List operation.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.AssessmentsMetadataListBySubscriptionNextResponse>
        description: Promise<Models.AssessmentsMetadataListBySubscriptionNextResponse>
    package: '@azure/arm-security'
  - uid: '@azure/arm-security.AssessmentsMetadata.listBySubscriptionNext_2'
    name: >-
      listBySubscriptionNext(string, RequestOptionsBase,
      ServiceCallback<SecurityAssessmentMetadataList>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function listBySubscriptionNext(nextPageLink: string, options:
        RequestOptionsBase, callback:
        ServiceCallback<SecurityAssessmentMetadataList>)
      parameters:
        - id: nextPageLink
          type:
            - string
          description: The NextLink from the previous successful call to List operation.
        - id: options
          type:
            - RequestOptionsBase
          description: The optional parameters
        - id: callback
          type:
            - >-
              ServiceCallback<@azure/arm-security.SecurityAssessmentMetadataList>
          description: |
            The callback
    package: '@azure/arm-security'
  - uid: '@azure/arm-security.AssessmentsMetadata.listBySubscriptionNext_1'
    name: >-
      listBySubscriptionNext(string,
      ServiceCallback<SecurityAssessmentMetadataList>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function listBySubscriptionNext(nextPageLink: string, callback:
        ServiceCallback<SecurityAssessmentMetadataList>)
      parameters:
        - id: nextPageLink
          type:
            - string
          description: The NextLink from the previous successful call to List operation.
        - id: callback
          type:
            - >-
              ServiceCallback<@azure/arm-security.SecurityAssessmentMetadataList>
          description: |
            The callback
    package: '@azure/arm-security'
  - uid: '@azure/arm-security.AssessmentsMetadata.listNext'
    name: 'listNext(string, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Get metadata information on all assessment types
    syntax:
      content: >-
        function listNext(nextPageLink: string, options?:
        msRest.RequestOptionsBase)
      parameters:
        - id: nextPageLink
          type:
            - string
          description: The NextLink from the previous successful call to List operation.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.AssessmentsMetadataListNextResponse>
        description: Promise<Models.AssessmentsMetadataListNextResponse>
    package: '@azure/arm-security'
  - uid: '@azure/arm-security.AssessmentsMetadata.listNext_2'
    name: >-
      listNext(string, RequestOptionsBase,
      ServiceCallback<SecurityAssessmentMetadataList>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function listNext(nextPageLink: string, options: RequestOptionsBase,
        callback: ServiceCallback<SecurityAssessmentMetadataList>)
      parameters:
        - id: nextPageLink
          type:
            - string
          description: The NextLink from the previous successful call to List operation.
        - id: options
          type:
            - RequestOptionsBase
          description: The optional parameters
        - id: callback
          type:
            - >-
              ServiceCallback<@azure/arm-security.SecurityAssessmentMetadataList>
          description: |
            The callback
    package: '@azure/arm-security'
  - uid: '@azure/arm-security.AssessmentsMetadata.listNext_1'
    name: 'listNext(string, ServiceCallback<SecurityAssessmentMetadataList>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function listNext(nextPageLink: string, callback:
        ServiceCallback<SecurityAssessmentMetadataList>)
      parameters:
        - id: nextPageLink
          type:
            - string
          description: The NextLink from the previous successful call to List operation.
        - id: callback
          type:
            - >-
              ServiceCallback<@azure/arm-security.SecurityAssessmentMetadataList>
          description: |
            The callback
    package: '@azure/arm-security'
references:
  - uid: '@azure/arm-security.SecurityCenterContext'
    name: SecurityCenterContext
    spec.typeScript:
      - name: SecurityCenterContext
        fullName: SecurityCenterContext
        uid: '@azure/arm-security.SecurityCenterContext'
  - uid: '@azure/arm-security.SecurityAssessmentMetadata'
    name: SecurityAssessmentMetadata
    spec.typeScript:
      - name: SecurityAssessmentMetadata
        fullName: SecurityAssessmentMetadata
        uid: '@azure/arm-security.SecurityAssessmentMetadata'
  - uid: ServiceCallback<@azure/arm-security.SecurityAssessmentMetadata>
    name: SecurityAssessmentMetadata>
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: SecurityAssessmentMetadata
        fullName: SecurityAssessmentMetadata
        uid: '@azure/arm-security.SecurityAssessmentMetadata'
      - name: '>'
        fullName: '>'
  - uid: ServiceCallback<@azure/arm-security.SecurityAssessmentMetadataList>
    name: SecurityAssessmentMetadataList>
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: SecurityAssessmentMetadataList
        fullName: SecurityAssessmentMetadataList
        uid: '@azure/arm-security.SecurityAssessmentMetadataList'
      - name: '>'
        fullName: '>'
