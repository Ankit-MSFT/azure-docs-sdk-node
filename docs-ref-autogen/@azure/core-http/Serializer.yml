### YamlMime:TSType
name: Serializer
uid: '@azure/core-http.Serializer'
package: '@azure/core-http'
summary: ''
fullName: Serializer
isPreview: false
isDeprecated: false
type: class
constructors:
  - name: 'Serializer([key: string]: any, boolean | undefined)'
    uid: '@azure/core-http.Serializer.constructor'
    package: '@azure/core-http'
    summary: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        new Serializer(modelMappers?: [key: string]: any, isXML?: boolean |
        undefined)
      parameters:
        - id: modelMappers
          type: '[key: string]\: any'
          description: ''
        - id: isXML
          type: boolean | undefined
          description: ''
properties:
  - name: isXML
    uid: '@azure/core-http.Serializer.isXML'
    package: '@azure/core-http'
    summary: ''
    fullName: isXML
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'isXML?: boolean | undefined'
      return:
        type: boolean | undefined
        description: ''
  - name: modelMappers
    uid: '@azure/core-http.Serializer.modelMappers'
    package: '@azure/core-http'
    summary: ''
    fullName: modelMappers
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'modelMappers: [key: string]: any'
      return:
        type: '[key: string]\: any'
        description: ''
methods:
  - name: 'deserialize(Mapper, any, string)'
    uid: '@azure/core-http.Serializer.deserialize'
    package: '@azure/core-http'
    summary: Deserialize the given object based on its metadata defined in the mapper
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function deserialize(mapper: Mapper, responseBody: any, objectName:
        string)
      parameters:
        - id: mapper
          type: <xref uid="@azure/core-http.Mapper" />
          description: |
            The mapper which defines the metadata of the serializable object
        - id: responseBody
          type: any
          description: |
            A valid Javascript entity to be deserialized
        - id: objectName
          type: string
          description: |
            Name of the deserialized object
      return:
        type: any
        description: A valid deserialized Javascript object
  - name: 'serialize(Mapper, any, string)'
    uid: '@azure/core-http.Serializer.serialize'
    package: '@azure/core-http'
    summary: Serialize the given object based on its metadata defined in the mapper
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'function serialize(mapper: Mapper, object: any, objectName?: string)'
      parameters:
        - id: mapper
          type: <xref uid="@azure/core-http.Mapper" />
          description: |
            The mapper which defines the metadata of the serializable object
        - id: object
          type: any
          description: |
            A valid Javascript object to be serialized
        - id: objectName
          type: string
          description: |
            Name of the serialized object
      return:
        type: any
        description: A valid serialized Javascript object
  - name: 'validateConstraints(Mapper, any, string)'
    uid: '@azure/core-http.Serializer.validateConstraints'
    package: '@azure/core-http'
    summary: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function validateConstraints(mapper: Mapper, value: any, objectName:
        string)
      parameters:
        - id: mapper
          type: <xref uid="@azure/core-http.Mapper" />
          description: ''
        - id: value
          type: any
          description: ''
        - id: objectName
          type: string
          description: ''
