### YamlMime:TSType
name: ServiceLimits
uid: '@azure/search-documents.ServiceLimits'
package: '@azure/search-documents'
summary: Represents various service level limits.
fullName: ServiceLimits
type: interface
properties:
  - name: maxComplexCollectionFieldsPerIndex
    uid: '@azure/search-documents.ServiceLimits.maxComplexCollectionFieldsPerIndex'
    package: '@azure/search-documents'
    summary: >-
      The maximum number of fields of type Collection(Edm.ComplexType) allowed
      in an index.
    fullName: maxComplexCollectionFieldsPerIndex
    syntax:
      content: 'maxComplexCollectionFieldsPerIndex?: number'
      return:
        type: number
        description: ''
  - name: maxComplexObjectsInCollectionsPerDocument
    uid: >-
      @azure/search-documents.ServiceLimits.maxComplexObjectsInCollectionsPerDocument
    package: '@azure/search-documents'
    summary: The maximum number of objects in complex collections allowed per document.
    fullName: maxComplexObjectsInCollectionsPerDocument
    syntax:
      content: 'maxComplexObjectsInCollectionsPerDocument?: number'
      return:
        type: number
        description: ''
  - name: maxFieldNestingDepthPerIndex
    uid: '@azure/search-documents.ServiceLimits.maxFieldNestingDepthPerIndex'
    package: '@azure/search-documents'
    summary: >-
      The maximum depth which you can nest sub-fields in an index, including the
      top-level complex

      field. For example, a/b/c has a nesting depth of 3.
    fullName: maxFieldNestingDepthPerIndex
    syntax:
      content: 'maxFieldNestingDepthPerIndex?: number'
      return:
        type: number
        description: ''
  - name: maxFieldsPerIndex
    uid: '@azure/search-documents.ServiceLimits.maxFieldsPerIndex'
    package: '@azure/search-documents'
    summary: The maximum allowed fields per index.
    fullName: maxFieldsPerIndex
    syntax:
      content: 'maxFieldsPerIndex?: number'
      return:
        type: number
        description: ''
