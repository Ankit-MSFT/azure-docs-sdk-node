### YamlMime:TSType
name: AzureCommunicationChatAdapter
uid: '@azure/communication-react.AzureCommunicationChatAdapter'
package: '@azure/communication-react'
summary: ''
fullName: AzureCommunicationChatAdapter
remarks: ''
isPreview: false
isDeprecated: false
type: class
constructors:
  - name: 'AzureCommunicationChatAdapter(StatefulChatClient, ChatThreadClient)'
    uid: '@azure/communication-react.AzureCommunicationChatAdapter.constructor'
    package: '@azure/communication-react'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        new AzureCommunicationChatAdapter(chatClient: StatefulChatClient,
        chatThreadClient: ChatThreadClient)
      parameters:
        - id: chatClient
          type: <xref uid="@azure/communication-react.StatefulChatClient" />
          description: ''
        - id: chatThreadClient
          type: ChatThreadClient
          description: ''
properties:
  - name: chatThreadPropertiesUpdatedListener
    uid: >-
      @azure/communication-react.AzureCommunicationChatAdapter.chatThreadPropertiesUpdatedListener
    package: '@azure/communication-react'
    summary: ''
    fullName: chatThreadPropertiesUpdatedListener
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        chatThreadPropertiesUpdatedListener: (event:
        ChatThreadPropertiesUpdatedEvent) => void
      return:
        type: '(event: ChatThreadPropertiesUpdatedEvent) =&gt; void'
        description: ''
  - name: fetchInitialData
    uid: '@azure/communication-react.AzureCommunicationChatAdapter.fetchInitialData'
    package: '@azure/communication-react'
    summary: ''
    fullName: fetchInitialData
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'fetchInitialData: () => Promise<void>'
      return:
        type: () =&gt; Promise&lt;void&gt;
        description: ''
  - name: getState
    uid: '@azure/communication-react.AzureCommunicationChatAdapter.getState'
    package: '@azure/communication-react'
    summary: ''
    fullName: getState
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'getState: () => ChatState'
      return:
        type: () =&gt; ChatState
        description: ''
  - name: loadPreviousChatMessages
    uid: >-
      @azure/communication-react.AzureCommunicationChatAdapter.loadPreviousChatMessages
    package: '@azure/communication-react'
    summary: ''
    fullName: loadPreviousChatMessages
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'loadPreviousChatMessages: (messagesToLoad: number) => Promise<boolean>'
      return:
        type: '(messagesToLoad: number) =&gt; Promise&lt;boolean&gt;'
        description: ''
  - name: messageReadListener
    uid: >-
      @azure/communication-react.AzureCommunicationChatAdapter.messageReadListener
    package: '@azure/communication-react'
    summary: ''
    fullName: messageReadListener
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'messageReadListener: (__namedParameters: Object) => void'
      return:
        type: '(__namedParameters: Object) =&gt; void'
        description: ''
  - name: messageReceivedListener
    uid: >-
      @azure/communication-react.AzureCommunicationChatAdapter.messageReceivedListener
    package: '@azure/communication-react'
    summary: ''
    fullName: messageReceivedListener
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'messageReceivedListener: (event: ChatMessageReceivedEvent) => void'
      return:
        type: '(event: ChatMessageReceivedEvent) =&gt; void'
        description: ''
  - name: offStateChange
    uid: '@azure/communication-react.AzureCommunicationChatAdapter.offStateChange'
    package: '@azure/communication-react'
    summary: ''
    fullName: offStateChange
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'offStateChange: (handler: (state: ChatState) => void) => void'
      return:
        type: '(handler: (state: ChatState) =&gt; void) =&gt; void'
        description: ''
  - name: onStateChange
    uid: '@azure/communication-react.AzureCommunicationChatAdapter.onStateChange'
    package: '@azure/communication-react'
    summary: ''
    fullName: onStateChange
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'onStateChange: (handler: (state: ChatState) => void) => void'
      return:
        type: '(handler: (state: ChatState) =&gt; void) =&gt; void'
        description: ''
  - name: participantsAddedListener
    uid: >-
      @azure/communication-react.AzureCommunicationChatAdapter.participantsAddedListener
    package: '@azure/communication-react'
    summary: ''
    fullName: participantsAddedListener
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'participantsAddedListener: (__namedParameters: Object) => void'
      return:
        type: '(__namedParameters: Object) =&gt; void'
        description: ''
  - name: participantsRemovedListener
    uid: >-
      @azure/communication-react.AzureCommunicationChatAdapter.participantsRemovedListener
    package: '@azure/communication-react'
    summary: ''
    fullName: participantsRemovedListener
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'participantsRemovedListener: (__namedParameters: Object) => void'
      return:
        type: '(__namedParameters: Object) =&gt; void'
        description: ''
  - name: removeParticipant
    uid: '@azure/communication-react.AzureCommunicationChatAdapter.removeParticipant'
    package: '@azure/communication-react'
    summary: ''
    fullName: removeParticipant
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'removeParticipant: (userId: string) => Promise<void>'
      return:
        type: '(userId: string) =&gt; Promise&lt;void&gt;'
        description: ''
  - name: sendMessage
    uid: '@azure/communication-react.AzureCommunicationChatAdapter.sendMessage'
    package: '@azure/communication-react'
    summary: ''
    fullName: sendMessage
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'sendMessage: (content: string) => Promise<void>'
      return:
        type: '(content: string) =&gt; Promise&lt;void&gt;'
        description: ''
  - name: sendReadReceipt
    uid: '@azure/communication-react.AzureCommunicationChatAdapter.sendReadReceipt'
    package: '@azure/communication-react'
    summary: ''
    fullName: sendReadReceipt
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'sendReadReceipt: (chatMessageId: string) => Promise<void>'
      return:
        type: '(chatMessageId: string) =&gt; Promise&lt;void&gt;'
        description: ''
  - name: sendTypingIndicator
    uid: >-
      @azure/communication-react.AzureCommunicationChatAdapter.sendTypingIndicator
    package: '@azure/communication-react'
    summary: ''
    fullName: sendTypingIndicator
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'sendTypingIndicator: () => Promise<void>'
      return:
        type: () =&gt; Promise&lt;void&gt;
        description: ''
  - name: setTopic
    uid: '@azure/communication-react.AzureCommunicationChatAdapter.setTopic'
    package: '@azure/communication-react'
    summary: ''
    fullName: setTopic
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'setTopic: (topicName: string) => Promise<void>'
      return:
        type: '(topicName: string) =&gt; Promise&lt;void&gt;'
        description: ''
  - name: subscribeAllEvents
    uid: >-
      @azure/communication-react.AzureCommunicationChatAdapter.subscribeAllEvents
    package: '@azure/communication-react'
    summary: ''
    fullName: subscribeAllEvents
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'subscribeAllEvents: () => void'
      return:
        type: () =&gt; void
        description: ''
  - name: unsubscribeAllEvents
    uid: >-
      @azure/communication-react.AzureCommunicationChatAdapter.unsubscribeAllEvents
    package: '@azure/communication-react'
    summary: ''
    fullName: unsubscribeAllEvents
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'unsubscribeAllEvents: () => void'
      return:
        type: () =&gt; void
        description: ''
methods:
  - name: dispose()
    uid: '@azure/communication-react.AzureCommunicationChatAdapter.dispose'
    package: '@azure/communication-react'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: function dispose()
  - name: 'off("error", (e: Error) => void)'
    uid: '@azure/communication-react.AzureCommunicationChatAdapter.off_6'
    package: '@azure/communication-react'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'function off(event: "error", listener: (e: Error) => void)'
      parameters:
        - id: event
          type: '"error"'
          description: ''
        - id: listener
          type: '(e: Error) =&gt; void'
          description: ''
  - name: 'off("messageRead", MessageReadListener)'
    uid: '@azure/communication-react.AzureCommunicationChatAdapter.off_2'
    package: '@azure/communication-react'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'function off(event: "messageRead", listener: MessageReadListener)'
      parameters:
        - id: event
          type: '"messageRead"'
          description: ''
        - id: listener
          type: <xref uid="@azure/communication-react.MessageReadListener" />
          description: ''
  - name: 'off("messageReceived", MessageReceivedListener)'
    uid: '@azure/communication-react.AzureCommunicationChatAdapter.off'
    package: '@azure/communication-react'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function off(event: "messageReceived", listener:
        MessageReceivedListener)
      parameters:
        - id: event
          type: '"messageReceived"'
          description: ''
        - id: listener
          type: <xref uid="@azure/communication-react.MessageReceivedListener" />
          description: ''
  - name: 'off("messageSent", MessageReceivedListener)'
    uid: '@azure/communication-react.AzureCommunicationChatAdapter.off_1'
    package: '@azure/communication-react'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'function off(event: "messageSent", listener: MessageReceivedListener)'
      parameters:
        - id: event
          type: '"messageSent"'
          description: ''
        - id: listener
          type: <xref uid="@azure/communication-react.MessageReceivedListener" />
          description: ''
  - name: 'off("participantsAdded", ParticipantsAddedListener)'
    uid: '@azure/communication-react.AzureCommunicationChatAdapter.off_3'
    package: '@azure/communication-react'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function off(event: "participantsAdded", listener:
        ParticipantsAddedListener)
      parameters:
        - id: event
          type: '"participantsAdded"'
          description: ''
        - id: listener
          type: <xref uid="@azure/communication-react.ParticipantsAddedListener" />
          description: ''
  - name: 'off("participantsRemoved", ParticipantsRemovedListener)'
    uid: '@azure/communication-react.AzureCommunicationChatAdapter.off_4'
    package: '@azure/communication-react'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function off(event: "participantsRemoved", listener:
        ParticipantsRemovedListener)
      parameters:
        - id: event
          type: '"participantsRemoved"'
          description: ''
        - id: listener
          type: >-
            <xref uid="@azure/communication-react.ParticipantsRemovedListener"
            />
          description: ''
  - name: 'off("topicChanged", TopicChangedListener)'
    uid: '@azure/communication-react.AzureCommunicationChatAdapter.off_5'
    package: '@azure/communication-react'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'function off(event: "topicChanged", listener: TopicChangedListener)'
      parameters:
        - id: event
          type: '"topicChanged"'
          description: ''
        - id: listener
          type: <xref uid="@azure/communication-react.TopicChangedListener" />
          description: ''
  - name: 'on("error", (e: Error) => void)'
    uid: '@azure/communication-react.AzureCommunicationChatAdapter.on_6'
    package: '@azure/communication-react'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'function on(event: "error", listener: (e: Error) => void)'
      parameters:
        - id: event
          type: '"error"'
          description: ''
        - id: listener
          type: '(e: Error) =&gt; void'
          description: ''
  - name: 'on("messageRead", MessageReadListener)'
    uid: '@azure/communication-react.AzureCommunicationChatAdapter.on_2'
    package: '@azure/communication-react'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'function on(event: "messageRead", listener: MessageReadListener)'
      parameters:
        - id: event
          type: '"messageRead"'
          description: ''
        - id: listener
          type: <xref uid="@azure/communication-react.MessageReadListener" />
          description: ''
  - name: 'on("messageReceived", MessageReceivedListener)'
    uid: '@azure/communication-react.AzureCommunicationChatAdapter.on'
    package: '@azure/communication-react'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'function on(event: "messageReceived", listener: MessageReceivedListener)'
      parameters:
        - id: event
          type: '"messageReceived"'
          description: ''
        - id: listener
          type: <xref uid="@azure/communication-react.MessageReceivedListener" />
          description: ''
  - name: 'on("messageSent", MessageReceivedListener)'
    uid: '@azure/communication-react.AzureCommunicationChatAdapter.on_1'
    package: '@azure/communication-react'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'function on(event: "messageSent", listener: MessageReceivedListener)'
      parameters:
        - id: event
          type: '"messageSent"'
          description: ''
        - id: listener
          type: <xref uid="@azure/communication-react.MessageReceivedListener" />
          description: ''
  - name: 'on("participantsAdded", ParticipantsAddedListener)'
    uid: '@azure/communication-react.AzureCommunicationChatAdapter.on_3'
    package: '@azure/communication-react'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function on(event: "participantsAdded", listener:
        ParticipantsAddedListener)
      parameters:
        - id: event
          type: '"participantsAdded"'
          description: ''
        - id: listener
          type: <xref uid="@azure/communication-react.ParticipantsAddedListener" />
          description: ''
  - name: 'on("participantsRemoved", ParticipantsRemovedListener)'
    uid: '@azure/communication-react.AzureCommunicationChatAdapter.on_4'
    package: '@azure/communication-react'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function on(event: "participantsRemoved", listener:
        ParticipantsRemovedListener)
      parameters:
        - id: event
          type: '"participantsRemoved"'
          description: ''
        - id: listener
          type: >-
            <xref uid="@azure/communication-react.ParticipantsRemovedListener"
            />
          description: ''
  - name: 'on("topicChanged", TopicChangedListener)'
    uid: '@azure/communication-react.AzureCommunicationChatAdapter.on_5'
    package: '@azure/communication-react'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'function on(event: "topicChanged", listener: TopicChangedListener)'
      parameters:
        - id: event
          type: '"topicChanged"'
          description: ''
        - id: listener
          type: <xref uid="@azure/communication-react.TopicChangedListener" />
          description: ''
