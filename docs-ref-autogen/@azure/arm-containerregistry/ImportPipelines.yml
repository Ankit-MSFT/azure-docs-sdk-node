### YamlMime:UniversalReference
items:
  - uid: '@azure/arm-containerregistry.ImportPipelines'
    name: ImportPipelines
    fullName: ImportPipelines
    children:
      - '@azure/arm-containerregistry.ImportPipelines.beginCreate'
      - '@azure/arm-containerregistry.ImportPipelines.beginDeleteMethod'
      - '@azure/arm-containerregistry.ImportPipelines.create'
      - '@azure/arm-containerregistry.ImportPipelines.deleteMethod'
      - '@azure/arm-containerregistry.ImportPipelines.get'
      - '@azure/arm-containerregistry.ImportPipelines.get_2'
      - '@azure/arm-containerregistry.ImportPipelines.get_1'
      - '@azure/arm-containerregistry.ImportPipelines.constructor'
      - '@azure/arm-containerregistry.ImportPipelines.list'
      - '@azure/arm-containerregistry.ImportPipelines.list_2'
      - '@azure/arm-containerregistry.ImportPipelines.list_1'
      - '@azure/arm-containerregistry.ImportPipelines.listNext'
      - '@azure/arm-containerregistry.ImportPipelines.listNext_2'
      - '@azure/arm-containerregistry.ImportPipelines.listNext_1'
    langs:
      - typeScript
    type: class
    summary: Class representing a ImportPipelines.
    package: '@azure/arm-containerregistry'
  - uid: '@azure/arm-containerregistry.ImportPipelines.beginCreate'
    name: >-
      beginCreate(string, string, string, ImportPipeline,
      msRest.RequestOptionsBase)
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      Creates an import pipeline for a container registry with the specified
      parameters.
    syntax:
      content: >-
        function beginCreate(resourceGroupName: string, registryName: string,
        importPipelineName: string, importPipelineCreateParameters:
        ImportPipeline, options?: msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: >-
            The name of the resource group to which the container registry
            belongs.
        - id: registryName
          type:
            - string
          description: The name of the container registry.
        - id: importPipelineName
          type:
            - string
          description: The name of the import pipeline.
        - id: importPipelineCreateParameters
          type:
            - '@azure/arm-containerregistry.ImportPipeline'
          description: The parameters for creating an import pipeline.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<LROPoller>
        description: Promise<msRestAzure.LROPoller>
    package: '@azure/arm-containerregistry'
  - uid: '@azure/arm-containerregistry.ImportPipelines.beginDeleteMethod'
    name: 'beginDeleteMethod(string, string, string, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Deletes an import pipeline from a container registry.
    syntax:
      content: >-
        function beginDeleteMethod(resourceGroupName: string, registryName:
        string, importPipelineName: string, options?: msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: >-
            The name of the resource group to which the container registry
            belongs.
        - id: registryName
          type:
            - string
          description: The name of the container registry.
        - id: importPipelineName
          type:
            - string
          description: The name of the import pipeline.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<LROPoller>
        description: Promise<msRestAzure.LROPoller>
    package: '@azure/arm-containerregistry'
  - uid: '@azure/arm-containerregistry.ImportPipelines.create'
    name: 'create(string, string, string, ImportPipeline, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      Creates an import pipeline for a container registry with the specified
      parameters.
    syntax:
      content: >-
        function create(resourceGroupName: string, registryName: string,
        importPipelineName: string, importPipelineCreateParameters:
        ImportPipeline, options?: msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: >-
            The name of the resource group to which the container registry
            belongs.
        - id: registryName
          type:
            - string
          description: The name of the container registry.
        - id: importPipelineName
          type:
            - string
          description: The name of the import pipeline.
        - id: importPipelineCreateParameters
          type:
            - '@azure/arm-containerregistry.ImportPipeline'
          description: The parameters for creating an import pipeline.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.ImportPipelinesCreateResponse>
        description: Promise<Models.ImportPipelinesCreateResponse>
    package: '@azure/arm-containerregistry'
  - uid: '@azure/arm-containerregistry.ImportPipelines.deleteMethod'
    name: 'deleteMethod(string, string, string, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Deletes an import pipeline from a container registry.
    syntax:
      content: >-
        function deleteMethod(resourceGroupName: string, registryName: string,
        importPipelineName: string, options?: msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: >-
            The name of the resource group to which the container registry
            belongs.
        - id: registryName
          type:
            - string
          description: The name of the container registry.
        - id: importPipelineName
          type:
            - string
          description: The name of the import pipeline.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<RestResponse>
        description: Promise<msRest.RestResponse>
    package: '@azure/arm-containerregistry'
  - uid: '@azure/arm-containerregistry.ImportPipelines.get'
    name: 'get(string, string, string, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Gets the properties of the import pipeline.
    syntax:
      content: >-
        function get(resourceGroupName: string, registryName: string,
        importPipelineName: string, options?: msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: >-
            The name of the resource group to which the container registry
            belongs.
        - id: registryName
          type:
            - string
          description: The name of the container registry.
        - id: importPipelineName
          type:
            - string
          description: The name of the import pipeline.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.ImportPipelinesGetResponse>
        description: Promise<Models.ImportPipelinesGetResponse>
    package: '@azure/arm-containerregistry'
  - uid: '@azure/arm-containerregistry.ImportPipelines.get_2'
    name: >-
      get(string, string, string, RequestOptionsBase,
      ServiceCallback<ImportPipeline>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function get(resourceGroupName: string, registryName: string,
        importPipelineName: string, options: RequestOptionsBase, callback:
        ServiceCallback<ImportPipeline>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: >-
            The name of the resource group to which the container registry
            belongs.
        - id: registryName
          type:
            - string
          description: The name of the container registry.
        - id: importPipelineName
          type:
            - string
          description: The name of the import pipeline.
        - id: options
          type:
            - RequestOptionsBase
          description: The optional parameters
        - id: callback
          type:
            - ServiceCallback<@azure/arm-containerregistry.ImportPipeline>
          description: |
            The callback
    package: '@azure/arm-containerregistry'
  - uid: '@azure/arm-containerregistry.ImportPipelines.get_1'
    name: 'get(string, string, string, ServiceCallback<ImportPipeline>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function get(resourceGroupName: string, registryName: string,
        importPipelineName: string, callback: ServiceCallback<ImportPipeline>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: >-
            The name of the resource group to which the container registry
            belongs.
        - id: registryName
          type:
            - string
          description: The name of the container registry.
        - id: importPipelineName
          type:
            - string
          description: The name of the import pipeline.
        - id: callback
          type:
            - ServiceCallback<@azure/arm-containerregistry.ImportPipeline>
          description: |
            The callback
    package: '@azure/arm-containerregistry'
  - uid: '@azure/arm-containerregistry.ImportPipelines.constructor'
    name: ImportPipelines(ContainerRegistryManagementClientContext)
    children: []
    type: constructor
    langs:
      - typeScript
    summary: Create a ImportPipelines.
    syntax:
      content: 'new ImportPipelines(client: ContainerRegistryManagementClientContext)'
      parameters:
        - id: client
          type:
            - >-
              @azure/arm-containerregistry.ContainerRegistryManagementClientContext
          description: |
            Reference to the service client.
    package: '@azure/arm-containerregistry'
  - uid: '@azure/arm-containerregistry.ImportPipelines.list'
    name: 'list(string, string, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Lists all import pipelines for the specified container registry.
    syntax:
      content: >-
        function list(resourceGroupName: string, registryName: string, options?:
        msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: >-
            The name of the resource group to which the container registry
            belongs.
        - id: registryName
          type:
            - string
          description: The name of the container registry.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.ImportPipelinesListResponse>
        description: Promise<Models.ImportPipelinesListResponse>
    package: '@azure/arm-containerregistry'
  - uid: '@azure/arm-containerregistry.ImportPipelines.list_2'
    name: >-
      list(string, string, RequestOptionsBase,
      ServiceCallback<ImportPipelineListResult>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function list(resourceGroupName: string, registryName: string, options:
        RequestOptionsBase, callback: ServiceCallback<ImportPipelineListResult>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: >-
            The name of the resource group to which the container registry
            belongs.
        - id: registryName
          type:
            - string
          description: The name of the container registry.
        - id: options
          type:
            - RequestOptionsBase
          description: The optional parameters
        - id: callback
          type:
            - >-
              ServiceCallback<@azure/arm-containerregistry.ImportPipelineListResult>
          description: |
            The callback
    package: '@azure/arm-containerregistry'
  - uid: '@azure/arm-containerregistry.ImportPipelines.list_1'
    name: 'list(string, string, ServiceCallback<ImportPipelineListResult>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function list(resourceGroupName: string, registryName: string, callback:
        ServiceCallback<ImportPipelineListResult>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: >-
            The name of the resource group to which the container registry
            belongs.
        - id: registryName
          type:
            - string
          description: The name of the container registry.
        - id: callback
          type:
            - >-
              ServiceCallback<@azure/arm-containerregistry.ImportPipelineListResult>
          description: |
            The callback
    package: '@azure/arm-containerregistry'
  - uid: '@azure/arm-containerregistry.ImportPipelines.listNext'
    name: 'listNext(string, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Lists all import pipelines for the specified container registry.
    syntax:
      content: >-
        function listNext(nextPageLink: string, options?:
        msRest.RequestOptionsBase)
      parameters:
        - id: nextPageLink
          type:
            - string
          description: The NextLink from the previous successful call to List operation.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.ImportPipelinesListNextResponse>
        description: Promise<Models.ImportPipelinesListNextResponse>
    package: '@azure/arm-containerregistry'
  - uid: '@azure/arm-containerregistry.ImportPipelines.listNext_2'
    name: >-
      listNext(string, RequestOptionsBase,
      ServiceCallback<ImportPipelineListResult>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function listNext(nextPageLink: string, options: RequestOptionsBase,
        callback: ServiceCallback<ImportPipelineListResult>)
      parameters:
        - id: nextPageLink
          type:
            - string
          description: The NextLink from the previous successful call to List operation.
        - id: options
          type:
            - RequestOptionsBase
          description: The optional parameters
        - id: callback
          type:
            - >-
              ServiceCallback<@azure/arm-containerregistry.ImportPipelineListResult>
          description: |
            The callback
    package: '@azure/arm-containerregistry'
  - uid: '@azure/arm-containerregistry.ImportPipelines.listNext_1'
    name: 'listNext(string, ServiceCallback<ImportPipelineListResult>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function listNext(nextPageLink: string, callback:
        ServiceCallback<ImportPipelineListResult>)
      parameters:
        - id: nextPageLink
          type:
            - string
          description: The NextLink from the previous successful call to List operation.
        - id: callback
          type:
            - >-
              ServiceCallback<@azure/arm-containerregistry.ImportPipelineListResult>
          description: |
            The callback
    package: '@azure/arm-containerregistry'
references:
  - uid: '@azure/arm-containerregistry.ContainerRegistryManagementClientContext'
    name: ContainerRegistryManagementClientContext
    spec.typeScript:
      - name: ContainerRegistryManagementClientContext
        fullName: ContainerRegistryManagementClientContext
        uid: '@azure/arm-containerregistry.ContainerRegistryManagementClientContext'
  - uid: '@azure/arm-containerregistry.ImportPipeline'
    name: ImportPipeline
    spec.typeScript:
      - name: ImportPipeline
        fullName: ImportPipeline
        uid: '@azure/arm-containerregistry.ImportPipeline'
  - uid: ServiceCallback<@azure/arm-containerregistry.ImportPipeline>
    name: ImportPipeline>
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: ImportPipeline
        fullName: ImportPipeline
        uid: '@azure/arm-containerregistry.ImportPipeline'
      - name: '>'
        fullName: '>'
  - uid: ServiceCallback<@azure/arm-containerregistry.ImportPipelineListResult>
    name: ImportPipelineListResult>
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: ImportPipelineListResult
        fullName: ImportPipelineListResult
        uid: '@azure/arm-containerregistry.ImportPipelineListResult'
      - name: '>'
        fullName: '>'
