### YamlMime:UniversalReference
items:
  - uid: '@azure/event-processor-host.Lease'
    name: Lease
    fullName: Lease
    children:
      - '@azure/event-processor-host.Lease.epoch'
      - '@azure/event-processor-host.Lease.getInfo'
      - '@azure/event-processor-host.Lease.incrementEpoch'
      - '@azure/event-processor-host.Lease.isExpired'
      - '@azure/event-processor-host.Lease.constructor'
      - '@azure/event-processor-host.Lease.offset'
      - '@azure/event-processor-host.Lease.owner'
      - '@azure/event-processor-host.Lease.partitionId'
      - '@azure/event-processor-host.Lease.sequenceNumber'
      - '@azure/event-processor-host.Lease.serialize'
      - '@azure/event-processor-host.Lease.token'
    langs:
      - typeScript
    type: class
    summary: Describes a Lease.
    package: '@azure/event-processor-host'
  - uid: '@azure/event-processor-host.Lease.epoch'
    name: epoch
    fullName: epoch
    children: []
    langs:
      - typeScript
    type: property
    summary: >-
      {number} epoch The epoch(time) of the lease, which is a value you can use
      to

      determine the most recent owner of a partition between competing nodes.
    syntax:
      content: 'epoch: number'
      return:
        type:
          - number
    package: '@azure/event-processor-host'
  - uid: '@azure/event-processor-host.Lease.getInfo'
    name: getInfo
    children: []
    type: method
    langs:
      - typeScript
    summary: Gets the lease information.
    syntax:
      content: function getInfo()
      parameters: []
      return:
        type:
          - '@azure/event-processor-host.LeaseInfo'
    package: '@azure/event-processor-host'
  - uid: '@azure/event-processor-host.Lease.incrementEpoch'
    name: incrementEpoch
    children: []
    type: method
    langs:
      - typeScript
    summary: Increments the value of epoch by 1.
    syntax:
      content: function incrementEpoch()
      parameters: []
      return:
        type:
          - number
    package: '@azure/event-processor-host'
  - uid: '@azure/event-processor-host.Lease.isExpired'
    name: isExpired
    children: []
    type: method
    langs:
      - typeScript
    summary: Determines whether the lease is expired.
    syntax:
      content: function isExpired()
      parameters: []
      return:
        type:
          - Promise<boolean>
    package: '@azure/event-processor-host'
  - uid: '@azure/event-processor-host.Lease.constructor'
    name: Lease
    children: []
    type: constructor
    langs:
      - typeScript
    summary: Creates an instance of the Lease.
    syntax:
      content: 'new Lease(info: LeaseInfo)'
      parameters:
        - id: info
          type:
            - '@azure/event-processor-host.LeaseInfo'
          description: |
            The Lease info.
    package: '@azure/event-processor-host'
  - uid: '@azure/event-processor-host.Lease.offset'
    name: offset
    fullName: offset
    children: []
    langs:
      - typeScript
    type: property
    summary: '{string} offset The offset of the event to be checked in.'
    syntax:
      content: 'offset: string'
      return:
        type:
          - string
    package: '@azure/event-processor-host'
  - uid: '@azure/event-processor-host.Lease.owner'
    name: owner
    fullName: owner
    children: []
    langs:
      - typeScript
    type: property
    summary: '{string} owner The host owner for the partition.'
    syntax:
      content: 'owner: string'
      return:
        type:
          - string
    package: '@azure/event-processor-host'
  - uid: '@azure/event-processor-host.Lease.partitionId'
    name: partitionId
    fullName: partitionId
    children: []
    langs:
      - typeScript
    type: property
    summary: >-
      {string} partitionId The associated partitionId for which the lease is
      held.
    syntax:
      content: 'partitionId: string'
      return:
        type:
          - string
    package: '@azure/event-processor-host'
  - uid: '@azure/event-processor-host.Lease.sequenceNumber'
    name: sequenceNumber
    fullName: sequenceNumber
    children: []
    langs:
      - typeScript
    type: property
    summary: '{string} sequenceNumber The sequence number of the event to be checked in.'
    syntax:
      content: 'sequenceNumber: number'
      return:
        type:
          - number
    package: '@azure/event-processor-host'
  - uid: '@azure/event-processor-host.Lease.serialize'
    name: serialize
    children: []
    type: method
    langs:
      - typeScript
    summary: Serializes the lease information.
    syntax:
      content: function serialize()
      parameters: []
      return:
        type:
          - string
    package: '@azure/event-processor-host'
  - uid: '@azure/event-processor-host.Lease.token'
    name: token
    fullName: token
    children: []
    langs:
      - typeScript
    type: property
    summary: >-
      {string} token The lease token that manages concurrency between hosts. You
      can use

      this token to guarantee single access to any resource needed by the EPH.
    syntax:
      content: 'token: string'
      return:
        type:
          - string
    package: '@azure/event-processor-host'
references:
  - uid: '@azure/event-processor-host.LeaseInfo'
    name: LeaseInfo
    spec.typeScript:
      - name: LeaseInfo
        fullName: LeaseInfo
        uid: '@azure/event-processor-host.LeaseInfo'
