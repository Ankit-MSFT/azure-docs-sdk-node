### YamlMime:TSType
name: TaskExecutionInformation
uid: '@azure/batch.TaskExecutionInformation'
package: '@azure/batch'
summary: An interface representing TaskExecutionInformation.
fullName: TaskExecutionInformation
type: interface
properties:
  - name: containerInfo
    uid: '@azure/batch.TaskExecutionInformation.containerInfo'
    package: '@azure/batch'
    summary: >-
      Information about the container under which the task is executing. This
      property is set only

      if the task runs in a container context.
    fullName: containerInfo
    syntax:
      content: 'containerInfo?: TaskContainerExecutionInformation'
      return:
        type: <xref uid="@azure/batch.TaskContainerExecutionInformation" />
        description: ''
  - name: endTime
    uid: '@azure/batch.TaskExecutionInformation.endTime'
    package: '@azure/batch'
    summary: >-
      The time at which the task completed. This property is set only if the
      task is in the

      Completed state.
    fullName: endTime
    syntax:
      content: 'endTime?: Date'
      return:
        type: Date
        description: ''
  - name: exitCode
    uid: '@azure/batch.TaskExecutionInformation.exitCode'
    package: '@azure/batch'
    summary: >-
      The exit code of the program specified on the task command line. This
      property is set only if

      the task is in the completed state. In general, the exit code for a
      process reflects the

      specific convention implemented by the application developer for that
      process. If you use the

      exit code value to make decisions in your code, be sure that you know the
      exit code convention

      used by the application process. However, if the Batch service terminates
      the task (due to

      timeout, or user termination via the API) you may see an operating
      system-defined exit code.
    fullName: exitCode
    syntax:
      content: 'exitCode?: undefined | number'
      return:
        type: undefined | number
        description: ''
  - name: failureInfo
    uid: '@azure/batch.TaskExecutionInformation.failureInfo'
    package: '@azure/batch'
    summary: >-
      Information describing the task failure, if any. This property is set only
      if the task is in

      the completed state and encountered a failure.
    fullName: failureInfo
    syntax:
      content: 'failureInfo?: TaskFailureInformation'
      return:
        type: <xref uid="@azure/batch.TaskFailureInformation" />
        description: ''
  - name: lastRequeueTime
    uid: '@azure/batch.TaskExecutionInformation.lastRequeueTime'
    package: '@azure/batch'
    summary: >-
      The most recent time at which the task has been requeued by the Batch
      service as the result of

      a user request. This property is set only if the requeueCount is nonzero.
    fullName: lastRequeueTime
    syntax:
      content: 'lastRequeueTime?: Date'
      return:
        type: Date
        description: ''
  - name: lastRetryTime
    uid: '@azure/batch.TaskExecutionInformation.lastRetryTime'
    package: '@azure/batch'
    summary: >-
      The most recent time at which a retry of the task started running. This
      element is present

      only if the task was retried (i.e. retryCount is nonzero). If present,
      this is typically the

      same as startTime, but may be different if the task has been restarted for
      reasons other than

      retry; for example, if the compute node was rebooted during a retry, then
      the startTime is

      updated but the lastRetryTime is not.
    fullName: lastRetryTime
    syntax:
      content: 'lastRetryTime?: Date'
      return:
        type: Date
        description: ''
  - name: requeueCount
    uid: '@azure/batch.TaskExecutionInformation.requeueCount'
    package: '@azure/batch'
    summary: >-
      The number of times the task has been requeued by the Batch service as the
      result of a user

      request. When the user removes nodes from a pool (by resizing/shrinking
      the pool) or when the

      job is being disabled, the user can specify that running tasks on the
      nodes be requeued for

      execution. This count tracks how many times the task has been requeued for
      these reasons.
    fullName: requeueCount
    syntax:
      content: 'requeueCount: number'
      return:
        type: number
        description: ''
  - name: result
    uid: '@azure/batch.TaskExecutionInformation.result'
    package: '@azure/batch'
    summary: >-
      The result of the task execution. If the value is 'failed', then the
      details of the failure

      can be found in the failureInfo property. Possible values include:
      'success', 'failure'
    fullName: result
    syntax:
      content: 'result?: TaskExecutionResult'
      return:
        type: <xref uid="@azure/batch.TaskExecutionResult" />
        description: ''
  - name: retryCount
    uid: '@azure/batch.TaskExecutionInformation.retryCount'
    package: '@azure/batch'
    summary: >-
      The number of times the task has been retried by the Batch service. Task
      application failures

      (non-zero exit code) are retried, pre-processing errors (the task could
      not be run) and file

      upload errors are not retried. The Batch service will retry the task up to
      the limit specified

      by the constraints.
    fullName: retryCount
    syntax:
      content: 'retryCount: number'
      return:
        type: number
        description: ''
  - name: startTime
    uid: '@azure/batch.TaskExecutionInformation.startTime'
    package: '@azure/batch'
    summary: >-
      The time at which the task started running. 'Running' corresponds to the
      running state, so if

      the task specifies resource files or application packages, then the start
      time reflects the

      time at which the task started downloading or deploying these. If the task
      has been restarted

      or retried, this is the most recent time at which the task started
      running. This property is

      present only for tasks that are in the running or completed state.
    fullName: startTime
    syntax:
      content: 'startTime?: Date'
      return:
        type: Date
        description: ''
