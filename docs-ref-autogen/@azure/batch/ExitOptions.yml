### YamlMime:TSType
name: ExitOptions
uid: '@azure/batch.ExitOptions'
package: '@azure/batch'
summary: An interface representing ExitOptions.
fullName: ExitOptions
type: interface
properties:
  - name: dependencyAction
    uid: '@azure/batch.ExitOptions.dependencyAction'
    package: '@azure/batch'
    summary: >-
      An action that the Batch service performs on tasks that depend on this
      task. The default is

      'satisfy' for exit code 0, and 'block' for all other exit conditions. If
      the job's

      usesTaskDependencies property is set to false, then specifying the
      dependencyAction property

      returns an error and the add task request fails with an invalid property
      value error; if you

      are calling the REST API directly, the HTTP status code is 400  (Bad
      Request). Possible values

      include: 'satisfy', 'block'
    fullName: dependencyAction
    syntax:
      content: 'dependencyAction?: DependencyAction'
      return:
        type: <xref uid="@azure/batch.DependencyAction" />
        description: ''
  - name: jobAction
    uid: '@azure/batch.ExitOptions.jobAction'
    package: '@azure/batch'
    summary: >-
      An action to take on the job containing the task, if the task completes
      with the given exit

      condition and the job's onTaskFailed property is
      'performExitOptionsJobAction'. The default is

      none for exit code 0 and terminate for all other exit conditions. If the
      job's onTaskFailed

      property is noaction, then specifying this property returns an error and
      the add task request

      fails with an invalid property value error; if you are calling the REST
      API directly, the HTTP

      status code is 400 (Bad Request). Possible values include: 'none',
      'disable', 'terminate'
    fullName: jobAction
    syntax:
      content: 'jobAction?: JobAction'
      return:
        type: <xref uid="@azure/batch.JobAction" />
        description: ''
