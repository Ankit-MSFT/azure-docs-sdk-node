### YamlMime:TSType
name: JobSchedule
uid: '@azure/batch.operations.jobSchedule.d.JobSchedule'
package: '@azure/batch'
summary: Class representing a JobSchedule.
fullName: JobSchedule
remarks: ''
isPreview: false
isDeprecated: false
type: class
constructors:
  - name: JobSchedule(BatchServiceClientContext)
    uid: '@azure/batch.operations.jobSchedule.d.JobSchedule.constructor'
    package: '@azure/batch'
    summary: Create a JobSchedule.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'new JobSchedule(client: BatchServiceClientContext)'
      parameters:
        - id: client
          type: >-
            <xref
            uid="@azure/batch.batchServiceClientContext.d.BatchServiceClientContext"
            />
          description: |
            Reference to the service client.
methods:
  - name: >-
      add(JobScheduleAddParameter, JobScheduleAddOptionalParams,
      ServiceCallback<void>)
    uid: '@azure/batch.operations.jobSchedule.d.JobSchedule.add_2'
    package: '@azure/batch'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function add(cloudJobSchedule: JobScheduleAddParameter, options:
        JobScheduleAddOptionalParams, callback: ServiceCallback<void>)
      parameters:
        - id: cloudJobSchedule
          type: <xref uid="@azure/batch.models.index.d.JobScheduleAddParameter" />
          description: The Job Schedule to be added.
        - id: options
          type: >-
            <xref uid="@azure/batch.models.index.d.JobScheduleAddOptionalParams"
            />
          description: The optional parameters
        - id: callback
          type: ServiceCallback&lt;void&gt;
          description: |
            The callback
  - name: 'add(JobScheduleAddParameter, Models.JobScheduleAddOptionalParams)'
    uid: '@azure/batch.operations.jobSchedule.d.JobSchedule.add'
    package: '@azure/batch'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function add(cloudJobSchedule: JobScheduleAddParameter, options?:
        Models.JobScheduleAddOptionalParams)
      parameters:
        - id: cloudJobSchedule
          type: <xref uid="@azure/batch.models.index.d.JobScheduleAddParameter" />
          description: The Job Schedule to be added.
        - id: options
          type: <xref uid="Models.JobScheduleAddOptionalParams" />
          description: ''
      return:
        type: Promise&lt;<xref uid="Models.JobScheduleAddResponse" />&gt;
        description: Promise<Models.JobScheduleAddResponse>
  - name: 'add(JobScheduleAddParameter, ServiceCallback<void>)'
    uid: '@azure/batch.operations.jobSchedule.d.JobSchedule.add_1'
    package: '@azure/batch'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function add(cloudJobSchedule: JobScheduleAddParameter, callback:
        ServiceCallback<void>)
      parameters:
        - id: cloudJobSchedule
          type: <xref uid="@azure/batch.models.index.d.JobScheduleAddParameter" />
          description: The Job Schedule to be added.
        - id: callback
          type: ServiceCallback&lt;void&gt;
          description: |
            The callback
  - name: >-
      deleteMethod(string, JobScheduleDeleteMethodOptionalParams,
      ServiceCallback<void>)
    uid: '@azure/batch.operations.jobSchedule.d.JobSchedule.deleteMethod_2'
    package: '@azure/batch'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function deleteMethod(jobScheduleId: string, options:
        JobScheduleDeleteMethodOptionalParams, callback: ServiceCallback<void>)
      parameters:
        - id: jobScheduleId
          type: string
          description: The ID of the Job Schedule to delete.
        - id: options
          type: >-
            <xref
            uid="@azure/batch.models.index.d.JobScheduleDeleteMethodOptionalParams"
            />
          description: The optional parameters
        - id: callback
          type: ServiceCallback&lt;void&gt;
          description: |
            The callback
  - name: 'deleteMethod(string, Models.JobScheduleDeleteMethodOptionalParams)'
    uid: '@azure/batch.operations.jobSchedule.d.JobSchedule.deleteMethod'
    package: '@azure/batch'
    summary: >-
      When you delete a Job Schedule, this also deletes all Jobs and Tasks under
      that schedule. When

      Tasks are deleted, all the files in their working directories on the
      Compute Nodes are also

      deleted (the retention period is ignored). The Job Schedule statistics are
      no longer accessible

      once the Job Schedule is deleted, though they are still counted towards
      Account lifetime

      statistics.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function deleteMethod(jobScheduleId: string, options?:
        Models.JobScheduleDeleteMethodOptionalParams)
      parameters:
        - id: jobScheduleId
          type: string
          description: The ID of the Job Schedule to delete.
        - id: options
          type: <xref uid="Models.JobScheduleDeleteMethodOptionalParams" />
          description: ''
      return:
        type: Promise&lt;<xref uid="Models.JobScheduleDeleteResponse" />&gt;
        description: Promise<Models.JobScheduleDeleteResponse>
  - name: 'deleteMethod(string, ServiceCallback<void>)'
    uid: '@azure/batch.operations.jobSchedule.d.JobSchedule.deleteMethod_1'
    package: '@azure/batch'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function deleteMethod(jobScheduleId: string, callback:
        ServiceCallback<void>)
      parameters:
        - id: jobScheduleId
          type: string
          description: The ID of the Job Schedule to delete.
        - id: callback
          type: ServiceCallback&lt;void&gt;
          description: |
            The callback
  - name: 'disable(string, JobScheduleDisableOptionalParams, ServiceCallback<void>)'
    uid: '@azure/batch.operations.jobSchedule.d.JobSchedule.disable_2'
    package: '@azure/batch'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function disable(jobScheduleId: string, options:
        JobScheduleDisableOptionalParams, callback: ServiceCallback<void>)
      parameters:
        - id: jobScheduleId
          type: string
          description: The ID of the Job Schedule to disable.
        - id: options
          type: >-
            <xref
            uid="@azure/batch.models.index.d.JobScheduleDisableOptionalParams"
            />
          description: The optional parameters
        - id: callback
          type: ServiceCallback&lt;void&gt;
          description: |
            The callback
  - name: 'disable(string, Models.JobScheduleDisableOptionalParams)'
    uid: '@azure/batch.operations.jobSchedule.d.JobSchedule.disable'
    package: '@azure/batch'
    summary: No new Jobs will be created until the Job Schedule is enabled again.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function disable(jobScheduleId: string, options?:
        Models.JobScheduleDisableOptionalParams)
      parameters:
        - id: jobScheduleId
          type: string
          description: The ID of the Job Schedule to disable.
        - id: options
          type: <xref uid="Models.JobScheduleDisableOptionalParams" />
          description: ''
      return:
        type: Promise&lt;<xref uid="Models.JobScheduleDisableResponse" />&gt;
        description: Promise<Models.JobScheduleDisableResponse>
  - name: 'disable(string, ServiceCallback<void>)'
    uid: '@azure/batch.operations.jobSchedule.d.JobSchedule.disable_1'
    package: '@azure/batch'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'function disable(jobScheduleId: string, callback: ServiceCallback<void>)'
      parameters:
        - id: jobScheduleId
          type: string
          description: The ID of the Job Schedule to disable.
        - id: callback
          type: ServiceCallback&lt;void&gt;
          description: |
            The callback
  - name: 'enable(string, JobScheduleEnableOptionalParams, ServiceCallback<void>)'
    uid: '@azure/batch.operations.jobSchedule.d.JobSchedule.enable_2'
    package: '@azure/batch'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function enable(jobScheduleId: string, options:
        JobScheduleEnableOptionalParams, callback: ServiceCallback<void>)
      parameters:
        - id: jobScheduleId
          type: string
          description: The ID of the Job Schedule to enable.
        - id: options
          type: >-
            <xref
            uid="@azure/batch.models.index.d.JobScheduleEnableOptionalParams" />
          description: The optional parameters
        - id: callback
          type: ServiceCallback&lt;void&gt;
          description: |
            The callback
  - name: 'enable(string, Models.JobScheduleEnableOptionalParams)'
    uid: '@azure/batch.operations.jobSchedule.d.JobSchedule.enable'
    package: '@azure/batch'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function enable(jobScheduleId: string, options?:
        Models.JobScheduleEnableOptionalParams)
      parameters:
        - id: jobScheduleId
          type: string
          description: The ID of the Job Schedule to enable.
        - id: options
          type: <xref uid="Models.JobScheduleEnableOptionalParams" />
          description: ''
      return:
        type: Promise&lt;<xref uid="Models.JobScheduleEnableResponse" />&gt;
        description: Promise<Models.JobScheduleEnableResponse>
  - name: 'enable(string, ServiceCallback<void>)'
    uid: '@azure/batch.operations.jobSchedule.d.JobSchedule.enable_1'
    package: '@azure/batch'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'function enable(jobScheduleId: string, callback: ServiceCallback<void>)'
      parameters:
        - id: jobScheduleId
          type: string
          description: The ID of the Job Schedule to enable.
        - id: callback
          type: ServiceCallback&lt;void&gt;
          description: |
            The callback
  - name: 'exists(string, JobScheduleExistsOptionalParams, ServiceCallback<boolean>)'
    uid: '@azure/batch.operations.jobSchedule.d.JobSchedule.exists_2'
    package: '@azure/batch'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function exists(jobScheduleId: string, options:
        JobScheduleExistsOptionalParams, callback: ServiceCallback<boolean>)
      parameters:
        - id: jobScheduleId
          type: string
          description: The ID of the Job Schedule which you want to check.
        - id: options
          type: >-
            <xref
            uid="@azure/batch.models.index.d.JobScheduleExistsOptionalParams" />
          description: The optional parameters
        - id: callback
          type: ServiceCallback&lt;boolean&gt;
          description: |
            The callback
  - name: 'exists(string, Models.JobScheduleExistsOptionalParams)'
    uid: '@azure/batch.operations.jobSchedule.d.JobSchedule.exists'
    package: '@azure/batch'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function exists(jobScheduleId: string, options?:
        Models.JobScheduleExistsOptionalParams)
      parameters:
        - id: jobScheduleId
          type: string
          description: The ID of the Job Schedule which you want to check.
        - id: options
          type: <xref uid="Models.JobScheduleExistsOptionalParams" />
          description: ''
      return:
        type: Promise&lt;<xref uid="Models.JobScheduleExistsResponse" />&gt;
        description: Promise<Models.JobScheduleExistsResponse>
  - name: 'exists(string, ServiceCallback<boolean>)'
    uid: '@azure/batch.operations.jobSchedule.d.JobSchedule.exists_1'
    package: '@azure/batch'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function exists(jobScheduleId: string, callback:
        ServiceCallback<boolean>)
      parameters:
        - id: jobScheduleId
          type: string
          description: The ID of the Job Schedule which you want to check.
        - id: callback
          type: ServiceCallback&lt;boolean&gt;
          description: |
            The callback
  - name: >-
      get(string, JobScheduleGetOptionalParams,
      ServiceCallback<CloudJobSchedule>)
    uid: '@azure/batch.operations.jobSchedule.d.JobSchedule.get_2'
    package: '@azure/batch'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function get(jobScheduleId: string, options:
        JobScheduleGetOptionalParams, callback:
        ServiceCallback<CloudJobSchedule>)
      parameters:
        - id: jobScheduleId
          type: string
          description: The ID of the Job Schedule to get.
        - id: options
          type: >-
            <xref uid="@azure/batch.models.index.d.JobScheduleGetOptionalParams"
            />
          description: The optional parameters
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/batch.models.index.d.CloudJobSchedule" />&gt;
          description: |
            The callback
  - name: 'get(string, Models.JobScheduleGetOptionalParams)'
    uid: '@azure/batch.operations.jobSchedule.d.JobSchedule.get'
    package: '@azure/batch'
    summary: Gets information about the specified Job Schedule.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function get(jobScheduleId: string, options?:
        Models.JobScheduleGetOptionalParams)
      parameters:
        - id: jobScheduleId
          type: string
          description: The ID of the Job Schedule to get.
        - id: options
          type: <xref uid="Models.JobScheduleGetOptionalParams" />
          description: ''
      return:
        type: Promise&lt;<xref uid="Models.JobScheduleGetResponse" />&gt;
        description: Promise<Models.JobScheduleGetResponse>
  - name: 'get(string, ServiceCallback<CloudJobSchedule>)'
    uid: '@azure/batch.operations.jobSchedule.d.JobSchedule.get_1'
    package: '@azure/batch'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function get(jobScheduleId: string, callback:
        ServiceCallback<CloudJobSchedule>)
      parameters:
        - id: jobScheduleId
          type: string
          description: The ID of the Job Schedule to get.
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/batch.models.index.d.CloudJobSchedule" />&gt;
          description: |
            The callback
  - name: >-
      list(JobScheduleListOptionalParams,
      ServiceCallback<CloudJobScheduleListResult>)
    uid: '@azure/batch.operations.jobSchedule.d.JobSchedule.list_2'
    package: '@azure/batch'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function list(options: JobScheduleListOptionalParams, callback:
        ServiceCallback<CloudJobScheduleListResult>)
      parameters:
        - id: options
          type: >-
            <xref
            uid="@azure/batch.models.index.d.JobScheduleListOptionalParams" />
          description: The optional parameters
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/batch.models.index.d.CloudJobScheduleListResult" />&gt;
          description: |
            The callback
  - name: list(Models.JobScheduleListOptionalParams)
    uid: '@azure/batch.operations.jobSchedule.d.JobSchedule.list'
    package: '@azure/batch'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'function list(options?: Models.JobScheduleListOptionalParams)'
      parameters:
        - id: options
          type: <xref uid="Models.JobScheduleListOptionalParams" />
          description: ''
      return:
        type: Promise&lt;<xref uid="Models.JobScheduleListResponse" />&gt;
        description: Promise<Models.JobScheduleListResponse>
  - name: list(ServiceCallback<CloudJobScheduleListResult>)
    uid: '@azure/batch.operations.jobSchedule.d.JobSchedule.list_1'
    package: '@azure/batch'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'function list(callback: ServiceCallback<CloudJobScheduleListResult>)'
      parameters:
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/batch.models.index.d.CloudJobScheduleListResult" />&gt;
          description: |
            The callback
  - name: >-
      listNext(string, JobScheduleListNextOptionalParams,
      ServiceCallback<CloudJobScheduleListResult>)
    uid: '@azure/batch.operations.jobSchedule.d.JobSchedule.listNext_2'
    package: '@azure/batch'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listNext(nextPageLink: string, options:
        JobScheduleListNextOptionalParams, callback:
        ServiceCallback<CloudJobScheduleListResult>)
      parameters:
        - id: nextPageLink
          type: string
          description: The NextLink from the previous successful call to List operation.
        - id: options
          type: >-
            <xref
            uid="@azure/batch.models.index.d.JobScheduleListNextOptionalParams"
            />
          description: The optional parameters
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/batch.models.index.d.CloudJobScheduleListResult" />&gt;
          description: |
            The callback
  - name: 'listNext(string, Models.JobScheduleListNextOptionalParams)'
    uid: '@azure/batch.operations.jobSchedule.d.JobSchedule.listNext'
    package: '@azure/batch'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listNext(nextPageLink: string, options?:
        Models.JobScheduleListNextOptionalParams)
      parameters:
        - id: nextPageLink
          type: string
          description: The NextLink from the previous successful call to List operation.
        - id: options
          type: <xref uid="Models.JobScheduleListNextOptionalParams" />
          description: ''
      return:
        type: Promise&lt;<xref uid="Models.JobScheduleListResponse" />&gt;
        description: Promise<Models.JobScheduleListResponse>
  - name: 'listNext(string, ServiceCallback<CloudJobScheduleListResult>)'
    uid: '@azure/batch.operations.jobSchedule.d.JobSchedule.listNext_1'
    package: '@azure/batch'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listNext(nextPageLink: string, callback:
        ServiceCallback<CloudJobScheduleListResult>)
      parameters:
        - id: nextPageLink
          type: string
          description: The NextLink from the previous successful call to List operation.
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/batch.models.index.d.CloudJobScheduleListResult" />&gt;
          description: |
            The callback
  - name: >-
      patch(string, JobSchedulePatchParameter, JobSchedulePatchOptionalParams,
      ServiceCallback<void>)
    uid: '@azure/batch.operations.jobSchedule.d.JobSchedule.patch_2'
    package: '@azure/batch'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function patch(jobScheduleId: string, jobSchedulePatchParameter:
        JobSchedulePatchParameter, options: JobSchedulePatchOptionalParams,
        callback: ServiceCallback<void>)
      parameters:
        - id: jobScheduleId
          type: string
          description: The ID of the Job Schedule to update.
        - id: jobSchedulePatchParameter
          type: <xref uid="@azure/batch.models.index.d.JobSchedulePatchParameter" />
          description: The parameters for the request.
        - id: options
          type: >-
            <xref
            uid="@azure/batch.models.index.d.JobSchedulePatchOptionalParams" />
          description: The optional parameters
        - id: callback
          type: ServiceCallback&lt;void&gt;
          description: |
            The callback
  - name: >-
      patch(string, JobSchedulePatchParameter,
      Models.JobSchedulePatchOptionalParams)
    uid: '@azure/batch.operations.jobSchedule.d.JobSchedule.patch'
    package: '@azure/batch'
    summary: >-
      This replaces only the Job Schedule properties specified in the request.
      For example, if the

      schedule property is not specified with this request, then the Batch
      service will keep the

      existing schedule. Changes to a Job Schedule only impact Jobs created by
      the schedule after the

      update has taken place; currently running Jobs are unaffected.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function patch(jobScheduleId: string, jobSchedulePatchParameter:
        JobSchedulePatchParameter, options?:
        Models.JobSchedulePatchOptionalParams)
      parameters:
        - id: jobScheduleId
          type: string
          description: The ID of the Job Schedule to update.
        - id: jobSchedulePatchParameter
          type: <xref uid="@azure/batch.models.index.d.JobSchedulePatchParameter" />
          description: The parameters for the request.
        - id: options
          type: <xref uid="Models.JobSchedulePatchOptionalParams" />
          description: ''
      return:
        type: Promise&lt;<xref uid="Models.JobSchedulePatchResponse" />&gt;
        description: Promise<Models.JobSchedulePatchResponse>
  - name: 'patch(string, JobSchedulePatchParameter, ServiceCallback<void>)'
    uid: '@azure/batch.operations.jobSchedule.d.JobSchedule.patch_1'
    package: '@azure/batch'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function patch(jobScheduleId: string, jobSchedulePatchParameter:
        JobSchedulePatchParameter, callback: ServiceCallback<void>)
      parameters:
        - id: jobScheduleId
          type: string
          description: The ID of the Job Schedule to update.
        - id: jobSchedulePatchParameter
          type: <xref uid="@azure/batch.models.index.d.JobSchedulePatchParameter" />
          description: The parameters for the request.
        - id: callback
          type: ServiceCallback&lt;void&gt;
          description: |
            The callback
  - name: >-
      terminate(string, JobScheduleTerminateOptionalParams,
      ServiceCallback<void>)
    uid: '@azure/batch.operations.jobSchedule.d.JobSchedule.terminate_2'
    package: '@azure/batch'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function terminate(jobScheduleId: string, options:
        JobScheduleTerminateOptionalParams, callback: ServiceCallback<void>)
      parameters:
        - id: jobScheduleId
          type: string
          description: The ID of the Job Schedule to terminates.
        - id: options
          type: >-
            <xref
            uid="@azure/batch.models.index.d.JobScheduleTerminateOptionalParams"
            />
          description: The optional parameters
        - id: callback
          type: ServiceCallback&lt;void&gt;
          description: |
            The callback
  - name: 'terminate(string, Models.JobScheduleTerminateOptionalParams)'
    uid: '@azure/batch.operations.jobSchedule.d.JobSchedule.terminate'
    package: '@azure/batch'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function terminate(jobScheduleId: string, options?:
        Models.JobScheduleTerminateOptionalParams)
      parameters:
        - id: jobScheduleId
          type: string
          description: The ID of the Job Schedule to terminates.
        - id: options
          type: <xref uid="Models.JobScheduleTerminateOptionalParams" />
          description: ''
      return:
        type: Promise&lt;<xref uid="Models.JobScheduleTerminateResponse" />&gt;
        description: Promise<Models.JobScheduleTerminateResponse>
  - name: 'terminate(string, ServiceCallback<void>)'
    uid: '@azure/batch.operations.jobSchedule.d.JobSchedule.terminate_1'
    package: '@azure/batch'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function terminate(jobScheduleId: string, callback:
        ServiceCallback<void>)
      parameters:
        - id: jobScheduleId
          type: string
          description: The ID of the Job Schedule to terminates.
        - id: callback
          type: ServiceCallback&lt;void&gt;
          description: |
            The callback
  - name: >-
      update(string, JobScheduleUpdateParameter,
      JobScheduleUpdateOptionalParams, ServiceCallback<void>)
    uid: '@azure/batch.operations.jobSchedule.d.JobSchedule.update_2'
    package: '@azure/batch'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function update(jobScheduleId: string, jobScheduleUpdateParameter:
        JobScheduleUpdateParameter, options: JobScheduleUpdateOptionalParams,
        callback: ServiceCallback<void>)
      parameters:
        - id: jobScheduleId
          type: string
          description: The ID of the Job Schedule to update.
        - id: jobScheduleUpdateParameter
          type: >-
            <xref uid="@azure/batch.models.index.d.JobScheduleUpdateParameter"
            />
          description: The parameters for the request.
        - id: options
          type: >-
            <xref
            uid="@azure/batch.models.index.d.JobScheduleUpdateOptionalParams" />
          description: The optional parameters
        - id: callback
          type: ServiceCallback&lt;void&gt;
          description: |
            The callback
  - name: >-
      update(string, JobScheduleUpdateParameter,
      Models.JobScheduleUpdateOptionalParams)
    uid: '@azure/batch.operations.jobSchedule.d.JobSchedule.update'
    package: '@azure/batch'
    summary: >-
      This fully replaces all the updatable properties of the Job Schedule. For
      example, if the

      schedule property is not specified with this request, then the Batch
      service will remove the

      existing schedule. Changes to a Job Schedule only impact Jobs created by
      the schedule after the

      update has taken place; currently running Jobs are unaffected.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function update(jobScheduleId: string, jobScheduleUpdateParameter:
        JobScheduleUpdateParameter, options?:
        Models.JobScheduleUpdateOptionalParams)
      parameters:
        - id: jobScheduleId
          type: string
          description: The ID of the Job Schedule to update.
        - id: jobScheduleUpdateParameter
          type: >-
            <xref uid="@azure/batch.models.index.d.JobScheduleUpdateParameter"
            />
          description: The parameters for the request.
        - id: options
          type: <xref uid="Models.JobScheduleUpdateOptionalParams" />
          description: ''
      return:
        type: Promise&lt;<xref uid="Models.JobScheduleUpdateResponse" />&gt;
        description: Promise<Models.JobScheduleUpdateResponse>
  - name: 'update(string, JobScheduleUpdateParameter, ServiceCallback<void>)'
    uid: '@azure/batch.operations.jobSchedule.d.JobSchedule.update_1'
    package: '@azure/batch'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function update(jobScheduleId: string, jobScheduleUpdateParameter:
        JobScheduleUpdateParameter, callback: ServiceCallback<void>)
      parameters:
        - id: jobScheduleId
          type: string
          description: The ID of the Job Schedule to update.
        - id: jobScheduleUpdateParameter
          type: >-
            <xref uid="@azure/batch.models.index.d.JobScheduleUpdateParameter"
            />
          description: The parameters for the request.
        - id: callback
          type: ServiceCallback&lt;void&gt;
          description: |
            The callback
