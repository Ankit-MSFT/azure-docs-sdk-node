### YamlMime:TSType
name: JobReleaseTask
uid: '@azure/batch.JobReleaseTask'
package: '@azure/batch'
summary: >-
  The Job Release task runs when the job ends, because of one of the following:
  The user calls the

  Terminate Job API, or the Delete Job API while the job is still active, the
  job's maximum wall

  clock time constraint is reached, and the job is still active, or the job's
  Job Manager task

  completed, and the job is configured to terminate when the Job Manager
  completes. The Job

  Release task runs on each compute node where tasks of the job have run and the
  Job Preparation

  task ran and completed. If you reimage a compute node after it has run the Job
  Preparation task,

  and the job ends without any further tasks of the job running on that compute
  node (and hence

  the Job Preparation task does not re-run), then the Job Release task does not
  run on that node.

  If a compute node reboots while the Job Release task is still running, the Job
  Release task runs

  again when the compute node starts up. The job is not marked as complete until
  all Job Release

  tasks have completed. The Job Release task runs in the background. It does not
  occupy a

  scheduling slot; that is, it does not count towards the maxTasksPerNode limit
  specified on the

  pool.
fullName: JobReleaseTask
isPreview: false
isDeprecated: false
type: interface
properties:
  - name: commandLine
    uid: '@azure/batch.JobReleaseTask.commandLine'
    package: '@azure/batch'
    summary: >-
      The command line of the Job Release task. The command line does not run
      under a shell, and

      therefore cannot take advantage of shell features such as environment
      variable expansion. If

      you want to take advantage of such features, you should invoke the shell
      in the command line,

      for example using "cmd /c MyCommand" in Windows or "/bin/sh -c MyCommand"
      in Linux. If the

      command line refers to file paths, it should use a relative path (relative
      to the task working

      directory), or use the Batch provided environment variable

      (https://docs.microsoft.com/en-us/azure/batch/batch-compute-node-environment-variables).
    fullName: commandLine
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'commandLine: string'
      return:
        type: string
        description: ''
  - name: containerSettings
    uid: '@azure/batch.JobReleaseTask.containerSettings'
    package: '@azure/batch'
    summary: >-
      The settings for the container under which the Job Release task runs. When
      this is specified,

      all directories recursively below the AZ_BATCH_NODE_ROOT_DIR (the root of
      Azure Batch

      directories on the node) are mapped into the container, all task
      environment variables are

      mapped into the container, and the task command line is executed in the
      container.
    fullName: containerSettings
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'containerSettings?: TaskContainerSettings'
      return:
        type: <xref uid="@azure/batch.TaskContainerSettings" />
        description: ''
  - name: environmentSettings
    uid: '@azure/batch.JobReleaseTask.environmentSettings'
    package: '@azure/batch'
    summary: A list of environment variable settings for the Job Release task.
    fullName: environmentSettings
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'environmentSettings?: EnvironmentSetting[]'
      return:
        type: '<xref uid="@azure/batch.EnvironmentSetting" />[]'
        description: ''
  - name: id
    uid: '@azure/batch.JobReleaseTask.id'
    package: '@azure/batch'
    summary: >-
      A string that uniquely identifies the Job Release task within the job. The
      ID can contain any

      combination of alphanumeric characters including hyphens and underscores
      and cannot contain

      more than 64 characters. If you do not specify this property, the Batch
      service assigns a

      default value of 'jobrelease'. No other task in the job can have the same
      ID as the Job

      Release task. If you try to submit a task with the same id, the Batch
      service rejects the

      request with error code TaskIdSameAsJobReleaseTask; if you are calling the
      REST API directly,

      the HTTP status code is 409 (Conflict).
    fullName: id
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'id?: undefined | string'
      return:
        type: undefined | string
        description: ''
  - name: maxWallClockTime
    uid: '@azure/batch.JobReleaseTask.maxWallClockTime'
    package: '@azure/batch'
    summary: >-
      The maximum elapsed time that the Job Release task may run on a given
      compute node, measured

      from the time the task starts. If the task does not complete within the
      time limit, the Batch

      service terminates it. The default value is 15 minutes. You may not
      specify a timeout longer

      than 15 minutes. If you do, the Batch service rejects it with an error; if
      you are calling the

      REST API directly, the HTTP status code is 400 (Bad Request).
    fullName: maxWallClockTime
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'maxWallClockTime?: undefined | string'
      return:
        type: undefined | string
        description: ''
  - name: resourceFiles
    uid: '@azure/batch.JobReleaseTask.resourceFiles'
    package: '@azure/batch'
    summary: >-
      A list of files that the Batch service will download to the compute node
      before running the

      command line.  There is a maximum size for the list of resource files. 
      When the max size is

      exceeded, the request will fail and the response error code will be
      RequestEntityTooLarge. If

      this occurs, the collection of ResourceFiles must be reduced in size. This
      can be achieved

      using .zip files, Application Packages, or Docker Containers. Files listed
      under this element

      are located in the task's working directory.
    fullName: resourceFiles
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'resourceFiles?: ResourceFile[]'
      return:
        type: '<xref uid="@azure/batch.ResourceFile" />[]'
        description: ''
  - name: retentionTime
    uid: '@azure/batch.JobReleaseTask.retentionTime'
    package: '@azure/batch'
    summary: >-
      The minimum time to retain the task directory for the Job Release task on
      the compute node.

      After this time, the Batch service may delete the task directory and all
      its contents. The

      default is 7 days, i.e. the task directory will be retained for 7 days
      unless the compute node

      is removed or the job is deleted.
    fullName: retentionTime
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'retentionTime?: undefined | string'
      return:
        type: undefined | string
        description: ''
  - name: userIdentity
    uid: '@azure/batch.JobReleaseTask.userIdentity'
    package: '@azure/batch'
    summary: >-
      The user identity under which the Job Release task runs. If omitted, the
      task runs as a

      non-administrative user unique to the task.
    fullName: userIdentity
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'userIdentity?: UserIdentity'
      return:
        type: <xref uid="@azure/batch.UserIdentity" />
        description: ''
