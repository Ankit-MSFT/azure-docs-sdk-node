### YamlMime:TSType
name: CloudTask
uid: '@azure/batch.CloudTask'
package: '@azure/batch'
summary: >-
  Batch will retry tasks when a recovery operation is triggered on a compute
  node. Examples of

  recovery operations include (but are not limited to) when an unhealthy compute
  node is rebooted

  or a compute node disappeared due to host failure. Retries due to recovery
  operations are

  independent of and are not counted against the maxTaskRetryCount. Even if the
  maxTaskRetryCount

  is 0, an internal retry due to a recovery operation may occur. Because of
  this, all tasks should

  be idempotent. This means tasks need to tolerate being interrupted and
  restarted without causing

  any corruption or duplicate data. The best practice for long running tasks is
  to use some form

  of checkpointing.
fullName: CloudTask
type: interface
properties:
  - name: affinityInfo
    uid: '@azure/batch.CloudTask.affinityInfo'
    package: '@azure/batch'
    summary: >-
      A locality hint that can be used by the Batch service to select a compute
      node on which to

      start the new task.
    fullName: affinityInfo
    syntax:
      content: 'affinityInfo?: AffinityInformation'
      return:
        type: <xref uid="@azure/batch.AffinityInformation" />
        description: ''
  - name: applicationPackageReferences
    uid: '@azure/batch.CloudTask.applicationPackageReferences'
    package: '@azure/batch'
    summary: >-
      A list of application packages that the Batch service will deploy to the
      compute node before

      running the command line. Application packages are downloaded and deployed
      to a shared

      directory, not the task working directory. Therefore, if a referenced
      package is already on

      the compute node, and is up to date, then it is not re-downloaded; the
      existing copy on the

      compute node is used. If a referenced application package cannot be
      installed, for example

      because the package has been deleted or because download failed, the task
      fails.
    fullName: applicationPackageReferences
    syntax:
      content: 'applicationPackageReferences?: ApplicationPackageReference[]'
      return:
        type: '<xref uid="@azure/batch.ApplicationPackageReference" />[]'
        description: ''
  - name: authenticationTokenSettings
    uid: '@azure/batch.CloudTask.authenticationTokenSettings'
    package: '@azure/batch'
    summary: >-
      The settings for an authentication token that the task can use to perform
      Batch service

      operations. If this property is set, the Batch service provides the task
      with an

      authentication token which can be used to authenticate Batch service
      operations without

      requiring an account access key. The token is provided via the
      AZ_BATCH_AUTHENTICATION_TOKEN

      environment variable. The operations that the task can carry out using the
      token depend on the

      settings. For example, a task can request job permissions in order to add
      other tasks to the

      job, or check the status of the job or of other tasks under the job.
    fullName: authenticationTokenSettings
    syntax:
      content: 'authenticationTokenSettings?: AuthenticationTokenSettings'
      return:
        type: <xref uid="@azure/batch.AuthenticationTokenSettings" />
        description: ''
  - name: commandLine
    uid: '@azure/batch.CloudTask.commandLine'
    package: '@azure/batch'
    summary: >-
      The command line of the task. For multi-instance tasks, the command line
      is executed as the

      primary task, after the primary task and all subtasks have finished
      executing the coordination

      command line. The command line does not run under a shell, and therefore
      cannot take advantage

      of shell features such as environment variable expansion. If you want to
      take advantage of

      such features, you should invoke the shell in the command line, for
      example using "cmd /c

      MyCommand" in Windows or "/bin/sh -c MyCommand" in Linux. If the command
      line refers to file

      paths, it should use a relative path (relative to the task working
      directory), or use the

      Batch provided environment variable

      (https://docs.microsoft.com/en-us/azure/batch/batch-compute-node-environment-variables).
    fullName: commandLine
    syntax:
      content: 'commandLine?: undefined | string'
      return:
        type: undefined | string
        description: ''
  - name: constraints
    uid: '@azure/batch.CloudTask.constraints'
    package: '@azure/batch'
    summary: The execution constraints that apply to this task.
    fullName: constraints
    syntax:
      content: 'constraints?: TaskConstraints'
      return:
        type: <xref uid="@azure/batch.TaskConstraints" />
        description: ''
  - name: containerSettings
    uid: '@azure/batch.CloudTask.containerSettings'
    package: '@azure/batch'
    summary: >-
      The settings for the container under which the task runs. If the pool that
      will run this task

      has containerConfiguration set, this must be set as well. If the pool that
      will run this task

      doesn't have containerConfiguration set, this must not be set. When this
      is specified, all

      directories recursively below the AZ_BATCH_NODE_ROOT_DIR (the root of
      Azure Batch directories

      on the node) are mapped into the container, all task environment variables
      are mapped into the

      container, and the task command line is executed in the container.
    fullName: containerSettings
    syntax:
      content: 'containerSettings?: TaskContainerSettings'
      return:
        type: <xref uid="@azure/batch.TaskContainerSettings" />
        description: ''
  - name: creationTime
    uid: '@azure/batch.CloudTask.creationTime'
    package: '@azure/batch'
    summary: The creation time of the task.
    fullName: creationTime
    syntax:
      content: 'creationTime?: Date'
      return:
        type: Date
        description: ''
  - name: dependsOn
    uid: '@azure/batch.CloudTask.dependsOn'
    package: '@azure/batch'
    summary: >-
      The tasks that this task depends on. This task will not be scheduled until
      all tasks that it

      depends on have completed successfully. If any of those tasks fail and
      exhaust their retry

      counts, this task will never be scheduled.
    fullName: dependsOn
    syntax:
      content: 'dependsOn?: TaskDependencies'
      return:
        type: <xref uid="@azure/batch.TaskDependencies" />
        description: ''
  - name: displayName
    uid: '@azure/batch.CloudTask.displayName'
    package: '@azure/batch'
    summary: >-
      A display name for the task. The display name need not be unique and can
      contain any Unicode

      characters up to a maximum length of 1024.
    fullName: displayName
    syntax:
      content: 'displayName?: undefined | string'
      return:
        type: undefined | string
        description: ''
  - name: environmentSettings
    uid: '@azure/batch.CloudTask.environmentSettings'
    package: '@azure/batch'
    summary: A list of environment variable settings for the task.
    fullName: environmentSettings
    syntax:
      content: 'environmentSettings?: EnvironmentSetting[]'
      return:
        type: '<xref uid="@azure/batch.EnvironmentSetting" />[]'
        description: ''
  - name: eTag
    uid: '@azure/batch.CloudTask.eTag'
    package: '@azure/batch'
    summary: >-
      The ETag of the task. This is an opaque string. You can use it to detect
      whether the task has

      changed between requests. In particular, you can be pass the ETag when
      updating a task to

      specify that your changes should take effect only if nobody else has
      modified the task in the

      meantime.
    fullName: eTag
    syntax:
      content: 'eTag?: undefined | string'
      return:
        type: undefined | string
        description: ''
  - name: executionInfo
    uid: '@azure/batch.CloudTask.executionInfo'
    package: '@azure/batch'
    summary: Information about the execution of the task.
    fullName: executionInfo
    syntax:
      content: 'executionInfo?: TaskExecutionInformation'
      return:
        type: <xref uid="@azure/batch.TaskExecutionInformation" />
        description: ''
  - name: exitConditions
    uid: '@azure/batch.CloudTask.exitConditions'
    package: '@azure/batch'
    summary: How the Batch service should respond when the task completes.
    fullName: exitConditions
    syntax:
      content: 'exitConditions?: ExitConditions'
      return:
        type: <xref uid="@azure/batch.ExitConditions" />
        description: ''
  - name: id
    uid: '@azure/batch.CloudTask.id'
    package: '@azure/batch'
    summary: >-
      A string that uniquely identifies the task within the job. The ID can
      contain any combination

      of alphanumeric characters including hyphens and underscores, and cannot
      contain more than 64

      characters.
    fullName: id
    syntax:
      content: 'id?: undefined | string'
      return:
        type: undefined | string
        description: ''
  - name: lastModified
    uid: '@azure/batch.CloudTask.lastModified'
    package: '@azure/batch'
    summary: The last modified time of the task.
    fullName: lastModified
    syntax:
      content: 'lastModified?: Date'
      return:
        type: Date
        description: ''
  - name: multiInstanceSettings
    uid: '@azure/batch.CloudTask.multiInstanceSettings'
    package: '@azure/batch'
    summary: >-
      An object that indicates that the task is a multi-instance task, and
      contains information

      about how to run the multi-instance task.
    fullName: multiInstanceSettings
    syntax:
      content: 'multiInstanceSettings?: MultiInstanceSettings'
      return:
        type: <xref uid="@azure/batch.MultiInstanceSettings" />
        description: ''
  - name: nodeInfo
    uid: '@azure/batch.CloudTask.nodeInfo'
    package: '@azure/batch'
    summary: Information about the compute node on which the task ran.
    fullName: nodeInfo
    syntax:
      content: 'nodeInfo?: ComputeNodeInformation'
      return:
        type: <xref uid="@azure/batch.ComputeNodeInformation" />
        description: ''
  - name: outputFiles
    uid: '@azure/batch.CloudTask.outputFiles'
    package: '@azure/batch'
    summary: >-
      A list of files that the Batch service will upload from the compute node
      after running the

      command line. For multi-instance tasks, the files will only be uploaded
      from the compute node

      on which the primary task is executed.
    fullName: outputFiles
    syntax:
      content: 'outputFiles?: OutputFile[]'
      return:
        type: '<xref uid="@azure/batch.OutputFile" />[]'
        description: ''
  - name: previousState
    uid: '@azure/batch.CloudTask.previousState'
    package: '@azure/batch'
    summary: >-
      The previous state of the task. This property is not set if the task is in
      its initial Active

      state. Possible values include: 'active', 'preparing', 'running',
      'completed'
    fullName: previousState
    syntax:
      content: 'previousState?: TaskState'
      return:
        type: <xref uid="@azure/batch.TaskState" />
        description: ''
  - name: previousStateTransitionTime
    uid: '@azure/batch.CloudTask.previousStateTransitionTime'
    package: '@azure/batch'
    summary: >-
      The time at which the task entered its previous state. This property is
      not set if the task is

      in its initial Active state.
    fullName: previousStateTransitionTime
    syntax:
      content: 'previousStateTransitionTime?: Date'
      return:
        type: Date
        description: ''
  - name: resourceFiles
    uid: '@azure/batch.CloudTask.resourceFiles'
    package: '@azure/batch'
    summary: >-
      A list of files that the Batch service will download to the compute node
      before running the

      command line. For multi-instance tasks, the resource files will only be
      downloaded to the

      compute node on which the primary task is executed. There is a maximum
      size for the list of

      resource files.  When the max size is exceeded, the request will fail and
      the response error

      code will be RequestEntityTooLarge. If this occurs, the collection of
      ResourceFiles must be

      reduced in size. This can be achieved using .zip files, Application
      Packages, or Docker

      Containers.
    fullName: resourceFiles
    syntax:
      content: 'resourceFiles?: ResourceFile[]'
      return:
        type: '<xref uid="@azure/batch.ResourceFile" />[]'
        description: ''
  - name: state
    uid: '@azure/batch.CloudTask.state'
    package: '@azure/batch'
    summary: >-
      The current state of the task. Possible values include: 'active',
      'preparing', 'running',

      'completed'
    fullName: state
    syntax:
      content: 'state?: TaskState'
      return:
        type: <xref uid="@azure/batch.TaskState" />
        description: ''
  - name: stateTransitionTime
    uid: '@azure/batch.CloudTask.stateTransitionTime'
    package: '@azure/batch'
    summary: The time at which the task entered its current state.
    fullName: stateTransitionTime
    syntax:
      content: 'stateTransitionTime?: Date'
      return:
        type: Date
        description: ''
  - name: stats
    uid: '@azure/batch.CloudTask.stats'
    package: '@azure/batch'
    summary: Resource usage statistics for the task.
    fullName: stats
    syntax:
      content: 'stats?: TaskStatistics'
      return:
        type: <xref uid="@azure/batch.TaskStatistics" />
        description: ''
  - name: url
    uid: '@azure/batch.CloudTask.url'
    package: '@azure/batch'
    summary: The URL of the task.
    fullName: url
    syntax:
      content: 'url?: undefined | string'
      return:
        type: undefined | string
        description: ''
  - name: userIdentity
    uid: '@azure/batch.CloudTask.userIdentity'
    package: '@azure/batch'
    summary: >-
      The user identity under which the task runs. If omitted, the task runs as
      a non-administrative

      user unique to the task.
    fullName: userIdentity
    syntax:
      content: 'userIdentity?: UserIdentity'
      return:
        type: <xref uid="@azure/batch.UserIdentity" />
        description: ''
