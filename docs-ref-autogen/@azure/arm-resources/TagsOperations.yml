### YamlMime:UniversalReference
items:
  - uid: '@azure/arm-resources.TagsOperations'
    name: TagsOperations
    fullName: TagsOperations
    children:
      - '@azure/arm-resources.TagsOperations.createOrUpdate'
      - '@azure/arm-resources.TagsOperations.createOrUpdate_2'
      - '@azure/arm-resources.TagsOperations.createOrUpdate_1'
      - '@azure/arm-resources.TagsOperations.createOrUpdateAtScope'
      - '@azure/arm-resources.TagsOperations.createOrUpdateAtScope_2'
      - '@azure/arm-resources.TagsOperations.createOrUpdateAtScope_1'
      - '@azure/arm-resources.TagsOperations.createOrUpdateValue'
      - '@azure/arm-resources.TagsOperations.createOrUpdateValue_2'
      - '@azure/arm-resources.TagsOperations.createOrUpdateValue_1'
      - '@azure/arm-resources.TagsOperations.deleteAtScope'
      - '@azure/arm-resources.TagsOperations.deleteAtScope_2'
      - '@azure/arm-resources.TagsOperations.deleteAtScope_1'
      - '@azure/arm-resources.TagsOperations.deleteMethod'
      - '@azure/arm-resources.TagsOperations.deleteMethod_2'
      - '@azure/arm-resources.TagsOperations.deleteMethod_1'
      - '@azure/arm-resources.TagsOperations.deleteValue'
      - '@azure/arm-resources.TagsOperations.deleteValue_2'
      - '@azure/arm-resources.TagsOperations.deleteValue_1'
      - '@azure/arm-resources.TagsOperations.getAtScope'
      - '@azure/arm-resources.TagsOperations.getAtScope_2'
      - '@azure/arm-resources.TagsOperations.getAtScope_1'
      - '@azure/arm-resources.TagsOperations.list'
      - '@azure/arm-resources.TagsOperations.list_2'
      - '@azure/arm-resources.TagsOperations.list_1'
      - '@azure/arm-resources.TagsOperations.listNext'
      - '@azure/arm-resources.TagsOperations.listNext_2'
      - '@azure/arm-resources.TagsOperations.listNext_1'
      - '@azure/arm-resources.TagsOperations.constructor'
      - '@azure/arm-resources.TagsOperations.updateAtScope'
      - '@azure/arm-resources.TagsOperations.updateAtScope_2'
      - '@azure/arm-resources.TagsOperations.updateAtScope_1'
    langs:
      - typeScript
    type: class
    summary: Class representing a TagsOperations.
    package: '@azure/arm-resources'
  - uid: '@azure/arm-resources.TagsOperations.createOrUpdate'
    name: 'createOrUpdate(string, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      This operation allows adding a name to the list of predefined tag names
      for the given

      subscription. A tag name can have a maximum of 512 characters and is
      case-insensitive. Tag names

      cannot have the following prefixes which are reserved for Azure use:
      'microsoft', 'azure',

      'windows'.
    syntax:
      content: >-
        function createOrUpdate(tagName: string, options?:
        msRest.RequestOptionsBase)
      parameters:
        - id: tagName
          type:
            - string
          description: The name of the tag to create.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.TagsCreateOrUpdateResponse>
        description: Promise<Models.TagsCreateOrUpdateResponse>
    package: '@azure/arm-resources'
  - uid: '@azure/arm-resources.TagsOperations.createOrUpdate_2'
    name: 'createOrUpdate(string, RequestOptionsBase, ServiceCallback<TagDetails>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function createOrUpdate(tagName: string, options: RequestOptionsBase,
        callback: ServiceCallback<TagDetails>)
      parameters:
        - id: tagName
          type:
            - string
          description: The name of the tag to create.
        - id: options
          type:
            - RequestOptionsBase
          description: The optional parameters
        - id: callback
          type:
            - ServiceCallback<@azure/arm-resources.TagDetails>
          description: |
            The callback
    package: '@azure/arm-resources'
  - uid: '@azure/arm-resources.TagsOperations.createOrUpdate_1'
    name: 'createOrUpdate(string, ServiceCallback<TagDetails>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function createOrUpdate(tagName: string, callback:
        ServiceCallback<TagDetails>)
      parameters:
        - id: tagName
          type:
            - string
          description: The name of the tag to create.
        - id: callback
          type:
            - ServiceCallback<@azure/arm-resources.TagDetails>
          description: |
            The callback
    package: '@azure/arm-resources'
  - uid: '@azure/arm-resources.TagsOperations.createOrUpdateAtScope'
    name: 'createOrUpdateAtScope(string, TagsResource, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      This operation allows adding or replacing the entire set of tags on the
      specified resource or

      subscription. The specified entity can have a maximum of 50 tags.
    syntax:
      content: >-
        function createOrUpdateAtScope(scope: string, parameters: TagsResource,
        options?: msRest.RequestOptionsBase)
      parameters:
        - id: scope
          type:
            - string
          description: The resource scope.
        - id: parameters
          type:
            - '@azure/arm-resources.TagsResource'
          description: ''
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.TagsCreateOrUpdateAtScopeResponse>
        description: Promise<Models.TagsCreateOrUpdateAtScopeResponse>
    package: '@azure/arm-resources'
  - uid: '@azure/arm-resources.TagsOperations.createOrUpdateAtScope_2'
    name: >-
      createOrUpdateAtScope(string, TagsResource, RequestOptionsBase,
      ServiceCallback<TagsResource>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function createOrUpdateAtScope(scope: string, parameters: TagsResource,
        options: RequestOptionsBase, callback: ServiceCallback<TagsResource>)
      parameters:
        - id: scope
          type:
            - string
          description: The resource scope.
        - id: parameters
          type:
            - '@azure/arm-resources.TagsResource'
          description: ''
        - id: options
          type:
            - RequestOptionsBase
          description: The optional parameters
        - id: callback
          type:
            - ServiceCallback<@azure/arm-resources.TagsResource>
          description: |
            The callback
    package: '@azure/arm-resources'
  - uid: '@azure/arm-resources.TagsOperations.createOrUpdateAtScope_1'
    name: 'createOrUpdateAtScope(string, TagsResource, ServiceCallback<TagsResource>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function createOrUpdateAtScope(scope: string, parameters: TagsResource,
        callback: ServiceCallback<TagsResource>)
      parameters:
        - id: scope
          type:
            - string
          description: The resource scope.
        - id: parameters
          type:
            - '@azure/arm-resources.TagsResource'
          description: ''
        - id: callback
          type:
            - ServiceCallback<@azure/arm-resources.TagsResource>
          description: |
            The callback
    package: '@azure/arm-resources'
  - uid: '@azure/arm-resources.TagsOperations.createOrUpdateValue'
    name: 'createOrUpdateValue(string, string, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      This operation allows adding a value to the list of predefined values for
      an existing predefined

      tag name. A tag value can have a maximum of 256 characters.
    syntax:
      content: >-
        function createOrUpdateValue(tagName: string, tagValue: string,
        options?: msRest.RequestOptionsBase)
      parameters:
        - id: tagName
          type:
            - string
          description: The name of the tag.
        - id: tagValue
          type:
            - string
          description: The value of the tag to create.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.TagsCreateOrUpdateValueResponse>
        description: Promise<Models.TagsCreateOrUpdateValueResponse>
    package: '@azure/arm-resources'
  - uid: '@azure/arm-resources.TagsOperations.createOrUpdateValue_2'
    name: >-
      createOrUpdateValue(string, string, RequestOptionsBase,
      ServiceCallback<TagValue>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function createOrUpdateValue(tagName: string, tagValue: string, options:
        RequestOptionsBase, callback: ServiceCallback<TagValue>)
      parameters:
        - id: tagName
          type:
            - string
          description: The name of the tag.
        - id: tagValue
          type:
            - string
          description: The value of the tag to create.
        - id: options
          type:
            - RequestOptionsBase
          description: The optional parameters
        - id: callback
          type:
            - ServiceCallback<@azure/arm-resources.TagValue>
          description: |
            The callback
    package: '@azure/arm-resources'
  - uid: '@azure/arm-resources.TagsOperations.createOrUpdateValue_1'
    name: 'createOrUpdateValue(string, string, ServiceCallback<TagValue>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function createOrUpdateValue(tagName: string, tagValue: string,
        callback: ServiceCallback<TagValue>)
      parameters:
        - id: tagName
          type:
            - string
          description: The name of the tag.
        - id: tagValue
          type:
            - string
          description: The value of the tag to create.
        - id: callback
          type:
            - ServiceCallback<@azure/arm-resources.TagValue>
          description: |
            The callback
    package: '@azure/arm-resources'
  - uid: '@azure/arm-resources.TagsOperations.deleteAtScope'
    name: 'deleteAtScope(string, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function deleteAtScope(scope: string, options?:
        msRest.RequestOptionsBase)
      parameters:
        - id: scope
          type:
            - string
          description: The resource scope.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<RestResponse>
        description: Promise<msRest.RestResponse>
    package: '@azure/arm-resources'
  - uid: '@azure/arm-resources.TagsOperations.deleteAtScope_2'
    name: 'deleteAtScope(string, RequestOptionsBase, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function deleteAtScope(scope: string, options: RequestOptionsBase,
        callback: ServiceCallback<void>)
      parameters:
        - id: scope
          type:
            - string
          description: The resource scope.
        - id: options
          type:
            - RequestOptionsBase
          description: The optional parameters
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            The callback
    package: '@azure/arm-resources'
  - uid: '@azure/arm-resources.TagsOperations.deleteAtScope_1'
    name: 'deleteAtScope(string, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function deleteAtScope(scope: string, callback: ServiceCallback<void>)'
      parameters:
        - id: scope
          type:
            - string
          description: The resource scope.
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            The callback
    package: '@azure/arm-resources'
  - uid: '@azure/arm-resources.TagsOperations.deleteMethod'
    name: 'deleteMethod(string, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      This operation allows deleting a name from the list of predefined tag
      names for the given

      subscription. The name being deleted must not be in use as a tag name for
      any resource. All

      predefined values for the given name must have already been deleted.
    syntax:
      content: >-
        function deleteMethod(tagName: string, options?:
        msRest.RequestOptionsBase)
      parameters:
        - id: tagName
          type:
            - string
          description: The name of the tag.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<RestResponse>
        description: Promise<msRest.RestResponse>
    package: '@azure/arm-resources'
  - uid: '@azure/arm-resources.TagsOperations.deleteMethod_2'
    name: 'deleteMethod(string, RequestOptionsBase, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function deleteMethod(tagName: string, options: RequestOptionsBase,
        callback: ServiceCallback<void>)
      parameters:
        - id: tagName
          type:
            - string
          description: The name of the tag.
        - id: options
          type:
            - RequestOptionsBase
          description: The optional parameters
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            The callback
    package: '@azure/arm-resources'
  - uid: '@azure/arm-resources.TagsOperations.deleteMethod_1'
    name: 'deleteMethod(string, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function deleteMethod(tagName: string, callback: ServiceCallback<void>)'
      parameters:
        - id: tagName
          type:
            - string
          description: The name of the tag.
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            The callback
    package: '@azure/arm-resources'
  - uid: '@azure/arm-resources.TagsOperations.deleteValue'
    name: 'deleteValue(string, string, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      This operation allows deleting a value from the list of predefined values
      for an existing

      predefined tag name. The value being deleted must not be in use as a tag
      value for the given tag

      name for any resource.
    syntax:
      content: >-
        function deleteValue(tagName: string, tagValue: string, options?:
        msRest.RequestOptionsBase)
      parameters:
        - id: tagName
          type:
            - string
          description: The name of the tag.
        - id: tagValue
          type:
            - string
          description: The value of the tag to delete.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<RestResponse>
        description: Promise<msRest.RestResponse>
    package: '@azure/arm-resources'
  - uid: '@azure/arm-resources.TagsOperations.deleteValue_2'
    name: 'deleteValue(string, string, RequestOptionsBase, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function deleteValue(tagName: string, tagValue: string, options:
        RequestOptionsBase, callback: ServiceCallback<void>)
      parameters:
        - id: tagName
          type:
            - string
          description: The name of the tag.
        - id: tagValue
          type:
            - string
          description: The value of the tag to delete.
        - id: options
          type:
            - RequestOptionsBase
          description: The optional parameters
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            The callback
    package: '@azure/arm-resources'
  - uid: '@azure/arm-resources.TagsOperations.deleteValue_1'
    name: 'deleteValue(string, string, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function deleteValue(tagName: string, tagValue: string, callback:
        ServiceCallback<void>)
      parameters:
        - id: tagName
          type:
            - string
          description: The name of the tag.
        - id: tagValue
          type:
            - string
          description: The value of the tag to delete.
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            The callback
    package: '@azure/arm-resources'
  - uid: '@azure/arm-resources.TagsOperations.getAtScope'
    name: 'getAtScope(string, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getAtScope(scope: string, options?: msRest.RequestOptionsBase)'
      parameters:
        - id: scope
          type:
            - string
          description: The resource scope.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.TagsGetAtScopeResponse>
        description: Promise<Models.TagsGetAtScopeResponse>
    package: '@azure/arm-resources'
  - uid: '@azure/arm-resources.TagsOperations.getAtScope_2'
    name: 'getAtScope(string, RequestOptionsBase, ServiceCallback<TagsResource>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function getAtScope(scope: string, options: RequestOptionsBase,
        callback: ServiceCallback<TagsResource>)
      parameters:
        - id: scope
          type:
            - string
          description: The resource scope.
        - id: options
          type:
            - RequestOptionsBase
          description: The optional parameters
        - id: callback
          type:
            - ServiceCallback<@azure/arm-resources.TagsResource>
          description: |
            The callback
    package: '@azure/arm-resources'
  - uid: '@azure/arm-resources.TagsOperations.getAtScope_1'
    name: 'getAtScope(string, ServiceCallback<TagsResource>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function getAtScope(scope: string, callback:
        ServiceCallback<TagsResource>)
      parameters:
        - id: scope
          type:
            - string
          description: The resource scope.
        - id: callback
          type:
            - ServiceCallback<@azure/arm-resources.TagsResource>
          description: |
            The callback
    package: '@azure/arm-resources'
  - uid: '@azure/arm-resources.TagsOperations.list'
    name: list(msRest.RequestOptionsBase)
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      This operation performs a union of predefined tags, resource tags,
      resource group tags and

      subscription tags, and returns a summary of usage for each tag name and
      value under the given

      subscription. In case of a large number of tags, this operation may return
      a previously cached

      result.
    syntax:
      content: 'function list(options?: msRest.RequestOptionsBase)'
      parameters:
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.TagsListResponse>
        description: Promise<Models.TagsListResponse>
    package: '@azure/arm-resources'
  - uid: '@azure/arm-resources.TagsOperations.list_2'
    name: 'list(RequestOptionsBase, ServiceCallback<TagsListResult>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function list(options: RequestOptionsBase, callback:
        ServiceCallback<TagsListResult>)
      parameters:
        - id: options
          type:
            - RequestOptionsBase
          description: The optional parameters
        - id: callback
          type:
            - ServiceCallback<@azure/arm-resources.TagsListResult>
          description: |
            The callback
    package: '@azure/arm-resources'
  - uid: '@azure/arm-resources.TagsOperations.list_1'
    name: list(ServiceCallback<TagsListResult>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function list(callback: ServiceCallback<TagsListResult>)'
      parameters:
        - id: callback
          type:
            - ServiceCallback<@azure/arm-resources.TagsListResult>
          description: |
            The callback
    package: '@azure/arm-resources'
  - uid: '@azure/arm-resources.TagsOperations.listNext'
    name: 'listNext(string, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      This operation performs a union of predefined tags, resource tags,
      resource group tags and

      subscription tags, and returns a summary of usage for each tag name and
      value under the given

      subscription. In case of a large number of tags, this operation may return
      a previously cached

      result.
    syntax:
      content: >-
        function listNext(nextPageLink: string, options?:
        msRest.RequestOptionsBase)
      parameters:
        - id: nextPageLink
          type:
            - string
          description: The NextLink from the previous successful call to List operation.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.TagsListNextResponse>
        description: Promise<Models.TagsListNextResponse>
    package: '@azure/arm-resources'
  - uid: '@azure/arm-resources.TagsOperations.listNext_2'
    name: 'listNext(string, RequestOptionsBase, ServiceCallback<TagsListResult>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function listNext(nextPageLink: string, options: RequestOptionsBase,
        callback: ServiceCallback<TagsListResult>)
      parameters:
        - id: nextPageLink
          type:
            - string
          description: The NextLink from the previous successful call to List operation.
        - id: options
          type:
            - RequestOptionsBase
          description: The optional parameters
        - id: callback
          type:
            - ServiceCallback<@azure/arm-resources.TagsListResult>
          description: |
            The callback
    package: '@azure/arm-resources'
  - uid: '@azure/arm-resources.TagsOperations.listNext_1'
    name: 'listNext(string, ServiceCallback<TagsListResult>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function listNext(nextPageLink: string, callback:
        ServiceCallback<TagsListResult>)
      parameters:
        - id: nextPageLink
          type:
            - string
          description: The NextLink from the previous successful call to List operation.
        - id: callback
          type:
            - ServiceCallback<@azure/arm-resources.TagsListResult>
          description: |
            The callback
    package: '@azure/arm-resources'
  - uid: '@azure/arm-resources.TagsOperations.constructor'
    name: TagsOperations(ResourceManagementClientContext)
    children: []
    type: constructor
    langs:
      - typeScript
    summary: Create a TagsOperations.
    syntax:
      content: 'new TagsOperations(client: ResourceManagementClientContext)'
      parameters:
        - id: client
          type:
            - '@azure/arm-resources.ResourceManagementClientContext'
          description: |
            Reference to the service client.
    package: '@azure/arm-resources'
  - uid: '@azure/arm-resources.TagsOperations.updateAtScope'
    name: 'updateAtScope(string, TagsPatchResource, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      This operation allows replacing, merging or selectively deleting tags on
      the specified resource

      or subscription. The specified entity can have a maximum of 50 tags at the
      end of the operation.

      The 'replace' option replaces the entire set of existing tags with a new
      set. The 'merge' option

      allows adding tags with new names and updating the values of tags with
      existing names. The

      'delete' option allows selectively deleting tags based on given names or
      name/value pairs.
    syntax:
      content: >-
        function updateAtScope(scope: string, parameters: TagsPatchResource,
        options?: msRest.RequestOptionsBase)
      parameters:
        - id: scope
          type:
            - string
          description: The resource scope.
        - id: parameters
          type:
            - '@azure/arm-resources.TagsPatchResource'
          description: ''
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.TagsUpdateAtScopeResponse>
        description: Promise<Models.TagsUpdateAtScopeResponse>
    package: '@azure/arm-resources'
  - uid: '@azure/arm-resources.TagsOperations.updateAtScope_2'
    name: >-
      updateAtScope(string, TagsPatchResource, RequestOptionsBase,
      ServiceCallback<TagsResource>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function updateAtScope(scope: string, parameters: TagsPatchResource,
        options: RequestOptionsBase, callback: ServiceCallback<TagsResource>)
      parameters:
        - id: scope
          type:
            - string
          description: The resource scope.
        - id: parameters
          type:
            - '@azure/arm-resources.TagsPatchResource'
          description: ''
        - id: options
          type:
            - RequestOptionsBase
          description: The optional parameters
        - id: callback
          type:
            - ServiceCallback<@azure/arm-resources.TagsResource>
          description: |
            The callback
    package: '@azure/arm-resources'
  - uid: '@azure/arm-resources.TagsOperations.updateAtScope_1'
    name: 'updateAtScope(string, TagsPatchResource, ServiceCallback<TagsResource>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function updateAtScope(scope: string, parameters: TagsPatchResource,
        callback: ServiceCallback<TagsResource>)
      parameters:
        - id: scope
          type:
            - string
          description: The resource scope.
        - id: parameters
          type:
            - '@azure/arm-resources.TagsPatchResource'
          description: ''
        - id: callback
          type:
            - ServiceCallback<@azure/arm-resources.TagsResource>
          description: |
            The callback
    package: '@azure/arm-resources'
references:
  - uid: '@azure/arm-resources.ResourceManagementClientContext'
    name: ResourceManagementClientContext
    spec.typeScript:
      - name: ResourceManagementClientContext
        fullName: ResourceManagementClientContext
        uid: '@azure/arm-resources.ResourceManagementClientContext'
  - uid: ServiceCallback<@azure/arm-resources.TagDetails>
    name: TagDetails>
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: TagDetails
        fullName: TagDetails
        uid: '@azure/arm-resources.TagDetails'
      - name: '>'
        fullName: '>'
  - uid: '@azure/arm-resources.TagsResource'
    name: TagsResource
    spec.typeScript:
      - name: TagsResource
        fullName: TagsResource
        uid: '@azure/arm-resources.TagsResource'
  - uid: ServiceCallback<@azure/arm-resources.TagsResource>
    name: TagsResource>
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: TagsResource
        fullName: TagsResource
        uid: '@azure/arm-resources.TagsResource'
      - name: '>'
        fullName: '>'
  - uid: ServiceCallback<@azure/arm-resources.TagValue>
    name: TagValue>
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: TagValue
        fullName: TagValue
        uid: '@azure/arm-resources.TagValue'
      - name: '>'
        fullName: '>'
  - uid: ServiceCallback<@azure/arm-resources.TagsListResult>
    name: TagsListResult>
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: TagsListResult
        fullName: TagsListResult
        uid: '@azure/arm-resources.TagsListResult'
      - name: '>'
        fullName: '>'
  - uid: '@azure/arm-resources.TagsPatchResource'
    name: TagsPatchResource
    spec.typeScript:
      - name: TagsPatchResource
        fullName: TagsPatchResource
        uid: '@azure/arm-resources.TagsPatchResource'
