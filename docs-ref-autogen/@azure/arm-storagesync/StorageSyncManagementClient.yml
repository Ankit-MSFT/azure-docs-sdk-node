### YamlMime:TSType
name: StorageSyncManagementClient
uid: '@azure/arm-storagesync.StorageSyncManagementClient'
package: '@azure/arm-storagesync'
summary: ''
fullName: StorageSyncManagementClient
remarks: ''
isPreview: false
isDeprecated: false
type: class
constructors:
  - name: >-
      StorageSyncManagementClient(ServiceClientCredentials | TokenCredential,
      string, Models.StorageSyncManagementClientOptions)
    uid: '@azure/arm-storagesync.StorageSyncManagementClient.constructor'
    package: '@azure/arm-storagesync'
    summary: Initializes a new instance of the StorageSyncManagementClient class.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        new StorageSyncManagementClient(credentials: ServiceClientCredentials |
        TokenCredential, subscriptionId: string, options?:
        Models.StorageSyncManagementClientOptions)
      parameters:
        - id: credentials
          type: ServiceClientCredentials | TokenCredential
          description: >-
            Credentials needed for the client to connect to Azure. Credentials

            implementing the TokenCredential interface from the @azure/identity
            package are recommended. For

            more information about these credentials, see

            https://www.npmjs.com/package/@azure/identity. Credentials
            implementing the

            ServiceClientCredentials interface from the older packages
            @azure/ms-rest-nodeauth and
        - id: subscriptionId
          type: string
          description: The ID of the target subscription.
        - id: options
          type: <xref uid="Models.StorageSyncManagementClientOptions" />
          description: ''
properties:
  - name: acceptLanguage
    uid: '@azure/arm-storagesync.StorageSyncManagementClient.acceptLanguage'
    package: '@azure/arm-storagesync'
    summary: ''
    fullName: acceptLanguage
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'acceptLanguage: string'
      return:
        description: ''
        type: string
  - name: apiVersion
    uid: '@azure/arm-storagesync.StorageSyncManagementClient.apiVersion'
    package: '@azure/arm-storagesync'
    summary: ''
    fullName: apiVersion
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'apiVersion?: undefined | string'
      return:
        description: ''
        type: undefined | string
  - name: cloudEndpoints
    uid: '@azure/arm-storagesync.StorageSyncManagementClient.cloudEndpoints'
    package: '@azure/arm-storagesync'
    summary: ''
    fullName: cloudEndpoints
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'cloudEndpoints: CloudEndpoints'
      return:
        description: ''
        type: <xref uid="@azure/arm-storagesync.CloudEndpoints" />
  - name: credentials
    uid: '@azure/arm-storagesync.StorageSyncManagementClient.credentials'
    package: '@azure/arm-storagesync'
    summary: ''
    fullName: credentials
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'credentials: ServiceClientCredentials | TokenCredential'
      return:
        description: ''
        type: ServiceClientCredentials | TokenCredential
  - name: longRunningOperationRetryTimeout
    uid: >-
      @azure/arm-storagesync.StorageSyncManagementClient.longRunningOperationRetryTimeout
    package: '@azure/arm-storagesync'
    summary: >-
      The retry timeout in seconds for Long Running Operations. Default value is
      30.
    fullName: longRunningOperationRetryTimeout
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'longRunningOperationRetryTimeout?: undefined | number'
      return:
        description: ''
        type: undefined | number
  - name: operations
    uid: '@azure/arm-storagesync.StorageSyncManagementClient.operations'
    package: '@azure/arm-storagesync'
    summary: ''
    fullName: operations
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'operations: Operations'
      return:
        description: ''
        type: <xref uid="@azure/arm-storagesync.Operations" />
  - name: operationStatus
    uid: '@azure/arm-storagesync.StorageSyncManagementClient.operationStatus'
    package: '@azure/arm-storagesync'
    summary: ''
    fullName: operationStatus
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'operationStatus: OperationStatusOperations'
      return:
        description: ''
        type: <xref uid="@azure/arm-storagesync.OperationStatusOperations" />
  - name: registeredServers
    uid: '@azure/arm-storagesync.StorageSyncManagementClient.registeredServers'
    package: '@azure/arm-storagesync'
    summary: ''
    fullName: registeredServers
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'registeredServers: RegisteredServers'
      return:
        description: ''
        type: <xref uid="@azure/arm-storagesync.RegisteredServers" />
  - name: serverEndpoints
    uid: '@azure/arm-storagesync.StorageSyncManagementClient.serverEndpoints'
    package: '@azure/arm-storagesync'
    summary: ''
    fullName: serverEndpoints
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'serverEndpoints: ServerEndpoints'
      return:
        description: ''
        type: <xref uid="@azure/arm-storagesync.ServerEndpoints" />
  - name: storageSyncServices
    uid: '@azure/arm-storagesync.StorageSyncManagementClient.storageSyncServices'
    package: '@azure/arm-storagesync'
    summary: ''
    fullName: storageSyncServices
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'storageSyncServices: StorageSyncServices'
      return:
        description: ''
        type: <xref uid="@azure/arm-storagesync.StorageSyncServices" />
  - name: subscriptionId
    uid: '@azure/arm-storagesync.StorageSyncManagementClient.subscriptionId'
    package: '@azure/arm-storagesync'
    summary: ''
    fullName: subscriptionId
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'subscriptionId: string'
      return:
        description: ''
        type: string
  - name: syncGroups
    uid: '@azure/arm-storagesync.StorageSyncManagementClient.syncGroups'
    package: '@azure/arm-storagesync'
    summary: ''
    fullName: syncGroups
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'syncGroups: SyncGroups'
      return:
        description: ''
        type: <xref uid="@azure/arm-storagesync.SyncGroups" />
  - name: workflows
    uid: '@azure/arm-storagesync.StorageSyncManagementClient.workflows'
    package: '@azure/arm-storagesync'
    summary: ''
    fullName: workflows
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'workflows: Workflows'
      return:
        description: ''
        type: <xref uid="@azure/arm-storagesync.Workflows" />
inheritedMethods:
  - name: >-
      beginLongRunningRequest(RequestPrepareOptions | WebResource,
      RequestOptionsBase)
    uid: '@azure/arm-storagesync.StorageSyncManagementClient.beginLongRunningRequest'
    package: '@azure/arm-storagesync'
    summary: >-
      Send the initial request of a LRO (long running operation) and get back an

      HttpLongRunningOperationResponse that provides methods for polling the LRO
      and checking if the

      LRO is finished.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function beginLongRunningRequest(request: RequestPrepareOptions |
        WebResource, options?: RequestOptionsBase): Promise<LROPoller>
      parameters:
        - id: request
          type: RequestPrepareOptions | WebResource
          description: The request object
        - id: options
          type: RequestOptionsBase
          description: ''
      return:
        description: |-
          The HttpLongRunningOperationResponse
          that provides methods for interacting with the LRO.
        type: Promise&lt;LROPoller&gt;
  - name: restoreLROPoller(LROPollState)
    uid: '@azure/arm-storagesync.StorageSyncManagementClient.restoreLROPoller'
    package: '@azure/arm-storagesync'
    summary: >-
      Restore an LROPoller from the provided LROPollState. This method can be
      used to recreate an

      LROPoller on a different process or machine.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'function restoreLROPoller(lroPollState: LROPollState): LROPoller'
      parameters:
        - id: lroPollState
          type: LROPollState
          description: ''
      return:
        description: ''
        type: LROPoller
  - name: >-
      sendLongRunningRequest(RequestPrepareOptions | WebResource,
      RequestOptionsBase)
    uid: '@azure/arm-storagesync.StorageSyncManagementClient.sendLongRunningRequest'
    package: '@azure/arm-storagesync'
    summary: >-
      Provides a mechanism to make a request that will poll and provide the
      final result.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function sendLongRunningRequest(request: RequestPrepareOptions |
        WebResource, options?: RequestOptionsBase):
        Promise<HttpOperationResponse>
      parameters:
        - id: request
          type: RequestPrepareOptions | WebResource
          description: The request object
        - id: options
          type: RequestOptionsBase
          description: ''
      return:
        description: >-
          The HttpOperationResponse containing the final polling request,
          response and the responseBody.
        type: Promise&lt;HttpOperationResponse&gt;
  - name: 'sendLRORequest(OperationArguments, OperationSpec, RequestOptionsBase)'
    uid: '@azure/arm-storagesync.StorageSyncManagementClient.sendLRORequest'
    package: '@azure/arm-storagesync'
    summary: >-
      Send the initial request of a LRO (long running operation) and get back an

      LROPoller that provides methods for polling the LRO and checking if the
      LRO is finished.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function sendLRORequest(operationArguments: OperationArguments,
        operationSpec: OperationSpec, options?: RequestOptionsBase):
        Promise<LROPoller>
      parameters:
        - id: operationArguments
          type: OperationArguments
          description: The arguments to the operation.
        - id: operationSpec
          type: OperationSpec
          description: The specification for the operation.
        - id: options
          type: RequestOptionsBase
          description: Additional options to be sent while making the request.
      return:
        description: >-
          The LROPoller object that provides methods for interacting with the
          LRO.
        type: Promise&lt;LROPoller&gt;
  - name: >-
      sendOperationRequest(OperationArguments, OperationSpec,
      ServiceCallback<any>)
    uid: '@azure/arm-storagesync.StorageSyncManagementClient.sendOperationRequest'
    package: '@azure/arm-storagesync'
    summary: Send an HTTP request that is populated using the provided OperationSpec.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function sendOperationRequest(operationArguments: OperationArguments,
        operationSpec: OperationSpec, callback?: ServiceCallback<any>):
        Promise<RestResponse>
      parameters:
        - id: operationArguments
          type: OperationArguments
          description: >-
            The arguments that the HTTP request's templated values will be
            populated from.
        - id: operationSpec
          type: OperationSpec
          description: The OperationSpec to use to populate the httpRequest.
        - id: callback
          type: ServiceCallback&lt;any&gt;
          description: |
            The callback to call when the response is received.
      return:
        description: ''
        type: Promise&lt;RestResponse&gt;
  - name: sendRequest(RequestPrepareOptions | WebResourceLike)
    uid: '@azure/arm-storagesync.StorageSyncManagementClient.sendRequest'
    package: '@azure/arm-storagesync'
    summary: Send the provided httpRequest.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function sendRequest(options: RequestPrepareOptions | WebResourceLike):
        Promise<HttpOperationResponse>
      parameters:
        - id: options
          type: RequestPrepareOptions | WebResourceLike
          description: ''
      return:
        description: ''
        type: Promise&lt;HttpOperationResponse&gt;
extends: <xref uid="@azure/arm-storagesync.StorageSyncManagementClientContext" />
