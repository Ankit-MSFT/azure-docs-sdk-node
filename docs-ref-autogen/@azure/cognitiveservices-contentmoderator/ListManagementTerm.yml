### YamlMime:TSType
name: ListManagementTerm
uid: >-
  @azure/cognitiveservices-contentmoderator.operations.listManagementTerm.d.ListManagementTerm
package: '@azure/cognitiveservices-contentmoderator'
summary: Class representing a ListManagementTerm.
fullName: ListManagementTerm
remarks: ''
isPreview: false
isDeprecated: false
type: class
constructors:
  - name: ListManagementTerm(ContentModeratorClientContext)
    uid: >-
      @azure/cognitiveservices-contentmoderator.operations.listManagementTerm.d.ListManagementTerm.constructor
    package: '@azure/cognitiveservices-contentmoderator'
    summary: Create a ListManagementTerm.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'new ListManagementTerm(client: ContentModeratorClientContext)'
      parameters:
        - id: client
          type: >-
            <xref
            uid="@azure/cognitiveservices-contentmoderator.contentModeratorClientContext.d.ContentModeratorClientContext"
            />
          description: |
            Reference to the service client.
methods:
  - name: 'addTerm(string, string, string, msRest.RequestOptionsBase)'
    uid: >-
      @azure/cognitiveservices-contentmoderator.operations.listManagementTerm.d.ListManagementTerm.addTerm
    package: '@azure/cognitiveservices-contentmoderator'
    summary: Add a term to the term list with list Id equal to list Id passed.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function addTerm(listId: string, term: string, language: string,
        options?: msRest.RequestOptionsBase)
      parameters:
        - id: listId
          type: string
          description: List Id of the image list.
        - id: term
          type: string
          description: Term to be deleted
        - id: language
          type: string
          description: Language of the terms.
        - id: options
          type: <xref uid="msRest.RequestOptionsBase" />
          description: ''
      return:
        type: Promise&lt;RestResponse&gt;
        description: Promise<msRest.RestResponse>
  - name: 'addTerm(string, string, string, RequestOptionsBase, ServiceCallback<void>)'
    uid: >-
      @azure/cognitiveservices-contentmoderator.operations.listManagementTerm.d.ListManagementTerm.addTerm_2
    package: '@azure/cognitiveservices-contentmoderator'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function addTerm(listId: string, term: string, language: string,
        options: RequestOptionsBase, callback: ServiceCallback<void>)
      parameters:
        - id: listId
          type: string
          description: List Id of the image list.
        - id: term
          type: string
          description: Term to be deleted
        - id: language
          type: string
          description: Language of the terms.
        - id: options
          type: RequestOptionsBase
          description: The optional parameters
        - id: callback
          type: ServiceCallback&lt;void&gt;
          description: |
            The callback
  - name: 'addTerm(string, string, string, ServiceCallback<void>)'
    uid: >-
      @azure/cognitiveservices-contentmoderator.operations.listManagementTerm.d.ListManagementTerm.addTerm_1
    package: '@azure/cognitiveservices-contentmoderator'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function addTerm(listId: string, term: string, language: string,
        callback: ServiceCallback<void>)
      parameters:
        - id: listId
          type: string
          description: List Id of the image list.
        - id: term
          type: string
          description: Term to be deleted
        - id: language
          type: string
          description: Language of the terms.
        - id: callback
          type: ServiceCallback&lt;void&gt;
          description: |
            The callback
  - name: 'deleteAllTerms(string, string, msRest.RequestOptionsBase)'
    uid: >-
      @azure/cognitiveservices-contentmoderator.operations.listManagementTerm.d.ListManagementTerm.deleteAllTerms
    package: '@azure/cognitiveservices-contentmoderator'
    summary: Deletes all terms from the list with list Id equal to the list Id passed.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function deleteAllTerms(listId: string, language: string, options?:
        msRest.RequestOptionsBase)
      parameters:
        - id: listId
          type: string
          description: List Id of the image list.
        - id: language
          type: string
          description: Language of the terms.
        - id: options
          type: <xref uid="msRest.RequestOptionsBase" />
          description: ''
      return:
        type: >-
          Promise&lt;<xref uid="Models.ListManagementTermDeleteAllTermsResponse"
          />&gt;
        description: Promise<Models.ListManagementTermDeleteAllTermsResponse>
  - name: >-
      deleteAllTerms(string, string, RequestOptionsBase,
      ServiceCallback<string>)
    uid: >-
      @azure/cognitiveservices-contentmoderator.operations.listManagementTerm.d.ListManagementTerm.deleteAllTerms_2
    package: '@azure/cognitiveservices-contentmoderator'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function deleteAllTerms(listId: string, language: string, options:
        RequestOptionsBase, callback: ServiceCallback<string>)
      parameters:
        - id: listId
          type: string
          description: List Id of the image list.
        - id: language
          type: string
          description: Language of the terms.
        - id: options
          type: RequestOptionsBase
          description: The optional parameters
        - id: callback
          type: ServiceCallback&lt;string&gt;
          description: |
            The callback
  - name: 'deleteAllTerms(string, string, ServiceCallback<string>)'
    uid: >-
      @azure/cognitiveservices-contentmoderator.operations.listManagementTerm.d.ListManagementTerm.deleteAllTerms_1
    package: '@azure/cognitiveservices-contentmoderator'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function deleteAllTerms(listId: string, language: string, callback:
        ServiceCallback<string>)
      parameters:
        - id: listId
          type: string
          description: List Id of the image list.
        - id: language
          type: string
          description: Language of the terms.
        - id: callback
          type: ServiceCallback&lt;string&gt;
          description: |
            The callback
  - name: 'deleteTerm(string, string, string, msRest.RequestOptionsBase)'
    uid: >-
      @azure/cognitiveservices-contentmoderator.operations.listManagementTerm.d.ListManagementTerm.deleteTerm
    package: '@azure/cognitiveservices-contentmoderator'
    summary: Deletes a term from the list with list Id equal to the list Id passed.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function deleteTerm(listId: string, term: string, language: string,
        options?: msRest.RequestOptionsBase)
      parameters:
        - id: listId
          type: string
          description: List Id of the image list.
        - id: term
          type: string
          description: Term to be deleted
        - id: language
          type: string
          description: Language of the terms.
        - id: options
          type: <xref uid="msRest.RequestOptionsBase" />
          description: ''
      return:
        type: >-
          Promise&lt;<xref uid="Models.ListManagementTermDeleteTermResponse"
          />&gt;
        description: Promise<Models.ListManagementTermDeleteTermResponse>
  - name: >-
      deleteTerm(string, string, string, RequestOptionsBase,
      ServiceCallback<string>)
    uid: >-
      @azure/cognitiveservices-contentmoderator.operations.listManagementTerm.d.ListManagementTerm.deleteTerm_2
    package: '@azure/cognitiveservices-contentmoderator'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function deleteTerm(listId: string, term: string, language: string,
        options: RequestOptionsBase, callback: ServiceCallback<string>)
      parameters:
        - id: listId
          type: string
          description: List Id of the image list.
        - id: term
          type: string
          description: Term to be deleted
        - id: language
          type: string
          description: Language of the terms.
        - id: options
          type: RequestOptionsBase
          description: The optional parameters
        - id: callback
          type: ServiceCallback&lt;string&gt;
          description: |
            The callback
  - name: 'deleteTerm(string, string, string, ServiceCallback<string>)'
    uid: >-
      @azure/cognitiveservices-contentmoderator.operations.listManagementTerm.d.ListManagementTerm.deleteTerm_1
    package: '@azure/cognitiveservices-contentmoderator'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function deleteTerm(listId: string, term: string, language: string,
        callback: ServiceCallback<string>)
      parameters:
        - id: listId
          type: string
          description: List Id of the image list.
        - id: term
          type: string
          description: Term to be deleted
        - id: language
          type: string
          description: Language of the terms.
        - id: callback
          type: ServiceCallback&lt;string&gt;
          description: |
            The callback
  - name: >-
      getAllTerms(string, string, ListManagementTermGetAllTermsOptionalParams,
      ServiceCallback<Terms>)
    uid: >-
      @azure/cognitiveservices-contentmoderator.operations.listManagementTerm.d.ListManagementTerm.getAllTerms_2
    package: '@azure/cognitiveservices-contentmoderator'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function getAllTerms(listId: string, language: string, options:
        ListManagementTermGetAllTermsOptionalParams, callback:
        ServiceCallback<Terms>)
      parameters:
        - id: listId
          type: string
          description: List Id of the image list.
        - id: language
          type: string
          description: Language of the terms.
        - id: options
          type: >-
            <xref
            uid="@azure/cognitiveservices-contentmoderator.models.index.d.ListManagementTermGetAllTermsOptionalParams"
            />
          description: The optional parameters
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/cognitiveservices-contentmoderator.models.index.d.Terms"
            />&gt;
          description: |
            The callback
  - name: >-
      getAllTerms(string, string,
      Models.ListManagementTermGetAllTermsOptionalParams)
    uid: >-
      @azure/cognitiveservices-contentmoderator.operations.listManagementTerm.d.ListManagementTerm.getAllTerms
    package: '@azure/cognitiveservices-contentmoderator'
    summary: Gets all terms from the list with list Id equal to the list Id passed.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function getAllTerms(listId: string, language: string, options?:
        Models.ListManagementTermGetAllTermsOptionalParams)
      parameters:
        - id: listId
          type: string
          description: List Id of the image list.
        - id: language
          type: string
          description: Language of the terms.
        - id: options
          type: <xref uid="Models.ListManagementTermGetAllTermsOptionalParams" />
          description: ''
      return:
        type: >-
          Promise&lt;<xref uid="Models.ListManagementTermGetAllTermsResponse"
          />&gt;
        description: Promise<Models.ListManagementTermGetAllTermsResponse>
  - name: 'getAllTerms(string, string, ServiceCallback<Terms>)'
    uid: >-
      @azure/cognitiveservices-contentmoderator.operations.listManagementTerm.d.ListManagementTerm.getAllTerms_1
    package: '@azure/cognitiveservices-contentmoderator'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function getAllTerms(listId: string, language: string, callback:
        ServiceCallback<Terms>)
      parameters:
        - id: listId
          type: string
          description: List Id of the image list.
        - id: language
          type: string
          description: Language of the terms.
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/cognitiveservices-contentmoderator.models.index.d.Terms"
            />&gt;
          description: |
            The callback
