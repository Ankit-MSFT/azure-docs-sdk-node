### YamlMime:UniversalReference
items:
  - uid: '@azure/arm-storagecache.StorageTargets'
    name: StorageTargets
    fullName: StorageTargets
    children:
      - '@azure/arm-storagecache.StorageTargets.beginCreateOrUpdate'
      - '@azure/arm-storagecache.StorageTargets.beginDeleteMethod'
      - '@azure/arm-storagecache.StorageTargets.createOrUpdate'
      - '@azure/arm-storagecache.StorageTargets.deleteMethod'
      - '@azure/arm-storagecache.StorageTargets.get'
      - '@azure/arm-storagecache.StorageTargets.get_2'
      - '@azure/arm-storagecache.StorageTargets.get_1'
      - '@azure/arm-storagecache.StorageTargets.listByCache'
      - '@azure/arm-storagecache.StorageTargets.listByCache_2'
      - '@azure/arm-storagecache.StorageTargets.listByCache_1'
      - '@azure/arm-storagecache.StorageTargets.listByCacheNext'
      - '@azure/arm-storagecache.StorageTargets.listByCacheNext_2'
      - '@azure/arm-storagecache.StorageTargets.listByCacheNext_1'
      - '@azure/arm-storagecache.StorageTargets.constructor'
    langs:
      - typeScript
    type: class
    summary: Class representing a StorageTargets.
    package: '@azure/arm-storagecache'
  - uid: '@azure/arm-storagecache.StorageTargets.beginCreateOrUpdate'
    name: >-
      beginCreateOrUpdate(string, string, string,
      Models.StorageTargetsBeginCreateOrUpdateOptionalParams)
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      Create or update a Storage Target. This operation is allowed at any time,
      but if the Cache is

      down or unhealthy, the actual creation/modification of the Storage Target
      may be delayed until

      the Cache is healthy again.
    syntax:
      content: >-
        function beginCreateOrUpdate(resourceGroupName: string, cacheName:
        string, storageTargetName: string, options?:
        Models.StorageTargetsBeginCreateOrUpdateOptionalParams)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Target resource group.
        - id: cacheName
          type:
            - string
          description: >-
            Name of Cache. Length of name must be not greater than 80 and chars
            must be in

            list of [-0-9a-zA-Z_] char class.
        - id: storageTargetName
          type:
            - string
          description: >-
            Name of the Storage Target. Length of name must be not greater than
            80

            and chars must be in list of [-0-9a-zA-Z_] char class.
        - id: options
          type:
            - Models.StorageTargetsBeginCreateOrUpdateOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<LROPoller>
        description: Promise<msRestAzure.LROPoller>
    package: '@azure/arm-storagecache'
  - uid: '@azure/arm-storagecache.StorageTargets.beginDeleteMethod'
    name: 'beginDeleteMethod(string, string, string, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      Removes a Storage Target from a Cache. This operation is allowed at any
      time, but if the Cache

      is down or unhealthy, the actual removal of the Storage Target may be
      delayed until the Cache is

      healthy again. Note that if the Cache has data to flush to the Storage
      Target, the data will be

      flushed before the Storage Target will be deleted.
    syntax:
      content: >-
        function beginDeleteMethod(resourceGroupName: string, cacheName: string,
        storageTargetName: string, options?: msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Target resource group.
        - id: cacheName
          type:
            - string
          description: >-
            Name of Cache. Length of name must be not greater than 80 and chars
            must be in

            list of [-0-9a-zA-Z_] char class.
        - id: storageTargetName
          type:
            - string
          description: Name of Storage Target.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<LROPoller>
        description: Promise<msRestAzure.LROPoller>
    package: '@azure/arm-storagecache'
  - uid: '@azure/arm-storagecache.StorageTargets.createOrUpdate'
    name: >-
      createOrUpdate(string, string, string,
      Models.StorageTargetsCreateOrUpdateOptionalParams)
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      Create or update a Storage Target. This operation is allowed at any time,
      but if the Cache is

      down or unhealthy, the actual creation/modification of the Storage Target
      may be delayed until

      the Cache is healthy again.
    syntax:
      content: >-
        function createOrUpdate(resourceGroupName: string, cacheName: string,
        storageTargetName: string, options?:
        Models.StorageTargetsCreateOrUpdateOptionalParams)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Target resource group.
        - id: cacheName
          type:
            - string
          description: >-
            Name of Cache. Length of name must be not greater than 80 and chars
            must be in

            list of [-0-9a-zA-Z_] char class.
        - id: storageTargetName
          type:
            - string
          description: >-
            Name of the Storage Target. Length of name must be not greater than
            80

            and chars must be in list of [-0-9a-zA-Z_] char class.
        - id: options
          type:
            - Models.StorageTargetsCreateOrUpdateOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.StorageTargetsCreateOrUpdateResponse>
        description: Promise<Models.StorageTargetsCreateOrUpdateResponse>
    package: '@azure/arm-storagecache'
  - uid: '@azure/arm-storagecache.StorageTargets.deleteMethod'
    name: 'deleteMethod(string, string, string, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      Removes a Storage Target from a Cache. This operation is allowed at any
      time, but if the Cache

      is down or unhealthy, the actual removal of the Storage Target may be
      delayed until the Cache is

      healthy again. Note that if the Cache has data to flush to the Storage
      Target, the data will be

      flushed before the Storage Target will be deleted.
    syntax:
      content: >-
        function deleteMethod(resourceGroupName: string, cacheName: string,
        storageTargetName: string, options?: msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Target resource group.
        - id: cacheName
          type:
            - string
          description: >-
            Name of Cache. Length of name must be not greater than 80 and chars
            must be in

            list of [-0-9a-zA-Z_] char class.
        - id: storageTargetName
          type:
            - string
          description: Name of Storage Target.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.StorageTargetsDeleteMethodResponse>
        description: Promise<Models.StorageTargetsDeleteMethodResponse>
    package: '@azure/arm-storagecache'
  - uid: '@azure/arm-storagecache.StorageTargets.get'
    name: 'get(string, string, string, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Returns a Storage Target from a Cache.
    syntax:
      content: >-
        function get(resourceGroupName: string, cacheName: string,
        storageTargetName: string, options?: msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Target resource group.
        - id: cacheName
          type:
            - string
          description: >-
            Name of Cache. Length of name must be not greater than 80 and chars
            must be in

            list of [-0-9a-zA-Z_] char class.
        - id: storageTargetName
          type:
            - string
          description: >-
            Name of the Storage Target. Length of name must be not greater than
            80

            and chars must be in list of [-0-9a-zA-Z_] char class.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.StorageTargetsGetResponse>
        description: Promise<Models.StorageTargetsGetResponse>
    package: '@azure/arm-storagecache'
  - uid: '@azure/arm-storagecache.StorageTargets.get_2'
    name: >-
      get(string, string, string, RequestOptionsBase,
      ServiceCallback<StorageTarget>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function get(resourceGroupName: string, cacheName: string,
        storageTargetName: string, options: RequestOptionsBase, callback:
        ServiceCallback<StorageTarget>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Target resource group.
        - id: cacheName
          type:
            - string
          description: >-
            Name of Cache. Length of name must be not greater than 80 and chars
            must be in

            list of [-0-9a-zA-Z_] char class.
        - id: storageTargetName
          type:
            - string
          description: >-
            Name of the Storage Target. Length of name must be not greater than
            80

            and chars must be in list of [-0-9a-zA-Z_] char class.
        - id: options
          type:
            - RequestOptionsBase
          description: The optional parameters
        - id: callback
          type:
            - ServiceCallback<@azure/arm-storagecache.StorageTarget>
          description: |
            The callback
    package: '@azure/arm-storagecache'
  - uid: '@azure/arm-storagecache.StorageTargets.get_1'
    name: 'get(string, string, string, ServiceCallback<StorageTarget>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function get(resourceGroupName: string, cacheName: string,
        storageTargetName: string, callback: ServiceCallback<StorageTarget>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Target resource group.
        - id: cacheName
          type:
            - string
          description: >-
            Name of Cache. Length of name must be not greater than 80 and chars
            must be in

            list of [-0-9a-zA-Z_] char class.
        - id: storageTargetName
          type:
            - string
          description: >-
            Name of the Storage Target. Length of name must be not greater than
            80

            and chars must be in list of [-0-9a-zA-Z_] char class.
        - id: callback
          type:
            - ServiceCallback<@azure/arm-storagecache.StorageTarget>
          description: |
            The callback
    package: '@azure/arm-storagecache'
  - uid: '@azure/arm-storagecache.StorageTargets.listByCache'
    name: 'listByCache(string, string, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Returns a list of Storage Targets for the specified Cache.
    syntax:
      content: >-
        function listByCache(resourceGroupName: string, cacheName: string,
        options?: msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Target resource group.
        - id: cacheName
          type:
            - string
          description: >-
            Name of Cache. Length of name must be not greater than 80 and chars
            must be in

            list of [-0-9a-zA-Z_] char class.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.StorageTargetsListByCacheResponse>
        description: Promise<Models.StorageTargetsListByCacheResponse>
    package: '@azure/arm-storagecache'
  - uid: '@azure/arm-storagecache.StorageTargets.listByCache_2'
    name: >-
      listByCache(string, string, RequestOptionsBase,
      ServiceCallback<StorageTargetsResult>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function listByCache(resourceGroupName: string, cacheName: string,
        options: RequestOptionsBase, callback:
        ServiceCallback<StorageTargetsResult>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Target resource group.
        - id: cacheName
          type:
            - string
          description: >-
            Name of Cache. Length of name must be not greater than 80 and chars
            must be in

            list of [-0-9a-zA-Z_] char class.
        - id: options
          type:
            - RequestOptionsBase
          description: The optional parameters
        - id: callback
          type:
            - ServiceCallback<@azure/arm-storagecache.StorageTargetsResult>
          description: |
            The callback
    package: '@azure/arm-storagecache'
  - uid: '@azure/arm-storagecache.StorageTargets.listByCache_1'
    name: 'listByCache(string, string, ServiceCallback<StorageTargetsResult>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function listByCache(resourceGroupName: string, cacheName: string,
        callback: ServiceCallback<StorageTargetsResult>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Target resource group.
        - id: cacheName
          type:
            - string
          description: >-
            Name of Cache. Length of name must be not greater than 80 and chars
            must be in

            list of [-0-9a-zA-Z_] char class.
        - id: callback
          type:
            - ServiceCallback<@azure/arm-storagecache.StorageTargetsResult>
          description: |
            The callback
    package: '@azure/arm-storagecache'
  - uid: '@azure/arm-storagecache.StorageTargets.listByCacheNext'
    name: 'listByCacheNext(string, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Returns a list of Storage Targets for the specified Cache.
    syntax:
      content: >-
        function listByCacheNext(nextPageLink: string, options?:
        msRest.RequestOptionsBase)
      parameters:
        - id: nextPageLink
          type:
            - string
          description: The NextLink from the previous successful call to List operation.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.StorageTargetsListByCacheNextResponse>
        description: Promise<Models.StorageTargetsListByCacheNextResponse>
    package: '@azure/arm-storagecache'
  - uid: '@azure/arm-storagecache.StorageTargets.listByCacheNext_2'
    name: >-
      listByCacheNext(string, RequestOptionsBase,
      ServiceCallback<StorageTargetsResult>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function listByCacheNext(nextPageLink: string, options:
        RequestOptionsBase, callback: ServiceCallback<StorageTargetsResult>)
      parameters:
        - id: nextPageLink
          type:
            - string
          description: The NextLink from the previous successful call to List operation.
        - id: options
          type:
            - RequestOptionsBase
          description: The optional parameters
        - id: callback
          type:
            - ServiceCallback<@azure/arm-storagecache.StorageTargetsResult>
          description: |
            The callback
    package: '@azure/arm-storagecache'
  - uid: '@azure/arm-storagecache.StorageTargets.listByCacheNext_1'
    name: 'listByCacheNext(string, ServiceCallback<StorageTargetsResult>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function listByCacheNext(nextPageLink: string, callback:
        ServiceCallback<StorageTargetsResult>)
      parameters:
        - id: nextPageLink
          type:
            - string
          description: The NextLink from the previous successful call to List operation.
        - id: callback
          type:
            - ServiceCallback<@azure/arm-storagecache.StorageTargetsResult>
          description: |
            The callback
    package: '@azure/arm-storagecache'
  - uid: '@azure/arm-storagecache.StorageTargets.constructor'
    name: StorageTargets(StorageCacheManagementClientContext)
    children: []
    type: constructor
    langs:
      - typeScript
    summary: Create a StorageTargets.
    syntax:
      content: 'new StorageTargets(client: StorageCacheManagementClientContext)'
      parameters:
        - id: client
          type:
            - '@azure/arm-storagecache.StorageCacheManagementClientContext'
          description: |
            Reference to the service client.
    package: '@azure/arm-storagecache'
references:
  - uid: '@azure/arm-storagecache.StorageCacheManagementClientContext'
    name: StorageCacheManagementClientContext
    spec.typeScript:
      - name: StorageCacheManagementClientContext
        fullName: StorageCacheManagementClientContext
        uid: '@azure/arm-storagecache.StorageCacheManagementClientContext'
  - uid: ServiceCallback<@azure/arm-storagecache.StorageTarget>
    name: StorageTarget>
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: StorageTarget
        fullName: StorageTarget
        uid: '@azure/arm-storagecache.StorageTarget'
      - name: '>'
        fullName: '>'
  - uid: ServiceCallback<@azure/arm-storagecache.StorageTargetsResult>
    name: StorageTargetsResult>
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: StorageTargetsResult
        fullName: StorageTargetsResult
        uid: '@azure/arm-storagecache.StorageTargetsResult'
      - name: '>'
        fullName: '>'
