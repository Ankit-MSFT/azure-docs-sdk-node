### YamlMime:TSType
name: CosmosClientOptions
uid: '@azure/cosmos.CosmosClientOptions'
package: '@azure/cosmos'
summary: ''
fullName: CosmosClientOptions
type: interface
properties:
  - name: agent
    uid: '@azure/cosmos.CosmosClientOptions.agent'
    package: '@azure/cosmos'
    summary: >-
      An optional custom http(s) Agent to be used in NodeJS enironments

      Use an agent such as https://github.com/TooTallNate/node-proxy-agent if
      you need to connect to Cosmos via a proxy
    fullName: agent
    syntax:
      content: 'agent?: Agent'
      return:
        type: <xref uid="@azure/cosmos.Agent" />
        description: ''
  - name: connectionPolicy
    uid: '@azure/cosmos.CosmosClientOptions.connectionPolicy'
    package: '@azure/cosmos'
    summary: >-
      An instance of <xref:ConnectionPolicy> class.

      This parameter is optional and the default connectionPolicy will be used
      if omitted.
    fullName: connectionPolicy
    syntax:
      content: 'connectionPolicy?: ConnectionPolicy'
      return:
        type: <xref uid="@azure/cosmos.ConnectionPolicy" />
        description: ''
  - name: consistencyLevel
    uid: '@azure/cosmos.CosmosClientOptions.consistencyLevel'
    package: '@azure/cosmos'
    summary: |-
      An optional parameter that represents the consistency level.
      It can take any value from <xref:ConsistencyLevel>.
    fullName: consistencyLevel
    syntax:
      content: 'consistencyLevel?: Object'
      return:
        type: Object
        description: ''
  - name: defaultHeaders
    uid: '@azure/cosmos.CosmosClientOptions.defaultHeaders'
    package: '@azure/cosmos'
    summary: ''
    fullName: defaultHeaders
    syntax:
      content: 'defaultHeaders?: CosmosHeaders_2'
      return:
        type: <xref uid="@azure/cosmos.CosmosHeaders_2" />
        description: ''
  - name: endpoint
    uid: '@azure/cosmos.CosmosClientOptions.endpoint'
    package: '@azure/cosmos'
    summary: The service endpoint to use to create the client.
    fullName: endpoint
    syntax:
      content: 'endpoint: string'
      return:
        type: string
        description: ''
  - name: key
    uid: '@azure/cosmos.CosmosClientOptions.key'
    package: '@azure/cosmos'
    summary: The account master or readonly key
    fullName: key
    syntax:
      content: 'key?: string'
      return:
        type: string
        description: ''
  - name: permissionFeed
    uid: '@azure/cosmos.CosmosClientOptions.permissionFeed'
    package: '@azure/cosmos'
    summary: 'An array of <xref:Permission> objects.'
    fullName: permissionFeed
    syntax:
      content: 'permissionFeed?: PermissionDefinition[]'
      return:
        type: '<xref uid="@azure/cosmos.PermissionDefinition" />[]'
        description: ''
  - name: resourceTokens
    uid: '@azure/cosmos.CosmosClientOptions.resourceTokens'
    package: '@azure/cosmos'
    summary: |-
      An object that contains resources tokens.
      Keys for the object are resource Ids and values are the resource tokens.
    fullName: resourceTokens
    syntax:
      content: 'resourceTokens?: [key: string]: string'
      return:
        type: '[key: string]\: string'
        description: ''
  - name: tokenProvider
    uid: '@azure/cosmos.CosmosClientOptions.tokenProvider'
    package: '@azure/cosmos'
    summary: >-
      A user supplied function for resolving header authorization tokens.

      Allows users to generating their own auth tokens, potentially using a
      separate service
    fullName: tokenProvider
    syntax:
      content: 'tokenProvider?: TokenProvider'
      return:
        type: <xref uid="@azure/cosmos.TokenProvider" />
        description: ''
  - name: userAgentSuffix
    uid: '@azure/cosmos.CosmosClientOptions.userAgentSuffix'
    package: '@azure/cosmos'
    summary: A custom string to append to the default SDK user agent.
    fullName: userAgentSuffix
    syntax:
      content: 'userAgentSuffix?: string'
      return:
        type: string
        description: ''
