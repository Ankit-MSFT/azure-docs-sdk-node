### YamlMime:TSType
name: Permissions
uid: '@azure/cosmos.index.d.Permissions'
package: '@azure/cosmos'
summary: 'Use to create, replace, query, and read all Permissions.'
fullName: Permissions
remarks: ''
isPreview: false
isDeprecated: false
type: class
properties:
  - name: user
    uid: '@azure/cosmos.index.d.Permissions.user'
    package: '@azure/cosmos'
    summary: ''
    fullName: user
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'user: User'
      return:
        type: <xref uid="@azure/cosmos.index.d.User" />
        description: ''
methods:
  - name: 'create(PermissionDefinition, RequestOptions)'
    uid: '@azure/cosmos.index.d.Permissions.create'
    package: '@azure/cosmos'
    summary: >-
      Create a permission.

      A permission represents a per-User Permission to access a specific
      resource

      e.g. Item or Container.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'function create(body: PermissionDefinition, options?: RequestOptions)'
      parameters:
        - id: body
          type: <xref uid="@azure/cosmos.index.d.PermissionDefinition" />
          description: |
            Represents the body of the permission.
        - id: options
          type: <xref uid="@azure/cosmos.index.d.RequestOptions" />
          description: ''
      return:
        type: Promise&lt;<xref uid="@azure/cosmos.index.d.PermissionResponse" />&gt;
        description: ''
  - name: 'query(SqlQuerySpec, FeedOptions)'
    uid: '@azure/cosmos.index.d.Permissions.query'
    package: '@azure/cosmos'
    summary: Query all permissions.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'function query(query: SqlQuerySpec, options?: FeedOptions)'
      parameters:
        - id: query
          type: <xref uid="@azure/cosmos.index.d.SqlQuerySpec" />
          description: >-
            Query configuration for the operation. See <xref:SqlQuerySpec> for
            more info on how to configure a query.
        - id: options
          type: <xref uid="@azure/cosmos.index.d.FeedOptions" />
          description: |+

      return:
        type: <xref uid="@azure/cosmos.index.d.QueryIterator" />&lt;any&gt;
        description: ''
  - name: 'query<T>(SqlQuerySpec, FeedOptions)'
    uid: '@azure/cosmos.index.d.Permissions.query_1'
    package: '@azure/cosmos'
    summary: Query all permissions.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'function query<T>(query: SqlQuerySpec, options?: FeedOptions)'
      parameters:
        - id: query
          type: <xref uid="@azure/cosmos.index.d.SqlQuerySpec" />
          description: >-
            Query configuration for the operation. See <xref:SqlQuerySpec> for
            more info on how to configure a query.
        - id: options
          type: <xref uid="@azure/cosmos.index.d.FeedOptions" />
          description: |+

      return:
        type: <xref uid="@azure/cosmos.index.d.QueryIterator" />&lt;T&gt;
        description: ''
  - name: readAll(FeedOptions)
    uid: '@azure/cosmos.index.d.Permissions.readAll'
    package: '@azure/cosmos'
    summary: Read all permissions.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'function readAll(options?: FeedOptions)'
      parameters:
        - id: options
          type: <xref uid="@azure/cosmos.index.d.FeedOptions" />
          description: ''
      return:
        type: >-
          <xref uid="@azure/cosmos.index.d.QueryIterator" />&lt;<xref
          uid="@azure/cosmos.index.d.PermissionDefinition" /> & <xref
          uid="@azure/cosmos.index.d.Resource" />&gt;
        description: ''
  - name: 'upsert(PermissionDefinition, RequestOptions)'
    uid: '@azure/cosmos.index.d.Permissions.upsert'
    package: '@azure/cosmos'
    summary: |
      Upsert a permission.
      A permission represents a per-User Permission to access a
      specific resource e.g. Item or Container.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'function upsert(body: PermissionDefinition, options?: RequestOptions)'
      parameters:
        - id: body
          type: <xref uid="@azure/cosmos.index.d.PermissionDefinition" />
          description: ''
        - id: options
          type: <xref uid="@azure/cosmos.index.d.RequestOptions" />
          description: ''
      return:
        type: Promise&lt;<xref uid="@azure/cosmos.index.d.PermissionResponse" />&gt;
        description: ''
