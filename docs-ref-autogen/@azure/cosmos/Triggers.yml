### YamlMime:TSType
name: Triggers
uid: '@azure/cosmos.index.d.Triggers'
package: '@azure/cosmos'
summary: |
  Operations to create, upsert, query, and read all triggers.
  Use `container.triggers` to read, replace, or delete a <xref:Trigger>.
fullName: Triggers
remarks: ''
isPreview: false
isDeprecated: false
type: class
properties:
  - name: container
    uid: '@azure/cosmos.index.d.Triggers.container'
    package: '@azure/cosmos'
    summary: ''
    fullName: container
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'container: Container'
      return:
        type: <xref uid="@azure/cosmos.index.d.Container" />
        description: ''
methods:
  - name: 'create(TriggerDefinition, RequestOptions)'
    uid: '@azure/cosmos.index.d.Triggers.create'
    package: '@azure/cosmos'
    summary: >-
      Create a trigger.

      Azure Cosmos DB supports pre and post triggers defined in JavaScript to be
      executed

      on creates, updates and deletes.


      For additional details, refer to the server-side JavaScript API
      documentation.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'function create(body: TriggerDefinition, options?: RequestOptions)'
      parameters:
        - id: body
          type: <xref uid="@azure/cosmos.index.d.TriggerDefinition" />
          description: ''
        - id: options
          type: <xref uid="@azure/cosmos.index.d.RequestOptions" />
          description: |+

      return:
        type: Promise&lt;<xref uid="@azure/cosmos.index.d.TriggerResponse" />&gt;
        description: ''
  - name: 'query(SqlQuerySpec, FeedOptions)'
    uid: '@azure/cosmos.index.d.Triggers.query'
    package: '@azure/cosmos'
    summary: Query all Triggers.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'function query(query: SqlQuerySpec, options?: FeedOptions)'
      parameters:
        - id: query
          type: <xref uid="@azure/cosmos.index.d.SqlQuerySpec" />
          description: >-
            Query configuration for the operation. See <xref:SqlQuerySpec> for
            more info on how to configure a query.
        - id: options
          type: <xref uid="@azure/cosmos.index.d.FeedOptions" />
          description: |+

      return:
        type: <xref uid="@azure/cosmos.index.d.QueryIterator" />&lt;any&gt;
        description: ''
  - name: 'query<T>(SqlQuerySpec, FeedOptions)'
    uid: '@azure/cosmos.index.d.Triggers.query_1'
    package: '@azure/cosmos'
    summary: Query all Triggers.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'function query<T>(query: SqlQuerySpec, options?: FeedOptions)'
      parameters:
        - id: query
          type: <xref uid="@azure/cosmos.index.d.SqlQuerySpec" />
          description: >-
            Query configuration for the operation. See <xref:SqlQuerySpec> for
            more info on how to configure a query.
        - id: options
          type: <xref uid="@azure/cosmos.index.d.FeedOptions" />
          description: |+

      return:
        type: <xref uid="@azure/cosmos.index.d.QueryIterator" />&lt;T&gt;
        description: ''
  - name: readAll(FeedOptions)
    uid: '@azure/cosmos.index.d.Triggers.readAll'
    package: '@azure/cosmos'
    summary: Read all Triggers.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'function readAll(options?: FeedOptions)'
      parameters:
        - id: options
          type: <xref uid="@azure/cosmos.index.d.FeedOptions" />
          description: ''
      return:
        type: >-
          <xref uid="@azure/cosmos.index.d.QueryIterator" />&lt;<xref
          uid="@azure/cosmos.index.d.TriggerDefinition" /> & <xref
          uid="@azure/cosmos.index.d.Resource" />&gt;
        description: ''
