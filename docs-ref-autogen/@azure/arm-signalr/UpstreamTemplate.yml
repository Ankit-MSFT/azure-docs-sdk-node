### YamlMime:UniversalReference
items:
  - uid: '@azure/arm-signalr.UpstreamTemplate'
    name: UpstreamTemplate
    fullName: UpstreamTemplate
    children:
      - '@azure/arm-signalr.UpstreamTemplate.categoryPattern'
      - '@azure/arm-signalr.UpstreamTemplate.eventPattern'
      - '@azure/arm-signalr.UpstreamTemplate.hubPattern'
      - '@azure/arm-signalr.UpstreamTemplate.urlTemplate'
    langs:
      - typeScript
    type: interface
    summary: >-
      Upstream template item settings. It defines the Upstream URL of the
      incoming requests.

      The template defines the pattern of the event, the hub or the category of
      the incoming request

      that matches current URL template.
    package: '@azure/arm-signalr'
  - uid: '@azure/arm-signalr.UpstreamTemplate.categoryPattern'
    name: categoryPattern
    fullName: categoryPattern
    children: []
    langs:
      - typeScript
    type: property
    summary: >-
      Gets or sets the matching pattern for category names. If not set, it
      matches any category.

      There are 3 kind of patterns supported:

      1. "*", it to matches any category name

      2. Combine multiple categories with ",", for example
      "connections,messages", it matches

      category "connections" and "messages"

      3. The single category name, for example, "connections", it matches the
      category "connections"
    optional: true
    syntax:
      content: 'categoryPattern?: undefined | string'
      return:
        type:
          - undefined | string
        description: ''
    package: '@azure/arm-signalr'
  - uid: '@azure/arm-signalr.UpstreamTemplate.eventPattern'
    name: eventPattern
    fullName: eventPattern
    children: []
    langs:
      - typeScript
    type: property
    summary: >-
      Gets or sets the matching pattern for event names. If not set, it matches
      any event.

      There are 3 kind of patterns supported:

      1. "*", it to matches any event name

      2. Combine multiple events with ",", for example "connect,disconnect", it
      matches event

      "connect" and "disconnect"

      3. The single event name, for example, "connect", it matches "connect"
    optional: true
    syntax:
      content: 'eventPattern?: undefined | string'
      return:
        type:
          - undefined | string
        description: ''
    package: '@azure/arm-signalr'
  - uid: '@azure/arm-signalr.UpstreamTemplate.hubPattern'
    name: hubPattern
    fullName: hubPattern
    children: []
    langs:
      - typeScript
    type: property
    summary: >-
      Gets or sets the matching pattern for hub names. If not set, it matches
      any hub.

      There are 3 kind of patterns supported:

      1. "*", it to matches any hub name

      2. Combine multiple hubs with ",", for example "hub1,hub2", it matches
      "hub1" and "hub2"

      3. The single hub name, for example, "hub1", it matches "hub1"
    optional: true
    syntax:
      content: 'hubPattern?: undefined | string'
      return:
        type:
          - undefined | string
        description: ''
    package: '@azure/arm-signalr'
  - uid: '@azure/arm-signalr.UpstreamTemplate.urlTemplate'
    name: urlTemplate
    fullName: urlTemplate
    children: []
    langs:
      - typeScript
    type: property
    summary: >-
      Gets or sets the Upstream URL template. You can use 3 predefined
      parameters {hub}, {category}

      {event} inside the template, the value of the Upstream URL is dynamically
      calculated when the

      client request comes in.

      For example, if the urlTemplate is `http://example.com/{hub}/api/{event}`,
      with a client

      request from hub `chat` connects, it will first POST to this URL:

      `http://example.com/chat/api/connect`.
    syntax:
      content: 'urlTemplate: string'
      return:
        type:
          - string
        description: ''
    package: '@azure/arm-signalr'
