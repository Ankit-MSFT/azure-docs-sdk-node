### YamlMime:TSType
name: SignalR
uid: '@azure/arm-signalr.SignalR'
package: '@azure/arm-signalr'
summary: Class representing a SignalR.
fullName: SignalR
remarks: ''
isPreview: false
isDeprecated: false
type: class
constructors:
  - name: SignalR(SignalRManagementClientContext)
    uid: '@azure/arm-signalr.SignalR.constructor'
    package: '@azure/arm-signalr'
    summary: Create a SignalR.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'new SignalR(client: SignalRManagementClientContext)'
      parameters:
        - id: client
          type: <xref uid="@azure/arm-signalr.SignalRManagementClientContext" />
          description: |
            Reference to the service client.
methods:
  - name: >-
      beginCreateOrUpdate(SignalRResource, string, string,
      msRest.RequestOptionsBase)
    uid: '@azure/arm-signalr.SignalR.beginCreateOrUpdate'
    package: '@azure/arm-signalr'
    summary: Create or update a resource.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function beginCreateOrUpdate(parameters: SignalRResource,
        resourceGroupName: string, resourceName: string, options?:
        msRest.RequestOptionsBase): Promise<LROPoller>
      parameters:
        - id: parameters
          type: <xref uid="@azure/arm-signalr.SignalRResource" />
          description: Parameters for the create or update operation
        - id: resourceGroupName
          type: string
          description: |-
            The name of the resource group that contains the resource. You can
            obtain this value from the Azure Resource Manager API or the portal.
        - id: resourceName
          type: string
          description: The name of the resource.
        - id: options
          type: <xref uid="msRest.RequestOptionsBase" />
          description: ''
      return:
        description: Promise<msRestAzure.LROPoller>
        type: Promise&lt;LROPoller&gt;
  - name: 'beginDeleteMethod(string, string, msRest.RequestOptionsBase)'
    uid: '@azure/arm-signalr.SignalR.beginDeleteMethod'
    package: '@azure/arm-signalr'
    summary: Operation to delete a resource.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function beginDeleteMethod(resourceGroupName: string, resourceName:
        string, options?: msRest.RequestOptionsBase): Promise<LROPoller>
      parameters:
        - id: resourceGroupName
          type: string
          description: |-
            The name of the resource group that contains the resource. You can
            obtain this value from the Azure Resource Manager API or the portal.
        - id: resourceName
          type: string
          description: The name of the resource.
        - id: options
          type: <xref uid="msRest.RequestOptionsBase" />
          description: ''
      return:
        description: Promise<msRestAzure.LROPoller>
        type: Promise&lt;LROPoller&gt;
  - name: >-
      beginRegenerateKey(RegenerateKeyParameters, string, string,
      msRest.RequestOptionsBase)
    uid: '@azure/arm-signalr.SignalR.beginRegenerateKey'
    package: '@azure/arm-signalr'
    summary: >-
      Regenerate the access key for the resource. PrimaryKey and SecondaryKey
      cannot be regenerated at

      the same time.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function beginRegenerateKey(parameters: RegenerateKeyParameters,
        resourceGroupName: string, resourceName: string, options?:
        msRest.RequestOptionsBase): Promise<LROPoller>
      parameters:
        - id: parameters
          type: <xref uid="@azure/arm-signalr.RegenerateKeyParameters" />
          description: Parameter that describes the Regenerate Key Operation.
        - id: resourceGroupName
          type: string
          description: |-
            The name of the resource group that contains the resource. You can
            obtain this value from the Azure Resource Manager API or the portal.
        - id: resourceName
          type: string
          description: The name of the resource.
        - id: options
          type: <xref uid="msRest.RequestOptionsBase" />
          description: ''
      return:
        description: Promise<msRestAzure.LROPoller>
        type: Promise&lt;LROPoller&gt;
  - name: 'beginRestart(string, string, msRest.RequestOptionsBase)'
    uid: '@azure/arm-signalr.SignalR.beginRestart'
    package: '@azure/arm-signalr'
    summary: Operation to restart a resource.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function beginRestart(resourceGroupName: string, resourceName: string,
        options?: msRest.RequestOptionsBase): Promise<LROPoller>
      parameters:
        - id: resourceGroupName
          type: string
          description: |-
            The name of the resource group that contains the resource. You can
            obtain this value from the Azure Resource Manager API or the portal.
        - id: resourceName
          type: string
          description: The name of the resource.
        - id: options
          type: <xref uid="msRest.RequestOptionsBase" />
          description: ''
      return:
        description: Promise<msRestAzure.LROPoller>
        type: Promise&lt;LROPoller&gt;
  - name: 'beginUpdate(SignalRResource, string, string, msRest.RequestOptionsBase)'
    uid: '@azure/arm-signalr.SignalR.beginUpdate'
    package: '@azure/arm-signalr'
    summary: Operation to update an exiting resource.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function beginUpdate(parameters: SignalRResource, resourceGroupName:
        string, resourceName: string, options?: msRest.RequestOptionsBase):
        Promise<LROPoller>
      parameters:
        - id: parameters
          type: <xref uid="@azure/arm-signalr.SignalRResource" />
          description: Parameters for the update operation
        - id: resourceGroupName
          type: string
          description: |-
            The name of the resource group that contains the resource. You can
            obtain this value from the Azure Resource Manager API or the portal.
        - id: resourceName
          type: string
          description: The name of the resource.
        - id: options
          type: <xref uid="msRest.RequestOptionsBase" />
          description: ''
      return:
        description: Promise<msRestAzure.LROPoller>
        type: Promise&lt;LROPoller&gt;
  - name: >-
      checkNameAvailability(string, NameAvailabilityParameters,
      msRest.RequestOptionsBase)
    uid: '@azure/arm-signalr.SignalR.checkNameAvailability'
    package: '@azure/arm-signalr'
    summary: Checks that the resource name is valid and is not already in use.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function checkNameAvailability(location: string, parameters:
        NameAvailabilityParameters, options?: msRest.RequestOptionsBase):
        Promise<Models.SignalRCheckNameAvailabilityResponse>
      parameters:
        - id: location
          type: string
          description: the region
        - id: parameters
          type: <xref uid="@azure/arm-signalr.NameAvailabilityParameters" />
          description: Parameters supplied to the operation.
        - id: options
          type: <xref uid="msRest.RequestOptionsBase" />
          description: ''
      return:
        description: Promise<Models.SignalRCheckNameAvailabilityResponse>
        type: >-
          Promise&lt;<xref uid="Models.SignalRCheckNameAvailabilityResponse"
          />&gt;
  - name: >-
      checkNameAvailability(string, NameAvailabilityParameters,
      RequestOptionsBase, ServiceCallback<NameAvailability>)
    uid: '@azure/arm-signalr.SignalR.checkNameAvailability_2'
    package: '@azure/arm-signalr'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function checkNameAvailability(location: string, parameters:
        NameAvailabilityParameters, options: RequestOptionsBase, callback:
        ServiceCallback<NameAvailability>)
      parameters:
        - id: location
          type: string
          description: the region
        - id: parameters
          type: <xref uid="@azure/arm-signalr.NameAvailabilityParameters" />
          description: Parameters supplied to the operation.
        - id: options
          type: RequestOptionsBase
          description: The optional parameters
        - id: callback
          type: >-
            ServiceCallback&lt;<xref uid="@azure/arm-signalr.NameAvailability"
            />&gt;
          description: |
            The callback
  - name: >-
      checkNameAvailability(string, NameAvailabilityParameters,
      ServiceCallback<NameAvailability>)
    uid: '@azure/arm-signalr.SignalR.checkNameAvailability_1'
    package: '@azure/arm-signalr'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function checkNameAvailability(location: string, parameters:
        NameAvailabilityParameters, callback: ServiceCallback<NameAvailability>)
      parameters:
        - id: location
          type: string
          description: the region
        - id: parameters
          type: <xref uid="@azure/arm-signalr.NameAvailabilityParameters" />
          description: Parameters supplied to the operation.
        - id: callback
          type: >-
            ServiceCallback&lt;<xref uid="@azure/arm-signalr.NameAvailability"
            />&gt;
          description: |
            The callback
  - name: 'createOrUpdate(SignalRResource, string, string, msRest.RequestOptionsBase)'
    uid: '@azure/arm-signalr.SignalR.createOrUpdate'
    package: '@azure/arm-signalr'
    summary: Create or update a resource.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function createOrUpdate(parameters: SignalRResource, resourceGroupName:
        string, resourceName: string, options?: msRest.RequestOptionsBase):
        Promise<Models.SignalRCreateOrUpdateResponse>
      parameters:
        - id: parameters
          type: <xref uid="@azure/arm-signalr.SignalRResource" />
          description: Parameters for the create or update operation
        - id: resourceGroupName
          type: string
          description: |-
            The name of the resource group that contains the resource. You can
            obtain this value from the Azure Resource Manager API or the portal.
        - id: resourceName
          type: string
          description: The name of the resource.
        - id: options
          type: <xref uid="msRest.RequestOptionsBase" />
          description: ''
      return:
        description: Promise<Models.SignalRCreateOrUpdateResponse>
        type: Promise&lt;<xref uid="Models.SignalRCreateOrUpdateResponse" />&gt;
  - name: 'deleteMethod(string, string, msRest.RequestOptionsBase)'
    uid: '@azure/arm-signalr.SignalR.deleteMethod'
    package: '@azure/arm-signalr'
    summary: Operation to delete a resource.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function deleteMethod(resourceGroupName: string, resourceName: string,
        options?: msRest.RequestOptionsBase): Promise<RestResponse>
      parameters:
        - id: resourceGroupName
          type: string
          description: |-
            The name of the resource group that contains the resource. You can
            obtain this value from the Azure Resource Manager API or the portal.
        - id: resourceName
          type: string
          description: The name of the resource.
        - id: options
          type: <xref uid="msRest.RequestOptionsBase" />
          description: ''
      return:
        description: Promise<msRest.RestResponse>
        type: Promise&lt;RestResponse&gt;
  - name: 'get(string, string, msRest.RequestOptionsBase)'
    uid: '@azure/arm-signalr.SignalR.get'
    package: '@azure/arm-signalr'
    summary: Get the resource and its properties.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function get(resourceGroupName: string, resourceName: string, options?:
        msRest.RequestOptionsBase): Promise<Models.SignalRGetResponse>
      parameters:
        - id: resourceGroupName
          type: string
          description: |-
            The name of the resource group that contains the resource. You can
            obtain this value from the Azure Resource Manager API or the portal.
        - id: resourceName
          type: string
          description: The name of the resource.
        - id: options
          type: <xref uid="msRest.RequestOptionsBase" />
          description: ''
      return:
        description: Promise<Models.SignalRGetResponse>
        type: Promise&lt;<xref uid="Models.SignalRGetResponse" />&gt;
  - name: 'get(string, string, RequestOptionsBase, ServiceCallback<SignalRResource>)'
    uid: '@azure/arm-signalr.SignalR.get_2'
    package: '@azure/arm-signalr'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function get(resourceGroupName: string, resourceName: string, options:
        RequestOptionsBase, callback: ServiceCallback<SignalRResource>)
      parameters:
        - id: resourceGroupName
          type: string
          description: |-
            The name of the resource group that contains the resource. You can
            obtain this value from the Azure Resource Manager API or the portal.
        - id: resourceName
          type: string
          description: The name of the resource.
        - id: options
          type: RequestOptionsBase
          description: The optional parameters
        - id: callback
          type: >-
            ServiceCallback&lt;<xref uid="@azure/arm-signalr.SignalRResource"
            />&gt;
          description: |
            The callback
  - name: 'get(string, string, ServiceCallback<SignalRResource>)'
    uid: '@azure/arm-signalr.SignalR.get_1'
    package: '@azure/arm-signalr'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function get(resourceGroupName: string, resourceName: string, callback:
        ServiceCallback<SignalRResource>)
      parameters:
        - id: resourceGroupName
          type: string
          description: |-
            The name of the resource group that contains the resource. You can
            obtain this value from the Azure Resource Manager API or the portal.
        - id: resourceName
          type: string
          description: The name of the resource.
        - id: callback
          type: >-
            ServiceCallback&lt;<xref uid="@azure/arm-signalr.SignalRResource"
            />&gt;
          description: |
            The callback
  - name: 'listByResourceGroup(string, msRest.RequestOptionsBase)'
    uid: '@azure/arm-signalr.SignalR.listByResourceGroup'
    package: '@azure/arm-signalr'
    summary: Handles requests to list all resources in a resource group.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listByResourceGroup(resourceGroupName: string, options?:
        msRest.RequestOptionsBase):
        Promise<Models.SignalRListByResourceGroupResponse>
      parameters:
        - id: resourceGroupName
          type: string
          description: |-
            The name of the resource group that contains the resource. You can
            obtain this value from the Azure Resource Manager API or the portal.
        - id: options
          type: <xref uid="msRest.RequestOptionsBase" />
          description: ''
      return:
        description: Promise<Models.SignalRListByResourceGroupResponse>
        type: >-
          Promise&lt;<xref uid="Models.SignalRListByResourceGroupResponse"
          />&gt;
  - name: >-
      listByResourceGroup(string, RequestOptionsBase,
      ServiceCallback<SignalRResourceList>)
    uid: '@azure/arm-signalr.SignalR.listByResourceGroup_2'
    package: '@azure/arm-signalr'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listByResourceGroup(resourceGroupName: string, options:
        RequestOptionsBase, callback: ServiceCallback<SignalRResourceList>)
      parameters:
        - id: resourceGroupName
          type: string
          description: |-
            The name of the resource group that contains the resource. You can
            obtain this value from the Azure Resource Manager API or the portal.
        - id: options
          type: RequestOptionsBase
          description: The optional parameters
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/arm-signalr.SignalRResourceList" />&gt;
          description: |
            The callback
  - name: 'listByResourceGroup(string, ServiceCallback<SignalRResourceList>)'
    uid: '@azure/arm-signalr.SignalR.listByResourceGroup_1'
    package: '@azure/arm-signalr'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listByResourceGroup(resourceGroupName: string, callback:
        ServiceCallback<SignalRResourceList>)
      parameters:
        - id: resourceGroupName
          type: string
          description: |-
            The name of the resource group that contains the resource. You can
            obtain this value from the Azure Resource Manager API or the portal.
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/arm-signalr.SignalRResourceList" />&gt;
          description: |
            The callback
  - name: 'listByResourceGroupNext(string, msRest.RequestOptionsBase)'
    uid: '@azure/arm-signalr.SignalR.listByResourceGroupNext'
    package: '@azure/arm-signalr'
    summary: Handles requests to list all resources in a resource group.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listByResourceGroupNext(nextPageLink: string, options?:
        msRest.RequestOptionsBase):
        Promise<Models.SignalRListByResourceGroupNextResponse>
      parameters:
        - id: nextPageLink
          type: string
          description: The NextLink from the previous successful call to List operation.
        - id: options
          type: <xref uid="msRest.RequestOptionsBase" />
          description: ''
      return:
        description: Promise<Models.SignalRListByResourceGroupNextResponse>
        type: >-
          Promise&lt;<xref uid="Models.SignalRListByResourceGroupNextResponse"
          />&gt;
  - name: >-
      listByResourceGroupNext(string, RequestOptionsBase,
      ServiceCallback<SignalRResourceList>)
    uid: '@azure/arm-signalr.SignalR.listByResourceGroupNext_2'
    package: '@azure/arm-signalr'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listByResourceGroupNext(nextPageLink: string, options:
        RequestOptionsBase, callback: ServiceCallback<SignalRResourceList>)
      parameters:
        - id: nextPageLink
          type: string
          description: The NextLink from the previous successful call to List operation.
        - id: options
          type: RequestOptionsBase
          description: The optional parameters
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/arm-signalr.SignalRResourceList" />&gt;
          description: |
            The callback
  - name: 'listByResourceGroupNext(string, ServiceCallback<SignalRResourceList>)'
    uid: '@azure/arm-signalr.SignalR.listByResourceGroupNext_1'
    package: '@azure/arm-signalr'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listByResourceGroupNext(nextPageLink: string, callback:
        ServiceCallback<SignalRResourceList>)
      parameters:
        - id: nextPageLink
          type: string
          description: The NextLink from the previous successful call to List operation.
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/arm-signalr.SignalRResourceList" />&gt;
          description: |
            The callback
  - name: listBySubscription(msRest.RequestOptionsBase)
    uid: '@azure/arm-signalr.SignalR.listBySubscription'
    package: '@azure/arm-signalr'
    summary: Handles requests to list all resources in a subscription.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listBySubscription(options?: msRest.RequestOptionsBase):
        Promise<Models.SignalRListBySubscriptionResponse>
      parameters:
        - id: options
          type: <xref uid="msRest.RequestOptionsBase" />
          description: ''
      return:
        description: Promise<Models.SignalRListBySubscriptionResponse>
        type: Promise&lt;<xref uid="Models.SignalRListBySubscriptionResponse" />&gt;
  - name: >-
      listBySubscription(RequestOptionsBase,
      ServiceCallback<SignalRResourceList>)
    uid: '@azure/arm-signalr.SignalR.listBySubscription_2'
    package: '@azure/arm-signalr'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listBySubscription(options: RequestOptionsBase, callback:
        ServiceCallback<SignalRResourceList>)
      parameters:
        - id: options
          type: RequestOptionsBase
          description: The optional parameters
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/arm-signalr.SignalRResourceList" />&gt;
          description: |
            The callback
  - name: listBySubscription(ServiceCallback<SignalRResourceList>)
    uid: '@azure/arm-signalr.SignalR.listBySubscription_1'
    package: '@azure/arm-signalr'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listBySubscription(callback:
        ServiceCallback<SignalRResourceList>)
      parameters:
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/arm-signalr.SignalRResourceList" />&gt;
          description: |
            The callback
  - name: 'listBySubscriptionNext(string, msRest.RequestOptionsBase)'
    uid: '@azure/arm-signalr.SignalR.listBySubscriptionNext'
    package: '@azure/arm-signalr'
    summary: Handles requests to list all resources in a subscription.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listBySubscriptionNext(nextPageLink: string, options?:
        msRest.RequestOptionsBase):
        Promise<Models.SignalRListBySubscriptionNextResponse>
      parameters:
        - id: nextPageLink
          type: string
          description: The NextLink from the previous successful call to List operation.
        - id: options
          type: <xref uid="msRest.RequestOptionsBase" />
          description: ''
      return:
        description: Promise<Models.SignalRListBySubscriptionNextResponse>
        type: >-
          Promise&lt;<xref uid="Models.SignalRListBySubscriptionNextResponse"
          />&gt;
  - name: >-
      listBySubscriptionNext(string, RequestOptionsBase,
      ServiceCallback<SignalRResourceList>)
    uid: '@azure/arm-signalr.SignalR.listBySubscriptionNext_2'
    package: '@azure/arm-signalr'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listBySubscriptionNext(nextPageLink: string, options:
        RequestOptionsBase, callback: ServiceCallback<SignalRResourceList>)
      parameters:
        - id: nextPageLink
          type: string
          description: The NextLink from the previous successful call to List operation.
        - id: options
          type: RequestOptionsBase
          description: The optional parameters
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/arm-signalr.SignalRResourceList" />&gt;
          description: |
            The callback
  - name: 'listBySubscriptionNext(string, ServiceCallback<SignalRResourceList>)'
    uid: '@azure/arm-signalr.SignalR.listBySubscriptionNext_1'
    package: '@azure/arm-signalr'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listBySubscriptionNext(nextPageLink: string, callback:
        ServiceCallback<SignalRResourceList>)
      parameters:
        - id: nextPageLink
          type: string
          description: The NextLink from the previous successful call to List operation.
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/arm-signalr.SignalRResourceList" />&gt;
          description: |
            The callback
  - name: 'listKeys(string, string, msRest.RequestOptionsBase)'
    uid: '@azure/arm-signalr.SignalR.listKeys'
    package: '@azure/arm-signalr'
    summary: Get the access keys of the resource.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listKeys(resourceGroupName: string, resourceName: string,
        options?: msRest.RequestOptionsBase):
        Promise<Models.SignalRListKeysResponse>
      parameters:
        - id: resourceGroupName
          type: string
          description: |-
            The name of the resource group that contains the resource. You can
            obtain this value from the Azure Resource Manager API or the portal.
        - id: resourceName
          type: string
          description: The name of the resource.
        - id: options
          type: <xref uid="msRest.RequestOptionsBase" />
          description: ''
      return:
        description: Promise<Models.SignalRListKeysResponse>
        type: Promise&lt;<xref uid="Models.SignalRListKeysResponse" />&gt;
  - name: 'listKeys(string, string, RequestOptionsBase, ServiceCallback<SignalRKeys>)'
    uid: '@azure/arm-signalr.SignalR.listKeys_2'
    package: '@azure/arm-signalr'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listKeys(resourceGroupName: string, resourceName: string,
        options: RequestOptionsBase, callback: ServiceCallback<SignalRKeys>)
      parameters:
        - id: resourceGroupName
          type: string
          description: |-
            The name of the resource group that contains the resource. You can
            obtain this value from the Azure Resource Manager API or the portal.
        - id: resourceName
          type: string
          description: The name of the resource.
        - id: options
          type: RequestOptionsBase
          description: The optional parameters
        - id: callback
          type: ServiceCallback&lt;<xref uid="@azure/arm-signalr.SignalRKeys" />&gt;
          description: |
            The callback
  - name: 'listKeys(string, string, ServiceCallback<SignalRKeys>)'
    uid: '@azure/arm-signalr.SignalR.listKeys_1'
    package: '@azure/arm-signalr'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listKeys(resourceGroupName: string, resourceName: string,
        callback: ServiceCallback<SignalRKeys>)
      parameters:
        - id: resourceGroupName
          type: string
          description: |-
            The name of the resource group that contains the resource. You can
            obtain this value from the Azure Resource Manager API or the portal.
        - id: resourceName
          type: string
          description: The name of the resource.
        - id: callback
          type: ServiceCallback&lt;<xref uid="@azure/arm-signalr.SignalRKeys" />&gt;
          description: |
            The callback
  - name: >-
      regenerateKey(RegenerateKeyParameters, string, string,
      msRest.RequestOptionsBase)
    uid: '@azure/arm-signalr.SignalR.regenerateKey'
    package: '@azure/arm-signalr'
    summary: >-
      Regenerate the access key for the resource. PrimaryKey and SecondaryKey
      cannot be regenerated at

      the same time.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function regenerateKey(parameters: RegenerateKeyParameters,
        resourceGroupName: string, resourceName: string, options?:
        msRest.RequestOptionsBase): Promise<Models.SignalRRegenerateKeyResponse>
      parameters:
        - id: parameters
          type: <xref uid="@azure/arm-signalr.RegenerateKeyParameters" />
          description: Parameter that describes the Regenerate Key Operation.
        - id: resourceGroupName
          type: string
          description: |-
            The name of the resource group that contains the resource. You can
            obtain this value from the Azure Resource Manager API or the portal.
        - id: resourceName
          type: string
          description: The name of the resource.
        - id: options
          type: <xref uid="msRest.RequestOptionsBase" />
          description: ''
      return:
        description: Promise<Models.SignalRRegenerateKeyResponse>
        type: Promise&lt;<xref uid="Models.SignalRRegenerateKeyResponse" />&gt;
  - name: 'restart(string, string, msRest.RequestOptionsBase)'
    uid: '@azure/arm-signalr.SignalR.restart'
    package: '@azure/arm-signalr'
    summary: Operation to restart a resource.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function restart(resourceGroupName: string, resourceName: string,
        options?: msRest.RequestOptionsBase): Promise<RestResponse>
      parameters:
        - id: resourceGroupName
          type: string
          description: |-
            The name of the resource group that contains the resource. You can
            obtain this value from the Azure Resource Manager API or the portal.
        - id: resourceName
          type: string
          description: The name of the resource.
        - id: options
          type: <xref uid="msRest.RequestOptionsBase" />
          description: ''
      return:
        description: Promise<msRest.RestResponse>
        type: Promise&lt;RestResponse&gt;
  - name: 'update(SignalRResource, string, string, msRest.RequestOptionsBase)'
    uid: '@azure/arm-signalr.SignalR.update'
    package: '@azure/arm-signalr'
    summary: Operation to update an exiting resource.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function update(parameters: SignalRResource, resourceGroupName: string,
        resourceName: string, options?: msRest.RequestOptionsBase):
        Promise<Models.SignalRUpdateResponse>
      parameters:
        - id: parameters
          type: <xref uid="@azure/arm-signalr.SignalRResource" />
          description: Parameters for the update operation
        - id: resourceGroupName
          type: string
          description: |-
            The name of the resource group that contains the resource. You can
            obtain this value from the Azure Resource Manager API or the portal.
        - id: resourceName
          type: string
          description: The name of the resource.
        - id: options
          type: <xref uid="msRest.RequestOptionsBase" />
          description: ''
      return:
        description: Promise<Models.SignalRUpdateResponse>
        type: Promise&lt;<xref uid="Models.SignalRUpdateResponse" />&gt;
