### YamlMime:TSType
name: NetezzaSource
uid: '@azure/arm-datafactory.NetezzaSource'
package: '@azure/arm-datafactory'
summary: A copy activity Netezza source.
fullName: NetezzaSource
type: interface
properties:
  - name: additionalColumns
    uid: '@azure/arm-datafactory.NetezzaSource.additionalColumns'
    package: '@azure/arm-datafactory'
    summary: >-
      Specifies the additional columns to be added to source data. Type: array
      of objects (or

      Expression with resultType array of objects).
    fullName: additionalColumns
    syntax:
      content: 'additionalColumns?: AdditionalColumns[]'
      return:
        type: '<xref uid="@azure/arm-datafactory.AdditionalColumns" />[]'
        description: ''
  - name: maxConcurrentConnections
    uid: '@azure/arm-datafactory.NetezzaSource.maxConcurrentConnections'
    package: '@azure/arm-datafactory'
    summary: >-
      The maximum concurrent connection count for the source data store. Type:
      integer (or

      Expression with resultType integer).
    fullName: maxConcurrentConnections
    syntax:
      content: 'maxConcurrentConnections?: any'
      return:
        type: any
        description: ''
  - name: partitionOption
    uid: '@azure/arm-datafactory.NetezzaSource.partitionOption'
    package: '@azure/arm-datafactory'
    summary: >-
      The partition mechanism that will be used for Netezza read in parallel.
      Possible values

      include: 'None', 'DataSlice', 'DynamicRange'
    fullName: partitionOption
    syntax:
      content: 'partitionOption?: NetezzaPartitionOption'
      return:
        type: <xref uid="@azure/arm-datafactory.NetezzaPartitionOption" />
        description: ''
  - name: partitionSettings
    uid: '@azure/arm-datafactory.NetezzaSource.partitionSettings'
    package: '@azure/arm-datafactory'
    summary: The settings that will be leveraged for Netezza source partitioning.
    fullName: partitionSettings
    syntax:
      content: 'partitionSettings?: NetezzaPartitionSettings'
      return:
        type: <xref uid="@azure/arm-datafactory.NetezzaPartitionSettings" />
        description: ''
  - name: query
    uid: '@azure/arm-datafactory.NetezzaSource.query'
    package: '@azure/arm-datafactory'
    summary: >-
      A query to retrieve data from source. Type: string (or Expression with
      resultType string).
    fullName: query
    syntax:
      content: 'query?: any'
      return:
        type: any
        description: ''
  - name: queryTimeout
    uid: '@azure/arm-datafactory.NetezzaSource.queryTimeout'
    package: '@azure/arm-datafactory'
    summary: >-
      Query timeout. Type: string (or Expression with resultType string),
      pattern:

      ((\d+)\.)?(\d\d):(60|([0-5][0-9])):(60|([0-5][0-9])).
    fullName: queryTimeout
    syntax:
      content: 'queryTimeout?: any'
      return:
        type: any
        description: ''
  - name: sourceRetryCount
    uid: '@azure/arm-datafactory.NetezzaSource.sourceRetryCount'
    package: '@azure/arm-datafactory'
    summary: 'Source retry count. Type: integer (or Expression with resultType integer).'
    fullName: sourceRetryCount
    syntax:
      content: 'sourceRetryCount?: any'
      return:
        type: any
        description: ''
  - name: sourceRetryWait
    uid: '@azure/arm-datafactory.NetezzaSource.sourceRetryWait'
    package: '@azure/arm-datafactory'
    summary: >-
      Source retry wait. Type: string (or Expression with resultType string),
      pattern:

      ((\d+)\.)?(\d\d):(60|([0-5][0-9])):(60|([0-5][0-9])).
    fullName: sourceRetryWait
    syntax:
      content: 'sourceRetryWait?: any'
      return:
        type: any
        description: ''
  - name: type
    uid: '@azure/arm-datafactory.NetezzaSource.type'
    package: '@azure/arm-datafactory'
    summary: Polymorphic Discriminator
    fullName: type
    syntax:
      content: 'type: "NetezzaSource"'
      return:
        type: '"NetezzaSource"'
        description: ''
