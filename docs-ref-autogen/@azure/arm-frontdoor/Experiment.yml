### YamlMime:UniversalReference
items:
  - uid: '@azure/arm-frontdoor.Experiment'
    name: Experiment
    fullName: Experiment
    children:
      - '@azure/arm-frontdoor.Experiment.description'
      - '@azure/arm-frontdoor.Experiment.enabledState'
      - '@azure/arm-frontdoor.Experiment.endpointA'
      - '@azure/arm-frontdoor.Experiment.endpointB'
      - '@azure/arm-frontdoor.Experiment.id'
      - '@azure/arm-frontdoor.Experiment.location'
      - '@azure/arm-frontdoor.Experiment.name'
      - '@azure/arm-frontdoor.Experiment.resourceState'
      - '@azure/arm-frontdoor.Experiment.scriptFileUri'
      - '@azure/arm-frontdoor.Experiment.status'
      - '@azure/arm-frontdoor.Experiment.tags'
      - '@azure/arm-frontdoor.Experiment.type'
    langs:
      - typeScript
    type: interface
    summary: Defines the properties of an Experiment
    extends:
      name: '@azure/arm-frontdoor.Resource'
    package: '@azure/arm-frontdoor'
  - uid: '@azure/arm-frontdoor.Experiment.description'
    name: description
    fullName: description
    children: []
    langs:
      - typeScript
    type: property
    summary: The description of the details or intents of the Experiment
    optional: true
    syntax:
      content: 'description?: undefined | string'
      return:
        type:
          - undefined | string
        description: ''
    package: '@azure/arm-frontdoor'
  - uid: '@azure/arm-frontdoor.Experiment.enabledState'
    name: enabledState
    fullName: enabledState
    children: []
    langs:
      - typeScript
    type: property
    summary: >-
      The state of the Experiment. Possible values include: 'Enabled',
      'Disabled'
    optional: true
    syntax:
      content: 'enabledState?: State'
      return:
        type:
          - '@azure/arm-frontdoor.State'
        description: ''
    package: '@azure/arm-frontdoor'
  - uid: '@azure/arm-frontdoor.Experiment.endpointA'
    name: endpointA
    fullName: endpointA
    children: []
    langs:
      - typeScript
    type: property
    summary: The endpoint A of an experiment
    optional: true
    syntax:
      content: 'endpointA?: Endpoint'
      return:
        type:
          - '@azure/arm-frontdoor.Endpoint'
        description: ''
    package: '@azure/arm-frontdoor'
  - uid: '@azure/arm-frontdoor.Experiment.endpointB'
    name: endpointB
    fullName: endpointB
    children: []
    langs:
      - typeScript
    type: property
    summary: The endpoint B of an experiment
    optional: true
    syntax:
      content: 'endpointB?: Endpoint'
      return:
        type:
          - '@azure/arm-frontdoor.Endpoint'
        description: ''
    package: '@azure/arm-frontdoor'
  - uid: '@azure/arm-frontdoor.Experiment.id'
    name: id
    fullName: id
    children: []
    langs:
      - typeScript
    type: property
    summary: >-
      Resource ID.

      **NOTE: This property will not be serialized. It can only be populated by
      the server.**
    optional: true
    syntax:
      content: 'id?: undefined | string'
      return:
        type:
          - undefined | string
        description: ''
    package: '@azure/arm-frontdoor'
  - uid: '@azure/arm-frontdoor.Experiment.location'
    name: location
    fullName: location
    children: []
    langs:
      - typeScript
    type: property
    summary: Resource location.
    optional: true
    syntax:
      content: 'location?: undefined | string'
      return:
        type:
          - undefined | string
        description: ''
    package: '@azure/arm-frontdoor'
  - uid: '@azure/arm-frontdoor.Experiment.name'
    name: name
    fullName: name
    children: []
    langs:
      - typeScript
    type: property
    summary: >-
      Resource name.

      **NOTE: This property will not be serialized. It can only be populated by
      the server.**
    optional: true
    syntax:
      content: 'name?: undefined | string'
      return:
        type:
          - undefined | string
        description: ''
    package: '@azure/arm-frontdoor'
  - uid: '@azure/arm-frontdoor.Experiment.resourceState'
    name: resourceState
    fullName: resourceState
    children: []
    langs:
      - typeScript
    type: property
    summary: >-
      Resource status. Possible values include: 'Creating', 'Enabling',
      'Enabled', 'Disabling',

      'Disabled', 'Deleting'
    optional: true
    syntax:
      content: 'resourceState?: NetworkExperimentResourceState'
      return:
        type:
          - '@azure/arm-frontdoor.NetworkExperimentResourceState'
        description: ''
    package: '@azure/arm-frontdoor'
  - uid: '@azure/arm-frontdoor.Experiment.scriptFileUri'
    name: scriptFileUri
    fullName: scriptFileUri
    children: []
    langs:
      - typeScript
    type: property
    summary: >-
      The uri to the Script used in the Experiment

      **NOTE: This property will not be serialized. It can only be populated by
      the server.**
    optional: true
    syntax:
      content: 'scriptFileUri?: undefined | string'
      return:
        type:
          - undefined | string
        description: ''
    package: '@azure/arm-frontdoor'
  - uid: '@azure/arm-frontdoor.Experiment.status'
    name: status
    fullName: status
    children: []
    langs:
      - typeScript
    type: property
    summary: >-
      The description of Experiment status from the server side

      **NOTE: This property will not be serialized. It can only be populated by
      the server.**
    optional: true
    syntax:
      content: 'status?: undefined | string'
      return:
        type:
          - undefined | string
        description: ''
    package: '@azure/arm-frontdoor'
  - uid: '@azure/arm-frontdoor.Experiment.tags'
    name: tags
    fullName: tags
    children: []
    langs:
      - typeScript
    type: property
    summary: Resource tags.
    optional: true
    syntax:
      content: 'tags?: undefined | [key: string]: string'
      return:
        type:
          - 'undefined | [key: string]: string'
        description: ''
    package: '@azure/arm-frontdoor'
  - uid: '@azure/arm-frontdoor.Experiment.type'
    name: type
    fullName: type
    children: []
    langs:
      - typeScript
    type: property
    summary: >-
      Resource type.

      **NOTE: This property will not be serialized. It can only be populated by
      the server.**
    optional: true
    syntax:
      content: 'type?: undefined | string'
      return:
        type:
          - undefined | string
        description: ''
    package: '@azure/arm-frontdoor'
references:
  - uid: '@azure/arm-frontdoor.Resource'
    name: Resource
    spec.typeScript:
      - name: Resource
        fullName: Resource
        uid: '@azure/arm-frontdoor.Resource'
  - uid: '@azure/arm-frontdoor.State'
    name: State
    spec.typeScript:
      - name: State
        fullName: State
        uid: '@azure/arm-frontdoor.State'
  - uid: '@azure/arm-frontdoor.Endpoint'
    name: Endpoint
    spec.typeScript:
      - name: Endpoint
        fullName: Endpoint
        uid: '@azure/arm-frontdoor.Endpoint'
  - uid: '@azure/arm-frontdoor.NetworkExperimentResourceState'
    name: NetworkExperimentResourceState
    spec.typeScript:
      - name: NetworkExperimentResourceState
        fullName: NetworkExperimentResourceState
        uid: '@azure/arm-frontdoor.NetworkExperimentResourceState'
