### YamlMime:UniversalReference
items:
  - uid: '@azure/arm-frontdoor.FrontDoorManagementClient'
    name: FrontDoorManagementClient
    fullName: FrontDoorManagementClient
    children:
      - '@azure/arm-frontdoor.FrontDoorManagementClient.acceptLanguage'
      - '@azure/arm-frontdoor.FrontDoorManagementClient.beginLongRunningRequest'
      - >-
        @azure/arm-frontdoor.FrontDoorManagementClient.checkFrontDoorNameAvailability
      - >-
        @azure/arm-frontdoor.FrontDoorManagementClient.checkFrontDoorNameAvailability_2
      - >-
        @azure/arm-frontdoor.FrontDoorManagementClient.checkFrontDoorNameAvailability_1
      - >-
        @azure/arm-frontdoor.FrontDoorManagementClient.checkFrontDoorNameAvailabilityWithSubscription
      - >-
        @azure/arm-frontdoor.FrontDoorManagementClient.checkFrontDoorNameAvailabilityWithSubscription_2
      - >-
        @azure/arm-frontdoor.FrontDoorManagementClient.checkFrontDoorNameAvailabilityWithSubscription_1
      - '@azure/arm-frontdoor.FrontDoorManagementClient.credentials'
      - '@azure/arm-frontdoor.FrontDoorManagementClient.endpoints'
      - '@azure/arm-frontdoor.FrontDoorManagementClient.experiments'
      - '@azure/arm-frontdoor.FrontDoorManagementClient.constructor'
      - '@azure/arm-frontdoor.FrontDoorManagementClient.frontDoors'
      - '@azure/arm-frontdoor.FrontDoorManagementClient.frontendEndpoints'
      - >-
        @azure/arm-frontdoor.FrontDoorManagementClient.longRunningOperationRetryTimeout
      - '@azure/arm-frontdoor.FrontDoorManagementClient.managedRuleSets'
      - '@azure/arm-frontdoor.FrontDoorManagementClient.networkExperimentProfiles'
      - '@azure/arm-frontdoor.FrontDoorManagementClient.policies'
      - '@azure/arm-frontdoor.FrontDoorManagementClient.preconfiguredEndpoints'
      - '@azure/arm-frontdoor.FrontDoorManagementClient.reports'
      - '@azure/arm-frontdoor.FrontDoorManagementClient.restoreLROPoller'
      - '@azure/arm-frontdoor.FrontDoorManagementClient.rulesEngines'
      - '@azure/arm-frontdoor.FrontDoorManagementClient.sendLongRunningRequest'
      - '@azure/arm-frontdoor.FrontDoorManagementClient.sendLRORequest'
      - '@azure/arm-frontdoor.FrontDoorManagementClient.sendOperationRequest'
      - '@azure/arm-frontdoor.FrontDoorManagementClient.sendRequest'
      - '@azure/arm-frontdoor.FrontDoorManagementClient.subscriptionId'
    langs:
      - typeScript
    type: class
    summary: ''
    extends:
      name: '@azure/arm-frontdoor.FrontDoorManagementClientContext'
    package: '@azure/arm-frontdoor'
  - uid: '@azure/arm-frontdoor.FrontDoorManagementClient.acceptLanguage'
    name: acceptLanguage
    fullName: acceptLanguage
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'acceptLanguage: string'
      return:
        type:
          - string
        description: ''
    package: '@azure/arm-frontdoor'
  - uid: '@azure/arm-frontdoor.FrontDoorManagementClient.beginLongRunningRequest'
    name: >-
      beginLongRunningRequest(RequestPrepareOptions | WebResource,
      RequestOptionsBase)
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      Send the initial request of a LRO (long running operation) and get back an

      HttpLongRunningOperationResponse that provides methods for polling the LRO
      and checking if the

      LRO is finished.
    syntax:
      content: >-
        function beginLongRunningRequest(request: RequestPrepareOptions |
        WebResource, options?: RequestOptionsBase)
      parameters:
        - id: request
          type:
            - RequestPrepareOptions | WebResource
          description: The request object
        - id: options
          type:
            - RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<LROPoller>
        description: |-
          The HttpLongRunningOperationResponse
          that provides methods for interacting with the LRO.
    package: '@azure/arm-frontdoor'
  - uid: >-
      @azure/arm-frontdoor.FrontDoorManagementClient.checkFrontDoorNameAvailability
    name: >-
      checkFrontDoorNameAvailability(CheckNameAvailabilityInput,
      msRest.RequestOptionsBase)
    children: []
    type: method
    langs:
      - typeScript
    summary: Check the availability of a Front Door resource name.
    syntax:
      content: >-
        function
        checkFrontDoorNameAvailability(checkFrontDoorNameAvailabilityInput:
        CheckNameAvailabilityInput, options?: msRest.RequestOptionsBase)
      parameters:
        - id: checkFrontDoorNameAvailabilityInput
          type:
            - '@azure/arm-frontdoor.CheckNameAvailabilityInput'
          description: Input to check.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.CheckFrontDoorNameAvailabilityResponse>
        description: Promise<Models.CheckFrontDoorNameAvailabilityResponse>
    package: '@azure/arm-frontdoor'
  - uid: >-
      @azure/arm-frontdoor.FrontDoorManagementClient.checkFrontDoorNameAvailability_2
    name: >-
      checkFrontDoorNameAvailability(CheckNameAvailabilityInput,
      RequestOptionsBase, ServiceCallback<CheckNameAvailabilityOutput>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function
        checkFrontDoorNameAvailability(checkFrontDoorNameAvailabilityInput:
        CheckNameAvailabilityInput, options: RequestOptionsBase, callback:
        ServiceCallback<CheckNameAvailabilityOutput>)
      parameters:
        - id: checkFrontDoorNameAvailabilityInput
          type:
            - '@azure/arm-frontdoor.CheckNameAvailabilityInput'
          description: Input to check.
        - id: options
          type:
            - RequestOptionsBase
          description: The optional parameters
        - id: callback
          type:
            - ServiceCallback<@azure/arm-frontdoor.CheckNameAvailabilityOutput>
          description: |
            The callback
    package: '@azure/arm-frontdoor'
  - uid: >-
      @azure/arm-frontdoor.FrontDoorManagementClient.checkFrontDoorNameAvailability_1
    name: >-
      checkFrontDoorNameAvailability(CheckNameAvailabilityInput,
      ServiceCallback<CheckNameAvailabilityOutput>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function
        checkFrontDoorNameAvailability(checkFrontDoorNameAvailabilityInput:
        CheckNameAvailabilityInput, callback:
        ServiceCallback<CheckNameAvailabilityOutput>)
      parameters:
        - id: checkFrontDoorNameAvailabilityInput
          type:
            - '@azure/arm-frontdoor.CheckNameAvailabilityInput'
          description: Input to check.
        - id: callback
          type:
            - ServiceCallback<@azure/arm-frontdoor.CheckNameAvailabilityOutput>
          description: |
            The callback
    package: '@azure/arm-frontdoor'
  - uid: >-
      @azure/arm-frontdoor.FrontDoorManagementClient.checkFrontDoorNameAvailabilityWithSubscription
    name: >-
      checkFrontDoorNameAvailabilityWithSubscription(CheckNameAvailabilityInput,
      msRest.RequestOptionsBase)
    children: []
    type: method
    langs:
      - typeScript
    summary: Check the availability of a Front Door subdomain.
    syntax:
      content: >-
        function
        checkFrontDoorNameAvailabilityWithSubscription(checkFrontDoorNameAvailabilityInput:
        CheckNameAvailabilityInput, options?: msRest.RequestOptionsBase)
      parameters:
        - id: checkFrontDoorNameAvailabilityInput
          type:
            - '@azure/arm-frontdoor.CheckNameAvailabilityInput'
          description: Input to check.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - >-
            Promise<Models.CheckFrontDoorNameAvailabilityWithSubscriptionResponse>
        description: Promise<Models.CheckFrontDoorNameAvailabilityWithSubscriptionResponse>
    package: '@azure/arm-frontdoor'
  - uid: >-
      @azure/arm-frontdoor.FrontDoorManagementClient.checkFrontDoorNameAvailabilityWithSubscription_2
    name: >-
      checkFrontDoorNameAvailabilityWithSubscription(CheckNameAvailabilityInput,
      RequestOptionsBase, ServiceCallback<CheckNameAvailabilityOutput>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function
        checkFrontDoorNameAvailabilityWithSubscription(checkFrontDoorNameAvailabilityInput:
        CheckNameAvailabilityInput, options: RequestOptionsBase, callback:
        ServiceCallback<CheckNameAvailabilityOutput>)
      parameters:
        - id: checkFrontDoorNameAvailabilityInput
          type:
            - '@azure/arm-frontdoor.CheckNameAvailabilityInput'
          description: Input to check.
        - id: options
          type:
            - RequestOptionsBase
          description: The optional parameters
        - id: callback
          type:
            - ServiceCallback<@azure/arm-frontdoor.CheckNameAvailabilityOutput>
          description: |
            The callback
    package: '@azure/arm-frontdoor'
  - uid: >-
      @azure/arm-frontdoor.FrontDoorManagementClient.checkFrontDoorNameAvailabilityWithSubscription_1
    name: >-
      checkFrontDoorNameAvailabilityWithSubscription(CheckNameAvailabilityInput,
      ServiceCallback<CheckNameAvailabilityOutput>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function
        checkFrontDoorNameAvailabilityWithSubscription(checkFrontDoorNameAvailabilityInput:
        CheckNameAvailabilityInput, callback:
        ServiceCallback<CheckNameAvailabilityOutput>)
      parameters:
        - id: checkFrontDoorNameAvailabilityInput
          type:
            - '@azure/arm-frontdoor.CheckNameAvailabilityInput'
          description: Input to check.
        - id: callback
          type:
            - ServiceCallback<@azure/arm-frontdoor.CheckNameAvailabilityOutput>
          description: |
            The callback
    package: '@azure/arm-frontdoor'
  - uid: '@azure/arm-frontdoor.FrontDoorManagementClient.credentials'
    name: credentials
    fullName: credentials
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'credentials: ServiceClientCredentials'
      return:
        type:
          - ServiceClientCredentials
        description: ''
    package: '@azure/arm-frontdoor'
  - uid: '@azure/arm-frontdoor.FrontDoorManagementClient.endpoints'
    name: endpoints
    fullName: endpoints
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'endpoints: Endpoints'
      return:
        type:
          - '@azure/arm-frontdoor.Endpoints'
        description: ''
    package: '@azure/arm-frontdoor'
  - uid: '@azure/arm-frontdoor.FrontDoorManagementClient.experiments'
    name: experiments
    fullName: experiments
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'experiments: Experiments'
      return:
        type:
          - '@azure/arm-frontdoor.Experiments'
        description: ''
    package: '@azure/arm-frontdoor'
  - uid: '@azure/arm-frontdoor.FrontDoorManagementClient.constructor'
    name: >-
      FrontDoorManagementClient(ServiceClientCredentials, string,
      Models.FrontDoorManagementClientOptions)
    children: []
    type: constructor
    langs:
      - typeScript
    summary: Initializes a new instance of the FrontDoorManagementClient class.
    syntax:
      content: >-
        new FrontDoorManagementClient(credentials: ServiceClientCredentials,
        subscriptionId: string, options?:
        Models.FrontDoorManagementClientOptions)
      parameters:
        - id: credentials
          type:
            - ServiceClientCredentials
          description: Credentials needed for the client to connect to Azure.
        - id: subscriptionId
          type:
            - string
          description: >-
            The subscription credentials which uniquely identify the Microsoft
            Azure

            subscription. The subscription ID forms part of the URI for every
            service call.
        - id: options
          type:
            - Models.FrontDoorManagementClientOptions
          description: ''
          optional: true
    package: '@azure/arm-frontdoor'
  - uid: '@azure/arm-frontdoor.FrontDoorManagementClient.frontDoors'
    name: frontDoors
    fullName: frontDoors
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'frontDoors: FrontDoors'
      return:
        type:
          - '@azure/arm-frontdoor.FrontDoors'
        description: ''
    package: '@azure/arm-frontdoor'
  - uid: '@azure/arm-frontdoor.FrontDoorManagementClient.frontendEndpoints'
    name: frontendEndpoints
    fullName: frontendEndpoints
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'frontendEndpoints: FrontendEndpoints'
      return:
        type:
          - '@azure/arm-frontdoor.FrontendEndpoints'
        description: ''
    package: '@azure/arm-frontdoor'
  - uid: >-
      @azure/arm-frontdoor.FrontDoorManagementClient.longRunningOperationRetryTimeout
    name: longRunningOperationRetryTimeout
    fullName: longRunningOperationRetryTimeout
    children: []
    langs:
      - typeScript
    type: property
    summary: >-
      The retry timeout in seconds for Long Running Operations. Default value is
      30.
    optional: true
    syntax:
      content: 'longRunningOperationRetryTimeout?: undefined | number'
      return:
        type:
          - undefined | number
        description: ''
    package: '@azure/arm-frontdoor'
  - uid: '@azure/arm-frontdoor.FrontDoorManagementClient.managedRuleSets'
    name: managedRuleSets
    fullName: managedRuleSets
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'managedRuleSets: ManagedRuleSets'
      return:
        type:
          - '@azure/arm-frontdoor.ManagedRuleSets'
        description: ''
    package: '@azure/arm-frontdoor'
  - uid: '@azure/arm-frontdoor.FrontDoorManagementClient.networkExperimentProfiles'
    name: networkExperimentProfiles
    fullName: networkExperimentProfiles
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'networkExperimentProfiles: NetworkExperimentProfiles'
      return:
        type:
          - '@azure/arm-frontdoor.NetworkExperimentProfiles'
        description: ''
    package: '@azure/arm-frontdoor'
  - uid: '@azure/arm-frontdoor.FrontDoorManagementClient.policies'
    name: policies
    fullName: policies
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'policies: Policies'
      return:
        type:
          - '@azure/arm-frontdoor.Policies'
        description: ''
    package: '@azure/arm-frontdoor'
  - uid: '@azure/arm-frontdoor.FrontDoorManagementClient.preconfiguredEndpoints'
    name: preconfiguredEndpoints
    fullName: preconfiguredEndpoints
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'preconfiguredEndpoints: PreconfiguredEndpoints'
      return:
        type:
          - '@azure/arm-frontdoor.PreconfiguredEndpoints'
        description: ''
    package: '@azure/arm-frontdoor'
  - uid: '@azure/arm-frontdoor.FrontDoorManagementClient.reports'
    name: reports
    fullName: reports
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'reports: Reports'
      return:
        type:
          - '@azure/arm-frontdoor.Reports'
        description: ''
    package: '@azure/arm-frontdoor'
  - uid: '@azure/arm-frontdoor.FrontDoorManagementClient.restoreLROPoller'
    name: restoreLROPoller(LROPollState)
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      Restore an LROPoller from the provided LROPollState. This method can be
      used to recreate an

      LROPoller on a different process or machine.
    syntax:
      content: 'function restoreLROPoller(lroPollState: LROPollState)'
      parameters:
        - id: lroPollState
          type:
            - LROPollState
          description: ''
      return:
        type:
          - LROPoller
        description: ''
    package: '@azure/arm-frontdoor'
  - uid: '@azure/arm-frontdoor.FrontDoorManagementClient.rulesEngines'
    name: rulesEngines
    fullName: rulesEngines
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'rulesEngines: RulesEngines'
      return:
        type:
          - '@azure/arm-frontdoor.RulesEngines'
        description: ''
    package: '@azure/arm-frontdoor'
  - uid: '@azure/arm-frontdoor.FrontDoorManagementClient.sendLongRunningRequest'
    name: >-
      sendLongRunningRequest(RequestPrepareOptions | WebResource,
      RequestOptionsBase)
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      Provides a mechanism to make a request that will poll and provide the
      final result.
    syntax:
      content: >-
        function sendLongRunningRequest(request: RequestPrepareOptions |
        WebResource, options?: RequestOptionsBase)
      parameters:
        - id: request
          type:
            - RequestPrepareOptions | WebResource
          description: The request object
        - id: options
          type:
            - RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<HttpOperationResponse>
        description: >-
          The HttpOperationResponse containing the final polling request,
          response and the responseBody.
    package: '@azure/arm-frontdoor'
  - uid: '@azure/arm-frontdoor.FrontDoorManagementClient.sendLRORequest'
    name: 'sendLRORequest(OperationArguments, OperationSpec, RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      Send the initial request of a LRO (long running operation) and get back an

      LROPoller that provides methods for polling the LRO and checking if the
      LRO is finished.
    syntax:
      content: >-
        function sendLRORequest(operationArguments: OperationArguments,
        operationSpec: OperationSpec, options?: RequestOptionsBase)
      parameters:
        - id: operationArguments
          type:
            - OperationArguments
          description: The arguments to the operation.
        - id: operationSpec
          type:
            - OperationSpec
          description: The specification for the operation.
        - id: options
          type:
            - RequestOptionsBase
          description: Additional options to be sent while making the request.
          optional: true
      return:
        type:
          - Promise<LROPoller>
        description: >-
          The LROPoller object that provides methods for interacting with the
          LRO.
    package: '@azure/arm-frontdoor'
  - uid: '@azure/arm-frontdoor.FrontDoorManagementClient.sendOperationRequest'
    name: >-
      sendOperationRequest(OperationArguments, OperationSpec,
      ServiceCallback<any>)
    children: []
    type: method
    langs:
      - typeScript
    summary: Send an HTTP request that is populated using the provided OperationSpec.
    syntax:
      content: >-
        function sendOperationRequest(operationArguments: OperationArguments,
        operationSpec: OperationSpec, callback?: ServiceCallback<any>)
      parameters:
        - id: operationArguments
          type:
            - OperationArguments
          description: >-
            The arguments that the HTTP request's templated values will be
            populated from.
        - id: operationSpec
          type:
            - OperationSpec
          description: The OperationSpec to use to populate the httpRequest.
        - id: callback
          type:
            - ServiceCallback<any>
          description: |
            The callback to call when the response is received.
          optional: true
      return:
        type:
          - Promise<RestResponse>
        description: ''
    package: '@azure/arm-frontdoor'
  - uid: '@azure/arm-frontdoor.FrontDoorManagementClient.sendRequest'
    name: sendRequest(RequestPrepareOptions | WebResourceLike)
    children: []
    type: method
    langs:
      - typeScript
    summary: Send the provided httpRequest.
    syntax:
      content: 'function sendRequest(options: RequestPrepareOptions | WebResourceLike)'
      parameters:
        - id: options
          type:
            - RequestPrepareOptions | WebResourceLike
          description: ''
      return:
        type:
          - Promise<HttpOperationResponse>
        description: ''
    package: '@azure/arm-frontdoor'
  - uid: '@azure/arm-frontdoor.FrontDoorManagementClient.subscriptionId'
    name: subscriptionId
    fullName: subscriptionId
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'subscriptionId: string'
      return:
        type:
          - string
        description: ''
    package: '@azure/arm-frontdoor'
references:
  - uid: '@azure/arm-frontdoor.FrontDoorManagementClientContext'
    name: FrontDoorManagementClientContext
    spec.typeScript:
      - name: FrontDoorManagementClientContext
        fullName: FrontDoorManagementClientContext
        uid: '@azure/arm-frontdoor.FrontDoorManagementClientContext'
  - uid: '@azure/arm-frontdoor.Endpoints'
    name: Endpoints
    spec.typeScript:
      - name: Endpoints
        fullName: Endpoints
        uid: '@azure/arm-frontdoor.Endpoints'
  - uid: '@azure/arm-frontdoor.Experiments'
    name: Experiments
    spec.typeScript:
      - name: Experiments
        fullName: Experiments
        uid: '@azure/arm-frontdoor.Experiments'
  - uid: '@azure/arm-frontdoor.FrontDoors'
    name: FrontDoors
    spec.typeScript:
      - name: FrontDoors
        fullName: FrontDoors
        uid: '@azure/arm-frontdoor.FrontDoors'
  - uid: '@azure/arm-frontdoor.FrontendEndpoints'
    name: FrontendEndpoints
    spec.typeScript:
      - name: FrontendEndpoints
        fullName: FrontendEndpoints
        uid: '@azure/arm-frontdoor.FrontendEndpoints'
  - uid: '@azure/arm-frontdoor.ManagedRuleSets'
    name: ManagedRuleSets
    spec.typeScript:
      - name: ManagedRuleSets
        fullName: ManagedRuleSets
        uid: '@azure/arm-frontdoor.ManagedRuleSets'
  - uid: '@azure/arm-frontdoor.NetworkExperimentProfiles'
    name: NetworkExperimentProfiles
    spec.typeScript:
      - name: NetworkExperimentProfiles
        fullName: NetworkExperimentProfiles
        uid: '@azure/arm-frontdoor.NetworkExperimentProfiles'
  - uid: '@azure/arm-frontdoor.Policies'
    name: Policies
    spec.typeScript:
      - name: Policies
        fullName: Policies
        uid: '@azure/arm-frontdoor.Policies'
  - uid: '@azure/arm-frontdoor.PreconfiguredEndpoints'
    name: PreconfiguredEndpoints
    spec.typeScript:
      - name: PreconfiguredEndpoints
        fullName: PreconfiguredEndpoints
        uid: '@azure/arm-frontdoor.PreconfiguredEndpoints'
  - uid: '@azure/arm-frontdoor.Reports'
    name: Reports
    spec.typeScript:
      - name: Reports
        fullName: Reports
        uid: '@azure/arm-frontdoor.Reports'
  - uid: '@azure/arm-frontdoor.RulesEngines'
    name: RulesEngines
    spec.typeScript:
      - name: RulesEngines
        fullName: RulesEngines
        uid: '@azure/arm-frontdoor.RulesEngines'
  - uid: '@azure/arm-frontdoor.CheckNameAvailabilityInput'
    name: CheckNameAvailabilityInput
    spec.typeScript:
      - name: CheckNameAvailabilityInput
        fullName: CheckNameAvailabilityInput
        uid: '@azure/arm-frontdoor.CheckNameAvailabilityInput'
  - uid: ServiceCallback<@azure/arm-frontdoor.CheckNameAvailabilityOutput>
    name: CheckNameAvailabilityOutput>
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: CheckNameAvailabilityOutput
        fullName: CheckNameAvailabilityOutput
        uid: '@azure/arm-frontdoor.CheckNameAvailabilityOutput'
      - name: '>'
        fullName: '>'
