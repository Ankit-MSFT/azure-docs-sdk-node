### YamlMime:UniversalReference
items:
  - uid: '@azure/arm-apimanagement.Gateway'
    name: Gateway
    fullName: Gateway
    children:
      - '@azure/arm-apimanagement.Gateway.createOrUpdate_2'
      - '@azure/arm-apimanagement.Gateway.createOrUpdate'
      - '@azure/arm-apimanagement.Gateway.createOrUpdate_1'
      - '@azure/arm-apimanagement.Gateway.deleteMethod'
      - '@azure/arm-apimanagement.Gateway.deleteMethod_2'
      - '@azure/arm-apimanagement.Gateway.deleteMethod_1'
      - '@azure/arm-apimanagement.Gateway.constructor'
      - '@azure/arm-apimanagement.Gateway.generateToken'
      - '@azure/arm-apimanagement.Gateway.generateToken_2'
      - '@azure/arm-apimanagement.Gateway.generateToken_1'
      - '@azure/arm-apimanagement.Gateway.get'
      - '@azure/arm-apimanagement.Gateway.get_2'
      - '@azure/arm-apimanagement.Gateway.get_1'
      - '@azure/arm-apimanagement.Gateway.getEntityTag'
      - '@azure/arm-apimanagement.Gateway.getEntityTag_2'
      - '@azure/arm-apimanagement.Gateway.getEntityTag_1'
      - '@azure/arm-apimanagement.Gateway.listByService_2'
      - '@azure/arm-apimanagement.Gateway.listByService'
      - '@azure/arm-apimanagement.Gateway.listByService_1'
      - '@azure/arm-apimanagement.Gateway.listByServiceNext'
      - '@azure/arm-apimanagement.Gateway.listByServiceNext_2'
      - '@azure/arm-apimanagement.Gateway.listByServiceNext_1'
      - '@azure/arm-apimanagement.Gateway.listKeys'
      - '@azure/arm-apimanagement.Gateway.listKeys_2'
      - '@azure/arm-apimanagement.Gateway.listKeys_1'
      - '@azure/arm-apimanagement.Gateway.regenerateKey'
      - '@azure/arm-apimanagement.Gateway.regenerateKey_2'
      - '@azure/arm-apimanagement.Gateway.regenerateKey_1'
      - '@azure/arm-apimanagement.Gateway.update'
      - '@azure/arm-apimanagement.Gateway.update_2'
      - '@azure/arm-apimanagement.Gateway.update_1'
    langs:
      - typeScript
    type: class
    summary: Class representing a Gateway.
    package: '@azure/arm-apimanagement'
  - uid: '@azure/arm-apimanagement.Gateway.createOrUpdate_2'
    name: >-
      createOrUpdate(string, string, string, GatewayContract,
      GatewayCreateOrUpdateOptionalParams, ServiceCallback<GatewayContract>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function createOrUpdate(resourceGroupName: string, serviceName: string,
        gatewayId: string, parameters: GatewayContract, options:
        GatewayCreateOrUpdateOptionalParams, callback:
        ServiceCallback<GatewayContract>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: The name of the resource group.
        - id: serviceName
          type:
            - string
          description: The name of the API Management service.
        - id: gatewayId
          type:
            - string
          description: >-
            Gateway entity identifier. Must be unique in the current API
            Management service

            instance. Must not have value 'managed'
        - id: parameters
          type:
            - '@azure/arm-apimanagement.GatewayContract'
          description: ''
        - id: options
          type:
            - '@azure/arm-apimanagement.GatewayCreateOrUpdateOptionalParams'
          description: The optional parameters
        - id: callback
          type:
            - ServiceCallback<@azure/arm-apimanagement.GatewayContract>
          description: |
            The callback
    package: '@azure/arm-apimanagement'
  - uid: '@azure/arm-apimanagement.Gateway.createOrUpdate'
    name: >-
      createOrUpdate(string, string, string, GatewayContract,
      Models.GatewayCreateOrUpdateOptionalParams)
    children: []
    type: method
    langs:
      - typeScript
    summary: Creates or updates a Gateway to be used in Api Management instance.
    syntax:
      content: >-
        function createOrUpdate(resourceGroupName: string, serviceName: string,
        gatewayId: string, parameters: GatewayContract, options?:
        Models.GatewayCreateOrUpdateOptionalParams)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: The name of the resource group.
        - id: serviceName
          type:
            - string
          description: The name of the API Management service.
        - id: gatewayId
          type:
            - string
          description: >-
            Gateway entity identifier. Must be unique in the current API
            Management service

            instance. Must not have value 'managed'
        - id: parameters
          type:
            - '@azure/arm-apimanagement.GatewayContract'
          description: ''
        - id: options
          type:
            - Models.GatewayCreateOrUpdateOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.GatewayCreateOrUpdateResponse>
        description: Promise<Models.GatewayCreateOrUpdateResponse>
    package: '@azure/arm-apimanagement'
  - uid: '@azure/arm-apimanagement.Gateway.createOrUpdate_1'
    name: >-
      createOrUpdate(string, string, string, GatewayContract,
      ServiceCallback<GatewayContract>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function createOrUpdate(resourceGroupName: string, serviceName: string,
        gatewayId: string, parameters: GatewayContract, callback:
        ServiceCallback<GatewayContract>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: The name of the resource group.
        - id: serviceName
          type:
            - string
          description: The name of the API Management service.
        - id: gatewayId
          type:
            - string
          description: >-
            Gateway entity identifier. Must be unique in the current API
            Management service

            instance. Must not have value 'managed'
        - id: parameters
          type:
            - '@azure/arm-apimanagement.GatewayContract'
          description: ''
        - id: callback
          type:
            - ServiceCallback<@azure/arm-apimanagement.GatewayContract>
          description: |
            The callback
    package: '@azure/arm-apimanagement'
  - uid: '@azure/arm-apimanagement.Gateway.deleteMethod'
    name: 'deleteMethod(string, string, string, string, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Deletes specific Gateway.
    syntax:
      content: >-
        function deleteMethod(resourceGroupName: string, serviceName: string,
        gatewayId: string, ifMatch: string, options?: msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: The name of the resource group.
        - id: serviceName
          type:
            - string
          description: The name of the API Management service.
        - id: gatewayId
          type:
            - string
          description: >-
            Gateway entity identifier. Must be unique in the current API
            Management service

            instance. Must not have value 'managed'
        - id: ifMatch
          type:
            - string
          description: >-
            ETag of the Entity. ETag should match the current entity state from
            the header

            response of the GET request or it should be * for unconditional
            update.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<RestResponse>
        description: Promise<msRest.RestResponse>
    package: '@azure/arm-apimanagement'
  - uid: '@azure/arm-apimanagement.Gateway.deleteMethod_2'
    name: >-
      deleteMethod(string, string, string, string, RequestOptionsBase,
      ServiceCallback<void>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function deleteMethod(resourceGroupName: string, serviceName: string,
        gatewayId: string, ifMatch: string, options: RequestOptionsBase,
        callback: ServiceCallback<void>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: The name of the resource group.
        - id: serviceName
          type:
            - string
          description: The name of the API Management service.
        - id: gatewayId
          type:
            - string
          description: >-
            Gateway entity identifier. Must be unique in the current API
            Management service

            instance. Must not have value 'managed'
        - id: ifMatch
          type:
            - string
          description: >-
            ETag of the Entity. ETag should match the current entity state from
            the header

            response of the GET request or it should be * for unconditional
            update.
        - id: options
          type:
            - RequestOptionsBase
          description: The optional parameters
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            The callback
    package: '@azure/arm-apimanagement'
  - uid: '@azure/arm-apimanagement.Gateway.deleteMethod_1'
    name: 'deleteMethod(string, string, string, string, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function deleteMethod(resourceGroupName: string, serviceName: string,
        gatewayId: string, ifMatch: string, callback: ServiceCallback<void>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: The name of the resource group.
        - id: serviceName
          type:
            - string
          description: The name of the API Management service.
        - id: gatewayId
          type:
            - string
          description: >-
            Gateway entity identifier. Must be unique in the current API
            Management service

            instance. Must not have value 'managed'
        - id: ifMatch
          type:
            - string
          description: >-
            ETag of the Entity. ETag should match the current entity state from
            the header

            response of the GET request or it should be * for unconditional
            update.
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            The callback
    package: '@azure/arm-apimanagement'
  - uid: '@azure/arm-apimanagement.Gateway.constructor'
    name: Gateway(ApiManagementClientContext)
    children: []
    type: constructor
    langs:
      - typeScript
    summary: Create a Gateway.
    syntax:
      content: 'new Gateway(client: ApiManagementClientContext)'
      parameters:
        - id: client
          type:
            - '@azure/arm-apimanagement.ApiManagementClientContext'
          description: |
            Reference to the service client.
    package: '@azure/arm-apimanagement'
  - uid: '@azure/arm-apimanagement.Gateway.generateToken'
    name: >-
      generateToken(string, string, string, GatewayTokenRequestContract,
      msRest.RequestOptionsBase)
    children: []
    type: method
    langs:
      - typeScript
    summary: Gets the Shared Access Authorization Token for the gateway.
    syntax:
      content: >-
        function generateToken(resourceGroupName: string, serviceName: string,
        gatewayId: string, parameters: GatewayTokenRequestContract, options?:
        msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: The name of the resource group.
        - id: serviceName
          type:
            - string
          description: The name of the API Management service.
        - id: gatewayId
          type:
            - string
          description: >-
            Gateway entity identifier. Must be unique in the current API
            Management service

            instance. Must not have value 'managed'
        - id: parameters
          type:
            - '@azure/arm-apimanagement.GatewayTokenRequestContract'
          description: ''
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.GatewayGenerateTokenResponse>
        description: Promise<Models.GatewayGenerateTokenResponse>
    package: '@azure/arm-apimanagement'
  - uid: '@azure/arm-apimanagement.Gateway.generateToken_2'
    name: >-
      generateToken(string, string, string, GatewayTokenRequestContract,
      RequestOptionsBase, ServiceCallback<GatewayTokenContract>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function generateToken(resourceGroupName: string, serviceName: string,
        gatewayId: string, parameters: GatewayTokenRequestContract, options:
        RequestOptionsBase, callback: ServiceCallback<GatewayTokenContract>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: The name of the resource group.
        - id: serviceName
          type:
            - string
          description: The name of the API Management service.
        - id: gatewayId
          type:
            - string
          description: >-
            Gateway entity identifier. Must be unique in the current API
            Management service

            instance. Must not have value 'managed'
        - id: parameters
          type:
            - '@azure/arm-apimanagement.GatewayTokenRequestContract'
          description: ''
        - id: options
          type:
            - RequestOptionsBase
          description: The optional parameters
        - id: callback
          type:
            - ServiceCallback<@azure/arm-apimanagement.GatewayTokenContract>
          description: |
            The callback
    package: '@azure/arm-apimanagement'
  - uid: '@azure/arm-apimanagement.Gateway.generateToken_1'
    name: >-
      generateToken(string, string, string, GatewayTokenRequestContract,
      ServiceCallback<GatewayTokenContract>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function generateToken(resourceGroupName: string, serviceName: string,
        gatewayId: string, parameters: GatewayTokenRequestContract, callback:
        ServiceCallback<GatewayTokenContract>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: The name of the resource group.
        - id: serviceName
          type:
            - string
          description: The name of the API Management service.
        - id: gatewayId
          type:
            - string
          description: >-
            Gateway entity identifier. Must be unique in the current API
            Management service

            instance. Must not have value 'managed'
        - id: parameters
          type:
            - '@azure/arm-apimanagement.GatewayTokenRequestContract'
          description: ''
        - id: callback
          type:
            - ServiceCallback<@azure/arm-apimanagement.GatewayTokenContract>
          description: |
            The callback
    package: '@azure/arm-apimanagement'
  - uid: '@azure/arm-apimanagement.Gateway.get'
    name: 'get(string, string, string, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Gets the details of the Gateway specified by its identifier.
    syntax:
      content: >-
        function get(resourceGroupName: string, serviceName: string, gatewayId:
        string, options?: msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: The name of the resource group.
        - id: serviceName
          type:
            - string
          description: The name of the API Management service.
        - id: gatewayId
          type:
            - string
          description: >-
            Gateway entity identifier. Must be unique in the current API
            Management service

            instance. Must not have value 'managed'
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.GatewayGetResponse>
        description: Promise<Models.GatewayGetResponse>
    package: '@azure/arm-apimanagement'
  - uid: '@azure/arm-apimanagement.Gateway.get_2'
    name: >-
      get(string, string, string, RequestOptionsBase,
      ServiceCallback<GatewayContract>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function get(resourceGroupName: string, serviceName: string, gatewayId:
        string, options: RequestOptionsBase, callback:
        ServiceCallback<GatewayContract>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: The name of the resource group.
        - id: serviceName
          type:
            - string
          description: The name of the API Management service.
        - id: gatewayId
          type:
            - string
          description: >-
            Gateway entity identifier. Must be unique in the current API
            Management service

            instance. Must not have value 'managed'
        - id: options
          type:
            - RequestOptionsBase
          description: The optional parameters
        - id: callback
          type:
            - ServiceCallback<@azure/arm-apimanagement.GatewayContract>
          description: |
            The callback
    package: '@azure/arm-apimanagement'
  - uid: '@azure/arm-apimanagement.Gateway.get_1'
    name: 'get(string, string, string, ServiceCallback<GatewayContract>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function get(resourceGroupName: string, serviceName: string, gatewayId:
        string, callback: ServiceCallback<GatewayContract>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: The name of the resource group.
        - id: serviceName
          type:
            - string
          description: The name of the API Management service.
        - id: gatewayId
          type:
            - string
          description: >-
            Gateway entity identifier. Must be unique in the current API
            Management service

            instance. Must not have value 'managed'
        - id: callback
          type:
            - ServiceCallback<@azure/arm-apimanagement.GatewayContract>
          description: |
            The callback
    package: '@azure/arm-apimanagement'
  - uid: '@azure/arm-apimanagement.Gateway.getEntityTag'
    name: 'getEntityTag(string, string, string, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      Gets the entity state (Etag) version of the Gateway specified by its
      identifier.
    syntax:
      content: >-
        function getEntityTag(resourceGroupName: string, serviceName: string,
        gatewayId: string, options?: msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: The name of the resource group.
        - id: serviceName
          type:
            - string
          description: The name of the API Management service.
        - id: gatewayId
          type:
            - string
          description: >-
            Gateway entity identifier. Must be unique in the current API
            Management service

            instance. Must not have value 'managed'
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.GatewayGetEntityTagResponse>
        description: Promise<Models.GatewayGetEntityTagResponse>
    package: '@azure/arm-apimanagement'
  - uid: '@azure/arm-apimanagement.Gateway.getEntityTag_2'
    name: >-
      getEntityTag(string, string, string, RequestOptionsBase,
      ServiceCallback<void>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function getEntityTag(resourceGroupName: string, serviceName: string,
        gatewayId: string, options: RequestOptionsBase, callback:
        ServiceCallback<void>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: The name of the resource group.
        - id: serviceName
          type:
            - string
          description: The name of the API Management service.
        - id: gatewayId
          type:
            - string
          description: >-
            Gateway entity identifier. Must be unique in the current API
            Management service

            instance. Must not have value 'managed'
        - id: options
          type:
            - RequestOptionsBase
          description: The optional parameters
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            The callback
    package: '@azure/arm-apimanagement'
  - uid: '@azure/arm-apimanagement.Gateway.getEntityTag_1'
    name: 'getEntityTag(string, string, string, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function getEntityTag(resourceGroupName: string, serviceName: string,
        gatewayId: string, callback: ServiceCallback<void>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: The name of the resource group.
        - id: serviceName
          type:
            - string
          description: The name of the API Management service.
        - id: gatewayId
          type:
            - string
          description: >-
            Gateway entity identifier. Must be unique in the current API
            Management service

            instance. Must not have value 'managed'
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            The callback
    package: '@azure/arm-apimanagement'
  - uid: '@azure/arm-apimanagement.Gateway.listByService_2'
    name: >-
      listByService(string, string, GatewayListByServiceOptionalParams,
      ServiceCallback<GatewayCollection>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function listByService(resourceGroupName: string, serviceName: string,
        options: GatewayListByServiceOptionalParams, callback:
        ServiceCallback<GatewayCollection>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: The name of the resource group.
        - id: serviceName
          type:
            - string
          description: The name of the API Management service.
        - id: options
          type:
            - '@azure/arm-apimanagement.GatewayListByServiceOptionalParams'
          description: The optional parameters
        - id: callback
          type:
            - ServiceCallback<@azure/arm-apimanagement.GatewayCollection>
          description: |
            The callback
    package: '@azure/arm-apimanagement'
  - uid: '@azure/arm-apimanagement.Gateway.listByService'
    name: 'listByService(string, string, Models.GatewayListByServiceOptionalParams)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Lists a collection of gateways registered with service instance.
    syntax:
      content: >-
        function listByService(resourceGroupName: string, serviceName: string,
        options?: Models.GatewayListByServiceOptionalParams)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: The name of the resource group.
        - id: serviceName
          type:
            - string
          description: The name of the API Management service.
        - id: options
          type:
            - Models.GatewayListByServiceOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.GatewayListByServiceResponse>
        description: Promise<Models.GatewayListByServiceResponse>
    package: '@azure/arm-apimanagement'
  - uid: '@azure/arm-apimanagement.Gateway.listByService_1'
    name: 'listByService(string, string, ServiceCallback<GatewayCollection>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function listByService(resourceGroupName: string, serviceName: string,
        callback: ServiceCallback<GatewayCollection>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: The name of the resource group.
        - id: serviceName
          type:
            - string
          description: The name of the API Management service.
        - id: callback
          type:
            - ServiceCallback<@azure/arm-apimanagement.GatewayCollection>
          description: |
            The callback
    package: '@azure/arm-apimanagement'
  - uid: '@azure/arm-apimanagement.Gateway.listByServiceNext'
    name: 'listByServiceNext(string, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Lists a collection of gateways registered with service instance.
    syntax:
      content: >-
        function listByServiceNext(nextPageLink: string, options?:
        msRest.RequestOptionsBase)
      parameters:
        - id: nextPageLink
          type:
            - string
          description: The NextLink from the previous successful call to List operation.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.GatewayListByServiceNextResponse>
        description: Promise<Models.GatewayListByServiceNextResponse>
    package: '@azure/arm-apimanagement'
  - uid: '@azure/arm-apimanagement.Gateway.listByServiceNext_2'
    name: >-
      listByServiceNext(string, RequestOptionsBase,
      ServiceCallback<GatewayCollection>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function listByServiceNext(nextPageLink: string, options:
        RequestOptionsBase, callback: ServiceCallback<GatewayCollection>)
      parameters:
        - id: nextPageLink
          type:
            - string
          description: The NextLink from the previous successful call to List operation.
        - id: options
          type:
            - RequestOptionsBase
          description: The optional parameters
        - id: callback
          type:
            - ServiceCallback<@azure/arm-apimanagement.GatewayCollection>
          description: |
            The callback
    package: '@azure/arm-apimanagement'
  - uid: '@azure/arm-apimanagement.Gateway.listByServiceNext_1'
    name: 'listByServiceNext(string, ServiceCallback<GatewayCollection>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function listByServiceNext(nextPageLink: string, callback:
        ServiceCallback<GatewayCollection>)
      parameters:
        - id: nextPageLink
          type:
            - string
          description: The NextLink from the previous successful call to List operation.
        - id: callback
          type:
            - ServiceCallback<@azure/arm-apimanagement.GatewayCollection>
          description: |
            The callback
    package: '@azure/arm-apimanagement'
  - uid: '@azure/arm-apimanagement.Gateway.listKeys'
    name: 'listKeys(string, string, string, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Retrieves gateway keys.
    syntax:
      content: >-
        function listKeys(resourceGroupName: string, serviceName: string,
        gatewayId: string, options?: msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: The name of the resource group.
        - id: serviceName
          type:
            - string
          description: The name of the API Management service.
        - id: gatewayId
          type:
            - string
          description: >-
            Gateway entity identifier. Must be unique in the current API
            Management service

            instance. Must not have value 'managed'
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.GatewayListKeysResponse>
        description: Promise<Models.GatewayListKeysResponse>
    package: '@azure/arm-apimanagement'
  - uid: '@azure/arm-apimanagement.Gateway.listKeys_2'
    name: >-
      listKeys(string, string, string, RequestOptionsBase,
      ServiceCallback<GatewayKeysContract>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function listKeys(resourceGroupName: string, serviceName: string,
        gatewayId: string, options: RequestOptionsBase, callback:
        ServiceCallback<GatewayKeysContract>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: The name of the resource group.
        - id: serviceName
          type:
            - string
          description: The name of the API Management service.
        - id: gatewayId
          type:
            - string
          description: >-
            Gateway entity identifier. Must be unique in the current API
            Management service

            instance. Must not have value 'managed'
        - id: options
          type:
            - RequestOptionsBase
          description: The optional parameters
        - id: callback
          type:
            - ServiceCallback<@azure/arm-apimanagement.GatewayKeysContract>
          description: |
            The callback
    package: '@azure/arm-apimanagement'
  - uid: '@azure/arm-apimanagement.Gateway.listKeys_1'
    name: 'listKeys(string, string, string, ServiceCallback<GatewayKeysContract>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function listKeys(resourceGroupName: string, serviceName: string,
        gatewayId: string, callback: ServiceCallback<GatewayKeysContract>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: The name of the resource group.
        - id: serviceName
          type:
            - string
          description: The name of the API Management service.
        - id: gatewayId
          type:
            - string
          description: >-
            Gateway entity identifier. Must be unique in the current API
            Management service

            instance. Must not have value 'managed'
        - id: callback
          type:
            - ServiceCallback<@azure/arm-apimanagement.GatewayKeysContract>
          description: |
            The callback
    package: '@azure/arm-apimanagement'
  - uid: '@azure/arm-apimanagement.Gateway.regenerateKey'
    name: >-
      regenerateKey(string, string, string,
      GatewayKeyRegenerationRequestContract, msRest.RequestOptionsBase)
    children: []
    type: method
    langs:
      - typeScript
    summary: Regenerates specified gateway key invalidating any tokens created with it.
    syntax:
      content: >-
        function regenerateKey(resourceGroupName: string, serviceName: string,
        gatewayId: string, parameters: GatewayKeyRegenerationRequestContract,
        options?: msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: The name of the resource group.
        - id: serviceName
          type:
            - string
          description: The name of the API Management service.
        - id: gatewayId
          type:
            - string
          description: >-
            Gateway entity identifier. Must be unique in the current API
            Management service

            instance. Must not have value 'managed'
        - id: parameters
          type:
            - '@azure/arm-apimanagement.GatewayKeyRegenerationRequestContract'
          description: ''
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<RestResponse>
        description: Promise<msRest.RestResponse>
    package: '@azure/arm-apimanagement'
  - uid: '@azure/arm-apimanagement.Gateway.regenerateKey_2'
    name: >-
      regenerateKey(string, string, string,
      GatewayKeyRegenerationRequestContract, RequestOptionsBase,
      ServiceCallback<void>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function regenerateKey(resourceGroupName: string, serviceName: string,
        gatewayId: string, parameters: GatewayKeyRegenerationRequestContract,
        options: RequestOptionsBase, callback: ServiceCallback<void>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: The name of the resource group.
        - id: serviceName
          type:
            - string
          description: The name of the API Management service.
        - id: gatewayId
          type:
            - string
          description: >-
            Gateway entity identifier. Must be unique in the current API
            Management service

            instance. Must not have value 'managed'
        - id: parameters
          type:
            - '@azure/arm-apimanagement.GatewayKeyRegenerationRequestContract'
          description: ''
        - id: options
          type:
            - RequestOptionsBase
          description: The optional parameters
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            The callback
    package: '@azure/arm-apimanagement'
  - uid: '@azure/arm-apimanagement.Gateway.regenerateKey_1'
    name: >-
      regenerateKey(string, string, string,
      GatewayKeyRegenerationRequestContract, ServiceCallback<void>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function regenerateKey(resourceGroupName: string, serviceName: string,
        gatewayId: string, parameters: GatewayKeyRegenerationRequestContract,
        callback: ServiceCallback<void>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: The name of the resource group.
        - id: serviceName
          type:
            - string
          description: The name of the API Management service.
        - id: gatewayId
          type:
            - string
          description: >-
            Gateway entity identifier. Must be unique in the current API
            Management service

            instance. Must not have value 'managed'
        - id: parameters
          type:
            - '@azure/arm-apimanagement.GatewayKeyRegenerationRequestContract'
          description: ''
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            The callback
    package: '@azure/arm-apimanagement'
  - uid: '@azure/arm-apimanagement.Gateway.update'
    name: >-
      update(string, string, string, GatewayContract, string,
      msRest.RequestOptionsBase)
    children: []
    type: method
    langs:
      - typeScript
    summary: Updates the details of the gateway specified by its identifier.
    syntax:
      content: >-
        function update(resourceGroupName: string, serviceName: string,
        gatewayId: string, parameters: GatewayContract, ifMatch: string,
        options?: msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: The name of the resource group.
        - id: serviceName
          type:
            - string
          description: The name of the API Management service.
        - id: gatewayId
          type:
            - string
          description: >-
            Gateway entity identifier. Must be unique in the current API
            Management service

            instance. Must not have value 'managed'
        - id: parameters
          type:
            - '@azure/arm-apimanagement.GatewayContract'
          description: ''
        - id: ifMatch
          type:
            - string
          description: >-
            ETag of the Entity. ETag should match the current entity state from
            the header

            response of the GET request or it should be * for unconditional
            update.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<RestResponse>
        description: Promise<msRest.RestResponse>
    package: '@azure/arm-apimanagement'
  - uid: '@azure/arm-apimanagement.Gateway.update_2'
    name: >-
      update(string, string, string, GatewayContract, string,
      RequestOptionsBase, ServiceCallback<void>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function update(resourceGroupName: string, serviceName: string,
        gatewayId: string, parameters: GatewayContract, ifMatch: string,
        options: RequestOptionsBase, callback: ServiceCallback<void>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: The name of the resource group.
        - id: serviceName
          type:
            - string
          description: The name of the API Management service.
        - id: gatewayId
          type:
            - string
          description: >-
            Gateway entity identifier. Must be unique in the current API
            Management service

            instance. Must not have value 'managed'
        - id: parameters
          type:
            - '@azure/arm-apimanagement.GatewayContract'
          description: ''
        - id: ifMatch
          type:
            - string
          description: >-
            ETag of the Entity. ETag should match the current entity state from
            the header

            response of the GET request or it should be * for unconditional
            update.
        - id: options
          type:
            - RequestOptionsBase
          description: The optional parameters
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            The callback
    package: '@azure/arm-apimanagement'
  - uid: '@azure/arm-apimanagement.Gateway.update_1'
    name: >-
      update(string, string, string, GatewayContract, string,
      ServiceCallback<void>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function update(resourceGroupName: string, serviceName: string,
        gatewayId: string, parameters: GatewayContract, ifMatch: string,
        callback: ServiceCallback<void>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: The name of the resource group.
        - id: serviceName
          type:
            - string
          description: The name of the API Management service.
        - id: gatewayId
          type:
            - string
          description: >-
            Gateway entity identifier. Must be unique in the current API
            Management service

            instance. Must not have value 'managed'
        - id: parameters
          type:
            - '@azure/arm-apimanagement.GatewayContract'
          description: ''
        - id: ifMatch
          type:
            - string
          description: >-
            ETag of the Entity. ETag should match the current entity state from
            the header

            response of the GET request or it should be * for unconditional
            update.
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            The callback
    package: '@azure/arm-apimanagement'
references:
  - uid: '@azure/arm-apimanagement.ApiManagementClientContext'
    name: ApiManagementClientContext
    spec.typeScript:
      - name: ApiManagementClientContext
        fullName: ApiManagementClientContext
        uid: '@azure/arm-apimanagement.ApiManagementClientContext'
  - uid: '@azure/arm-apimanagement.GatewayContract'
    name: GatewayContract
    spec.typeScript:
      - name: GatewayContract
        fullName: GatewayContract
        uid: '@azure/arm-apimanagement.GatewayContract'
  - uid: ServiceCallback<@azure/arm-apimanagement.GatewayContract>
    name: GatewayContract>
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: GatewayContract
        fullName: GatewayContract
        uid: '@azure/arm-apimanagement.GatewayContract'
      - name: '>'
        fullName: '>'
  - uid: '@azure/arm-apimanagement.GatewayCreateOrUpdateOptionalParams'
    name: GatewayCreateOrUpdateOptionalParams
    spec.typeScript:
      - name: GatewayCreateOrUpdateOptionalParams
        fullName: GatewayCreateOrUpdateOptionalParams
        uid: '@azure/arm-apimanagement.GatewayCreateOrUpdateOptionalParams'
  - uid: '@azure/arm-apimanagement.GatewayTokenRequestContract'
    name: GatewayTokenRequestContract
    spec.typeScript:
      - name: GatewayTokenRequestContract
        fullName: GatewayTokenRequestContract
        uid: '@azure/arm-apimanagement.GatewayTokenRequestContract'
  - uid: ServiceCallback<@azure/arm-apimanagement.GatewayTokenContract>
    name: GatewayTokenContract>
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: GatewayTokenContract
        fullName: GatewayTokenContract
        uid: '@azure/arm-apimanagement.GatewayTokenContract'
      - name: '>'
        fullName: '>'
  - uid: ServiceCallback<@azure/arm-apimanagement.GatewayCollection>
    name: GatewayCollection>
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: GatewayCollection
        fullName: GatewayCollection
        uid: '@azure/arm-apimanagement.GatewayCollection'
      - name: '>'
        fullName: '>'
  - uid: '@azure/arm-apimanagement.GatewayListByServiceOptionalParams'
    name: GatewayListByServiceOptionalParams
    spec.typeScript:
      - name: GatewayListByServiceOptionalParams
        fullName: GatewayListByServiceOptionalParams
        uid: '@azure/arm-apimanagement.GatewayListByServiceOptionalParams'
  - uid: ServiceCallback<@azure/arm-apimanagement.GatewayKeysContract>
    name: GatewayKeysContract>
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: GatewayKeysContract
        fullName: GatewayKeysContract
        uid: '@azure/arm-apimanagement.GatewayKeysContract'
      - name: '>'
        fullName: '>'
  - uid: '@azure/arm-apimanagement.GatewayKeyRegenerationRequestContract'
    name: GatewayKeyRegenerationRequestContract
    spec.typeScript:
      - name: GatewayKeyRegenerationRequestContract
        fullName: GatewayKeyRegenerationRequestContract
        uid: '@azure/arm-apimanagement.GatewayKeyRegenerationRequestContract'
