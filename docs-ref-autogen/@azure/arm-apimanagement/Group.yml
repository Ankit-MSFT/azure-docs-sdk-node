### YamlMime:TSType
name: Group
uid: '@azure/arm-apimanagement.Group'
package: '@azure/arm-apimanagement'
summary: Class representing a Group.
fullName: Group
remarks: ''
isPreview: false
isDeprecated: false
type: class
constructors:
  - name: Group(ApiManagementClientContext)
    uid: '@azure/arm-apimanagement.Group.constructor'
    package: '@azure/arm-apimanagement'
    summary: Create a Group.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'new Group(client: ApiManagementClientContext)'
      parameters:
        - id: client
          type: <xref uid="@azure/arm-apimanagement.ApiManagementClientContext" />
          description: |
            Reference to the service client.
methods:
  - name: >-
      createOrUpdate(string, string, string, GroupCreateParameters,
      GroupCreateOrUpdateOptionalParams, ServiceCallback<GroupContract>)
    uid: '@azure/arm-apimanagement.Group.createOrUpdate_2'
    package: '@azure/arm-apimanagement'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function createOrUpdate(resourceGroupName: string, serviceName: string,
        groupId: string, parameters: GroupCreateParameters, options:
        GroupCreateOrUpdateOptionalParams, callback:
        ServiceCallback<GroupContract>)
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group.
        - id: serviceName
          type: string
          description: The name of the API Management service.
        - id: groupId
          type: string
          description: >-
            Group identifier. Must be unique in the current API Management
            service instance.
        - id: parameters
          type: <xref uid="@azure/arm-apimanagement.GroupCreateParameters" />
          description: Create parameters.
        - id: options
          type: >-
            <xref
            uid="@azure/arm-apimanagement.GroupCreateOrUpdateOptionalParams" />
          description: The optional parameters
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/arm-apimanagement.GroupContract" />&gt;
          description: |
            The callback
  - name: >-
      createOrUpdate(string, string, string, GroupCreateParameters,
      Models.GroupCreateOrUpdateOptionalParams)
    uid: '@azure/arm-apimanagement.Group.createOrUpdate'
    package: '@azure/arm-apimanagement'
    summary: Creates or Updates a group.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function createOrUpdate(resourceGroupName: string, serviceName: string,
        groupId: string, parameters: GroupCreateParameters, options?:
        Models.GroupCreateOrUpdateOptionalParams):
        Promise<Models.GroupCreateOrUpdateResponse>
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group.
        - id: serviceName
          type: string
          description: The name of the API Management service.
        - id: groupId
          type: string
          description: >-
            Group identifier. Must be unique in the current API Management
            service instance.
        - id: parameters
          type: <xref uid="@azure/arm-apimanagement.GroupCreateParameters" />
          description: Create parameters.
        - id: options
          type: <xref uid="Models.GroupCreateOrUpdateOptionalParams" />
          description: ''
      return:
        description: Promise<Models.GroupCreateOrUpdateResponse>
        type: Promise&lt;<xref uid="Models.GroupCreateOrUpdateResponse" />&gt;
  - name: >-
      createOrUpdate(string, string, string, GroupCreateParameters,
      ServiceCallback<GroupContract>)
    uid: '@azure/arm-apimanagement.Group.createOrUpdate_1'
    package: '@azure/arm-apimanagement'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function createOrUpdate(resourceGroupName: string, serviceName: string,
        groupId: string, parameters: GroupCreateParameters, callback:
        ServiceCallback<GroupContract>)
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group.
        - id: serviceName
          type: string
          description: The name of the API Management service.
        - id: groupId
          type: string
          description: >-
            Group identifier. Must be unique in the current API Management
            service instance.
        - id: parameters
          type: <xref uid="@azure/arm-apimanagement.GroupCreateParameters" />
          description: Create parameters.
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/arm-apimanagement.GroupContract" />&gt;
          description: |
            The callback
  - name: 'deleteMethod(string, string, string, string, msRest.RequestOptionsBase)'
    uid: '@azure/arm-apimanagement.Group.deleteMethod'
    package: '@azure/arm-apimanagement'
    summary: Deletes specific group of the API Management service instance.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function deleteMethod(resourceGroupName: string, serviceName: string,
        groupId: string, ifMatch: string, options?: msRest.RequestOptionsBase):
        Promise<RestResponse>
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group.
        - id: serviceName
          type: string
          description: The name of the API Management service.
        - id: groupId
          type: string
          description: >-
            Group identifier. Must be unique in the current API Management
            service instance.
        - id: ifMatch
          type: string
          description: >-
            ETag of the Entity. ETag should match the current entity state from
            the header

            response of the GET request or it should be * for unconditional
            update.
        - id: options
          type: <xref uid="msRest.RequestOptionsBase" />
          description: ''
      return:
        description: Promise<msRest.RestResponse>
        type: Promise&lt;RestResponse&gt;
  - name: >-
      deleteMethod(string, string, string, string, RequestOptionsBase,
      ServiceCallback<void>)
    uid: '@azure/arm-apimanagement.Group.deleteMethod_2'
    package: '@azure/arm-apimanagement'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function deleteMethod(resourceGroupName: string, serviceName: string,
        groupId: string, ifMatch: string, options: RequestOptionsBase, callback:
        ServiceCallback<void>)
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group.
        - id: serviceName
          type: string
          description: The name of the API Management service.
        - id: groupId
          type: string
          description: >-
            Group identifier. Must be unique in the current API Management
            service instance.
        - id: ifMatch
          type: string
          description: >-
            ETag of the Entity. ETag should match the current entity state from
            the header

            response of the GET request or it should be * for unconditional
            update.
        - id: options
          type: RequestOptionsBase
          description: The optional parameters
        - id: callback
          type: ServiceCallback&lt;void&gt;
          description: |
            The callback
  - name: 'deleteMethod(string, string, string, string, ServiceCallback<void>)'
    uid: '@azure/arm-apimanagement.Group.deleteMethod_1'
    package: '@azure/arm-apimanagement'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function deleteMethod(resourceGroupName: string, serviceName: string,
        groupId: string, ifMatch: string, callback: ServiceCallback<void>)
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group.
        - id: serviceName
          type: string
          description: The name of the API Management service.
        - id: groupId
          type: string
          description: >-
            Group identifier. Must be unique in the current API Management
            service instance.
        - id: ifMatch
          type: string
          description: >-
            ETag of the Entity. ETag should match the current entity state from
            the header

            response of the GET request or it should be * for unconditional
            update.
        - id: callback
          type: ServiceCallback&lt;void&gt;
          description: |
            The callback
  - name: 'get(string, string, string, msRest.RequestOptionsBase)'
    uid: '@azure/arm-apimanagement.Group.get'
    package: '@azure/arm-apimanagement'
    summary: Gets the details of the group specified by its identifier.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function get(resourceGroupName: string, serviceName: string, groupId:
        string, options?: msRest.RequestOptionsBase):
        Promise<Models.GroupGetResponse>
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group.
        - id: serviceName
          type: string
          description: The name of the API Management service.
        - id: groupId
          type: string
          description: >-
            Group identifier. Must be unique in the current API Management
            service instance.
        - id: options
          type: <xref uid="msRest.RequestOptionsBase" />
          description: ''
      return:
        description: Promise<Models.GroupGetResponse>
        type: Promise&lt;<xref uid="Models.GroupGetResponse" />&gt;
  - name: >-
      get(string, string, string, RequestOptionsBase,
      ServiceCallback<GroupContract>)
    uid: '@azure/arm-apimanagement.Group.get_2'
    package: '@azure/arm-apimanagement'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function get(resourceGroupName: string, serviceName: string, groupId:
        string, options: RequestOptionsBase, callback:
        ServiceCallback<GroupContract>)
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group.
        - id: serviceName
          type: string
          description: The name of the API Management service.
        - id: groupId
          type: string
          description: >-
            Group identifier. Must be unique in the current API Management
            service instance.
        - id: options
          type: RequestOptionsBase
          description: The optional parameters
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/arm-apimanagement.GroupContract" />&gt;
          description: |
            The callback
  - name: 'get(string, string, string, ServiceCallback<GroupContract>)'
    uid: '@azure/arm-apimanagement.Group.get_1'
    package: '@azure/arm-apimanagement'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function get(resourceGroupName: string, serviceName: string, groupId:
        string, callback: ServiceCallback<GroupContract>)
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group.
        - id: serviceName
          type: string
          description: The name of the API Management service.
        - id: groupId
          type: string
          description: >-
            Group identifier. Must be unique in the current API Management
            service instance.
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/arm-apimanagement.GroupContract" />&gt;
          description: |
            The callback
  - name: 'getEntityTag(string, string, string, msRest.RequestOptionsBase)'
    uid: '@azure/arm-apimanagement.Group.getEntityTag'
    package: '@azure/arm-apimanagement'
    summary: >-
      Gets the entity state (Etag) version of the group specified by its
      identifier.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function getEntityTag(resourceGroupName: string, serviceName: string,
        groupId: string, options?: msRest.RequestOptionsBase):
        Promise<Models.GroupGetEntityTagResponse>
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group.
        - id: serviceName
          type: string
          description: The name of the API Management service.
        - id: groupId
          type: string
          description: >-
            Group identifier. Must be unique in the current API Management
            service instance.
        - id: options
          type: <xref uid="msRest.RequestOptionsBase" />
          description: ''
      return:
        description: Promise<Models.GroupGetEntityTagResponse>
        type: Promise&lt;<xref uid="Models.GroupGetEntityTagResponse" />&gt;
  - name: >-
      getEntityTag(string, string, string, RequestOptionsBase,
      ServiceCallback<void>)
    uid: '@azure/arm-apimanagement.Group.getEntityTag_2'
    package: '@azure/arm-apimanagement'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function getEntityTag(resourceGroupName: string, serviceName: string,
        groupId: string, options: RequestOptionsBase, callback:
        ServiceCallback<void>)
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group.
        - id: serviceName
          type: string
          description: The name of the API Management service.
        - id: groupId
          type: string
          description: >-
            Group identifier. Must be unique in the current API Management
            service instance.
        - id: options
          type: RequestOptionsBase
          description: The optional parameters
        - id: callback
          type: ServiceCallback&lt;void&gt;
          description: |
            The callback
  - name: 'getEntityTag(string, string, string, ServiceCallback<void>)'
    uid: '@azure/arm-apimanagement.Group.getEntityTag_1'
    package: '@azure/arm-apimanagement'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function getEntityTag(resourceGroupName: string, serviceName: string,
        groupId: string, callback: ServiceCallback<void>)
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group.
        - id: serviceName
          type: string
          description: The name of the API Management service.
        - id: groupId
          type: string
          description: >-
            Group identifier. Must be unique in the current API Management
            service instance.
        - id: callback
          type: ServiceCallback&lt;void&gt;
          description: |
            The callback
  - name: >-
      listByService(string, string, GroupListByServiceOptionalParams,
      ServiceCallback<GroupCollection>)
    uid: '@azure/arm-apimanagement.Group.listByService_2'
    package: '@azure/arm-apimanagement'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listByService(resourceGroupName: string, serviceName: string,
        options: GroupListByServiceOptionalParams, callback:
        ServiceCallback<GroupCollection>)
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group.
        - id: serviceName
          type: string
          description: The name of the API Management service.
        - id: options
          type: >-
            <xref
            uid="@azure/arm-apimanagement.GroupListByServiceOptionalParams" />
          description: The optional parameters
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/arm-apimanagement.GroupCollection" />&gt;
          description: |
            The callback
  - name: 'listByService(string, string, Models.GroupListByServiceOptionalParams)'
    uid: '@azure/arm-apimanagement.Group.listByService'
    package: '@azure/arm-apimanagement'
    summary: Lists a collection of groups defined within a service instance.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listByService(resourceGroupName: string, serviceName: string,
        options?: Models.GroupListByServiceOptionalParams):
        Promise<Models.GroupListByServiceResponse>
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group.
        - id: serviceName
          type: string
          description: The name of the API Management service.
        - id: options
          type: <xref uid="Models.GroupListByServiceOptionalParams" />
          description: ''
      return:
        description: Promise<Models.GroupListByServiceResponse>
        type: Promise&lt;<xref uid="Models.GroupListByServiceResponse" />&gt;
  - name: 'listByService(string, string, ServiceCallback<GroupCollection>)'
    uid: '@azure/arm-apimanagement.Group.listByService_1'
    package: '@azure/arm-apimanagement'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listByService(resourceGroupName: string, serviceName: string,
        callback: ServiceCallback<GroupCollection>)
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group.
        - id: serviceName
          type: string
          description: The name of the API Management service.
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/arm-apimanagement.GroupCollection" />&gt;
          description: |
            The callback
  - name: >-
      listByServiceNext(string, GroupListByServiceNextOptionalParams,
      ServiceCallback<GroupCollection>)
    uid: '@azure/arm-apimanagement.Group.listByServiceNext_2'
    package: '@azure/arm-apimanagement'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listByServiceNext(nextPageLink: string, options:
        GroupListByServiceNextOptionalParams, callback:
        ServiceCallback<GroupCollection>)
      parameters:
        - id: nextPageLink
          type: string
          description: The NextLink from the previous successful call to List operation.
        - id: options
          type: >-
            <xref
            uid="@azure/arm-apimanagement.GroupListByServiceNextOptionalParams"
            />
          description: The optional parameters
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/arm-apimanagement.GroupCollection" />&gt;
          description: |
            The callback
  - name: 'listByServiceNext(string, Models.GroupListByServiceNextOptionalParams)'
    uid: '@azure/arm-apimanagement.Group.listByServiceNext'
    package: '@azure/arm-apimanagement'
    summary: Lists a collection of groups defined within a service instance.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listByServiceNext(nextPageLink: string, options?:
        Models.GroupListByServiceNextOptionalParams):
        Promise<Models.GroupListByServiceNextResponse>
      parameters:
        - id: nextPageLink
          type: string
          description: The NextLink from the previous successful call to List operation.
        - id: options
          type: <xref uid="Models.GroupListByServiceNextOptionalParams" />
          description: ''
      return:
        description: Promise<Models.GroupListByServiceNextResponse>
        type: Promise&lt;<xref uid="Models.GroupListByServiceNextResponse" />&gt;
  - name: 'listByServiceNext(string, ServiceCallback<GroupCollection>)'
    uid: '@azure/arm-apimanagement.Group.listByServiceNext_1'
    package: '@azure/arm-apimanagement'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listByServiceNext(nextPageLink: string, callback:
        ServiceCallback<GroupCollection>)
      parameters:
        - id: nextPageLink
          type: string
          description: The NextLink from the previous successful call to List operation.
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/arm-apimanagement.GroupCollection" />&gt;
          description: |
            The callback
  - name: >-
      update(string, string, string, GroupUpdateParameters, string,
      msRest.RequestOptionsBase)
    uid: '@azure/arm-apimanagement.Group.update'
    package: '@azure/arm-apimanagement'
    summary: Updates the details of the group specified by its identifier.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function update(resourceGroupName: string, serviceName: string, groupId:
        string, parameters: GroupUpdateParameters, ifMatch: string, options?:
        msRest.RequestOptionsBase): Promise<Models.GroupUpdateResponse>
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group.
        - id: serviceName
          type: string
          description: The name of the API Management service.
        - id: groupId
          type: string
          description: >-
            Group identifier. Must be unique in the current API Management
            service instance.
        - id: parameters
          type: <xref uid="@azure/arm-apimanagement.GroupUpdateParameters" />
          description: Update parameters.
        - id: ifMatch
          type: string
          description: >-
            ETag of the Entity. ETag should match the current entity state from
            the header

            response of the GET request or it should be * for unconditional
            update.
        - id: options
          type: <xref uid="msRest.RequestOptionsBase" />
          description: ''
      return:
        description: Promise<Models.GroupUpdateResponse>
        type: Promise&lt;<xref uid="Models.GroupUpdateResponse" />&gt;
  - name: >-
      update(string, string, string, GroupUpdateParameters, string,
      RequestOptionsBase, ServiceCallback<GroupContract>)
    uid: '@azure/arm-apimanagement.Group.update_2'
    package: '@azure/arm-apimanagement'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function update(resourceGroupName: string, serviceName: string, groupId:
        string, parameters: GroupUpdateParameters, ifMatch: string, options:
        RequestOptionsBase, callback: ServiceCallback<GroupContract>)
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group.
        - id: serviceName
          type: string
          description: The name of the API Management service.
        - id: groupId
          type: string
          description: >-
            Group identifier. Must be unique in the current API Management
            service instance.
        - id: parameters
          type: <xref uid="@azure/arm-apimanagement.GroupUpdateParameters" />
          description: Update parameters.
        - id: ifMatch
          type: string
          description: >-
            ETag of the Entity. ETag should match the current entity state from
            the header

            response of the GET request or it should be * for unconditional
            update.
        - id: options
          type: RequestOptionsBase
          description: The optional parameters
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/arm-apimanagement.GroupContract" />&gt;
          description: |
            The callback
  - name: >-
      update(string, string, string, GroupUpdateParameters, string,
      ServiceCallback<GroupContract>)
    uid: '@azure/arm-apimanagement.Group.update_1'
    package: '@azure/arm-apimanagement'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function update(resourceGroupName: string, serviceName: string, groupId:
        string, parameters: GroupUpdateParameters, ifMatch: string, callback:
        ServiceCallback<GroupContract>)
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group.
        - id: serviceName
          type: string
          description: The name of the API Management service.
        - id: groupId
          type: string
          description: >-
            Group identifier. Must be unique in the current API Management
            service instance.
        - id: parameters
          type: <xref uid="@azure/arm-apimanagement.GroupUpdateParameters" />
          description: Update parameters.
        - id: ifMatch
          type: string
          description: >-
            ETag of the Entity. ETag should match the current entity state from
            the header

            response of the GET request or it should be * for unconditional
            update.
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/arm-apimanagement.GroupContract" />&gt;
          description: |
            The callback
