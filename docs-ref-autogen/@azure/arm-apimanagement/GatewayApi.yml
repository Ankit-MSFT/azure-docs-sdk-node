### YamlMime:UniversalReference
items:
  - uid: '@azure/arm-apimanagement.GatewayApi'
    name: GatewayApi
    fullName: GatewayApi
    children:
      - '@azure/arm-apimanagement.GatewayApi.createOrUpdate_2'
      - '@azure/arm-apimanagement.GatewayApi.createOrUpdate'
      - '@azure/arm-apimanagement.GatewayApi.createOrUpdate_1'
      - '@azure/arm-apimanagement.GatewayApi.deleteMethod'
      - '@azure/arm-apimanagement.GatewayApi.deleteMethod_2'
      - '@azure/arm-apimanagement.GatewayApi.deleteMethod_1'
      - '@azure/arm-apimanagement.GatewayApi.constructor'
      - '@azure/arm-apimanagement.GatewayApi.getEntityTag'
      - '@azure/arm-apimanagement.GatewayApi.getEntityTag_2'
      - '@azure/arm-apimanagement.GatewayApi.getEntityTag_1'
      - '@azure/arm-apimanagement.GatewayApi.listByService_2'
      - '@azure/arm-apimanagement.GatewayApi.listByService'
      - '@azure/arm-apimanagement.GatewayApi.listByService_1'
      - '@azure/arm-apimanagement.GatewayApi.listByServiceNext'
      - '@azure/arm-apimanagement.GatewayApi.listByServiceNext_2'
      - '@azure/arm-apimanagement.GatewayApi.listByServiceNext_1'
    langs:
      - typeScript
    type: class
    summary: Class representing a GatewayApi.
    package: '@azure/arm-apimanagement'
  - uid: '@azure/arm-apimanagement.GatewayApi.createOrUpdate_2'
    name: >-
      createOrUpdate(string, string, string, string,
      GatewayApiCreateOrUpdateOptionalParams, ServiceCallback<ApiContract>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function createOrUpdate(resourceGroupName: string, serviceName: string,
        gatewayId: string, apiId: string, options:
        GatewayApiCreateOrUpdateOptionalParams, callback:
        ServiceCallback<ApiContract>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: The name of the resource group.
        - id: serviceName
          type:
            - string
          description: The name of the API Management service.
        - id: gatewayId
          type:
            - string
          description: >-
            Gateway entity identifier. Must be unique in the current API
            Management service

            instance. Must not have value 'managed'
        - id: apiId
          type:
            - string
          description: >-
            API identifier. Must be unique in the current API Management service
            instance.
        - id: options
          type:
            - '@azure/arm-apimanagement.GatewayApiCreateOrUpdateOptionalParams'
          description: The optional parameters
        - id: callback
          type:
            - ServiceCallback<@azure/arm-apimanagement.ApiContract>
          description: |
            The callback
    package: '@azure/arm-apimanagement'
  - uid: '@azure/arm-apimanagement.GatewayApi.createOrUpdate'
    name: >-
      createOrUpdate(string, string, string, string,
      Models.GatewayApiCreateOrUpdateOptionalParams)
    children: []
    type: method
    langs:
      - typeScript
    summary: Adds an API to the specified Gateway.
    syntax:
      content: >-
        function createOrUpdate(resourceGroupName: string, serviceName: string,
        gatewayId: string, apiId: string, options?:
        Models.GatewayApiCreateOrUpdateOptionalParams)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: The name of the resource group.
        - id: serviceName
          type:
            - string
          description: The name of the API Management service.
        - id: gatewayId
          type:
            - string
          description: >-
            Gateway entity identifier. Must be unique in the current API
            Management service

            instance. Must not have value 'managed'
        - id: apiId
          type:
            - string
          description: >-
            API identifier. Must be unique in the current API Management service
            instance.
        - id: options
          type:
            - Models.GatewayApiCreateOrUpdateOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.GatewayApiCreateOrUpdateResponse>
        description: Promise<Models.GatewayApiCreateOrUpdateResponse>
    package: '@azure/arm-apimanagement'
  - uid: '@azure/arm-apimanagement.GatewayApi.createOrUpdate_1'
    name: >-
      createOrUpdate(string, string, string, string,
      ServiceCallback<ApiContract>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function createOrUpdate(resourceGroupName: string, serviceName: string,
        gatewayId: string, apiId: string, callback:
        ServiceCallback<ApiContract>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: The name of the resource group.
        - id: serviceName
          type:
            - string
          description: The name of the API Management service.
        - id: gatewayId
          type:
            - string
          description: >-
            Gateway entity identifier. Must be unique in the current API
            Management service

            instance. Must not have value 'managed'
        - id: apiId
          type:
            - string
          description: >-
            API identifier. Must be unique in the current API Management service
            instance.
        - id: callback
          type:
            - ServiceCallback<@azure/arm-apimanagement.ApiContract>
          description: |
            The callback
    package: '@azure/arm-apimanagement'
  - uid: '@azure/arm-apimanagement.GatewayApi.deleteMethod'
    name: 'deleteMethod(string, string, string, string, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Deletes the specified API from the specified Gateway.
    syntax:
      content: >-
        function deleteMethod(resourceGroupName: string, serviceName: string,
        gatewayId: string, apiId: string, options?: msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: The name of the resource group.
        - id: serviceName
          type:
            - string
          description: The name of the API Management service.
        - id: gatewayId
          type:
            - string
          description: >-
            Gateway entity identifier. Must be unique in the current API
            Management service

            instance. Must not have value 'managed'
        - id: apiId
          type:
            - string
          description: >-
            API identifier. Must be unique in the current API Management service
            instance.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<RestResponse>
        description: Promise<msRest.RestResponse>
    package: '@azure/arm-apimanagement'
  - uid: '@azure/arm-apimanagement.GatewayApi.deleteMethod_2'
    name: >-
      deleteMethod(string, string, string, string, RequestOptionsBase,
      ServiceCallback<void>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function deleteMethod(resourceGroupName: string, serviceName: string,
        gatewayId: string, apiId: string, options: RequestOptionsBase, callback:
        ServiceCallback<void>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: The name of the resource group.
        - id: serviceName
          type:
            - string
          description: The name of the API Management service.
        - id: gatewayId
          type:
            - string
          description: >-
            Gateway entity identifier. Must be unique in the current API
            Management service

            instance. Must not have value 'managed'
        - id: apiId
          type:
            - string
          description: >-
            API identifier. Must be unique in the current API Management service
            instance.
        - id: options
          type:
            - RequestOptionsBase
          description: The optional parameters
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            The callback
    package: '@azure/arm-apimanagement'
  - uid: '@azure/arm-apimanagement.GatewayApi.deleteMethod_1'
    name: 'deleteMethod(string, string, string, string, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function deleteMethod(resourceGroupName: string, serviceName: string,
        gatewayId: string, apiId: string, callback: ServiceCallback<void>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: The name of the resource group.
        - id: serviceName
          type:
            - string
          description: The name of the API Management service.
        - id: gatewayId
          type:
            - string
          description: >-
            Gateway entity identifier. Must be unique in the current API
            Management service

            instance. Must not have value 'managed'
        - id: apiId
          type:
            - string
          description: >-
            API identifier. Must be unique in the current API Management service
            instance.
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            The callback
    package: '@azure/arm-apimanagement'
  - uid: '@azure/arm-apimanagement.GatewayApi.constructor'
    name: GatewayApi(ApiManagementClientContext)
    children: []
    type: constructor
    langs:
      - typeScript
    summary: Create a GatewayApi.
    syntax:
      content: 'new GatewayApi(client: ApiManagementClientContext)'
      parameters:
        - id: client
          type:
            - '@azure/arm-apimanagement.ApiManagementClientContext'
          description: |
            Reference to the service client.
    package: '@azure/arm-apimanagement'
  - uid: '@azure/arm-apimanagement.GatewayApi.getEntityTag'
    name: 'getEntityTag(string, string, string, string, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      Checks that API entity specified by identifier is associated with the
      Gateway entity.
    syntax:
      content: >-
        function getEntityTag(resourceGroupName: string, serviceName: string,
        gatewayId: string, apiId: string, options?: msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: The name of the resource group.
        - id: serviceName
          type:
            - string
          description: The name of the API Management service.
        - id: gatewayId
          type:
            - string
          description: >-
            Gateway entity identifier. Must be unique in the current API
            Management service

            instance. Must not have value 'managed'
        - id: apiId
          type:
            - string
          description: >-
            API identifier. Must be unique in the current API Management service
            instance.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.GatewayApiGetEntityTagResponse>
        description: Promise<Models.GatewayApiGetEntityTagResponse>
    package: '@azure/arm-apimanagement'
  - uid: '@azure/arm-apimanagement.GatewayApi.getEntityTag_2'
    name: >-
      getEntityTag(string, string, string, string, RequestOptionsBase,
      ServiceCallback<void>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function getEntityTag(resourceGroupName: string, serviceName: string,
        gatewayId: string, apiId: string, options: RequestOptionsBase, callback:
        ServiceCallback<void>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: The name of the resource group.
        - id: serviceName
          type:
            - string
          description: The name of the API Management service.
        - id: gatewayId
          type:
            - string
          description: >-
            Gateway entity identifier. Must be unique in the current API
            Management service

            instance. Must not have value 'managed'
        - id: apiId
          type:
            - string
          description: >-
            API identifier. Must be unique in the current API Management service
            instance.
        - id: options
          type:
            - RequestOptionsBase
          description: The optional parameters
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            The callback
    package: '@azure/arm-apimanagement'
  - uid: '@azure/arm-apimanagement.GatewayApi.getEntityTag_1'
    name: 'getEntityTag(string, string, string, string, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function getEntityTag(resourceGroupName: string, serviceName: string,
        gatewayId: string, apiId: string, callback: ServiceCallback<void>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: The name of the resource group.
        - id: serviceName
          type:
            - string
          description: The name of the API Management service.
        - id: gatewayId
          type:
            - string
          description: >-
            Gateway entity identifier. Must be unique in the current API
            Management service

            instance. Must not have value 'managed'
        - id: apiId
          type:
            - string
          description: >-
            API identifier. Must be unique in the current API Management service
            instance.
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            The callback
    package: '@azure/arm-apimanagement'
  - uid: '@azure/arm-apimanagement.GatewayApi.listByService_2'
    name: >-
      listByService(string, string, string,
      GatewayApiListByServiceOptionalParams, ServiceCallback<ApiCollection>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function listByService(resourceGroupName: string, serviceName: string,
        gatewayId: string, options: GatewayApiListByServiceOptionalParams,
        callback: ServiceCallback<ApiCollection>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: The name of the resource group.
        - id: serviceName
          type:
            - string
          description: The name of the API Management service.
        - id: gatewayId
          type:
            - string
          description: >-
            Gateway entity identifier. Must be unique in the current API
            Management service

            instance. Must not have value 'managed'
        - id: options
          type:
            - '@azure/arm-apimanagement.GatewayApiListByServiceOptionalParams'
          description: The optional parameters
        - id: callback
          type:
            - ServiceCallback<@azure/arm-apimanagement.ApiCollection>
          description: |
            The callback
    package: '@azure/arm-apimanagement'
  - uid: '@azure/arm-apimanagement.GatewayApi.listByService'
    name: >-
      listByService(string, string, string,
      Models.GatewayApiListByServiceOptionalParams)
    children: []
    type: method
    langs:
      - typeScript
    summary: Lists a collection of the APIs associated with a gateway.
    syntax:
      content: >-
        function listByService(resourceGroupName: string, serviceName: string,
        gatewayId: string, options?:
        Models.GatewayApiListByServiceOptionalParams)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: The name of the resource group.
        - id: serviceName
          type:
            - string
          description: The name of the API Management service.
        - id: gatewayId
          type:
            - string
          description: >-
            Gateway entity identifier. Must be unique in the current API
            Management service

            instance. Must not have value 'managed'
        - id: options
          type:
            - Models.GatewayApiListByServiceOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.GatewayApiListByServiceResponse>
        description: Promise<Models.GatewayApiListByServiceResponse>
    package: '@azure/arm-apimanagement'
  - uid: '@azure/arm-apimanagement.GatewayApi.listByService_1'
    name: 'listByService(string, string, string, ServiceCallback<ApiCollection>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function listByService(resourceGroupName: string, serviceName: string,
        gatewayId: string, callback: ServiceCallback<ApiCollection>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: The name of the resource group.
        - id: serviceName
          type:
            - string
          description: The name of the API Management service.
        - id: gatewayId
          type:
            - string
          description: >-
            Gateway entity identifier. Must be unique in the current API
            Management service

            instance. Must not have value 'managed'
        - id: callback
          type:
            - ServiceCallback<@azure/arm-apimanagement.ApiCollection>
          description: |
            The callback
    package: '@azure/arm-apimanagement'
  - uid: '@azure/arm-apimanagement.GatewayApi.listByServiceNext'
    name: 'listByServiceNext(string, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Lists a collection of the APIs associated with a gateway.
    syntax:
      content: >-
        function listByServiceNext(nextPageLink: string, options?:
        msRest.RequestOptionsBase)
      parameters:
        - id: nextPageLink
          type:
            - string
          description: The NextLink from the previous successful call to List operation.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.GatewayApiListByServiceNextResponse>
        description: Promise<Models.GatewayApiListByServiceNextResponse>
    package: '@azure/arm-apimanagement'
  - uid: '@azure/arm-apimanagement.GatewayApi.listByServiceNext_2'
    name: >-
      listByServiceNext(string, RequestOptionsBase,
      ServiceCallback<ApiCollection>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function listByServiceNext(nextPageLink: string, options:
        RequestOptionsBase, callback: ServiceCallback<ApiCollection>)
      parameters:
        - id: nextPageLink
          type:
            - string
          description: The NextLink from the previous successful call to List operation.
        - id: options
          type:
            - RequestOptionsBase
          description: The optional parameters
        - id: callback
          type:
            - ServiceCallback<@azure/arm-apimanagement.ApiCollection>
          description: |
            The callback
    package: '@azure/arm-apimanagement'
  - uid: '@azure/arm-apimanagement.GatewayApi.listByServiceNext_1'
    name: 'listByServiceNext(string, ServiceCallback<ApiCollection>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function listByServiceNext(nextPageLink: string, callback:
        ServiceCallback<ApiCollection>)
      parameters:
        - id: nextPageLink
          type:
            - string
          description: The NextLink from the previous successful call to List operation.
        - id: callback
          type:
            - ServiceCallback<@azure/arm-apimanagement.ApiCollection>
          description: |
            The callback
    package: '@azure/arm-apimanagement'
references:
  - uid: '@azure/arm-apimanagement.ApiManagementClientContext'
    name: ApiManagementClientContext
    spec.typeScript:
      - name: ApiManagementClientContext
        fullName: ApiManagementClientContext
        uid: '@azure/arm-apimanagement.ApiManagementClientContext'
  - uid: ServiceCallback<@azure/arm-apimanagement.ApiContract>
    name: ApiContract>
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: ApiContract
        fullName: ApiContract
        uid: '@azure/arm-apimanagement.ApiContract'
      - name: '>'
        fullName: '>'
  - uid: '@azure/arm-apimanagement.GatewayApiCreateOrUpdateOptionalParams'
    name: GatewayApiCreateOrUpdateOptionalParams
    spec.typeScript:
      - name: GatewayApiCreateOrUpdateOptionalParams
        fullName: GatewayApiCreateOrUpdateOptionalParams
        uid: '@azure/arm-apimanagement.GatewayApiCreateOrUpdateOptionalParams'
  - uid: ServiceCallback<@azure/arm-apimanagement.ApiCollection>
    name: ApiCollection>
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: ApiCollection
        fullName: ApiCollection
        uid: '@azure/arm-apimanagement.ApiCollection'
      - name: '>'
        fullName: '>'
  - uid: '@azure/arm-apimanagement.GatewayApiListByServiceOptionalParams'
    name: GatewayApiListByServiceOptionalParams
    spec.typeScript:
      - name: GatewayApiListByServiceOptionalParams
        fullName: GatewayApiListByServiceOptionalParams
        uid: '@azure/arm-apimanagement.GatewayApiListByServiceOptionalParams'
