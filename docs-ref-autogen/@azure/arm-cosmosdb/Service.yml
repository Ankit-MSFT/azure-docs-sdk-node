### YamlMime:TSType
name: Service
uid: '@azure/arm-cosmosdb.Service'
package: '@azure/arm-cosmosdb'
summary: Class representing a Service.
fullName: Service
remarks: ''
isPreview: false
isDeprecated: false
type: class
constructors:
  - name: Service(CosmosDBManagementClientContext)
    uid: '@azure/arm-cosmosdb.Service.constructor'
    package: '@azure/arm-cosmosdb'
    summary: Create a Service.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'new Service(client: CosmosDBManagementClientContext)'
      parameters:
        - id: client
          type: <xref uid="@azure/arm-cosmosdb.CosmosDBManagementClientContext" />
          description: |
            Reference to the service client.
methods:
  - name: >-
      beginCreate(string, string, string, ServiceResource,
      msRest.RequestOptionsBase)
    uid: '@azure/arm-cosmosdb.Service.beginCreate'
    package: '@azure/arm-cosmosdb'
    summary: Creates a service.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function beginCreate(resourceGroupName: string, accountName: string,
        serviceName: string, createUpdateParameters: ServiceResource, options?:
        msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group. The name is case insensitive.
        - id: accountName
          type: string
          description: Cosmos DB database account name.
        - id: serviceName
          type: string
          description: Cosmos DB service name.
        - id: createUpdateParameters
          type: <xref uid="@azure/arm-cosmosdb.ServiceResource" />
          description: The Service resource parameters.
        - id: options
          type: <xref uid="msRest.RequestOptionsBase" />
          description: ''
      return:
        type: Promise&lt;LROPoller&gt;
        description: Promise<msRestAzure.LROPoller>
  - name: 'beginDeleteMethod(string, string, string, msRest.RequestOptionsBase)'
    uid: '@azure/arm-cosmosdb.Service.beginDeleteMethod'
    package: '@azure/arm-cosmosdb'
    summary: Deletes service with the given serviceName.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function beginDeleteMethod(resourceGroupName: string, accountName:
        string, serviceName: string, options?: msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group. The name is case insensitive.
        - id: accountName
          type: string
          description: Cosmos DB database account name.
        - id: serviceName
          type: string
          description: Cosmos DB service name.
        - id: options
          type: <xref uid="msRest.RequestOptionsBase" />
          description: ''
      return:
        type: Promise&lt;LROPoller&gt;
        description: Promise<msRestAzure.LROPoller>
  - name: 'create(string, string, string, ServiceResource, msRest.RequestOptionsBase)'
    uid: '@azure/arm-cosmosdb.Service.create'
    package: '@azure/arm-cosmosdb'
    summary: Creates a service.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function create(resourceGroupName: string, accountName: string,
        serviceName: string, createUpdateParameters: ServiceResource, options?:
        msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group. The name is case insensitive.
        - id: accountName
          type: string
          description: Cosmos DB database account name.
        - id: serviceName
          type: string
          description: Cosmos DB service name.
        - id: createUpdateParameters
          type: <xref uid="@azure/arm-cosmosdb.ServiceResource" />
          description: The Service resource parameters.
        - id: options
          type: <xref uid="msRest.RequestOptionsBase" />
          description: ''
      return:
        type: Promise&lt;<xref uid="Models.ServiceCreateResponse" />&gt;
        description: Promise<Models.ServiceCreateResponse>
  - name: 'deleteMethod(string, string, string, msRest.RequestOptionsBase)'
    uid: '@azure/arm-cosmosdb.Service.deleteMethod'
    package: '@azure/arm-cosmosdb'
    summary: Deletes service with the given serviceName.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function deleteMethod(resourceGroupName: string, accountName: string,
        serviceName: string, options?: msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group. The name is case insensitive.
        - id: accountName
          type: string
          description: Cosmos DB database account name.
        - id: serviceName
          type: string
          description: Cosmos DB service name.
        - id: options
          type: <xref uid="msRest.RequestOptionsBase" />
          description: ''
      return:
        type: Promise&lt;RestResponse&gt;
        description: Promise<msRest.RestResponse>
  - name: 'get(string, string, string, msRest.RequestOptionsBase)'
    uid: '@azure/arm-cosmosdb.Service.get'
    package: '@azure/arm-cosmosdb'
    summary: Gets the status of service.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function get(resourceGroupName: string, accountName: string,
        serviceName: string, options?: msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group. The name is case insensitive.
        - id: accountName
          type: string
          description: Cosmos DB database account name.
        - id: serviceName
          type: string
          description: Cosmos DB service name.
        - id: options
          type: <xref uid="msRest.RequestOptionsBase" />
          description: ''
      return:
        type: Promise&lt;<xref uid="Models.ServiceGetResponse" />&gt;
        description: Promise<Models.ServiceGetResponse>
  - name: >-
      get(string, string, string, RequestOptionsBase,
      ServiceCallback<ServiceResource>)
    uid: '@azure/arm-cosmosdb.Service.get_2'
    package: '@azure/arm-cosmosdb'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function get(resourceGroupName: string, accountName: string,
        serviceName: string, options: RequestOptionsBase, callback:
        ServiceCallback<ServiceResource>)
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group. The name is case insensitive.
        - id: accountName
          type: string
          description: Cosmos DB database account name.
        - id: serviceName
          type: string
          description: Cosmos DB service name.
        - id: options
          type: RequestOptionsBase
          description: The optional parameters
        - id: callback
          type: >-
            ServiceCallback&lt;<xref uid="@azure/arm-cosmosdb.ServiceResource"
            />&gt;
          description: |
            The callback
  - name: 'get(string, string, string, ServiceCallback<ServiceResource>)'
    uid: '@azure/arm-cosmosdb.Service.get_1'
    package: '@azure/arm-cosmosdb'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function get(resourceGroupName: string, accountName: string,
        serviceName: string, callback: ServiceCallback<ServiceResource>)
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group. The name is case insensitive.
        - id: accountName
          type: string
          description: Cosmos DB database account name.
        - id: serviceName
          type: string
          description: Cosmos DB service name.
        - id: callback
          type: >-
            ServiceCallback&lt;<xref uid="@azure/arm-cosmosdb.ServiceResource"
            />&gt;
          description: |
            The callback
  - name: 'list(string, string, msRest.RequestOptionsBase)'
    uid: '@azure/arm-cosmosdb.Service.list'
    package: '@azure/arm-cosmosdb'
    summary: Gets the status of service.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function list(resourceGroupName: string, accountName: string, options?:
        msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group. The name is case insensitive.
        - id: accountName
          type: string
          description: Cosmos DB database account name.
        - id: options
          type: <xref uid="msRest.RequestOptionsBase" />
          description: ''
      return:
        type: Promise&lt;<xref uid="Models.ServiceListResponse" />&gt;
        description: Promise<Models.ServiceListResponse>
  - name: >-
      list(string, string, RequestOptionsBase,
      ServiceCallback<ServiceResourceListResult>)
    uid: '@azure/arm-cosmosdb.Service.list_2'
    package: '@azure/arm-cosmosdb'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function list(resourceGroupName: string, accountName: string, options:
        RequestOptionsBase, callback:
        ServiceCallback<ServiceResourceListResult>)
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group. The name is case insensitive.
        - id: accountName
          type: string
          description: Cosmos DB database account name.
        - id: options
          type: RequestOptionsBase
          description: The optional parameters
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/arm-cosmosdb.ServiceResourceListResult" />&gt;
          description: |
            The callback
  - name: 'list(string, string, ServiceCallback<ServiceResourceListResult>)'
    uid: '@azure/arm-cosmosdb.Service.list_1'
    package: '@azure/arm-cosmosdb'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function list(resourceGroupName: string, accountName: string, callback:
        ServiceCallback<ServiceResourceListResult>)
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group. The name is case insensitive.
        - id: accountName
          type: string
          description: Cosmos DB database account name.
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/arm-cosmosdb.ServiceResourceListResult" />&gt;
          description: |
            The callback
