### YamlMime:UniversalReference
items:
  - uid: '@azure/keyvault-secrets.CertificateImportParameters'
    name: CertificateImportParameters
    fullName: CertificateImportParameters
    children:
      - >-
        @azure/keyvault-secrets.CertificateImportParameters.base64EncodedCertificate
      - >-
        @azure/keyvault-secrets.CertificateImportParameters.certificateAttributes
      - '@azure/keyvault-secrets.CertificateImportParameters.certificatePolicy'
      - '@azure/keyvault-secrets.CertificateImportParameters.password'
      - '@azure/keyvault-secrets.CertificateImportParameters.tags'
    langs:
      - typeScript
    type: interface
    summary: The certificate import parameters.
    package: '@azure/keyvault-secrets'
  - uid: >-
      @azure/keyvault-secrets.CertificateImportParameters.base64EncodedCertificate
    name: base64EncodedCertificate
    fullName: base64EncodedCertificate
    children: []
    langs:
      - typeScript
    type: property
    summary: >-
      Base64 encoded representation of the certificate object to import. This
      certificate needs to

      contain the private key.
    syntax:
      content: 'base64EncodedCertificate: string'
      return:
        type:
          - string
    package: '@azure/keyvault-secrets'
  - uid: '@azure/keyvault-secrets.CertificateImportParameters.certificateAttributes'
    name: certificateAttributes
    fullName: certificateAttributes
    children: []
    langs:
      - typeScript
    type: property
    summary: The attributes of the certificate (optional).
    optional: true
    syntax:
      content: 'certificateAttributes?: CertificateAttributes'
      return:
        type:
          - '@azure/keyvault-secrets.CertificateAttributes'
    package: '@azure/keyvault-secrets'
  - uid: '@azure/keyvault-secrets.CertificateImportParameters.certificatePolicy'
    name: certificatePolicy
    fullName: certificatePolicy
    children: []
    langs:
      - typeScript
    type: property
    summary: The management policy for the certificate.
    optional: true
    syntax:
      content: 'certificatePolicy?: CertificatePolicy'
      return:
        type:
          - '@azure/keyvault-secrets.CertificatePolicy'
    package: '@azure/keyvault-secrets'
  - uid: '@azure/keyvault-secrets.CertificateImportParameters.password'
    name: password
    fullName: password
    children: []
    langs:
      - typeScript
    type: property
    summary: >-
      If the private key in base64EncodedCertificate is encrypted, the password
      used for encryption.
    optional: true
    syntax:
      content: 'password?: undefined | string'
      return:
        type:
          - undefined | string
    package: '@azure/keyvault-secrets'
  - uid: '@azure/keyvault-secrets.CertificateImportParameters.tags'
    name: tags
    fullName: tags
    children: []
    langs:
      - typeScript
    type: property
    summary: Application specific metadata in the form of key-value pairs.
    optional: true
    syntax:
      content: 'tags?: undefined | [key: string]: string'
      return:
        type:
          - 'undefined | [key: string]: string'
    package: '@azure/keyvault-secrets'
references:
  - uid: '@azure/keyvault-secrets.CertificateAttributes'
    name: CertificateAttributes
    spec.typeScript:
      - name: CertificateAttributes
        fullName: CertificateAttributes
        uid: '@azure/keyvault-secrets.CertificateAttributes'
  - uid: '@azure/keyvault-secrets.CertificatePolicy'
    name: CertificatePolicy
    spec.typeScript:
      - name: CertificatePolicy
        fullName: CertificatePolicy
        uid: '@azure/keyvault-secrets.CertificatePolicy'
