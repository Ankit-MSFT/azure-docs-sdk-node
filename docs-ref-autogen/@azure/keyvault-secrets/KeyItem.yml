### YamlMime:UniversalReference
items:
  - uid: '@azure/keyvault-secrets.KeyItem'
    name: KeyItem
    fullName: KeyItem
    children:
      - '@azure/keyvault-secrets.KeyItem.attributes'
      - '@azure/keyvault-secrets.KeyItem.kid'
      - '@azure/keyvault-secrets.KeyItem.managed'
      - '@azure/keyvault-secrets.KeyItem.tags'
    langs:
      - typeScript
    type: interface
    summary: The key item containing key metadata.
    package: '@azure/keyvault-secrets'
  - uid: '@azure/keyvault-secrets.KeyItem.attributes'
    name: attributes
    fullName: attributes
    children: []
    langs:
      - typeScript
    type: property
    summary: The key management attributes.
    optional: true
    syntax:
      content: 'attributes?: KeyAttributes'
      return:
        type:
          - '@azure/keyvault-secrets.KeyAttributes'
    package: '@azure/keyvault-secrets'
  - uid: '@azure/keyvault-secrets.KeyItem.kid'
    name: kid
    fullName: kid
    children: []
    langs:
      - typeScript
    type: property
    summary: Key identifier.
    optional: true
    syntax:
      content: 'kid?: undefined | string'
      return:
        type:
          - undefined | string
    package: '@azure/keyvault-secrets'
  - uid: '@azure/keyvault-secrets.KeyItem.managed'
    name: managed
    fullName: managed
    children: []
    langs:
      - typeScript
    type: property
    summary: >-
      True if the key's lifetime is managed by key vault. If this is a key
      backing a certificate,

      then managed will be true.

      **NOTE: This property will not be serialized. It can only be populated by
      the server.**
    optional: true
    syntax:
      content: 'managed?: undefined | false | true'
      return:
        type:
          - undefined | false | true
    package: '@azure/keyvault-secrets'
  - uid: '@azure/keyvault-secrets.KeyItem.tags'
    name: tags
    fullName: tags
    children: []
    langs:
      - typeScript
    type: property
    summary: Application specific metadata in the form of key-value pairs.
    optional: true
    syntax:
      content: 'tags?: undefined | [key: string]: string'
      return:
        type:
          - 'undefined | [key: string]: string'
    package: '@azure/keyvault-secrets'
references:
  - uid: '@azure/keyvault-secrets.KeyAttributes'
    name: KeyAttributes
    spec.typeScript:
      - name: KeyAttributes
        fullName: KeyAttributes
        uid: '@azure/keyvault-secrets.KeyAttributes'
