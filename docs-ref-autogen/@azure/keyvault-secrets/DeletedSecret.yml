### YamlMime:UniversalReference
items:
  - uid: '@azure/keyvault-secrets.DeletedSecret'
    name: DeletedSecret
    fullName: DeletedSecret
    children:
      - '@azure/keyvault-secrets.DeletedSecret.contentType'
      - '@azure/keyvault-secrets.DeletedSecret.created'
      - '@azure/keyvault-secrets.DeletedSecret.deletedDate'
      - '@azure/keyvault-secrets.DeletedSecret.enabled'
      - '@azure/keyvault-secrets.DeletedSecret.expires'
      - '@azure/keyvault-secrets.DeletedSecret.id'
      - '@azure/keyvault-secrets.DeletedSecret.keyId'
      - '@azure/keyvault-secrets.DeletedSecret.managed'
      - '@azure/keyvault-secrets.DeletedSecret.name'
      - '@azure/keyvault-secrets.DeletedSecret.notBefore'
      - '@azure/keyvault-secrets.DeletedSecret.recoveryId'
      - '@azure/keyvault-secrets.DeletedSecret.recoveryLevel'
      - '@azure/keyvault-secrets.DeletedSecret.scheduledPurgeDate'
      - '@azure/keyvault-secrets.DeletedSecret.tags'
      - '@azure/keyvault-secrets.DeletedSecret.updated'
      - '@azure/keyvault-secrets.DeletedSecret.value'
      - '@azure/keyvault-secrets.DeletedSecret.vaultUrl'
      - '@azure/keyvault-secrets.DeletedSecret.version'
    langs:
      - typeScript
    type: interface
    summary: ''
    extends:
      name: '@azure/keyvault-secrets.Secret'
    package: '@azure/keyvault-secrets'
  - uid: '@azure/keyvault-secrets.DeletedSecret.contentType'
    name: contentType
    fullName: contentType
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    optional: true
    syntax:
      content: 'contentType?: undefined | string'
      return:
        type:
          - undefined | string
    package: '@azure/keyvault-secrets'
  - uid: '@azure/keyvault-secrets.DeletedSecret.created'
    name: created
    fullName: created
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    optional: true
    syntax:
      content: 'created?: Date'
      return:
        type:
          - Date
    package: '@azure/keyvault-secrets'
  - uid: '@azure/keyvault-secrets.DeletedSecret.deletedDate'
    name: deletedDate
    fullName: deletedDate
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    optional: true
    syntax:
      content: 'deletedDate?: Date'
      return:
        type:
          - Date
    package: '@azure/keyvault-secrets'
  - uid: '@azure/keyvault-secrets.DeletedSecret.enabled'
    name: enabled
    fullName: enabled
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    optional: true
    syntax:
      content: 'enabled?: undefined | false | true'
      return:
        type:
          - undefined | false | true
    package: '@azure/keyvault-secrets'
  - uid: '@azure/keyvault-secrets.DeletedSecret.expires'
    name: expires
    fullName: expires
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    optional: true
    syntax:
      content: 'expires?: Date'
      return:
        type:
          - Date
    package: '@azure/keyvault-secrets'
  - uid: '@azure/keyvault-secrets.DeletedSecret.id'
    name: id
    fullName: id
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    optional: true
    syntax:
      content: 'id?: undefined | string'
      return:
        type:
          - undefined | string
    package: '@azure/keyvault-secrets'
  - uid: '@azure/keyvault-secrets.DeletedSecret.keyId'
    name: keyId
    fullName: keyId
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    optional: true
    syntax:
      content: 'keyId?: undefined | string'
      return:
        type:
          - undefined | string
    package: '@azure/keyvault-secrets'
  - uid: '@azure/keyvault-secrets.DeletedSecret.managed'
    name: managed
    fullName: managed
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    optional: true
    syntax:
      content: 'managed?: undefined | false | true'
      return:
        type:
          - undefined | false | true
    package: '@azure/keyvault-secrets'
  - uid: '@azure/keyvault-secrets.DeletedSecret.name'
    name: name
    fullName: name
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'name: string'
      return:
        type:
          - string
    package: '@azure/keyvault-secrets'
  - uid: '@azure/keyvault-secrets.DeletedSecret.notBefore'
    name: notBefore
    fullName: notBefore
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    optional: true
    syntax:
      content: 'notBefore?: Date'
      return:
        type:
          - Date
    package: '@azure/keyvault-secrets'
  - uid: '@azure/keyvault-secrets.DeletedSecret.recoveryId'
    name: recoveryId
    fullName: recoveryId
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    optional: true
    syntax:
      content: 'recoveryId?: undefined | string'
      return:
        type:
          - undefined | string
    package: '@azure/keyvault-secrets'
  - uid: '@azure/keyvault-secrets.DeletedSecret.recoveryLevel'
    name: recoveryLevel
    fullName: recoveryLevel
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    optional: true
    syntax:
      content: 'recoveryLevel?: DeletionRecoveryLevel'
      return:
        type:
          - '@azure/keyvault-secrets.DeletionRecoveryLevel'
    package: '@azure/keyvault-secrets'
  - uid: '@azure/keyvault-secrets.DeletedSecret.scheduledPurgeDate'
    name: scheduledPurgeDate
    fullName: scheduledPurgeDate
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    optional: true
    syntax:
      content: 'scheduledPurgeDate?: Date'
      return:
        type:
          - Date
    package: '@azure/keyvault-secrets'
  - uid: '@azure/keyvault-secrets.DeletedSecret.tags'
    name: tags
    fullName: tags
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    optional: true
    syntax:
      content: 'tags?: undefined | [key: string]: string'
      return:
        type:
          - 'undefined | [key: string]: string'
    package: '@azure/keyvault-secrets'
  - uid: '@azure/keyvault-secrets.DeletedSecret.updated'
    name: updated
    fullName: updated
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    optional: true
    syntax:
      content: 'updated?: Date'
      return:
        type:
          - Date
    package: '@azure/keyvault-secrets'
  - uid: '@azure/keyvault-secrets.DeletedSecret.value'
    name: value
    fullName: value
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    optional: true
    syntax:
      content: 'value?: undefined | string'
      return:
        type:
          - undefined | string
    package: '@azure/keyvault-secrets'
  - uid: '@azure/keyvault-secrets.DeletedSecret.vaultUrl'
    name: vaultUrl
    fullName: vaultUrl
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'vaultUrl: string'
      return:
        type:
          - string
    package: '@azure/keyvault-secrets'
  - uid: '@azure/keyvault-secrets.DeletedSecret.version'
    name: version
    fullName: version
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    optional: true
    syntax:
      content: 'version?: undefined | string'
      return:
        type:
          - undefined | string
    package: '@azure/keyvault-secrets'
references:
  - uid: '@azure/keyvault-secrets.Secret'
    name: Secret
    spec.typeScript:
      - name: Secret
        fullName: Secret
        uid: '@azure/keyvault-secrets.Secret'
  - uid: '@azure/keyvault-secrets.DeletionRecoveryLevel'
    name: DeletionRecoveryLevel
    spec.typeScript:
      - name: DeletionRecoveryLevel
        fullName: DeletionRecoveryLevel
        uid: '@azure/keyvault-secrets.DeletionRecoveryLevel'
