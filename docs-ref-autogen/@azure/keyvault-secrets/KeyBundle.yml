### YamlMime:UniversalReference
items:
  - uid: '@azure/keyvault-secrets.KeyBundle'
    name: KeyBundle
    fullName: KeyBundle
    children:
      - '@azure/keyvault-secrets.KeyBundle.attributes'
      - '@azure/keyvault-secrets.KeyBundle.key'
      - '@azure/keyvault-secrets.KeyBundle.managed'
      - '@azure/keyvault-secrets.KeyBundle.tags'
    langs:
      - typeScript
    type: interface
    summary: A KeyBundle consisting of a WebKey plus its attributes.
    package: '@azure/keyvault-secrets'
  - uid: '@azure/keyvault-secrets.KeyBundle.attributes'
    name: attributes
    fullName: attributes
    children: []
    langs:
      - typeScript
    type: property
    summary: The key management attributes.
    optional: true
    syntax:
      content: 'attributes?: KeyAttributes'
      return:
        type:
          - '@azure/keyvault-secrets.KeyAttributes'
    package: '@azure/keyvault-secrets'
  - uid: '@azure/keyvault-secrets.KeyBundle.key'
    name: key
    fullName: key
    children: []
    langs:
      - typeScript
    type: property
    summary: The Json web key.
    optional: true
    syntax:
      content: 'key?: JsonWebKey'
      return:
        type:
          - '@azure/keyvault-secrets.JsonWebKey'
    package: '@azure/keyvault-secrets'
  - uid: '@azure/keyvault-secrets.KeyBundle.managed'
    name: managed
    fullName: managed
    children: []
    langs:
      - typeScript
    type: property
    summary: >-
      True if the key's lifetime is managed by key vault. If this is a key
      backing a certificate,

      then managed will be true.

      **NOTE: This property will not be serialized. It can only be populated by
      the server.**
    optional: true
    syntax:
      content: 'managed?: undefined | false | true'
      return:
        type:
          - undefined | false | true
    package: '@azure/keyvault-secrets'
  - uid: '@azure/keyvault-secrets.KeyBundle.tags'
    name: tags
    fullName: tags
    children: []
    langs:
      - typeScript
    type: property
    summary: Application specific metadata in the form of key-value pairs.
    optional: true
    syntax:
      content: 'tags?: undefined | [key: string]: string'
      return:
        type:
          - 'undefined | [key: string]: string'
    package: '@azure/keyvault-secrets'
references:
  - uid: '@azure/keyvault-secrets.KeyAttributes'
    name: KeyAttributes
    spec.typeScript:
      - name: KeyAttributes
        fullName: KeyAttributes
        uid: '@azure/keyvault-secrets.KeyAttributes'
  - uid: '@azure/keyvault-secrets.JsonWebKey'
    name: JsonWebKey
    spec.typeScript:
      - name: JsonWebKey
        fullName: JsonWebKey
        uid: '@azure/keyvault-secrets.JsonWebKey'
