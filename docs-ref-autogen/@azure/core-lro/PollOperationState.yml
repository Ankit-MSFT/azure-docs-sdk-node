### YamlMime:UniversalReference
items:
  - uid: '@azure/core-lro.PollOperationState'
    name: PollOperationState
    fullName: PollOperationState<TResult>
    children:
      - '@azure/core-lro.PollOperationState.error'
      - '@azure/core-lro.PollOperationState.isCancelled'
      - '@azure/core-lro.PollOperationState.isCompleted'
      - '@azure/core-lro.PollOperationState.isStarted'
      - '@azure/core-lro.PollOperationState.result'
    langs:
      - typeScript
    type: interface
    summary: >
      PollOperationState contains an opinionated list of the smallest set of
      properties needed

      to define any long running operation poller.

      While the Poller class works as the local control mechanism to start
      triggering, wait for,

      and potentially cancel a long running operation, the PollOperationState
      documents the status

      of the remote long running operation.


      It should be updated at least when the operation starts, when it's
      finished, and when it's cancelled.

      Though, implementations can have any other number of properties that can
      be updated by other reasons.
    package: '@azure/core-lro'
  - uid: '@azure/core-lro.PollOperationState.error'
    name: error
    fullName: error
    children: []
    langs:
      - typeScript
    type: property
    summary: Will exist if the operation encountered any error.
    optional: true
    syntax:
      content: 'error?: Error'
      return:
        type:
          - Error
        description: ''
    package: '@azure/core-lro'
  - uid: '@azure/core-lro.PollOperationState.isCancelled'
    name: isCancelled
    fullName: isCancelled
    children: []
    langs:
      - typeScript
    type: property
    summary: True if the operation has been cancelled.
    optional: true
    syntax:
      content: 'isCancelled?: boolean'
      return:
        type:
          - boolean
        description: ''
    package: '@azure/core-lro'
  - uid: '@azure/core-lro.PollOperationState.isCompleted'
    name: isCompleted
    fullName: isCompleted
    children: []
    langs:
      - typeScript
    type: property
    summary: True if the operation has been completed.
    optional: true
    syntax:
      content: 'isCompleted?: boolean'
      return:
        type:
          - boolean
        description: ''
    package: '@azure/core-lro'
  - uid: '@azure/core-lro.PollOperationState.isStarted'
    name: isStarted
    fullName: isStarted
    children: []
    langs:
      - typeScript
    type: property
    summary: True if the operation has started.
    optional: true
    syntax:
      content: 'isStarted?: boolean'
      return:
        type:
          - boolean
        description: ''
    package: '@azure/core-lro'
  - uid: '@azure/core-lro.PollOperationState.result'
    name: result
    fullName: result
    children: []
    langs:
      - typeScript
    type: property
    summary: Will exist if the operation concluded in a result of an expected type.
    optional: true
    syntax:
      content: 'result?: TResult'
      return:
        type:
          - TResult
        description: ''
    package: '@azure/core-lro'
