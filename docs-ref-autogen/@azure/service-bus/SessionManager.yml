### YamlMime:TSType
name: SessionManager
uid: '@azure/service-bus.SessionManager'
package: '@azure/service-bus'
summary: ''
fullName: SessionManager
type: class
constructors:
  - name: SessionManager(ClientEntityContext)
    uid: '@azure/service-bus.SessionManager.constructor'
    package: '@azure/service-bus'
    summary: ''
    syntax:
      content: 'new SessionManager(context: ClientEntityContext)'
      parameters:
        - id: context
          type: <xref uid="@azure/service-bus.ClientEntityContext" />
          description: ''
properties:
  - name: maxConcurrenSessions
    uid: '@azure/service-bus.SessionManager.maxConcurrenSessions'
    package: '@azure/service-bus'
    summary: ''
    fullName: maxConcurrenSessions
    syntax:
      content: number maxConcurrenSessions
      return:
        type: number
        description: ''
  - name: maxConcurrentAcceptSessionRequests
    uid: '@azure/service-bus.SessionManager.maxConcurrentAcceptSessionRequests'
    package: '@azure/service-bus'
    summary: >-
      {number} _maxConcurrentAcceptSessionRequests The maximum number of
      acceptSession

      requests that can be made concurrently at any given time.
    fullName: maxConcurrentAcceptSessionRequests
    syntax:
      content: number maxConcurrentAcceptSessionRequests
      return:
        type: number
        description: ''
  - name: maxConcurrentSessions
    uid: '@azure/service-bus.SessionManager.maxConcurrentSessions'
    package: '@azure/service-bus'
    summary: >-
      {number} maxConcurrentSessions The maximum number of sessions that the
      user wants to

      handle concurrently.

      - **Default**: `2000`.
    fullName: maxConcurrentSessions
    syntax:
      content: void maxConcurrentSessions
      return:
        type: void
        description: ''
methods:
  - name: close()
    uid: '@azure/service-bus.SessionManager.close'
    package: '@azure/service-bus'
    summary: Close the session manager.
    syntax:
      content: function close()
  - name: >-
      manageMessageSessions(SessionEntityType, OnMessage, OnError,
      SessionManagerOptions)
    uid: '@azure/service-bus.SessionManager.manageMessageSessions'
    package: '@azure/service-bus'
    summary: Manages MessageSessions based on the provided parameters.
    syntax:
      content: >-
        function manageMessageSessions(entityType: SessionEntityType, onMessage:
        OnMessage, onError: OnError, options?: SessionManagerOptions)
      parameters:
        - id: entityType
          type: <xref uid="@azure/service-bus.SessionEntityType" />
          description: ''
        - id: onMessage
          type: <xref uid="@azure/service-bus.OnMessage" />
          description: |-
            The message handler to receive service bus messages from a session
            enabled entity.
        - id: onError
          type: <xref uid="@azure/service-bus.OnError" />
          description: >-
            The error handler to receive an error that occurs while receiving
            messages

            from a session enabled entity.
        - id: options
          type: <xref uid="@azure/service-bus.SessionManagerOptions" />
          description: ''
      return:
        type: Promise&lt;void&gt;
        description: ''
