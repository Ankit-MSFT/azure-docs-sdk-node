### YamlMime:TSType
name: BatchingReceiver
uid: '@azure/service-bus.BatchingReceiver'
package: '@azure/service-bus'
summary: >-
  Describes the batching receiver where the user can receive a specified number
  of messages for

  a predefined time.
fullName: BatchingReceiver
isPreview: false
isDeprecated: false
type: class
constructors:
  - name: 'BatchingReceiver(ClientEntityContext, ReceiveOptions)'
    uid: '@azure/service-bus.BatchingReceiver.constructor'
    package: '@azure/service-bus'
    summary: Instantiate a new BatchingReceiver.
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        new BatchingReceiver(context: ClientEntityContext, options?:
        ReceiveOptions)
      parameters:
        - id: context
          type: <xref uid="@azure/service-bus.ClientEntityContext" />
          description: The client entity context.
        - id: options
          type: <xref uid="@azure/service-bus.ReceiveOptions" />
          description: ''
properties:
  - name: address
    uid: '@azure/service-bus.BatchingReceiver.address'
    package: '@azure/service-bus'
    summary: |-
      {string} address The client entity address in one of the following forms:

      **Sender**
      - `"<queue-name>"`.
      - `"<topic-name>"`.

      **Receiver**
      - `"<queue-name>"`.
      - `"<topic-name>"`.

      **ManagementClient**
      -`"$management"`.
    fullName: address
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'address: string'
      return:
        type: string
        description: ''
  - name: audience
    uid: '@azure/service-bus.BatchingReceiver.audience'
    package: '@azure/service-bus'
    summary: >-
      {string} audience The client entity token audience in one of the following
      forms:


      **Sender**

      - `"sb://<yournamespace>.servicebus.windows.net/<queue-name>"`

      - `"sb://<yournamespace>.servicebus.windows.net/<topic-name>"`


      **Receiver**

      - `"sb://<yournamespace>.servicebus.windows.net/<queue-name>"`

      - `"sb://<yournamespace>.servicebus.windows.net/<topic-name>"`


      **ManagementClient**

      -
      `"sb://<your-namespace>.servicebus.windows.net/<queue-name>/$management"`.

      -
      `"sb://<your-namespace>.servicebus.windows.net/<topic-name>/$management"`.
    fullName: audience
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'audience: string'
      return:
        type: string
        description: ''
  - name: autoComplete
    uid: '@azure/service-bus.BatchingReceiver.autoComplete'
    package: '@azure/service-bus'
    summary: >-
      {boolean} autoComplete Indicates whether `Message.complete()` should be
      called

      automatically after the message processing is complete while receiving
      messages with handlers.

      Default: false.
    fullName: autoComplete
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'autoComplete: boolean'
      return:
        type: boolean
        description: ''
  - name: autoRenewLock
    uid: '@azure/service-bus.BatchingReceiver.autoRenewLock'
    package: '@azure/service-bus'
    summary: '{boolean} autoRenewLock Should lock renewal happen automatically.'
    fullName: autoRenewLock
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'autoRenewLock: boolean'
      return:
        type: boolean
        description: ''
  - name: isConnecting
    uid: '@azure/service-bus.BatchingReceiver.isConnecting'
    package: '@azure/service-bus'
    summary: >-
      {boolean} isConnecting Indicates whether the link is in the process of
      connecting

      (establishing) itself. Default value: `false`.
    fullName: isConnecting
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'isConnecting: boolean = false'
      return:
        type: boolean
        description: ''
  - name: isReceivingMessages
    uid: '@azure/service-bus.BatchingReceiver.isReceivingMessages'
    package: '@azure/service-bus'
    summary: |-
      Indicates whether the batching receiver has
      an ongoing receive request that has not been resolved/rejected yet.
    fullName: isReceivingMessages
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'isReceivingMessages: boolean = false'
      return:
        type: boolean
        description: ''
  - name: maxAutoRenewDurationInSeconds
    uid: '@azure/service-bus.BatchingReceiver.maxAutoRenewDurationInSeconds'
    package: '@azure/service-bus'
    summary: >-
      {number} maxAutoRenewDurationInSeconds The maximum duration within which
      the

      lock will be renewed automatically. This value should be greater than the
      longest message

      lock duration; for example, the `lockDuration` property on the received
      message.


      Default: `300` (5 minutes);
    fullName: maxAutoRenewDurationInSeconds
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'maxAutoRenewDurationInSeconds: number'
      return:
        type: number
        description: ''
  - name: maxConcurrentCalls
    uid: '@azure/service-bus.BatchingReceiver.maxConcurrentCalls'
    package: '@azure/service-bus'
    summary: >-
      {number} [maxConcurrentCalls] The maximum number of messages that should
      be

      processed concurrently while in streaming mode. Once this limit has been
      reached, more

      messages will not be received until the user's message handler has
      completed processing current message.

      Default: 1
    fullName: maxConcurrentCalls
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'maxConcurrentCalls: number = 1'
      return:
        type: number
        description: ''
  - name: name
    uid: '@azure/service-bus.BatchingReceiver.name'
    package: '@azure/service-bus'
    summary: |-
      {string} id The unique name for the entity in the format:
      `${name of the entity}-${guid}`.
    fullName: name
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'name: string'
      return:
        type: string
        description: ''
  - name: newMessageWaitTimeoutInSeconds
    uid: '@azure/service-bus.BatchingReceiver.newMessageWaitTimeoutInSeconds'
    package: '@azure/service-bus'
    summary: >-
      {number} [newMessageWaitTimeoutInSeconds] The maximum amount of idle time
      the

      receiver will wait after a message has been received. If no messages are
      received by this

      time then the receive operation will end.
    fullName: newMessageWaitTimeoutInSeconds
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'newMessageWaitTimeoutInSeconds?: undefined | number'
      return:
        type: undefined | number
        description: ''
  - name: receiveMode
    uid: '@azure/service-bus.BatchingReceiver.receiveMode'
    package: '@azure/service-bus'
    summary: |-
      {number} [receiveMode] The mode in which messages should be received.
      Default: ReceiveMode.peekLock
    fullName: receiveMode
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'receiveMode: ReceiveMode'
      return:
        type: <xref uid="@azure/service-bus.ReceiveMode" />
        description: ''
  - name: receiverType
    uid: '@azure/service-bus.BatchingReceiver.receiverType'
    package: '@azure/service-bus'
    summary: '{string} receiverType The type of receiver: "batching" or "streaming".'
    fullName: receiverType
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'receiverType: ReceiverType'
      return:
        type: <xref uid="@azure/service-bus.ReceiverType" />
        description: ''
methods:
  - name: close()
    uid: '@azure/service-bus.BatchingReceiver.close'
    package: '@azure/service-bus'
    summary: Closes the underlying AMQP receiver.
    isPreview: false
    isDeprecated: false
    syntax:
      content: function close()
      return:
        type: Promise&lt;void&gt;
        description: Promise<void>.
  - name: 'create(ClientEntityContext, ReceiveOptions)'
    uid: '@azure/service-bus.BatchingReceiver.create'
    package: '@azure/service-bus'
    summary: Creates a batching receiver.
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        static function create(context: ClientEntityContext, options?:
        ReceiveOptions)
      parameters:
        - id: context
          type: <xref uid="@azure/service-bus.ClientEntityContext" />
          description: The connection context.
        - id: options
          type: <xref uid="@azure/service-bus.ReceiveOptions" />
          description: ''
      return:
        type: <xref uid="@azure/service-bus.BatchingReceiver" />
        description: ''
  - name: isOpen()
    uid: '@azure/service-bus.BatchingReceiver.isOpen'
    package: '@azure/service-bus'
    summary: >-
      Determines whether the AMQP receiver link is open. If open then returns
      true else returns false.
    isPreview: false
    isDeprecated: false
    syntax:
      content: function isOpen()
      return:
        type: boolean
        description: boolean
  - name: onDetached(AmqpError | Error)
    uid: '@azure/service-bus.BatchingReceiver.onDetached'
    package: '@azure/service-bus'
    summary: >-
      To be called when connection is disconnected to gracefully close ongoing
      receive request.
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'function onDetached(connectionError?: AmqpError | Error)'
      parameters:
        - id: connectionError
          type: AmqpError | Error
          description: ''
      return:
        type: Promise&lt;void&gt;
        description: Promise<void>.
  - name: 'receive(number, undefined | number)'
    uid: '@azure/service-bus.BatchingReceiver.receive'
    package: '@azure/service-bus'
    summary: Receives a batch of messages from a ServiceBus Queue/Topic.
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function receive(maxMessageCount: number, maxWaitTimeInSeconds?:
        undefined | number)
      parameters:
        - id: maxMessageCount
          type: number
          description: >-
            The maximum number of messages to receive.

            In Peeklock mode, this number is capped at 2047 due to constraints
            of the underlying buffer.
        - id: maxWaitTimeInSeconds
          type: undefined | number
          description: >-
            The total wait time in seconds until which the receiver will attempt
            to receive specified number of messages.

            If this time elapses before the `maxMessageCount` is reached, then
            messages collected till then will be returned to the user.

            - **Default**: `60` seconds.
      return:
        type: 'Promise&lt;<xref uid="@azure/service-bus.ServiceBusMessage" />[]&gt;'
        description: A promise that resolves with an array of Message objects.
  - name: >-
      settleMessage(ServiceBusMessage, DispositionType,
      DispositionStatusOptions)
    uid: '@azure/service-bus.BatchingReceiver.settleMessage'
    package: '@azure/service-bus'
    summary: Settles the message with the specified disposition.
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function settleMessage(message: ServiceBusMessage, operation:
        DispositionType, options?: DispositionStatusOptions)
      parameters:
        - id: message
          type: <xref uid="@azure/service-bus.ServiceBusMessage" />
          description: The ServiceBus Message that needs to be settled.
        - id: operation
          type: <xref uid="@azure/service-bus.DispositionType" />
          description: The disposition type.
        - id: options
          type: <xref uid="@azure/service-bus.DispositionStatusOptions" />
          description: >
            Optional parameters that can be provided while disposing the
            message.
      return:
        type: Promise&lt;any&gt;
        description: ''
extends: <xref uid="@azure/service-bus.MessageReceiver" />
