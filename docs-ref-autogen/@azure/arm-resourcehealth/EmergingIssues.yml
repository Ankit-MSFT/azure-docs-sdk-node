### YamlMime:TSType
name: EmergingIssues
uid: '@azure/arm-resourcehealth.EmergingIssues'
package: '@azure/arm-resourcehealth'
summary: Class representing a EmergingIssues.
fullName: EmergingIssues
remarks: ''
isPreview: false
isDeprecated: false
type: class
constructors:
  - name: EmergingIssues(MicrosoftResourceHealthContext)
    uid: '@azure/arm-resourcehealth.EmergingIssues.constructor'
    package: '@azure/arm-resourcehealth'
    summary: Create a EmergingIssues.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'new EmergingIssues(client: MicrosoftResourceHealthContext)'
      parameters:
        - id: client
          type: >-
            <xref uid="@azure/arm-resourcehealth.MicrosoftResourceHealthContext"
            />
          description: |
            Reference to the service client.
methods:
  - name: get(msRest.RequestOptionsBase)
    uid: '@azure/arm-resourcehealth.EmergingIssues.get'
    package: '@azure/arm-resourcehealth'
    summary: Gets Azure services' emerging issues.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function get(options?: msRest.RequestOptionsBase):
        Promise<Models.EmergingIssuesGetResponse>
      parameters:
        - id: options
          type: <xref uid="msRest.RequestOptionsBase" />
          description: ''
      return:
        description: Promise<Models.EmergingIssuesGetResponse>
        type: Promise&lt;<xref uid="Models.EmergingIssuesGetResponse" />&gt;
  - name: 'get(RequestOptionsBase, ServiceCallback<EmergingIssuesGetResult>)'
    uid: '@azure/arm-resourcehealth.EmergingIssues.get_2'
    package: '@azure/arm-resourcehealth'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function get(options: RequestOptionsBase, callback:
        ServiceCallback<EmergingIssuesGetResult>)
      parameters:
        - id: options
          type: RequestOptionsBase
          description: The optional parameters
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/arm-resourcehealth.EmergingIssuesGetResult" />&gt;
          description: |
            The callback
  - name: get(ServiceCallback<EmergingIssuesGetResult>)
    uid: '@azure/arm-resourcehealth.EmergingIssues.get_1'
    package: '@azure/arm-resourcehealth'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'function get(callback: ServiceCallback<EmergingIssuesGetResult>)'
      parameters:
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/arm-resourcehealth.EmergingIssuesGetResult" />&gt;
          description: |
            The callback
  - name: list(msRest.RequestOptionsBase)
    uid: '@azure/arm-resourcehealth.EmergingIssues.list'
    package: '@azure/arm-resourcehealth'
    summary: Lists Azure services' emerging issues.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function list(options?: msRest.RequestOptionsBase):
        Promise<Models.EmergingIssuesListResponse>
      parameters:
        - id: options
          type: <xref uid="msRest.RequestOptionsBase" />
          description: ''
      return:
        description: Promise<Models.EmergingIssuesListResponse>
        type: Promise&lt;<xref uid="Models.EmergingIssuesListResponse" />&gt;
  - name: 'list(RequestOptionsBase, ServiceCallback<EmergingIssueListResult>)'
    uid: '@azure/arm-resourcehealth.EmergingIssues.list_2'
    package: '@azure/arm-resourcehealth'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function list(options: RequestOptionsBase, callback:
        ServiceCallback<EmergingIssueListResult>)
      parameters:
        - id: options
          type: RequestOptionsBase
          description: The optional parameters
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/arm-resourcehealth.EmergingIssueListResult" />&gt;
          description: |
            The callback
  - name: list(ServiceCallback<EmergingIssueListResult>)
    uid: '@azure/arm-resourcehealth.EmergingIssues.list_1'
    package: '@azure/arm-resourcehealth'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'function list(callback: ServiceCallback<EmergingIssueListResult>)'
      parameters:
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/arm-resourcehealth.EmergingIssueListResult" />&gt;
          description: |
            The callback
  - name: 'listNext(string, msRest.RequestOptionsBase)'
    uid: '@azure/arm-resourcehealth.EmergingIssues.listNext'
    package: '@azure/arm-resourcehealth'
    summary: Lists Azure services' emerging issues.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listNext(nextPageLink: string, options?:
        msRest.RequestOptionsBase):
        Promise<Models.EmergingIssuesListNextResponse>
      parameters:
        - id: nextPageLink
          type: string
          description: The NextLink from the previous successful call to List operation.
        - id: options
          type: <xref uid="msRest.RequestOptionsBase" />
          description: ''
      return:
        description: Promise<Models.EmergingIssuesListNextResponse>
        type: Promise&lt;<xref uid="Models.EmergingIssuesListNextResponse" />&gt;
  - name: >-
      listNext(string, RequestOptionsBase,
      ServiceCallback<EmergingIssueListResult>)
    uid: '@azure/arm-resourcehealth.EmergingIssues.listNext_2'
    package: '@azure/arm-resourcehealth'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listNext(nextPageLink: string, options: RequestOptionsBase,
        callback: ServiceCallback<EmergingIssueListResult>)
      parameters:
        - id: nextPageLink
          type: string
          description: The NextLink from the previous successful call to List operation.
        - id: options
          type: RequestOptionsBase
          description: The optional parameters
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/arm-resourcehealth.EmergingIssueListResult" />&gt;
          description: |
            The callback
  - name: 'listNext(string, ServiceCallback<EmergingIssueListResult>)'
    uid: '@azure/arm-resourcehealth.EmergingIssues.listNext_1'
    package: '@azure/arm-resourcehealth'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listNext(nextPageLink: string, callback:
        ServiceCallback<EmergingIssueListResult>)
      parameters:
        - id: nextPageLink
          type: string
          description: The NextLink from the previous successful call to List operation.
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/arm-resourcehealth.EmergingIssueListResult" />&gt;
          description: |
            The callback
