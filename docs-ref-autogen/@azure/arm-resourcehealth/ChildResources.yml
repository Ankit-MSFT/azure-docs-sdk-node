### YamlMime:TSType
name: ChildResources
uid: '@azure/arm-resourcehealth.ChildResources'
package: '@azure/arm-resourcehealth'
summary: Class representing a ChildResources.
fullName: ChildResources
remarks: ''
isPreview: false
isDeprecated: false
type: class
constructors:
  - name: ChildResources(MicrosoftResourceHealthContext)
    uid: '@azure/arm-resourcehealth.ChildResources.constructor'
    package: '@azure/arm-resourcehealth'
    summary: Create a ChildResources.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'new ChildResources(client: MicrosoftResourceHealthContext)'
      parameters:
        - id: client
          type: >-
            <xref uid="@azure/arm-resourcehealth.MicrosoftResourceHealthContext"
            />
          description: |
            Reference to the service client.
methods:
  - name: >-
      list(string, ChildResourcesListOptionalParams,
      ServiceCallback<AvailabilityStatusListResult>)
    uid: '@azure/arm-resourcehealth.ChildResources.list_2'
    package: '@azure/arm-resourcehealth'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function list(resourceUri: string, options:
        ChildResourcesListOptionalParams, callback:
        ServiceCallback<AvailabilityStatusListResult>)
      parameters:
        - id: resourceUri
          type: string
          description: >-
            The fully qualified ID of the resource, including the resource name
            and

            resource type. Currently the API only support not nested parent
            resource type:

            /subscriptions/{subscriptionId}/resourceGroups/{resource-group-name}/providers/{resource-provider-name}/{resource-type}/{resource-name}
        - id: options
          type: >-
            <xref
            uid="@azure/arm-resourcehealth.ChildResourcesListOptionalParams" />
          description: The optional parameters
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/arm-resourcehealth.AvailabilityStatusListResult" />&gt;
          description: |
            The callback
  - name: 'list(string, Models.ChildResourcesListOptionalParams)'
    uid: '@azure/arm-resourcehealth.ChildResources.list'
    package: '@azure/arm-resourcehealth'
    summary: >-
      Lists the all the children and its current health status for a parent
      resource. Use the nextLink

      property in the response to get the next page of children current health
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function list(resourceUri: string, options?:
        Models.ChildResourcesListOptionalParams):
        Promise<Models.ChildResourcesListResponse>
      parameters:
        - id: resourceUri
          type: string
          description: >-
            The fully qualified ID of the resource, including the resource name
            and

            resource type. Currently the API only support not nested parent
            resource type:

            /subscriptions/{subscriptionId}/resourceGroups/{resource-group-name}/providers/{resource-provider-name}/{resource-type}/{resource-name}
        - id: options
          type: <xref uid="Models.ChildResourcesListOptionalParams" />
          description: ''
      return:
        description: Promise<Models.ChildResourcesListResponse>
        type: Promise&lt;<xref uid="Models.ChildResourcesListResponse" />&gt;
  - name: 'list(string, ServiceCallback<AvailabilityStatusListResult>)'
    uid: '@azure/arm-resourcehealth.ChildResources.list_1'
    package: '@azure/arm-resourcehealth'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function list(resourceUri: string, callback:
        ServiceCallback<AvailabilityStatusListResult>)
      parameters:
        - id: resourceUri
          type: string
          description: >-
            The fully qualified ID of the resource, including the resource name
            and

            resource type. Currently the API only support not nested parent
            resource type:

            /subscriptions/{subscriptionId}/resourceGroups/{resource-group-name}/providers/{resource-provider-name}/{resource-type}/{resource-name}
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/arm-resourcehealth.AvailabilityStatusListResult" />&gt;
          description: |
            The callback
  - name: >-
      listNext(string, ChildResourcesListNextOptionalParams,
      ServiceCallback<AvailabilityStatusListResult>)
    uid: '@azure/arm-resourcehealth.ChildResources.listNext_2'
    package: '@azure/arm-resourcehealth'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listNext(nextPageLink: string, options:
        ChildResourcesListNextOptionalParams, callback:
        ServiceCallback<AvailabilityStatusListResult>)
      parameters:
        - id: nextPageLink
          type: string
          description: The NextLink from the previous successful call to List operation.
        - id: options
          type: >-
            <xref
            uid="@azure/arm-resourcehealth.ChildResourcesListNextOptionalParams"
            />
          description: The optional parameters
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/arm-resourcehealth.AvailabilityStatusListResult" />&gt;
          description: |
            The callback
  - name: 'listNext(string, Models.ChildResourcesListNextOptionalParams)'
    uid: '@azure/arm-resourcehealth.ChildResources.listNext'
    package: '@azure/arm-resourcehealth'
    summary: >-
      Lists the all the children and its current health status for a parent
      resource. Use the nextLink

      property in the response to get the next page of children current health
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listNext(nextPageLink: string, options?:
        Models.ChildResourcesListNextOptionalParams):
        Promise<Models.ChildResourcesListNextResponse>
      parameters:
        - id: nextPageLink
          type: string
          description: The NextLink from the previous successful call to List operation.
        - id: options
          type: <xref uid="Models.ChildResourcesListNextOptionalParams" />
          description: ''
      return:
        description: Promise<Models.ChildResourcesListNextResponse>
        type: Promise&lt;<xref uid="Models.ChildResourcesListNextResponse" />&gt;
  - name: 'listNext(string, ServiceCallback<AvailabilityStatusListResult>)'
    uid: '@azure/arm-resourcehealth.ChildResources.listNext_1'
    package: '@azure/arm-resourcehealth'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listNext(nextPageLink: string, callback:
        ServiceCallback<AvailabilityStatusListResult>)
      parameters:
        - id: nextPageLink
          type: string
          description: The NextLink from the previous successful call to List operation.
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/arm-resourcehealth.AvailabilityStatusListResult" />&gt;
          description: |
            The callback
