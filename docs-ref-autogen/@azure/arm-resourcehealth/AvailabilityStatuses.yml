### YamlMime:TSType
name: AvailabilityStatuses
uid: >-
  @azure/arm-resourcehealth.operations.availabilityStatuses.d.AvailabilityStatuses
package: '@azure/arm-resourcehealth'
summary: Class representing a AvailabilityStatuses.
fullName: AvailabilityStatuses
remarks: ''
isPreview: false
isDeprecated: false
type: class
constructors:
  - name: AvailabilityStatuses(MicrosoftResourceHealthContext)
    uid: >-
      @azure/arm-resourcehealth.operations.availabilityStatuses.d.AvailabilityStatuses.constructor
    package: '@azure/arm-resourcehealth'
    summary: Create a AvailabilityStatuses.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'new AvailabilityStatuses(client: MicrosoftResourceHealthContext)'
      parameters:
        - id: client
          type: >-
            <xref
            uid="@azure/arm-resourcehealth.microsoftResourceHealthContext.d.MicrosoftResourceHealthContext"
            />
          description: |
            Reference to the service client.
methods:
  - name: >-
      getByResource(string, AvailabilityStatusesGetByResourceOptionalParams,
      ServiceCallback<AvailabilityStatus>)
    uid: >-
      @azure/arm-resourcehealth.operations.availabilityStatuses.d.AvailabilityStatuses.getByResource_2
    package: '@azure/arm-resourcehealth'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function getByResource(resourceUri: string, options:
        AvailabilityStatusesGetByResourceOptionalParams, callback:
        ServiceCallback<AvailabilityStatus>)
      parameters:
        - id: resourceUri
          type: string
          description: >-
            The fully qualified ID of the resource, including the resource name
            and

            resource type. Currently the API support not nested and one nesting
            level resource types :

            /subscriptions/{subscriptionId}/resourceGroups/{resource-group-name}/providers/{resource-provider-name}/{resource-type}/{resource-name}

            and

            /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resource-provider-name}/{parentResourceType}/{parentResourceName}/{resourceType}/{resourceName}
        - id: options
          type: >-
            <xref
            uid="@azure/arm-resourcehealth.models.index.d.AvailabilityStatusesGetByResourceOptionalParams"
            />
          description: The optional parameters
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/arm-resourcehealth.models.index.d.AvailabilityStatus"
            />&gt;
          description: |
            The callback
  - name: >-
      getByResource(string,
      Models.AvailabilityStatusesGetByResourceOptionalParams)
    uid: >-
      @azure/arm-resourcehealth.operations.availabilityStatuses.d.AvailabilityStatuses.getByResource
    package: '@azure/arm-resourcehealth'
    summary: Gets current availability status for a single resource
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function getByResource(resourceUri: string, options?:
        Models.AvailabilityStatusesGetByResourceOptionalParams)
      parameters:
        - id: resourceUri
          type: string
          description: >-
            The fully qualified ID of the resource, including the resource name
            and

            resource type. Currently the API support not nested and one nesting
            level resource types :

            /subscriptions/{subscriptionId}/resourceGroups/{resource-group-name}/providers/{resource-provider-name}/{resource-type}/{resource-name}

            and

            /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resource-provider-name}/{parentResourceType}/{parentResourceName}/{resourceType}/{resourceName}
        - id: options
          type: >-
            <xref uid="Models.AvailabilityStatusesGetByResourceOptionalParams"
            />
          description: ''
      return:
        type: >-
          Promise&lt;<xref
          uid="Models.AvailabilityStatusesGetByResourceResponse" />&gt;
        description: Promise<Models.AvailabilityStatusesGetByResourceResponse>
  - name: 'getByResource(string, ServiceCallback<AvailabilityStatus>)'
    uid: >-
      @azure/arm-resourcehealth.operations.availabilityStatuses.d.AvailabilityStatuses.getByResource_1
    package: '@azure/arm-resourcehealth'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function getByResource(resourceUri: string, callback:
        ServiceCallback<AvailabilityStatus>)
      parameters:
        - id: resourceUri
          type: string
          description: >-
            The fully qualified ID of the resource, including the resource name
            and

            resource type. Currently the API support not nested and one nesting
            level resource types :

            /subscriptions/{subscriptionId}/resourceGroups/{resource-group-name}/providers/{resource-provider-name}/{resource-type}/{resource-name}

            and

            /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resource-provider-name}/{parentResourceType}/{parentResourceName}/{resourceType}/{resourceName}
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/arm-resourcehealth.models.index.d.AvailabilityStatus"
            />&gt;
          description: |
            The callback
  - name: >-
      list(string, AvailabilityStatusesListOptionalParams,
      ServiceCallback<AvailabilityStatusListResult>)
    uid: >-
      @azure/arm-resourcehealth.operations.availabilityStatuses.d.AvailabilityStatuses.list_2
    package: '@azure/arm-resourcehealth'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function list(resourceUri: string, options:
        AvailabilityStatusesListOptionalParams, callback:
        ServiceCallback<AvailabilityStatusListResult>)
      parameters:
        - id: resourceUri
          type: string
          description: >-
            The fully qualified ID of the resource, including the resource name
            and

            resource type. Currently the API support not nested and one nesting
            level resource types :

            /subscriptions/{subscriptionId}/resourceGroups/{resource-group-name}/providers/{resource-provider-name}/{resource-type}/{resource-name}

            and

            /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resource-provider-name}/{parentResourceType}/{parentResourceName}/{resourceType}/{resourceName}
        - id: options
          type: >-
            <xref
            uid="@azure/arm-resourcehealth.models.index.d.AvailabilityStatusesListOptionalParams"
            />
          description: The optional parameters
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/arm-resourcehealth.models.index.d.AvailabilityStatusListResult"
            />&gt;
          description: |
            The callback
  - name: 'list(string, Models.AvailabilityStatusesListOptionalParams)'
    uid: >-
      @azure/arm-resourcehealth.operations.availabilityStatuses.d.AvailabilityStatuses.list
    package: '@azure/arm-resourcehealth'
    summary: >-
      Lists all historical availability transitions and impacting events for a
      single resource. Use

      the nextLink property in the response to get the next page of availability
      status
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function list(resourceUri: string, options?:
        Models.AvailabilityStatusesListOptionalParams)
      parameters:
        - id: resourceUri
          type: string
          description: >-
            The fully qualified ID of the resource, including the resource name
            and

            resource type. Currently the API support not nested and one nesting
            level resource types :

            /subscriptions/{subscriptionId}/resourceGroups/{resource-group-name}/providers/{resource-provider-name}/{resource-type}/{resource-name}

            and

            /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resource-provider-name}/{parentResourceType}/{parentResourceName}/{resourceType}/{resourceName}
        - id: options
          type: <xref uid="Models.AvailabilityStatusesListOptionalParams" />
          description: ''
      return:
        type: Promise&lt;<xref uid="Models.AvailabilityStatusesListResponse" />&gt;
        description: Promise<Models.AvailabilityStatusesListResponse>
  - name: 'list(string, ServiceCallback<AvailabilityStatusListResult>)'
    uid: >-
      @azure/arm-resourcehealth.operations.availabilityStatuses.d.AvailabilityStatuses.list_1
    package: '@azure/arm-resourcehealth'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function list(resourceUri: string, callback:
        ServiceCallback<AvailabilityStatusListResult>)
      parameters:
        - id: resourceUri
          type: string
          description: >-
            The fully qualified ID of the resource, including the resource name
            and

            resource type. Currently the API support not nested and one nesting
            level resource types :

            /subscriptions/{subscriptionId}/resourceGroups/{resource-group-name}/providers/{resource-provider-name}/{resource-type}/{resource-name}

            and

            /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resource-provider-name}/{parentResourceType}/{parentResourceName}/{resourceType}/{resourceName}
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/arm-resourcehealth.models.index.d.AvailabilityStatusListResult"
            />&gt;
          description: |
            The callback
  - name: >-
      listByResourceGroup(string,
      AvailabilityStatusesListByResourceGroupOptionalParams,
      ServiceCallback<AvailabilityStatusListResult>)
    uid: >-
      @azure/arm-resourcehealth.operations.availabilityStatuses.d.AvailabilityStatuses.listByResourceGroup_2
    package: '@azure/arm-resourcehealth'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listByResourceGroup(resourceGroupName: string, options:
        AvailabilityStatusesListByResourceGroupOptionalParams, callback:
        ServiceCallback<AvailabilityStatusListResult>)
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group.
        - id: options
          type: >-
            <xref
            uid="@azure/arm-resourcehealth.models.index.d.AvailabilityStatusesListByResourceGroupOptionalParams"
            />
          description: The optional parameters
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/arm-resourcehealth.models.index.d.AvailabilityStatusListResult"
            />&gt;
          description: |
            The callback
  - name: >-
      listByResourceGroup(string,
      Models.AvailabilityStatusesListByResourceGroupOptionalParams)
    uid: >-
      @azure/arm-resourcehealth.operations.availabilityStatuses.d.AvailabilityStatuses.listByResourceGroup
    package: '@azure/arm-resourcehealth'
    summary: >-
      Lists the current availability status for all the resources in the
      resource group. Use the

      nextLink property in the response to get the next page of availability
      statuses.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listByResourceGroup(resourceGroupName: string, options?:
        Models.AvailabilityStatusesListByResourceGroupOptionalParams)
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group.
        - id: options
          type: >-
            <xref
            uid="Models.AvailabilityStatusesListByResourceGroupOptionalParams"
            />
          description: ''
      return:
        type: >-
          Promise&lt;<xref
          uid="Models.AvailabilityStatusesListByResourceGroupResponse" />&gt;
        description: Promise<Models.AvailabilityStatusesListByResourceGroupResponse>
  - name: 'listByResourceGroup(string, ServiceCallback<AvailabilityStatusListResult>)'
    uid: >-
      @azure/arm-resourcehealth.operations.availabilityStatuses.d.AvailabilityStatuses.listByResourceGroup_1
    package: '@azure/arm-resourcehealth'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listByResourceGroup(resourceGroupName: string, callback:
        ServiceCallback<AvailabilityStatusListResult>)
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group.
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/arm-resourcehealth.models.index.d.AvailabilityStatusListResult"
            />&gt;
          description: |
            The callback
  - name: 'listByResourceGroupNext(string, msRest.RequestOptionsBase)'
    uid: >-
      @azure/arm-resourcehealth.operations.availabilityStatuses.d.AvailabilityStatuses.listByResourceGroupNext
    package: '@azure/arm-resourcehealth'
    summary: >-
      Lists the current availability status for all the resources in the
      resource group. Use the

      nextLink property in the response to get the next page of availability
      statuses.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listByResourceGroupNext(nextPageLink: string, options?:
        msRest.RequestOptionsBase)
      parameters:
        - id: nextPageLink
          type: string
          description: The NextLink from the previous successful call to List operation.
        - id: options
          type: <xref uid="msRest.RequestOptionsBase" />
          description: ''
      return:
        type: >-
          Promise&lt;<xref
          uid="Models.AvailabilityStatusesListByResourceGroupNextResponse"
          />&gt;
        description: Promise<Models.AvailabilityStatusesListByResourceGroupNextResponse>
  - name: >-
      listByResourceGroupNext(string, RequestOptionsBase,
      ServiceCallback<AvailabilityStatusListResult>)
    uid: >-
      @azure/arm-resourcehealth.operations.availabilityStatuses.d.AvailabilityStatuses.listByResourceGroupNext_2
    package: '@azure/arm-resourcehealth'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listByResourceGroupNext(nextPageLink: string, options:
        RequestOptionsBase, callback:
        ServiceCallback<AvailabilityStatusListResult>)
      parameters:
        - id: nextPageLink
          type: string
          description: The NextLink from the previous successful call to List operation.
        - id: options
          type: RequestOptionsBase
          description: The optional parameters
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/arm-resourcehealth.models.index.d.AvailabilityStatusListResult"
            />&gt;
          description: |
            The callback
  - name: >-
      listByResourceGroupNext(string,
      ServiceCallback<AvailabilityStatusListResult>)
    uid: >-
      @azure/arm-resourcehealth.operations.availabilityStatuses.d.AvailabilityStatuses.listByResourceGroupNext_1
    package: '@azure/arm-resourcehealth'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listByResourceGroupNext(nextPageLink: string, callback:
        ServiceCallback<AvailabilityStatusListResult>)
      parameters:
        - id: nextPageLink
          type: string
          description: The NextLink from the previous successful call to List operation.
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/arm-resourcehealth.models.index.d.AvailabilityStatusListResult"
            />&gt;
          description: |
            The callback
  - name: >-
      listBySubscriptionId(AvailabilityStatusesListBySubscriptionIdOptionalParams,
      ServiceCallback<AvailabilityStatusListResult>)
    uid: >-
      @azure/arm-resourcehealth.operations.availabilityStatuses.d.AvailabilityStatuses.listBySubscriptionId_2
    package: '@azure/arm-resourcehealth'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listBySubscriptionId(options:
        AvailabilityStatusesListBySubscriptionIdOptionalParams, callback:
        ServiceCallback<AvailabilityStatusListResult>)
      parameters:
        - id: options
          type: >-
            <xref
            uid="@azure/arm-resourcehealth.models.index.d.AvailabilityStatusesListBySubscriptionIdOptionalParams"
            />
          description: The optional parameters
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/arm-resourcehealth.models.index.d.AvailabilityStatusListResult"
            />&gt;
          description: |
            The callback
  - name: >-
      listBySubscriptionId(Models.AvailabilityStatusesListBySubscriptionIdOptionalParams)
    uid: >-
      @azure/arm-resourcehealth.operations.availabilityStatuses.d.AvailabilityStatuses.listBySubscriptionId
    package: '@azure/arm-resourcehealth'
    summary: >-
      Lists the current availability status for all the resources in the
      subscription. Use the

      nextLink property in the response to get the next page of availability
      statuses.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listBySubscriptionId(options?:
        Models.AvailabilityStatusesListBySubscriptionIdOptionalParams)
      parameters:
        - id: options
          type: >-
            <xref
            uid="Models.AvailabilityStatusesListBySubscriptionIdOptionalParams"
            />
          description: ''
      return:
        type: >-
          Promise&lt;<xref
          uid="Models.AvailabilityStatusesListBySubscriptionIdResponse" />&gt;
        description: Promise<Models.AvailabilityStatusesListBySubscriptionIdResponse>
  - name: listBySubscriptionId(ServiceCallback<AvailabilityStatusListResult>)
    uid: >-
      @azure/arm-resourcehealth.operations.availabilityStatuses.d.AvailabilityStatuses.listBySubscriptionId_1
    package: '@azure/arm-resourcehealth'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listBySubscriptionId(callback:
        ServiceCallback<AvailabilityStatusListResult>)
      parameters:
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/arm-resourcehealth.models.index.d.AvailabilityStatusListResult"
            />&gt;
          description: |
            The callback
  - name: 'listBySubscriptionIdNext(string, msRest.RequestOptionsBase)'
    uid: >-
      @azure/arm-resourcehealth.operations.availabilityStatuses.d.AvailabilityStatuses.listBySubscriptionIdNext
    package: '@azure/arm-resourcehealth'
    summary: >-
      Lists the current availability status for all the resources in the
      subscription. Use the

      nextLink property in the response to get the next page of availability
      statuses.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listBySubscriptionIdNext(nextPageLink: string, options?:
        msRest.RequestOptionsBase)
      parameters:
        - id: nextPageLink
          type: string
          description: The NextLink from the previous successful call to List operation.
        - id: options
          type: <xref uid="msRest.RequestOptionsBase" />
          description: ''
      return:
        type: >-
          Promise&lt;<xref
          uid="Models.AvailabilityStatusesListBySubscriptionIdNextResponse"
          />&gt;
        description: Promise<Models.AvailabilityStatusesListBySubscriptionIdNextResponse>
  - name: >-
      listBySubscriptionIdNext(string, RequestOptionsBase,
      ServiceCallback<AvailabilityStatusListResult>)
    uid: >-
      @azure/arm-resourcehealth.operations.availabilityStatuses.d.AvailabilityStatuses.listBySubscriptionIdNext_2
    package: '@azure/arm-resourcehealth'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listBySubscriptionIdNext(nextPageLink: string, options:
        RequestOptionsBase, callback:
        ServiceCallback<AvailabilityStatusListResult>)
      parameters:
        - id: nextPageLink
          type: string
          description: The NextLink from the previous successful call to List operation.
        - id: options
          type: RequestOptionsBase
          description: The optional parameters
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/arm-resourcehealth.models.index.d.AvailabilityStatusListResult"
            />&gt;
          description: |
            The callback
  - name: >-
      listBySubscriptionIdNext(string,
      ServiceCallback<AvailabilityStatusListResult>)
    uid: >-
      @azure/arm-resourcehealth.operations.availabilityStatuses.d.AvailabilityStatuses.listBySubscriptionIdNext_1
    package: '@azure/arm-resourcehealth'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listBySubscriptionIdNext(nextPageLink: string, callback:
        ServiceCallback<AvailabilityStatusListResult>)
      parameters:
        - id: nextPageLink
          type: string
          description: The NextLink from the previous successful call to List operation.
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/arm-resourcehealth.models.index.d.AvailabilityStatusListResult"
            />&gt;
          description: |
            The callback
  - name: 'listNext(string, msRest.RequestOptionsBase)'
    uid: >-
      @azure/arm-resourcehealth.operations.availabilityStatuses.d.AvailabilityStatuses.listNext
    package: '@azure/arm-resourcehealth'
    summary: >-
      Lists all historical availability transitions and impacting events for a
      single resource. Use

      the nextLink property in the response to get the next page of availability
      status
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listNext(nextPageLink: string, options?:
        msRest.RequestOptionsBase)
      parameters:
        - id: nextPageLink
          type: string
          description: The NextLink from the previous successful call to List operation.
        - id: options
          type: <xref uid="msRest.RequestOptionsBase" />
          description: ''
      return:
        type: >-
          Promise&lt;<xref uid="Models.AvailabilityStatusesListNextResponse"
          />&gt;
        description: Promise<Models.AvailabilityStatusesListNextResponse>
  - name: >-
      listNext(string, RequestOptionsBase,
      ServiceCallback<AvailabilityStatusListResult>)
    uid: >-
      @azure/arm-resourcehealth.operations.availabilityStatuses.d.AvailabilityStatuses.listNext_2
    package: '@azure/arm-resourcehealth'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listNext(nextPageLink: string, options: RequestOptionsBase,
        callback: ServiceCallback<AvailabilityStatusListResult>)
      parameters:
        - id: nextPageLink
          type: string
          description: The NextLink from the previous successful call to List operation.
        - id: options
          type: RequestOptionsBase
          description: The optional parameters
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/arm-resourcehealth.models.index.d.AvailabilityStatusListResult"
            />&gt;
          description: |
            The callback
  - name: 'listNext(string, ServiceCallback<AvailabilityStatusListResult>)'
    uid: >-
      @azure/arm-resourcehealth.operations.availabilityStatuses.d.AvailabilityStatuses.listNext_1
    package: '@azure/arm-resourcehealth'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listNext(nextPageLink: string, callback:
        ServiceCallback<AvailabilityStatusListResult>)
      parameters:
        - id: nextPageLink
          type: string
          description: The NextLink from the previous successful call to List operation.
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/arm-resourcehealth.models.index.d.AvailabilityStatusListResult"
            />&gt;
          description: |
            The callback
