### YamlMime:UniversalReference
items:
  - uid: '@azure/cognitiveservices-face.FaceDetectWithStreamOptionalParams'
    name: FaceDetectWithStreamOptionalParams
    fullName: FaceDetectWithStreamOptionalParams
    children:
      - >-
        @azure/cognitiveservices-face.FaceDetectWithStreamOptionalParams.abortSignal
      - >-
        @azure/cognitiveservices-face.FaceDetectWithStreamOptionalParams.customHeaders
      - >-
        @azure/cognitiveservices-face.FaceDetectWithStreamOptionalParams.onDownloadProgress
      - >-
        @azure/cognitiveservices-face.FaceDetectWithStreamOptionalParams.onUploadProgress
      - >-
        @azure/cognitiveservices-face.FaceDetectWithStreamOptionalParams.recognitionModel
      - >-
        @azure/cognitiveservices-face.FaceDetectWithStreamOptionalParams.returnFaceAttributes
      - >-
        @azure/cognitiveservices-face.FaceDetectWithStreamOptionalParams.returnFaceId
      - >-
        @azure/cognitiveservices-face.FaceDetectWithStreamOptionalParams.returnFaceLandmarks
      - >-
        @azure/cognitiveservices-face.FaceDetectWithStreamOptionalParams.returnRecognitionModel
      - '@azure/cognitiveservices-face.FaceDetectWithStreamOptionalParams.timeout'
    langs:
      - typeScript
    type: interface
    summary: Optional Parameters.
    extends:
      name: RequestOptionsBase
    package: '@azure/cognitiveservices-face'
  - uid: >-
      @azure/cognitiveservices-face.FaceDetectWithStreamOptionalParams.abortSignal
    name: abortSignal
    fullName: abortSignal
    children: []
    langs:
      - typeScript
    type: property
    summary: The signal which can be used to abort requests.
    optional: true
    syntax:
      content: 'abortSignal?: AbortSignalLike'
      return:
        type:
          - AbortSignalLike
    package: '@azure/cognitiveservices-face'
  - uid: >-
      @azure/cognitiveservices-face.FaceDetectWithStreamOptionalParams.customHeaders
    name: customHeaders
    fullName: customHeaders
    children: []
    langs:
      - typeScript
    type: property
    summary: |-
      {object} [customHeaders] User defined custom request headers that
      will be applied before the request is sent.
    optional: true
    syntax:
      content: 'customHeaders?: undefined | [key: string]: string'
      return:
        type:
          - 'undefined | [key: string]: string'
    package: '@azure/cognitiveservices-face'
  - uid: >-
      @azure/cognitiveservices-face.FaceDetectWithStreamOptionalParams.onDownloadProgress
    name: onDownloadProgress
    fullName: onDownloadProgress
    children: []
    langs:
      - typeScript
    type: property
    summary: Callback which fires upon download progress.
    optional: true
    syntax:
      content: >-
        onDownloadProgress?: undefined | (progress: TransferProgressEvent) =>
        void
      return:
        type:
          - 'undefined | (progress: TransferProgressEvent) => void'
    package: '@azure/cognitiveservices-face'
  - uid: >-
      @azure/cognitiveservices-face.FaceDetectWithStreamOptionalParams.onUploadProgress
    name: onUploadProgress
    fullName: onUploadProgress
    children: []
    langs:
      - typeScript
    type: property
    summary: Callback which fires upon upload progress.
    optional: true
    syntax:
      content: 'onUploadProgress?: undefined | (progress: TransferProgressEvent) => void'
      return:
        type:
          - 'undefined | (progress: TransferProgressEvent) => void'
    package: '@azure/cognitiveservices-face'
  - uid: >-
      @azure/cognitiveservices-face.FaceDetectWithStreamOptionalParams.recognitionModel
    name: recognitionModel
    fullName: recognitionModel
    children: []
    langs:
      - typeScript
    type: property
    summary: >-
      Name of recognition model. Recognition model is used when the face
      features are extracted and

      associated with detected faceIds, (Large)FaceList or (Large)PersonGroup. A
      recognition model

      name can be provided when performing Face - Detect or (Large)FaceList -
      Create or

      (Large)PersonGroup - Create. The default value is 'recognition_01', if
      latest model needed,

      please explicitly specify the model you need. Possible values include:
      'recognition_01',

      'recognition_02'. Default value: 'recognition_01'.
    optional: true
    syntax:
      content: 'recognitionModel?: RecognitionModel'
      return:
        type:
          - '@azure/cognitiveservices-face.RecognitionModel'
    package: '@azure/cognitiveservices-face'
  - uid: >-
      @azure/cognitiveservices-face.FaceDetectWithStreamOptionalParams.returnFaceAttributes
    name: returnFaceAttributes
    fullName: returnFaceAttributes
    children: []
    langs:
      - typeScript
    type: property
    summary: >-
      Analyze and return the one or more specified face attributes in the
      comma-separated string

      like "returnFaceAttributes=age,gender". Supported face attributes include
      age, gender,

      headPose, smile, facialHair, glasses and emotion. Note that each face
      attribute analysis has

      additional computational and time cost.
    optional: true
    syntax:
      content: 'returnFaceAttributes?: FaceAttributeType[]'
      return:
        type:
          - '@azure/cognitiveservices-face.FaceAttributeType[]'
    package: '@azure/cognitiveservices-face'
  - uid: >-
      @azure/cognitiveservices-face.FaceDetectWithStreamOptionalParams.returnFaceId
    name: returnFaceId
    fullName: returnFaceId
    children: []
    langs:
      - typeScript
    type: property
    summary: >-
      A value indicating whether the operation should return faceIds of detected
      faces. Default

      value: true.
    optional: true
    syntax:
      content: 'returnFaceId?: undefined | false | true'
      return:
        type:
          - undefined | false | true
    package: '@azure/cognitiveservices-face'
  - uid: >-
      @azure/cognitiveservices-face.FaceDetectWithStreamOptionalParams.returnFaceLandmarks
    name: returnFaceLandmarks
    fullName: returnFaceLandmarks
    children: []
    langs:
      - typeScript
    type: property
    summary: >-
      A value indicating whether the operation should return landmarks of the
      detected faces.

      Default value: false.
    optional: true
    syntax:
      content: 'returnFaceLandmarks?: undefined | false | true'
      return:
        type:
          - undefined | false | true
    package: '@azure/cognitiveservices-face'
  - uid: >-
      @azure/cognitiveservices-face.FaceDetectWithStreamOptionalParams.returnRecognitionModel
    name: returnRecognitionModel
    fullName: returnRecognitionModel
    children: []
    langs:
      - typeScript
    type: property
    summary: >-
      A value indicating whether the operation should return 'recognitionModel'
      in response. Default

      value: false.
    optional: true
    syntax:
      content: 'returnRecognitionModel?: undefined | false | true'
      return:
        type:
          - undefined | false | true
    package: '@azure/cognitiveservices-face'
  - uid: '@azure/cognitiveservices-face.FaceDetectWithStreamOptionalParams.timeout'
    name: timeout
    fullName: timeout
    children: []
    langs:
      - typeScript
    type: property
    summary: >-
      The number of milliseconds a request can take before automatically being
      terminated.
    optional: true
    syntax:
      content: 'timeout?: undefined | number'
      return:
        type:
          - undefined | number
    package: '@azure/cognitiveservices-face'
references:
  - uid: '@azure/cognitiveservices-face.RecognitionModel'
    name: RecognitionModel
    spec.typeScript:
      - name: RecognitionModel
        fullName: RecognitionModel
        uid: '@azure/cognitiveservices-face.RecognitionModel'
  - uid: '@azure/cognitiveservices-face.FaceAttributeType[]'
    name: 'FaceAttributeType[]'
    spec.typeScript:
      - name: FaceAttributeType
        fullName: FaceAttributeType
        uid: '@azure/cognitiveservices-face.FaceAttributeType'
      - name: '[]'
        fullName: '[]'
