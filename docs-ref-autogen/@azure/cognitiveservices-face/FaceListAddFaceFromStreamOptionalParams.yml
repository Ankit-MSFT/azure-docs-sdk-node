### YamlMime:UniversalReference
items:
  - uid: '@azure/cognitiveservices-face.FaceListAddFaceFromStreamOptionalParams'
    name: FaceListAddFaceFromStreamOptionalParams
    fullName: FaceListAddFaceFromStreamOptionalParams
    children:
      - >-
        @azure/cognitiveservices-face.FaceListAddFaceFromStreamOptionalParams.abortSignal
      - >-
        @azure/cognitiveservices-face.FaceListAddFaceFromStreamOptionalParams.customHeaders
      - >-
        @azure/cognitiveservices-face.FaceListAddFaceFromStreamOptionalParams.onDownloadProgress
      - >-
        @azure/cognitiveservices-face.FaceListAddFaceFromStreamOptionalParams.onUploadProgress
      - >-
        @azure/cognitiveservices-face.FaceListAddFaceFromStreamOptionalParams.targetFace
      - >-
        @azure/cognitiveservices-face.FaceListAddFaceFromStreamOptionalParams.timeout
      - >-
        @azure/cognitiveservices-face.FaceListAddFaceFromStreamOptionalParams.userData
    langs:
      - typeScript
    type: interface
    summary: Optional Parameters.
    extends:
      name: RequestOptionsBase
    package: '@azure/cognitiveservices-face'
  - uid: >-
      @azure/cognitiveservices-face.FaceListAddFaceFromStreamOptionalParams.abortSignal
    name: abortSignal
    fullName: abortSignal
    children: []
    langs:
      - typeScript
    type: property
    summary: The signal which can be used to abort requests.
    optional: true
    syntax:
      content: 'abortSignal?: AbortSignalLike'
      return:
        type:
          - AbortSignalLike
    package: '@azure/cognitiveservices-face'
  - uid: >-
      @azure/cognitiveservices-face.FaceListAddFaceFromStreamOptionalParams.customHeaders
    name: customHeaders
    fullName: customHeaders
    children: []
    langs:
      - typeScript
    type: property
    summary: |-
      {object} [customHeaders] User defined custom request headers that
      will be applied before the request is sent.
    optional: true
    syntax:
      content: 'customHeaders?: undefined | [key: string]: string'
      return:
        type:
          - 'undefined | [key: string]: string'
    package: '@azure/cognitiveservices-face'
  - uid: >-
      @azure/cognitiveservices-face.FaceListAddFaceFromStreamOptionalParams.onDownloadProgress
    name: onDownloadProgress
    fullName: onDownloadProgress
    children: []
    langs:
      - typeScript
    type: property
    summary: Callback which fires upon download progress.
    optional: true
    syntax:
      content: >-
        onDownloadProgress?: undefined | (progress: TransferProgressEvent) =>
        void
      return:
        type:
          - 'undefined | (progress: TransferProgressEvent) => void'
    package: '@azure/cognitiveservices-face'
  - uid: >-
      @azure/cognitiveservices-face.FaceListAddFaceFromStreamOptionalParams.onUploadProgress
    name: onUploadProgress
    fullName: onUploadProgress
    children: []
    langs:
      - typeScript
    type: property
    summary: Callback which fires upon upload progress.
    optional: true
    syntax:
      content: 'onUploadProgress?: undefined | (progress: TransferProgressEvent) => void'
      return:
        type:
          - 'undefined | (progress: TransferProgressEvent) => void'
    package: '@azure/cognitiveservices-face'
  - uid: >-
      @azure/cognitiveservices-face.FaceListAddFaceFromStreamOptionalParams.targetFace
    name: targetFace
    fullName: targetFace
    children: []
    langs:
      - typeScript
    type: property
    summary: >-
      A face rectangle to specify the target face to be added to a person in the
      format of

      "targetFace=left,top,width,height". E.g. "targetFace=10,10,100,100". If
      there is more than one

      face in the image, targetFace is required to specify which face to add. No
      targetFace means

      there is only one face detected in the entire image.
    optional: true
    syntax:
      content: 'targetFace?: number[]'
      return:
        type:
          - 'number[]'
    package: '@azure/cognitiveservices-face'
  - uid: >-
      @azure/cognitiveservices-face.FaceListAddFaceFromStreamOptionalParams.timeout
    name: timeout
    fullName: timeout
    children: []
    langs:
      - typeScript
    type: property
    summary: >-
      The number of milliseconds a request can take before automatically being
      terminated.
    optional: true
    syntax:
      content: 'timeout?: undefined | number'
      return:
        type:
          - undefined | number
    package: '@azure/cognitiveservices-face'
  - uid: >-
      @azure/cognitiveservices-face.FaceListAddFaceFromStreamOptionalParams.userData
    name: userData
    fullName: userData
    children: []
    langs:
      - typeScript
    type: property
    summary: >-
      User-specified data about the face for any purpose. The maximum length is
      1KB.
    optional: true
    syntax:
      content: 'userData?: undefined | string'
      return:
        type:
          - undefined | string
    package: '@azure/cognitiveservices-face'
