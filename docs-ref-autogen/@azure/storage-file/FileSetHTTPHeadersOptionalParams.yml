### YamlMime:UniversalReference
items:
  - uid: '@azure/storage-file.FileSetHTTPHeadersOptionalParams'
    name: FileSetHTTPHeadersOptionalParams
    fullName: FileSetHTTPHeadersOptionalParams
    children:
      - '@azure/storage-file.FileSetHTTPHeadersOptionalParams.abortSignal'
      - '@azure/storage-file.FileSetHTTPHeadersOptionalParams.customHeaders'
      - '@azure/storage-file.FileSetHTTPHeadersOptionalParams.fileContentLength'
      - '@azure/storage-file.FileSetHTTPHeadersOptionalParams.fileHTTPHeaders'
      - '@azure/storage-file.FileSetHTTPHeadersOptionalParams.onDownloadProgress'
      - '@azure/storage-file.FileSetHTTPHeadersOptionalParams.onUploadProgress'
      - '@azure/storage-file.FileSetHTTPHeadersOptionalParams.timeout'
      - '@azure/storage-file.FileSetHTTPHeadersOptionalParams.timeoutParameter'
    langs:
      - typeScript
    type: interface
    summary: Optional Parameters.
    extends:
      name: RequestOptionsBase
    package: '@azure/storage-file'
  - uid: '@azure/storage-file.FileSetHTTPHeadersOptionalParams.abortSignal'
    name: abortSignal
    fullName: abortSignal
    children: []
    langs:
      - typeScript
    type: property
    summary: The signal which can be used to abort requests.
    optional: true
    syntax:
      content: 'abortSignal?: AbortSignalLike'
      return:
        type:
          - AbortSignalLike
    package: '@azure/storage-file'
  - uid: '@azure/storage-file.FileSetHTTPHeadersOptionalParams.customHeaders'
    name: customHeaders
    fullName: customHeaders
    children: []
    langs:
      - typeScript
    type: property
    summary: |-
      {object} [customHeaders] User defined custom request headers that
      will be applied before the request is sent.
    optional: true
    syntax:
      content: 'customHeaders?: undefined | [key: string]: string'
      return:
        type:
          - 'undefined | [key: string]: string'
    package: '@azure/storage-file'
  - uid: '@azure/storage-file.FileSetHTTPHeadersOptionalParams.fileContentLength'
    name: fileContentLength
    fullName: fileContentLength
    children: []
    langs:
      - typeScript
    type: property
    summary: >-
      Resizes a file to the specified size. If the specified byte value is less
      than the current

      size of the file, then all ranges above the specified byte value are
      cleared.
    optional: true
    syntax:
      content: 'fileContentLength?: undefined | number'
      return:
        type:
          - undefined | number
    package: '@azure/storage-file'
  - uid: '@azure/storage-file.FileSetHTTPHeadersOptionalParams.fileHTTPHeaders'
    name: fileHTTPHeaders
    fullName: fileHTTPHeaders
    children: []
    langs:
      - typeScript
    type: property
    summary: Additional parameters for the operation
    optional: true
    syntax:
      content: 'fileHTTPHeaders?: FileHTTPHeaders'
      return:
        type:
          - '@azure/storage-file.FileHTTPHeaders'
    package: '@azure/storage-file'
  - uid: '@azure/storage-file.FileSetHTTPHeadersOptionalParams.onDownloadProgress'
    name: onDownloadProgress
    fullName: onDownloadProgress
    children: []
    langs:
      - typeScript
    type: property
    summary: Callback which fires upon download progress.
    optional: true
    syntax:
      content: >-
        onDownloadProgress?: undefined | (progress: TransferProgressEvent) =>
        void
      return:
        type:
          - 'undefined | (progress: TransferProgressEvent) => void'
    package: '@azure/storage-file'
  - uid: '@azure/storage-file.FileSetHTTPHeadersOptionalParams.onUploadProgress'
    name: onUploadProgress
    fullName: onUploadProgress
    children: []
    langs:
      - typeScript
    type: property
    summary: Callback which fires upon upload progress.
    optional: true
    syntax:
      content: 'onUploadProgress?: undefined | (progress: TransferProgressEvent) => void'
      return:
        type:
          - 'undefined | (progress: TransferProgressEvent) => void'
    package: '@azure/storage-file'
  - uid: '@azure/storage-file.FileSetHTTPHeadersOptionalParams.timeout'
    name: timeout
    fullName: timeout
    children: []
    langs:
      - typeScript
    type: property
    summary: >-
      The number of milliseconds a request can take before automatically being
      terminated.
    optional: true
    syntax:
      content: 'timeout?: undefined | number'
      return:
        type:
          - undefined | number
    package: '@azure/storage-file'
  - uid: '@azure/storage-file.FileSetHTTPHeadersOptionalParams.timeoutParameter'
    name: timeoutParameter
    fullName: timeoutParameter
    children: []
    langs:
      - typeScript
    type: property
    summary: >-
      The timeout parameter is expressed in seconds. For more information, see
      <a

      href="https://docs.microsoft.com/en-us/rest/api/storageservices/Setting-Timeouts-for-File-Service-Operations?redirectedfrom=MSDN">Setting

      Timeouts for File Service Operations.</a>
    optional: true
    syntax:
      content: 'timeoutParameter?: undefined | number'
      return:
        type:
          - undefined | number
    package: '@azure/storage-file'
references:
  - uid: '@azure/storage-file.FileHTTPHeaders'
    name: FileHTTPHeaders
    spec.typeScript:
      - name: FileHTTPHeaders
        fullName: FileHTTPHeaders
        uid: '@azure/storage-file.FileHTTPHeaders'
