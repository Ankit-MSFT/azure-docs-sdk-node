### YamlMime:UniversalReference
items:
  - uid: '@azure/arm-support.SupportTickets'
    name: SupportTickets
    fullName: SupportTickets
    children:
      - '@azure/arm-support.SupportTickets.beginCreate'
      - '@azure/arm-support.SupportTickets.checkNameAvailability'
      - '@azure/arm-support.SupportTickets.checkNameAvailability_2'
      - '@azure/arm-support.SupportTickets.checkNameAvailability_1'
      - '@azure/arm-support.SupportTickets.create'
      - '@azure/arm-support.SupportTickets.get'
      - '@azure/arm-support.SupportTickets.get_2'
      - '@azure/arm-support.SupportTickets.get_1'
      - '@azure/arm-support.SupportTickets.list'
      - '@azure/arm-support.SupportTickets.list_1'
      - '@azure/arm-support.SupportTickets.list_2'
      - '@azure/arm-support.SupportTickets.listNext'
      - '@azure/arm-support.SupportTickets.listNext_2'
      - '@azure/arm-support.SupportTickets.listNext_1'
      - '@azure/arm-support.SupportTickets.constructor'
      - '@azure/arm-support.SupportTickets.update'
      - '@azure/arm-support.SupportTickets.update_2'
      - '@azure/arm-support.SupportTickets.update_1'
    langs:
      - typeScript
    type: class
    summary: Class representing a SupportTickets.
    package: '@azure/arm-support'
  - uid: '@azure/arm-support.SupportTickets.beginCreate'
    name: 'beginCreate(string, SupportTicketDetails, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      Creates a new support ticket for Subscription and Service limits (Quota),
      Technical, Billing,

      and Subscription Management issues for the specified subscription. Learn
      the

      [prerequisites](https://aka.ms/supportAPI) required to create a support
      ticket.<br/><br/>Always

      call the Services and ProblemClassifications API to get the most recent
      set of services and

      problem categories required for support ticket creation.<br/><br/>Adding
      attachments is not

      currently supported via the API. To add a file to an existing support
      ticket, visit the [Manage

      support

      ticket](https://portal.azure.com/#blade/Microsoft_Azure_Support/HelpAndSupportBlade/managesupportrequest)

      page in the Azure portal, select the support ticket, and use the file
      upload control to add a

      new file.<br/><br/>Providing consent to share diagnostic information with
      Azure support is

      currently not supported via the API. The Azure support engineer working on
      your ticket will

      reach out to you for consent if your issue requires gathering diagnostic
      information from your

      Azure resources.<br/><br/>**Creating a support ticket for on-behalf-of**:
      Include

      _x-ms-authorization-auxiliary_ header to provide an auxiliary token as per

      [documentation](https://docs.microsoft.com/azure/azure-resource-manager/management/authenticate-multi-tenant).

      The primary token will be from the tenant for whom a support ticket is
      being raised against the

      subscription, i.e. Cloud solution provider (CSP) customer tenant. The
      auxiliary token will be

      from the Cloud solution provider (CSP) partner tenant.
    syntax:
      content: >-
        function beginCreate(supportTicketName: string,
        createSupportTicketParameters: SupportTicketDetails, options?:
        msRest.RequestOptionsBase)
      parameters:
        - id: supportTicketName
          type:
            - string
          description: Support ticket name.
        - id: createSupportTicketParameters
          type:
            - '@azure/arm-support.SupportTicketDetails'
          description: Support ticket request payload.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<LROPoller>
        description: Promise<msRestAzure.LROPoller>
    package: '@azure/arm-support'
  - uid: '@azure/arm-support.SupportTickets.checkNameAvailability'
    name: >-
      checkNameAvailability(CheckNameAvailabilityInput,
      msRest.RequestOptionsBase)
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      Check the availability of a resource name. This API should be used to
      check the uniqueness of

      the name for support ticket creation for the selected subscription.
    syntax:
      content: >-
        function checkNameAvailability(checkNameAvailabilityInput:
        CheckNameAvailabilityInput, options?: msRest.RequestOptionsBase)
      parameters:
        - id: checkNameAvailabilityInput
          type:
            - '@azure/arm-support.CheckNameAvailabilityInput'
          description: Input to check.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.SupportTicketsCheckNameAvailabilityResponse>
        description: Promise<Models.SupportTicketsCheckNameAvailabilityResponse>
    package: '@azure/arm-support'
  - uid: '@azure/arm-support.SupportTickets.checkNameAvailability_2'
    name: >-
      checkNameAvailability(CheckNameAvailabilityInput, RequestOptionsBase,
      ServiceCallback<CheckNameAvailabilityOutput>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function checkNameAvailability(checkNameAvailabilityInput:
        CheckNameAvailabilityInput, options: RequestOptionsBase, callback:
        ServiceCallback<CheckNameAvailabilityOutput>)
      parameters:
        - id: checkNameAvailabilityInput
          type:
            - '@azure/arm-support.CheckNameAvailabilityInput'
          description: Input to check.
        - id: options
          type:
            - RequestOptionsBase
          description: The optional parameters
        - id: callback
          type:
            - ServiceCallback<@azure/arm-support.CheckNameAvailabilityOutput>
          description: |
            The callback
    package: '@azure/arm-support'
  - uid: '@azure/arm-support.SupportTickets.checkNameAvailability_1'
    name: >-
      checkNameAvailability(CheckNameAvailabilityInput,
      ServiceCallback<CheckNameAvailabilityOutput>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function checkNameAvailability(checkNameAvailabilityInput:
        CheckNameAvailabilityInput, callback:
        ServiceCallback<CheckNameAvailabilityOutput>)
      parameters:
        - id: checkNameAvailabilityInput
          type:
            - '@azure/arm-support.CheckNameAvailabilityInput'
          description: Input to check.
        - id: callback
          type:
            - ServiceCallback<@azure/arm-support.CheckNameAvailabilityOutput>
          description: |
            The callback
    package: '@azure/arm-support'
  - uid: '@azure/arm-support.SupportTickets.create'
    name: 'create(string, SupportTicketDetails, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      Creates a new support ticket for Subscription and Service limits (Quota),
      Technical, Billing,

      and Subscription Management issues for the specified subscription. Learn
      the

      [prerequisites](https://aka.ms/supportAPI) required to create a support
      ticket.<br/><br/>Always

      call the Services and ProblemClassifications API to get the most recent
      set of services and

      problem categories required for support ticket creation.<br/><br/>Adding
      attachments is not

      currently supported via the API. To add a file to an existing support
      ticket, visit the [Manage

      support

      ticket](https://portal.azure.com/#blade/Microsoft_Azure_Support/HelpAndSupportBlade/managesupportrequest)

      page in the Azure portal, select the support ticket, and use the file
      upload control to add a

      new file.<br/><br/>Providing consent to share diagnostic information with
      Azure support is

      currently not supported via the API. The Azure support engineer working on
      your ticket will

      reach out to you for consent if your issue requires gathering diagnostic
      information from your

      Azure resources.<br/><br/>**Creating a support ticket for on-behalf-of**:
      Include

      _x-ms-authorization-auxiliary_ header to provide an auxiliary token as per

      [documentation](https://docs.microsoft.com/azure/azure-resource-manager/management/authenticate-multi-tenant).

      The primary token will be from the tenant for whom a support ticket is
      being raised against the

      subscription, i.e. Cloud solution provider (CSP) customer tenant. The
      auxiliary token will be

      from the Cloud solution provider (CSP) partner tenant.
    syntax:
      content: >-
        function create(supportTicketName: string,
        createSupportTicketParameters: SupportTicketDetails, options?:
        msRest.RequestOptionsBase)
      parameters:
        - id: supportTicketName
          type:
            - string
          description: Support ticket name.
        - id: createSupportTicketParameters
          type:
            - '@azure/arm-support.SupportTicketDetails'
          description: Support ticket request payload.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.SupportTicketsCreateResponse>
        description: Promise<Models.SupportTicketsCreateResponse>
    package: '@azure/arm-support'
  - uid: '@azure/arm-support.SupportTickets.get'
    name: 'get(string, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      Get ticket details for an Azure subscription. Support ticket data is
      available for 12 months

      after ticket creation. If a ticket was created more than 12 months ago, a
      request for data might

      cause an error.
    syntax:
      content: >-
        function get(supportTicketName: string, options?:
        msRest.RequestOptionsBase)
      parameters:
        - id: supportTicketName
          type:
            - string
          description: Support ticket name.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.SupportTicketsGetResponse>
        description: Promise<Models.SupportTicketsGetResponse>
    package: '@azure/arm-support'
  - uid: '@azure/arm-support.SupportTickets.get_2'
    name: 'get(string, RequestOptionsBase, ServiceCallback<SupportTicketDetails>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function get(supportTicketName: string, options: RequestOptionsBase,
        callback: ServiceCallback<SupportTicketDetails>)
      parameters:
        - id: supportTicketName
          type:
            - string
          description: Support ticket name.
        - id: options
          type:
            - RequestOptionsBase
          description: The optional parameters
        - id: callback
          type:
            - ServiceCallback<@azure/arm-support.SupportTicketDetails>
          description: |
            The callback
    package: '@azure/arm-support'
  - uid: '@azure/arm-support.SupportTickets.get_1'
    name: 'get(string, ServiceCallback<SupportTicketDetails>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function get(supportTicketName: string, callback:
        ServiceCallback<SupportTicketDetails>)
      parameters:
        - id: supportTicketName
          type:
            - string
          description: Support ticket name.
        - id: callback
          type:
            - ServiceCallback<@azure/arm-support.SupportTicketDetails>
          description: |
            The callback
    package: '@azure/arm-support'
  - uid: '@azure/arm-support.SupportTickets.list'
    name: list(Models.SupportTicketsListOptionalParams)
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      Lists all the support tickets for an Azure subscription. You can also
      filter the support tickets

      by _Status_ or _CreatedDate_ using the $filter parameter. Output will be a
      paged result with

      _nextLink_, using which you can retrieve the next set of support tickets.
      <br/><br/>Support

      ticket data is available for 12 months after ticket creation. If a ticket
      was created more than

      12 months ago, a request for data might cause an error.
    syntax:
      content: 'function list(options?: Models.SupportTicketsListOptionalParams)'
      parameters:
        - id: options
          type:
            - Models.SupportTicketsListOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.SupportTicketsListResponse>
        description: Promise<Models.SupportTicketsListResponse>
    package: '@azure/arm-support'
  - uid: '@azure/arm-support.SupportTickets.list_1'
    name: list(ServiceCallback<SupportTicketsListResult>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function list(callback: ServiceCallback<SupportTicketsListResult>)'
      parameters:
        - id: callback
          type:
            - ServiceCallback<@azure/arm-support.SupportTicketsListResult>
          description: |
            The callback
    package: '@azure/arm-support'
  - uid: '@azure/arm-support.SupportTickets.list_2'
    name: >-
      list(SupportTicketsListOptionalParams,
      ServiceCallback<SupportTicketsListResult>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function list(options: SupportTicketsListOptionalParams, callback:
        ServiceCallback<SupportTicketsListResult>)
      parameters:
        - id: options
          type:
            - '@azure/arm-support.SupportTicketsListOptionalParams'
          description: The optional parameters
        - id: callback
          type:
            - ServiceCallback<@azure/arm-support.SupportTicketsListResult>
          description: |
            The callback
    package: '@azure/arm-support'
  - uid: '@azure/arm-support.SupportTickets.listNext'
    name: 'listNext(string, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      Lists all the support tickets for an Azure subscription. You can also
      filter the support tickets

      by _Status_ or _CreatedDate_ using the $filter parameter. Output will be a
      paged result with

      _nextLink_, using which you can retrieve the next set of support tickets.
      <br/><br/>Support

      ticket data is available for 12 months after ticket creation. If a ticket
      was created more than

      12 months ago, a request for data might cause an error.
    syntax:
      content: >-
        function listNext(nextPageLink: string, options?:
        msRest.RequestOptionsBase)
      parameters:
        - id: nextPageLink
          type:
            - string
          description: The NextLink from the previous successful call to List operation.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.SupportTicketsListNextResponse>
        description: Promise<Models.SupportTicketsListNextResponse>
    package: '@azure/arm-support'
  - uid: '@azure/arm-support.SupportTickets.listNext_2'
    name: >-
      listNext(string, RequestOptionsBase,
      ServiceCallback<SupportTicketsListResult>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function listNext(nextPageLink: string, options: RequestOptionsBase,
        callback: ServiceCallback<SupportTicketsListResult>)
      parameters:
        - id: nextPageLink
          type:
            - string
          description: The NextLink from the previous successful call to List operation.
        - id: options
          type:
            - RequestOptionsBase
          description: The optional parameters
        - id: callback
          type:
            - ServiceCallback<@azure/arm-support.SupportTicketsListResult>
          description: |
            The callback
    package: '@azure/arm-support'
  - uid: '@azure/arm-support.SupportTickets.listNext_1'
    name: 'listNext(string, ServiceCallback<SupportTicketsListResult>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function listNext(nextPageLink: string, callback:
        ServiceCallback<SupportTicketsListResult>)
      parameters:
        - id: nextPageLink
          type:
            - string
          description: The NextLink from the previous successful call to List operation.
        - id: callback
          type:
            - ServiceCallback<@azure/arm-support.SupportTicketsListResult>
          description: |
            The callback
    package: '@azure/arm-support'
  - uid: '@azure/arm-support.SupportTickets.constructor'
    name: SupportTickets(MicrosoftSupportContext)
    children: []
    type: constructor
    langs:
      - typeScript
    summary: Create a SupportTickets.
    syntax:
      content: 'new SupportTickets(client: MicrosoftSupportContext)'
      parameters:
        - id: client
          type:
            - '@azure/arm-support.MicrosoftSupportContext'
          description: |
            Reference to the service client.
    package: '@azure/arm-support'
  - uid: '@azure/arm-support.SupportTickets.update'
    name: 'update(string, UpdateSupportTicket, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      This API allows you to update the severity level, ticket status, and your
      contact information in

      the support ticket.<br/><br/>Note: The severity levels cannot be changed
      if a support ticket is

      actively being worked upon by an Azure support engineer. In such a case,
      contact your support

      engineer to request severity update by adding a new communication using
      the Communications

      API.<br/><br/>Changing the ticket status to _closed_ is allowed only on an
      unassigned case. When

      an engineer is actively working on the ticket, send your ticket closure
      request by sending a

      note to your engineer.
    syntax:
      content: >-
        function update(supportTicketName: string, updateSupportTicket:
        UpdateSupportTicket, options?: msRest.RequestOptionsBase)
      parameters:
        - id: supportTicketName
          type:
            - string
          description: Support ticket name.
        - id: updateSupportTicket
          type:
            - '@azure/arm-support.UpdateSupportTicket'
          description: UpdateSupportTicket object.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.SupportTicketsUpdateResponse>
        description: Promise<Models.SupportTicketsUpdateResponse>
    package: '@azure/arm-support'
  - uid: '@azure/arm-support.SupportTickets.update_2'
    name: >-
      update(string, UpdateSupportTicket, RequestOptionsBase,
      ServiceCallback<SupportTicketDetails>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function update(supportTicketName: string, updateSupportTicket:
        UpdateSupportTicket, options: RequestOptionsBase, callback:
        ServiceCallback<SupportTicketDetails>)
      parameters:
        - id: supportTicketName
          type:
            - string
          description: Support ticket name.
        - id: updateSupportTicket
          type:
            - '@azure/arm-support.UpdateSupportTicket'
          description: UpdateSupportTicket object.
        - id: options
          type:
            - RequestOptionsBase
          description: The optional parameters
        - id: callback
          type:
            - ServiceCallback<@azure/arm-support.SupportTicketDetails>
          description: |
            The callback
    package: '@azure/arm-support'
  - uid: '@azure/arm-support.SupportTickets.update_1'
    name: 'update(string, UpdateSupportTicket, ServiceCallback<SupportTicketDetails>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function update(supportTicketName: string, updateSupportTicket:
        UpdateSupportTicket, callback: ServiceCallback<SupportTicketDetails>)
      parameters:
        - id: supportTicketName
          type:
            - string
          description: Support ticket name.
        - id: updateSupportTicket
          type:
            - '@azure/arm-support.UpdateSupportTicket'
          description: UpdateSupportTicket object.
        - id: callback
          type:
            - ServiceCallback<@azure/arm-support.SupportTicketDetails>
          description: |
            The callback
    package: '@azure/arm-support'
references:
  - uid: '@azure/arm-support.MicrosoftSupportContext'
    name: MicrosoftSupportContext
    spec.typeScript:
      - name: MicrosoftSupportContext
        fullName: MicrosoftSupportContext
        uid: '@azure/arm-support.MicrosoftSupportContext'
  - uid: '@azure/arm-support.SupportTicketDetails'
    name: SupportTicketDetails
    spec.typeScript:
      - name: SupportTicketDetails
        fullName: SupportTicketDetails
        uid: '@azure/arm-support.SupportTicketDetails'
  - uid: '@azure/arm-support.CheckNameAvailabilityInput'
    name: CheckNameAvailabilityInput
    spec.typeScript:
      - name: CheckNameAvailabilityInput
        fullName: CheckNameAvailabilityInput
        uid: '@azure/arm-support.CheckNameAvailabilityInput'
  - uid: ServiceCallback<@azure/arm-support.CheckNameAvailabilityOutput>
    name: CheckNameAvailabilityOutput>
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: CheckNameAvailabilityOutput
        fullName: CheckNameAvailabilityOutput
        uid: '@azure/arm-support.CheckNameAvailabilityOutput'
      - name: '>'
        fullName: '>'
  - uid: ServiceCallback<@azure/arm-support.SupportTicketDetails>
    name: SupportTicketDetails>
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: SupportTicketDetails
        fullName: SupportTicketDetails
        uid: '@azure/arm-support.SupportTicketDetails'
      - name: '>'
        fullName: '>'
  - uid: ServiceCallback<@azure/arm-support.SupportTicketsListResult>
    name: SupportTicketsListResult>
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: SupportTicketsListResult
        fullName: SupportTicketsListResult
        uid: '@azure/arm-support.SupportTicketsListResult'
      - name: '>'
        fullName: '>'
  - uid: '@azure/arm-support.SupportTicketsListOptionalParams'
    name: SupportTicketsListOptionalParams
    spec.typeScript:
      - name: SupportTicketsListOptionalParams
        fullName: SupportTicketsListOptionalParams
        uid: '@azure/arm-support.SupportTicketsListOptionalParams'
  - uid: '@azure/arm-support.UpdateSupportTicket'
    name: UpdateSupportTicket
    spec.typeScript:
      - name: UpdateSupportTicket
        fullName: UpdateSupportTicket
        uid: '@azure/arm-support.UpdateSupportTicket'
