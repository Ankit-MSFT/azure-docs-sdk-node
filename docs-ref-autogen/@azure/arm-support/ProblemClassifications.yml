### YamlMime:UniversalReference
items:
  - uid: '@azure/arm-support.ProblemClassifications'
    name: ProblemClassifications
    fullName: ProblemClassifications
    children:
      - '@azure/arm-support.ProblemClassifications.get'
      - '@azure/arm-support.ProblemClassifications.get_2'
      - '@azure/arm-support.ProblemClassifications.get_1'
      - '@azure/arm-support.ProblemClassifications.list'
      - '@azure/arm-support.ProblemClassifications.list_2'
      - '@azure/arm-support.ProblemClassifications.list_1'
      - '@azure/arm-support.ProblemClassifications.constructor'
    langs:
      - typeScript
    type: class
    summary: Class representing a ProblemClassifications.
    package: '@azure/arm-support'
  - uid: '@azure/arm-support.ProblemClassifications.get'
    name: 'get(string, string, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Get problem classification details for a specific Azure service.
    syntax:
      content: >-
        function get(serviceName: string, problemClassificationName: string,
        options?: msRest.RequestOptionsBase)
      parameters:
        - id: serviceName
          type:
            - string
          description: Name of the Azure service available for support.
        - id: problemClassificationName
          type:
            - string
          description: Name of problem classification.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.ProblemClassificationsGetResponse>
        description: Promise<Models.ProblemClassificationsGetResponse>
    package: '@azure/arm-support'
  - uid: '@azure/arm-support.ProblemClassifications.get_2'
    name: >-
      get(string, string, RequestOptionsBase,
      ServiceCallback<ProblemClassification>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function get(serviceName: string, problemClassificationName: string,
        options: RequestOptionsBase, callback:
        ServiceCallback<ProblemClassification>)
      parameters:
        - id: serviceName
          type:
            - string
          description: Name of the Azure service available for support.
        - id: problemClassificationName
          type:
            - string
          description: Name of problem classification.
        - id: options
          type:
            - RequestOptionsBase
          description: The optional parameters
        - id: callback
          type:
            - ServiceCallback<@azure/arm-support.ProblemClassification>
          description: |
            The callback
    package: '@azure/arm-support'
  - uid: '@azure/arm-support.ProblemClassifications.get_1'
    name: 'get(string, string, ServiceCallback<ProblemClassification>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function get(serviceName: string, problemClassificationName: string,
        callback: ServiceCallback<ProblemClassification>)
      parameters:
        - id: serviceName
          type:
            - string
          description: Name of the Azure service available for support.
        - id: problemClassificationName
          type:
            - string
          description: Name of problem classification.
        - id: callback
          type:
            - ServiceCallback<@azure/arm-support.ProblemClassification>
          description: |
            The callback
    package: '@azure/arm-support'
  - uid: '@azure/arm-support.ProblemClassifications.list'
    name: 'list(string, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      Lists all the problem classifications (categories) available for a
      specific Azure service.

      Always use the service and problem classifications obtained
      programmatically. This practice

      ensures that you always have the most recent set of service and problem
      classification Ids.
    syntax:
      content: 'function list(serviceName: string, options?: msRest.RequestOptionsBase)'
      parameters:
        - id: serviceName
          type:
            - string
          description: >-
            Name of the Azure service for which the problem classifications need
            to be

            retrieved.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.ProblemClassificationsListResponse>
        description: Promise<Models.ProblemClassificationsListResponse>
    package: '@azure/arm-support'
  - uid: '@azure/arm-support.ProblemClassifications.list_2'
    name: >-
      list(string, RequestOptionsBase,
      ServiceCallback<ProblemClassificationsListResult>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function list(serviceName: string, options: RequestOptionsBase,
        callback: ServiceCallback<ProblemClassificationsListResult>)
      parameters:
        - id: serviceName
          type:
            - string
          description: >-
            Name of the Azure service for which the problem classifications need
            to be

            retrieved.
        - id: options
          type:
            - RequestOptionsBase
          description: The optional parameters
        - id: callback
          type:
            - >-
              ServiceCallback<@azure/arm-support.ProblemClassificationsListResult>
          description: |
            The callback
    package: '@azure/arm-support'
  - uid: '@azure/arm-support.ProblemClassifications.list_1'
    name: 'list(string, ServiceCallback<ProblemClassificationsListResult>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function list(serviceName: string, callback:
        ServiceCallback<ProblemClassificationsListResult>)
      parameters:
        - id: serviceName
          type:
            - string
          description: >-
            Name of the Azure service for which the problem classifications need
            to be

            retrieved.
        - id: callback
          type:
            - >-
              ServiceCallback<@azure/arm-support.ProblemClassificationsListResult>
          description: |
            The callback
    package: '@azure/arm-support'
  - uid: '@azure/arm-support.ProblemClassifications.constructor'
    name: ProblemClassifications(MicrosoftSupportContext)
    children: []
    type: constructor
    langs:
      - typeScript
    summary: Create a ProblemClassifications.
    syntax:
      content: 'new ProblemClassifications(client: MicrosoftSupportContext)'
      parameters:
        - id: client
          type:
            - '@azure/arm-support.MicrosoftSupportContext'
          description: |
            Reference to the service client.
    package: '@azure/arm-support'
references:
  - uid: '@azure/arm-support.MicrosoftSupportContext'
    name: MicrosoftSupportContext
    spec.typeScript:
      - name: MicrosoftSupportContext
        fullName: MicrosoftSupportContext
        uid: '@azure/arm-support.MicrosoftSupportContext'
  - uid: ServiceCallback<@azure/arm-support.ProblemClassification>
    name: ProblemClassification>
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: ProblemClassification
        fullName: ProblemClassification
        uid: '@azure/arm-support.ProblemClassification'
      - name: '>'
        fullName: '>'
  - uid: ServiceCallback<@azure/arm-support.ProblemClassificationsListResult>
    name: ProblemClassificationsListResult>
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: ProblemClassificationsListResult
        fullName: ProblemClassificationsListResult
        uid: '@azure/arm-support.ProblemClassificationsListResult'
      - name: '>'
        fullName: '>'
