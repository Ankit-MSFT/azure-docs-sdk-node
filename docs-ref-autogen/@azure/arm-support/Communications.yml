### YamlMime:UniversalReference
items:
  - uid: '@azure/arm-support.Communications'
    name: Communications
    fullName: Communications
    children:
      - '@azure/arm-support.Communications.beginCreate'
      - '@azure/arm-support.Communications.checkNameAvailability'
      - '@azure/arm-support.Communications.checkNameAvailability_2'
      - '@azure/arm-support.Communications.checkNameAvailability_1'
      - '@azure/arm-support.Communications.constructor'
      - '@azure/arm-support.Communications.create'
      - '@azure/arm-support.Communications.get'
      - '@azure/arm-support.Communications.get_2'
      - '@azure/arm-support.Communications.get_1'
      - '@azure/arm-support.Communications.list_2'
      - '@azure/arm-support.Communications.list'
      - '@azure/arm-support.Communications.list_1'
      - '@azure/arm-support.Communications.listNext'
      - '@azure/arm-support.Communications.listNext_2'
      - '@azure/arm-support.Communications.listNext_1'
    langs:
      - typeScript
    type: class
    summary: Class representing a Communications.
    package: '@azure/arm-support'
  - uid: '@azure/arm-support.Communications.beginCreate'
    name: >-
      beginCreate(string, string, CommunicationDetails,
      msRest.RequestOptionsBase)
    children: []
    type: method
    langs:
      - typeScript
    summary: Adds a new customer communication to an Azure support ticket.
    syntax:
      content: >-
        function beginCreate(supportTicketName: string, communicationName:
        string, createCommunicationParameters: CommunicationDetails, options?:
        msRest.RequestOptionsBase)
      parameters:
        - id: supportTicketName
          type:
            - string
          description: Support ticket name.
        - id: communicationName
          type:
            - string
          description: Communication name.
        - id: createCommunicationParameters
          type:
            - '@azure/arm-support.CommunicationDetails'
          description: Communication object.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<LROPoller>
        description: Promise<msRestAzure.LROPoller>
    package: '@azure/arm-support'
  - uid: '@azure/arm-support.Communications.checkNameAvailability'
    name: >-
      checkNameAvailability(string, CheckNameAvailabilityInput,
      msRest.RequestOptionsBase)
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      Check the availability of a resource name. This API should be used to
      check the uniqueness of

      the name for adding a new communication to the support ticket.
    syntax:
      content: >-
        function checkNameAvailability(supportTicketName: string,
        checkNameAvailabilityInput: CheckNameAvailabilityInput, options?:
        msRest.RequestOptionsBase)
      parameters:
        - id: supportTicketName
          type:
            - string
          description: Support ticket name.
        - id: checkNameAvailabilityInput
          type:
            - '@azure/arm-support.CheckNameAvailabilityInput'
          description: Input to check.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.CommunicationsCheckNameAvailabilityResponse>
        description: Promise<Models.CommunicationsCheckNameAvailabilityResponse>
    package: '@azure/arm-support'
  - uid: '@azure/arm-support.Communications.checkNameAvailability_2'
    name: >-
      checkNameAvailability(string, CheckNameAvailabilityInput,
      RequestOptionsBase, ServiceCallback<CheckNameAvailabilityOutput>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function checkNameAvailability(supportTicketName: string,
        checkNameAvailabilityInput: CheckNameAvailabilityInput, options:
        RequestOptionsBase, callback:
        ServiceCallback<CheckNameAvailabilityOutput>)
      parameters:
        - id: supportTicketName
          type:
            - string
          description: Support ticket name.
        - id: checkNameAvailabilityInput
          type:
            - '@azure/arm-support.CheckNameAvailabilityInput'
          description: Input to check.
        - id: options
          type:
            - RequestOptionsBase
          description: The optional parameters
        - id: callback
          type:
            - ServiceCallback<@azure/arm-support.CheckNameAvailabilityOutput>
          description: |
            The callback
    package: '@azure/arm-support'
  - uid: '@azure/arm-support.Communications.checkNameAvailability_1'
    name: >-
      checkNameAvailability(string, CheckNameAvailabilityInput,
      ServiceCallback<CheckNameAvailabilityOutput>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function checkNameAvailability(supportTicketName: string,
        checkNameAvailabilityInput: CheckNameAvailabilityInput, callback:
        ServiceCallback<CheckNameAvailabilityOutput>)
      parameters:
        - id: supportTicketName
          type:
            - string
          description: Support ticket name.
        - id: checkNameAvailabilityInput
          type:
            - '@azure/arm-support.CheckNameAvailabilityInput'
          description: Input to check.
        - id: callback
          type:
            - ServiceCallback<@azure/arm-support.CheckNameAvailabilityOutput>
          description: |
            The callback
    package: '@azure/arm-support'
  - uid: '@azure/arm-support.Communications.constructor'
    name: Communications(MicrosoftSupportContext)
    children: []
    type: constructor
    langs:
      - typeScript
    summary: Create a Communications.
    syntax:
      content: 'new Communications(client: MicrosoftSupportContext)'
      parameters:
        - id: client
          type:
            - '@azure/arm-support.MicrosoftSupportContext'
          description: |
            Reference to the service client.
    package: '@azure/arm-support'
  - uid: '@azure/arm-support.Communications.create'
    name: 'create(string, string, CommunicationDetails, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Adds a new customer communication to an Azure support ticket.
    syntax:
      content: >-
        function create(supportTicketName: string, communicationName: string,
        createCommunicationParameters: CommunicationDetails, options?:
        msRest.RequestOptionsBase)
      parameters:
        - id: supportTicketName
          type:
            - string
          description: Support ticket name.
        - id: communicationName
          type:
            - string
          description: Communication name.
        - id: createCommunicationParameters
          type:
            - '@azure/arm-support.CommunicationDetails'
          description: Communication object.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.CommunicationsCreateResponse>
        description: Promise<Models.CommunicationsCreateResponse>
    package: '@azure/arm-support'
  - uid: '@azure/arm-support.Communications.get'
    name: 'get(string, string, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Returns communication details for a support ticket.
    syntax:
      content: >-
        function get(supportTicketName: string, communicationName: string,
        options?: msRest.RequestOptionsBase)
      parameters:
        - id: supportTicketName
          type:
            - string
          description: Support ticket name.
        - id: communicationName
          type:
            - string
          description: Communication name.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.CommunicationsGetResponse>
        description: Promise<Models.CommunicationsGetResponse>
    package: '@azure/arm-support'
  - uid: '@azure/arm-support.Communications.get_2'
    name: >-
      get(string, string, RequestOptionsBase,
      ServiceCallback<CommunicationDetails>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function get(supportTicketName: string, communicationName: string,
        options: RequestOptionsBase, callback:
        ServiceCallback<CommunicationDetails>)
      parameters:
        - id: supportTicketName
          type:
            - string
          description: Support ticket name.
        - id: communicationName
          type:
            - string
          description: Communication name.
        - id: options
          type:
            - RequestOptionsBase
          description: The optional parameters
        - id: callback
          type:
            - ServiceCallback<@azure/arm-support.CommunicationDetails>
          description: |
            The callback
    package: '@azure/arm-support'
  - uid: '@azure/arm-support.Communications.get_1'
    name: 'get(string, string, ServiceCallback<CommunicationDetails>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function get(supportTicketName: string, communicationName: string,
        callback: ServiceCallback<CommunicationDetails>)
      parameters:
        - id: supportTicketName
          type:
            - string
          description: Support ticket name.
        - id: communicationName
          type:
            - string
          description: Communication name.
        - id: callback
          type:
            - ServiceCallback<@azure/arm-support.CommunicationDetails>
          description: |
            The callback
    package: '@azure/arm-support'
  - uid: '@azure/arm-support.Communications.list_2'
    name: >-
      list(string, CommunicationsListOptionalParams,
      ServiceCallback<CommunicationsListResult>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function list(supportTicketName: string, options:
        CommunicationsListOptionalParams, callback:
        ServiceCallback<CommunicationsListResult>)
      parameters:
        - id: supportTicketName
          type:
            - string
          description: Support ticket name.
        - id: options
          type:
            - '@azure/arm-support.CommunicationsListOptionalParams'
          description: The optional parameters
        - id: callback
          type:
            - ServiceCallback<@azure/arm-support.CommunicationsListResult>
          description: |
            The callback
    package: '@azure/arm-support'
  - uid: '@azure/arm-support.Communications.list'
    name: 'list(string, Models.CommunicationsListOptionalParams)'
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      Lists all communications (attachments not included) for a support ticket.
      <br/></br> You can

      also filter support ticket communications by _CreatedDate_ or
      _CommunicationType_ using the

      $filter parameter. The only type of communication supported today is
      _Web_. Output will be a

      paged result with _nextLink_, using which you can retrieve the next set of
      Communication

      results. <br/><br/>Support ticket data is available for 12 months after
      ticket creation. If a

      ticket was created more than 12 months ago, a request for data might cause
      an error.
    syntax:
      content: >-
        function list(supportTicketName: string, options?:
        Models.CommunicationsListOptionalParams)
      parameters:
        - id: supportTicketName
          type:
            - string
          description: Support ticket name.
        - id: options
          type:
            - Models.CommunicationsListOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.CommunicationsListResponse>
        description: Promise<Models.CommunicationsListResponse>
    package: '@azure/arm-support'
  - uid: '@azure/arm-support.Communications.list_1'
    name: 'list(string, ServiceCallback<CommunicationsListResult>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function list(supportTicketName: string, callback:
        ServiceCallback<CommunicationsListResult>)
      parameters:
        - id: supportTicketName
          type:
            - string
          description: Support ticket name.
        - id: callback
          type:
            - ServiceCallback<@azure/arm-support.CommunicationsListResult>
          description: |
            The callback
    package: '@azure/arm-support'
  - uid: '@azure/arm-support.Communications.listNext'
    name: 'listNext(string, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      Lists all communications (attachments not included) for a support ticket.
      <br/></br> You can

      also filter support ticket communications by _CreatedDate_ or
      _CommunicationType_ using the

      $filter parameter. The only type of communication supported today is
      _Web_. Output will be a

      paged result with _nextLink_, using which you can retrieve the next set of
      Communication

      results. <br/><br/>Support ticket data is available for 12 months after
      ticket creation. If a

      ticket was created more than 12 months ago, a request for data might cause
      an error.
    syntax:
      content: >-
        function listNext(nextPageLink: string, options?:
        msRest.RequestOptionsBase)
      parameters:
        - id: nextPageLink
          type:
            - string
          description: The NextLink from the previous successful call to List operation.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.CommunicationsListNextResponse>
        description: Promise<Models.CommunicationsListNextResponse>
    package: '@azure/arm-support'
  - uid: '@azure/arm-support.Communications.listNext_2'
    name: >-
      listNext(string, RequestOptionsBase,
      ServiceCallback<CommunicationsListResult>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function listNext(nextPageLink: string, options: RequestOptionsBase,
        callback: ServiceCallback<CommunicationsListResult>)
      parameters:
        - id: nextPageLink
          type:
            - string
          description: The NextLink from the previous successful call to List operation.
        - id: options
          type:
            - RequestOptionsBase
          description: The optional parameters
        - id: callback
          type:
            - ServiceCallback<@azure/arm-support.CommunicationsListResult>
          description: |
            The callback
    package: '@azure/arm-support'
  - uid: '@azure/arm-support.Communications.listNext_1'
    name: 'listNext(string, ServiceCallback<CommunicationsListResult>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function listNext(nextPageLink: string, callback:
        ServiceCallback<CommunicationsListResult>)
      parameters:
        - id: nextPageLink
          type:
            - string
          description: The NextLink from the previous successful call to List operation.
        - id: callback
          type:
            - ServiceCallback<@azure/arm-support.CommunicationsListResult>
          description: |
            The callback
    package: '@azure/arm-support'
references:
  - uid: '@azure/arm-support.MicrosoftSupportContext'
    name: MicrosoftSupportContext
    spec.typeScript:
      - name: MicrosoftSupportContext
        fullName: MicrosoftSupportContext
        uid: '@azure/arm-support.MicrosoftSupportContext'
  - uid: '@azure/arm-support.CommunicationDetails'
    name: CommunicationDetails
    spec.typeScript:
      - name: CommunicationDetails
        fullName: CommunicationDetails
        uid: '@azure/arm-support.CommunicationDetails'
  - uid: '@azure/arm-support.CheckNameAvailabilityInput'
    name: CheckNameAvailabilityInput
    spec.typeScript:
      - name: CheckNameAvailabilityInput
        fullName: CheckNameAvailabilityInput
        uid: '@azure/arm-support.CheckNameAvailabilityInput'
  - uid: ServiceCallback<@azure/arm-support.CheckNameAvailabilityOutput>
    name: CheckNameAvailabilityOutput>
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: CheckNameAvailabilityOutput
        fullName: CheckNameAvailabilityOutput
        uid: '@azure/arm-support.CheckNameAvailabilityOutput'
      - name: '>'
        fullName: '>'
  - uid: ServiceCallback<@azure/arm-support.CommunicationDetails>
    name: CommunicationDetails>
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: CommunicationDetails
        fullName: CommunicationDetails
        uid: '@azure/arm-support.CommunicationDetails'
      - name: '>'
        fullName: '>'
  - uid: ServiceCallback<@azure/arm-support.CommunicationsListResult>
    name: CommunicationsListResult>
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: CommunicationsListResult
        fullName: CommunicationsListResult
        uid: '@azure/arm-support.CommunicationsListResult'
      - name: '>'
        fullName: '>'
  - uid: '@azure/arm-support.CommunicationsListOptionalParams'
    name: CommunicationsListOptionalParams
    spec.typeScript:
      - name: CommunicationsListOptionalParams
        fullName: CommunicationsListOptionalParams
        uid: '@azure/arm-support.CommunicationsListOptionalParams'
