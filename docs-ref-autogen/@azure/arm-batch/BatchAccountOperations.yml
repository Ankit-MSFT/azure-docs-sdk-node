### YamlMime:TSType
name: BatchAccountOperations
uid: '@azure/arm-batch.BatchAccountOperations'
package: '@azure/arm-batch'
summary: Class representing a BatchAccountOperations.
fullName: BatchAccountOperations
remarks: ''
isPreview: false
isDeprecated: false
type: class
constructors:
  - name: BatchAccountOperations(BatchManagementClientContext)
    uid: '@azure/arm-batch.BatchAccountOperations.constructor'
    package: '@azure/arm-batch'
    summary: Create a BatchAccountOperations.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'new BatchAccountOperations(client: BatchManagementClientContext)'
      parameters:
        - id: client
          type: <xref uid="@azure/arm-batch.BatchManagementClientContext" />
          description: |
            Reference to the service client.
methods:
  - name: >-
      beginCreate(string, string, BatchAccountCreateParameters,
      msRest.RequestOptionsBase)
    uid: '@azure/arm-batch.BatchAccountOperations.beginCreate'
    package: '@azure/arm-batch'
    summary: >-
      Creates a new Batch account with the specified parameters. Existing
      accounts cannot be updated

      with this API and should instead be updated with the Update Batch Account
      API.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function beginCreate(resourceGroupName: string, accountName: string,
        parameters: BatchAccountCreateParameters, options?:
        msRest.RequestOptionsBase): Promise<LROPoller>
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group that contains the Batch account.
        - id: accountName
          type: string
          description: >-
            A name for the Batch account which must be unique within the region.
            Batch

            account names must be between 3 and 24 characters in length and must
            use only numbers and

            lowercase letters. This name is used as part of the DNS name that is
            used to access the Batch

            service in the region in which the account is created. For example:

            http://accountname.region.batch.azure.com/.
        - id: parameters
          type: <xref uid="@azure/arm-batch.BatchAccountCreateParameters" />
          description: Additional parameters for account creation.
        - id: options
          type: <xref uid="msRest.RequestOptionsBase" />
          description: ''
      return:
        description: Promise<msRestAzure.LROPoller>
        type: Promise&lt;LROPoller&gt;
  - name: 'beginDeleteMethod(string, string, msRest.RequestOptionsBase)'
    uid: '@azure/arm-batch.BatchAccountOperations.beginDeleteMethod'
    package: '@azure/arm-batch'
    summary: Deletes the specified Batch account.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function beginDeleteMethod(resourceGroupName: string, accountName:
        string, options?: msRest.RequestOptionsBase): Promise<LROPoller>
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group that contains the Batch account.
        - id: accountName
          type: string
          description: The name of the Batch account.
        - id: options
          type: <xref uid="msRest.RequestOptionsBase" />
          description: ''
      return:
        description: Promise<msRestAzure.LROPoller>
        type: Promise&lt;LROPoller&gt;
  - name: >-
      create(string, string, BatchAccountCreateParameters,
      msRest.RequestOptionsBase)
    uid: '@azure/arm-batch.BatchAccountOperations.create'
    package: '@azure/arm-batch'
    summary: >-
      Creates a new Batch account with the specified parameters. Existing
      accounts cannot be updated

      with this API and should instead be updated with the Update Batch Account
      API.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function create(resourceGroupName: string, accountName: string,
        parameters: BatchAccountCreateParameters, options?:
        msRest.RequestOptionsBase): Promise<Models.BatchAccountCreateResponse>
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group that contains the Batch account.
        - id: accountName
          type: string
          description: >-
            A name for the Batch account which must be unique within the region.
            Batch

            account names must be between 3 and 24 characters in length and must
            use only numbers and

            lowercase letters. This name is used as part of the DNS name that is
            used to access the Batch

            service in the region in which the account is created. For example:

            http://accountname.region.batch.azure.com/.
        - id: parameters
          type: <xref uid="@azure/arm-batch.BatchAccountCreateParameters" />
          description: Additional parameters for account creation.
        - id: options
          type: <xref uid="msRest.RequestOptionsBase" />
          description: ''
      return:
        description: Promise<Models.BatchAccountCreateResponse>
        type: Promise&lt;<xref uid="Models.BatchAccountCreateResponse" />&gt;
  - name: 'deleteMethod(string, string, msRest.RequestOptionsBase)'
    uid: '@azure/arm-batch.BatchAccountOperations.deleteMethod'
    package: '@azure/arm-batch'
    summary: Deletes the specified Batch account.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function deleteMethod(resourceGroupName: string, accountName: string,
        options?: msRest.RequestOptionsBase):
        Promise<Models.BatchAccountDeleteResponse>
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group that contains the Batch account.
        - id: accountName
          type: string
          description: The name of the Batch account.
        - id: options
          type: <xref uid="msRest.RequestOptionsBase" />
          description: ''
      return:
        description: Promise<Models.BatchAccountDeleteResponse>
        type: Promise&lt;<xref uid="Models.BatchAccountDeleteResponse" />&gt;
  - name: 'get(string, string, msRest.RequestOptionsBase)'
    uid: '@azure/arm-batch.BatchAccountOperations.get'
    package: '@azure/arm-batch'
    summary: Gets information about the specified Batch account.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function get(resourceGroupName: string, accountName: string, options?:
        msRest.RequestOptionsBase): Promise<Models.BatchAccountGetResponse>
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group that contains the Batch account.
        - id: accountName
          type: string
          description: The name of the Batch account.
        - id: options
          type: <xref uid="msRest.RequestOptionsBase" />
          description: ''
      return:
        description: Promise<Models.BatchAccountGetResponse>
        type: Promise&lt;<xref uid="Models.BatchAccountGetResponse" />&gt;
  - name: 'get(string, string, RequestOptionsBase, ServiceCallback<BatchAccount>)'
    uid: '@azure/arm-batch.BatchAccountOperations.get_2'
    package: '@azure/arm-batch'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function get(resourceGroupName: string, accountName: string, options:
        RequestOptionsBase, callback: ServiceCallback<BatchAccount>)
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group that contains the Batch account.
        - id: accountName
          type: string
          description: The name of the Batch account.
        - id: options
          type: RequestOptionsBase
          description: The optional parameters
        - id: callback
          type: ServiceCallback&lt;<xref uid="@azure/arm-batch.BatchAccount" />&gt;
          description: |
            The callback
  - name: 'get(string, string, ServiceCallback<BatchAccount>)'
    uid: '@azure/arm-batch.BatchAccountOperations.get_1'
    package: '@azure/arm-batch'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function get(resourceGroupName: string, accountName: string, callback:
        ServiceCallback<BatchAccount>)
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group that contains the Batch account.
        - id: accountName
          type: string
          description: The name of the Batch account.
        - id: callback
          type: ServiceCallback&lt;<xref uid="@azure/arm-batch.BatchAccount" />&gt;
          description: |
            The callback
  - name: 'getKeys(string, string, msRest.RequestOptionsBase)'
    uid: '@azure/arm-batch.BatchAccountOperations.getKeys'
    package: '@azure/arm-batch'
    summary: >-
      This operation applies only to Batch accounts with
      allowedAuthenticationModes containing

      'SharedKey'. If the Batch account doesn't contain 'SharedKey' in its
      allowedAuthenticationMode,

      clients cannot use shared keys to authenticate, and must use another
      allowedAuthenticationModes

      instead. In this case, getting the keys will fail.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function getKeys(resourceGroupName: string, accountName: string,
        options?: msRest.RequestOptionsBase):
        Promise<Models.BatchAccountGetKeysResponse>
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group that contains the Batch account.
        - id: accountName
          type: string
          description: The name of the Batch account.
        - id: options
          type: <xref uid="msRest.RequestOptionsBase" />
          description: ''
      return:
        description: Promise<Models.BatchAccountGetKeysResponse>
        type: Promise&lt;<xref uid="Models.BatchAccountGetKeysResponse" />&gt;
  - name: >-
      getKeys(string, string, RequestOptionsBase,
      ServiceCallback<BatchAccountKeys>)
    uid: '@azure/arm-batch.BatchAccountOperations.getKeys_2'
    package: '@azure/arm-batch'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function getKeys(resourceGroupName: string, accountName: string,
        options: RequestOptionsBase, callback:
        ServiceCallback<BatchAccountKeys>)
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group that contains the Batch account.
        - id: accountName
          type: string
          description: The name of the Batch account.
        - id: options
          type: RequestOptionsBase
          description: The optional parameters
        - id: callback
          type: >-
            ServiceCallback&lt;<xref uid="@azure/arm-batch.BatchAccountKeys"
            />&gt;
          description: |
            The callback
  - name: 'getKeys(string, string, ServiceCallback<BatchAccountKeys>)'
    uid: '@azure/arm-batch.BatchAccountOperations.getKeys_1'
    package: '@azure/arm-batch'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function getKeys(resourceGroupName: string, accountName: string,
        callback: ServiceCallback<BatchAccountKeys>)
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group that contains the Batch account.
        - id: accountName
          type: string
          description: The name of the Batch account.
        - id: callback
          type: >-
            ServiceCallback&lt;<xref uid="@azure/arm-batch.BatchAccountKeys"
            />&gt;
          description: |
            The callback
  - name: list(msRest.RequestOptionsBase)
    uid: '@azure/arm-batch.BatchAccountOperations.list'
    package: '@azure/arm-batch'
    summary: >-
      Gets information about the Batch accounts associated with the
      subscription.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function list(options?: msRest.RequestOptionsBase):
        Promise<Models.BatchAccountListResponse>
      parameters:
        - id: options
          type: <xref uid="msRest.RequestOptionsBase" />
          description: ''
      return:
        description: Promise<Models.BatchAccountListResponse>
        type: Promise&lt;<xref uid="Models.BatchAccountListResponse" />&gt;
  - name: 'list(RequestOptionsBase, ServiceCallback<BatchAccountListResult>)'
    uid: '@azure/arm-batch.BatchAccountOperations.list_2'
    package: '@azure/arm-batch'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function list(options: RequestOptionsBase, callback:
        ServiceCallback<BatchAccountListResult>)
      parameters:
        - id: options
          type: RequestOptionsBase
          description: The optional parameters
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/arm-batch.BatchAccountListResult" />&gt;
          description: |
            The callback
  - name: list(ServiceCallback<BatchAccountListResult>)
    uid: '@azure/arm-batch.BatchAccountOperations.list_1'
    package: '@azure/arm-batch'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'function list(callback: ServiceCallback<BatchAccountListResult>)'
      parameters:
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/arm-batch.BatchAccountListResult" />&gt;
          description: |
            The callback
  - name: 'listByResourceGroup(string, msRest.RequestOptionsBase)'
    uid: '@azure/arm-batch.BatchAccountOperations.listByResourceGroup'
    package: '@azure/arm-batch'
    summary: >-
      Gets information about the Batch accounts associated with the specified
      resource group.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listByResourceGroup(resourceGroupName: string, options?:
        msRest.RequestOptionsBase):
        Promise<Models.BatchAccountListByResourceGroupResponse>
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group that contains the Batch account.
        - id: options
          type: <xref uid="msRest.RequestOptionsBase" />
          description: ''
      return:
        description: Promise<Models.BatchAccountListByResourceGroupResponse>
        type: >-
          Promise&lt;<xref uid="Models.BatchAccountListByResourceGroupResponse"
          />&gt;
  - name: >-
      listByResourceGroup(string, RequestOptionsBase,
      ServiceCallback<BatchAccountListResult>)
    uid: '@azure/arm-batch.BatchAccountOperations.listByResourceGroup_2'
    package: '@azure/arm-batch'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listByResourceGroup(resourceGroupName: string, options:
        RequestOptionsBase, callback: ServiceCallback<BatchAccountListResult>)
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group that contains the Batch account.
        - id: options
          type: RequestOptionsBase
          description: The optional parameters
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/arm-batch.BatchAccountListResult" />&gt;
          description: |
            The callback
  - name: 'listByResourceGroup(string, ServiceCallback<BatchAccountListResult>)'
    uid: '@azure/arm-batch.BatchAccountOperations.listByResourceGroup_1'
    package: '@azure/arm-batch'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listByResourceGroup(resourceGroupName: string, callback:
        ServiceCallback<BatchAccountListResult>)
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group that contains the Batch account.
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/arm-batch.BatchAccountListResult" />&gt;
          description: |
            The callback
  - name: 'listByResourceGroupNext(string, msRest.RequestOptionsBase)'
    uid: '@azure/arm-batch.BatchAccountOperations.listByResourceGroupNext'
    package: '@azure/arm-batch'
    summary: >-
      Gets information about the Batch accounts associated with the specified
      resource group.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listByResourceGroupNext(nextPageLink: string, options?:
        msRest.RequestOptionsBase):
        Promise<Models.BatchAccountListByResourceGroupNextResponse>
      parameters:
        - id: nextPageLink
          type: string
          description: The NextLink from the previous successful call to List operation.
        - id: options
          type: <xref uid="msRest.RequestOptionsBase" />
          description: ''
      return:
        description: Promise<Models.BatchAccountListByResourceGroupNextResponse>
        type: >-
          Promise&lt;<xref
          uid="Models.BatchAccountListByResourceGroupNextResponse" />&gt;
  - name: >-
      listByResourceGroupNext(string, RequestOptionsBase,
      ServiceCallback<BatchAccountListResult>)
    uid: '@azure/arm-batch.BatchAccountOperations.listByResourceGroupNext_2'
    package: '@azure/arm-batch'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listByResourceGroupNext(nextPageLink: string, options:
        RequestOptionsBase, callback: ServiceCallback<BatchAccountListResult>)
      parameters:
        - id: nextPageLink
          type: string
          description: The NextLink from the previous successful call to List operation.
        - id: options
          type: RequestOptionsBase
          description: The optional parameters
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/arm-batch.BatchAccountListResult" />&gt;
          description: |
            The callback
  - name: 'listByResourceGroupNext(string, ServiceCallback<BatchAccountListResult>)'
    uid: '@azure/arm-batch.BatchAccountOperations.listByResourceGroupNext_1'
    package: '@azure/arm-batch'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listByResourceGroupNext(nextPageLink: string, callback:
        ServiceCallback<BatchAccountListResult>)
      parameters:
        - id: nextPageLink
          type: string
          description: The NextLink from the previous successful call to List operation.
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/arm-batch.BatchAccountListResult" />&gt;
          description: |
            The callback
  - name: 'listNext(string, msRest.RequestOptionsBase)'
    uid: '@azure/arm-batch.BatchAccountOperations.listNext'
    package: '@azure/arm-batch'
    summary: >-
      Gets information about the Batch accounts associated with the
      subscription.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listNext(nextPageLink: string, options?:
        msRest.RequestOptionsBase): Promise<Models.BatchAccountListNextResponse>
      parameters:
        - id: nextPageLink
          type: string
          description: The NextLink from the previous successful call to List operation.
        - id: options
          type: <xref uid="msRest.RequestOptionsBase" />
          description: ''
      return:
        description: Promise<Models.BatchAccountListNextResponse>
        type: Promise&lt;<xref uid="Models.BatchAccountListNextResponse" />&gt;
  - name: >-
      listNext(string, RequestOptionsBase,
      ServiceCallback<BatchAccountListResult>)
    uid: '@azure/arm-batch.BatchAccountOperations.listNext_2'
    package: '@azure/arm-batch'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listNext(nextPageLink: string, options: RequestOptionsBase,
        callback: ServiceCallback<BatchAccountListResult>)
      parameters:
        - id: nextPageLink
          type: string
          description: The NextLink from the previous successful call to List operation.
        - id: options
          type: RequestOptionsBase
          description: The optional parameters
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/arm-batch.BatchAccountListResult" />&gt;
          description: |
            The callback
  - name: 'listNext(string, ServiceCallback<BatchAccountListResult>)'
    uid: '@azure/arm-batch.BatchAccountOperations.listNext_1'
    package: '@azure/arm-batch'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listNext(nextPageLink: string, callback:
        ServiceCallback<BatchAccountListResult>)
      parameters:
        - id: nextPageLink
          type: string
          description: The NextLink from the previous successful call to List operation.
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/arm-batch.BatchAccountListResult" />&gt;
          description: |
            The callback
  - name: >-
      listOutboundNetworkDependenciesEndpoints(string, string,
      msRest.RequestOptionsBase)
    uid: >-
      @azure/arm-batch.BatchAccountOperations.listOutboundNetworkDependenciesEndpoints
    package: '@azure/arm-batch'
    summary: >-
      Lists the endpoints that a Batch Compute Node under this Batch Account may
      call as part of Batch

      service administration. If you are deploying a Pool inside of a virtual
      network that you

      specify, you must make sure your network allows outbound access to these
      endpoints. Failure to

      allow access to these endpoints may cause Batch to mark the affected nodes
      as unusable. For more

      information about creating a pool inside of a virtual network, see

      https://docs.microsoft.com/en-us/azure/batch/batch-virtual-network.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listOutboundNetworkDependenciesEndpoints(resourceGroupName:
        string, accountName: string, options?: msRest.RequestOptionsBase):
        Promise<Models.BatchAccountListOutboundNetworkDependenciesEndpointsResponse>
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group that contains the Batch account.
        - id: accountName
          type: string
          description: The name of the Batch account.
        - id: options
          type: <xref uid="msRest.RequestOptionsBase" />
          description: ''
      return:
        description: >-
          Promise<Models.BatchAccountListOutboundNetworkDependenciesEndpointsResponse>
        type: >-
          Promise&lt;<xref
          uid="Models.BatchAccountListOutboundNetworkDependenciesEndpointsResponse"
          />&gt;
  - name: >-
      listOutboundNetworkDependenciesEndpoints(string, string,
      RequestOptionsBase,
      ServiceCallback<OutboundEnvironmentEndpointCollection>)
    uid: >-
      @azure/arm-batch.BatchAccountOperations.listOutboundNetworkDependenciesEndpoints_2
    package: '@azure/arm-batch'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listOutboundNetworkDependenciesEndpoints(resourceGroupName:
        string, accountName: string, options: RequestOptionsBase, callback:
        ServiceCallback<OutboundEnvironmentEndpointCollection>)
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group that contains the Batch account.
        - id: accountName
          type: string
          description: The name of the Batch account.
        - id: options
          type: RequestOptionsBase
          description: The optional parameters
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/arm-batch.OutboundEnvironmentEndpointCollection" />&gt;
          description: |
            The callback
  - name: >-
      listOutboundNetworkDependenciesEndpoints(string, string,
      ServiceCallback<OutboundEnvironmentEndpointCollection>)
    uid: >-
      @azure/arm-batch.BatchAccountOperations.listOutboundNetworkDependenciesEndpoints_1
    package: '@azure/arm-batch'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listOutboundNetworkDependenciesEndpoints(resourceGroupName:
        string, accountName: string, callback:
        ServiceCallback<OutboundEnvironmentEndpointCollection>)
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group that contains the Batch account.
        - id: accountName
          type: string
          description: The name of the Batch account.
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/arm-batch.OutboundEnvironmentEndpointCollection" />&gt;
          description: |
            The callback
  - name: >-
      listOutboundNetworkDependenciesEndpointsNext(string,
      msRest.RequestOptionsBase)
    uid: >-
      @azure/arm-batch.BatchAccountOperations.listOutboundNetworkDependenciesEndpointsNext
    package: '@azure/arm-batch'
    summary: >-
      Lists the endpoints that a Batch Compute Node under this Batch Account may
      call as part of Batch

      service administration. If you are deploying a Pool inside of a virtual
      network that you

      specify, you must make sure your network allows outbound access to these
      endpoints. Failure to

      allow access to these endpoints may cause Batch to mark the affected nodes
      as unusable. For more

      information about creating a pool inside of a virtual network, see

      https://docs.microsoft.com/en-us/azure/batch/batch-virtual-network.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listOutboundNetworkDependenciesEndpointsNext(nextPageLink:
        string, options?: msRest.RequestOptionsBase):
        Promise<Models.BatchAccountListOutboundNetworkDependenciesEndpointsNextResponse>
      parameters:
        - id: nextPageLink
          type: string
          description: The NextLink from the previous successful call to List operation.
        - id: options
          type: <xref uid="msRest.RequestOptionsBase" />
          description: ''
      return:
        description: >-
          Promise<Models.BatchAccountListOutboundNetworkDependenciesEndpointsNextResponse>
        type: >-
          Promise&lt;<xref
          uid="Models.BatchAccountListOutboundNetworkDependenciesEndpointsNextResponse"
          />&gt;
  - name: >-
      listOutboundNetworkDependenciesEndpointsNext(string, RequestOptionsBase,
      ServiceCallback<OutboundEnvironmentEndpointCollection>)
    uid: >-
      @azure/arm-batch.BatchAccountOperations.listOutboundNetworkDependenciesEndpointsNext_2
    package: '@azure/arm-batch'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listOutboundNetworkDependenciesEndpointsNext(nextPageLink:
        string, options: RequestOptionsBase, callback:
        ServiceCallback<OutboundEnvironmentEndpointCollection>)
      parameters:
        - id: nextPageLink
          type: string
          description: The NextLink from the previous successful call to List operation.
        - id: options
          type: RequestOptionsBase
          description: The optional parameters
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/arm-batch.OutboundEnvironmentEndpointCollection" />&gt;
          description: |
            The callback
  - name: >-
      listOutboundNetworkDependenciesEndpointsNext(string,
      ServiceCallback<OutboundEnvironmentEndpointCollection>)
    uid: >-
      @azure/arm-batch.BatchAccountOperations.listOutboundNetworkDependenciesEndpointsNext_1
    package: '@azure/arm-batch'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listOutboundNetworkDependenciesEndpointsNext(nextPageLink:
        string, callback:
        ServiceCallback<OutboundEnvironmentEndpointCollection>)
      parameters:
        - id: nextPageLink
          type: string
          description: The NextLink from the previous successful call to List operation.
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/arm-batch.OutboundEnvironmentEndpointCollection" />&gt;
          description: |
            The callback
  - name: >-
      regenerateKey(string, string, Models.AccountKeyType,
      msRest.RequestOptionsBase)
    uid: '@azure/arm-batch.BatchAccountOperations.regenerateKey'
    package: '@azure/arm-batch'
    summary: >-
      This operation applies only to Batch accounts with
      allowedAuthenticationModes containing

      'SharedKey'. If the Batch account doesn't contain 'SharedKey' in its
      allowedAuthenticationMode,

      clients cannot use shared keys to authenticate, and must use another
      allowedAuthenticationModes

      instead. In this case, regenerating the keys will fail.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function regenerateKey(resourceGroupName: string, accountName: string,
        keyName: Models.AccountKeyType, options?: msRest.RequestOptionsBase):
        Promise<Models.BatchAccountRegenerateKeyResponse>
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group that contains the Batch account.
        - id: accountName
          type: string
          description: The name of the Batch account.
        - id: keyName
          type: <xref uid="Models.AccountKeyType" />
          description: >-
            The type of account key to regenerate. Possible values include:
            'Primary',

            'Secondary'
        - id: options
          type: <xref uid="msRest.RequestOptionsBase" />
          description: ''
      return:
        description: Promise<Models.BatchAccountRegenerateKeyResponse>
        type: Promise&lt;<xref uid="Models.BatchAccountRegenerateKeyResponse" />&gt;
  - name: >-
      regenerateKey(string, string, Models.AccountKeyType, RequestOptionsBase,
      ServiceCallback<BatchAccountKeys>)
    uid: '@azure/arm-batch.BatchAccountOperations.regenerateKey_2'
    package: '@azure/arm-batch'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function regenerateKey(resourceGroupName: string, accountName: string,
        keyName: Models.AccountKeyType, options: RequestOptionsBase, callback:
        ServiceCallback<BatchAccountKeys>)
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group that contains the Batch account.
        - id: accountName
          type: string
          description: The name of the Batch account.
        - id: keyName
          type: <xref uid="Models.AccountKeyType" />
          description: >-
            The type of account key to regenerate. Possible values include:
            'Primary',

            'Secondary'
        - id: options
          type: RequestOptionsBase
          description: The optional parameters
        - id: callback
          type: >-
            ServiceCallback&lt;<xref uid="@azure/arm-batch.BatchAccountKeys"
            />&gt;
          description: |
            The callback
  - name: >-
      regenerateKey(string, string, Models.AccountKeyType,
      ServiceCallback<BatchAccountKeys>)
    uid: '@azure/arm-batch.BatchAccountOperations.regenerateKey_1'
    package: '@azure/arm-batch'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function regenerateKey(resourceGroupName: string, accountName: string,
        keyName: Models.AccountKeyType, callback:
        ServiceCallback<BatchAccountKeys>)
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group that contains the Batch account.
        - id: accountName
          type: string
          description: The name of the Batch account.
        - id: keyName
          type: <xref uid="Models.AccountKeyType" />
          description: >-
            The type of account key to regenerate. Possible values include:
            'Primary',

            'Secondary'
        - id: callback
          type: >-
            ServiceCallback&lt;<xref uid="@azure/arm-batch.BatchAccountKeys"
            />&gt;
          description: |
            The callback
  - name: 'synchronizeAutoStorageKeys(string, string, msRest.RequestOptionsBase)'
    uid: '@azure/arm-batch.BatchAccountOperations.synchronizeAutoStorageKeys'
    package: '@azure/arm-batch'
    summary: >-
      Synchronizes access keys for the auto-storage account configured for the
      specified Batch

      account, only if storage key authentication is being used.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function synchronizeAutoStorageKeys(resourceGroupName: string,
        accountName: string, options?: msRest.RequestOptionsBase):
        Promise<RestResponse>
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group that contains the Batch account.
        - id: accountName
          type: string
          description: The name of the Batch account.
        - id: options
          type: <xref uid="msRest.RequestOptionsBase" />
          description: ''
      return:
        description: Promise<msRest.RestResponse>
        type: Promise&lt;RestResponse&gt;
  - name: >-
      synchronizeAutoStorageKeys(string, string, RequestOptionsBase,
      ServiceCallback<void>)
    uid: '@azure/arm-batch.BatchAccountOperations.synchronizeAutoStorageKeys_2'
    package: '@azure/arm-batch'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function synchronizeAutoStorageKeys(resourceGroupName: string,
        accountName: string, options: RequestOptionsBase, callback:
        ServiceCallback<void>)
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group that contains the Batch account.
        - id: accountName
          type: string
          description: The name of the Batch account.
        - id: options
          type: RequestOptionsBase
          description: The optional parameters
        - id: callback
          type: ServiceCallback&lt;void&gt;
          description: |
            The callback
  - name: 'synchronizeAutoStorageKeys(string, string, ServiceCallback<void>)'
    uid: '@azure/arm-batch.BatchAccountOperations.synchronizeAutoStorageKeys_1'
    package: '@azure/arm-batch'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function synchronizeAutoStorageKeys(resourceGroupName: string,
        accountName: string, callback: ServiceCallback<void>)
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group that contains the Batch account.
        - id: accountName
          type: string
          description: The name of the Batch account.
        - id: callback
          type: ServiceCallback&lt;void&gt;
          description: |
            The callback
  - name: >-
      update(string, string, BatchAccountUpdateParameters,
      msRest.RequestOptionsBase)
    uid: '@azure/arm-batch.BatchAccountOperations.update'
    package: '@azure/arm-batch'
    summary: Updates the properties of an existing Batch account.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function update(resourceGroupName: string, accountName: string,
        parameters: BatchAccountUpdateParameters, options?:
        msRest.RequestOptionsBase): Promise<Models.BatchAccountUpdateResponse>
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group that contains the Batch account.
        - id: accountName
          type: string
          description: The name of the Batch account.
        - id: parameters
          type: <xref uid="@azure/arm-batch.BatchAccountUpdateParameters" />
          description: Additional parameters for account update.
        - id: options
          type: <xref uid="msRest.RequestOptionsBase" />
          description: ''
      return:
        description: Promise<Models.BatchAccountUpdateResponse>
        type: Promise&lt;<xref uid="Models.BatchAccountUpdateResponse" />&gt;
  - name: >-
      update(string, string, BatchAccountUpdateParameters, RequestOptionsBase,
      ServiceCallback<BatchAccount>)
    uid: '@azure/arm-batch.BatchAccountOperations.update_2'
    package: '@azure/arm-batch'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function update(resourceGroupName: string, accountName: string,
        parameters: BatchAccountUpdateParameters, options: RequestOptionsBase,
        callback: ServiceCallback<BatchAccount>)
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group that contains the Batch account.
        - id: accountName
          type: string
          description: The name of the Batch account.
        - id: parameters
          type: <xref uid="@azure/arm-batch.BatchAccountUpdateParameters" />
          description: Additional parameters for account update.
        - id: options
          type: RequestOptionsBase
          description: The optional parameters
        - id: callback
          type: ServiceCallback&lt;<xref uid="@azure/arm-batch.BatchAccount" />&gt;
          description: |
            The callback
  - name: >-
      update(string, string, BatchAccountUpdateParameters,
      ServiceCallback<BatchAccount>)
    uid: '@azure/arm-batch.BatchAccountOperations.update_1'
    package: '@azure/arm-batch'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function update(resourceGroupName: string, accountName: string,
        parameters: BatchAccountUpdateParameters, callback:
        ServiceCallback<BatchAccount>)
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group that contains the Batch account.
        - id: accountName
          type: string
          description: The name of the Batch account.
        - id: parameters
          type: <xref uid="@azure/arm-batch.BatchAccountUpdateParameters" />
          description: Additional parameters for account update.
        - id: callback
          type: ServiceCallback&lt;<xref uid="@azure/arm-batch.BatchAccount" />&gt;
          description: |
            The callback
