### YamlMime:TSType
name: IdentityClient
uid: '@azure/identity.IdentityClient'
package: '@azure/identity'
summary: ''
fullName: IdentityClient
type: class
constructors:
  - name: IdentityClient(TokenCredentialOptions)
    uid: '@azure/identity.IdentityClient.constructor'
    package: '@azure/identity'
    summary: ''
    syntax:
      content: 'new IdentityClient(options?: TokenCredentialOptions)'
      parameters:
        - id: options
          type: <xref uid="@azure/identity.TokenCredentialOptions" />
          description: ''
properties:
  - name: authorityHost
    uid: '@azure/identity.IdentityClient.authorityHost'
    package: '@azure/identity'
    summary: ''
    fullName: authorityHost
    syntax:
      content: 'public authorityHost: string'
      return:
        type: string
        description: ''
methods:
  - name: createWebResource(RequestPrepareOptions)
    uid: '@azure/identity.IdentityClient.createWebResource'
    package: '@azure/identity'
    summary: ''
    syntax:
      content: 'function createWebResource(requestOptions: RequestPrepareOptions)'
      parameters:
        - id: requestOptions
          type: RequestPrepareOptions
          description: ''
      return:
        type: WebResource
        description: ''
  - name: getDefaultOptions()
    uid: '@azure/identity.IdentityClient.getDefaultOptions'
    package: '@azure/identity'
    summary: ''
    syntax:
      content: static function getDefaultOptions()
      return:
        type: <xref uid="@azure/identity.TokenCredentialOptions" />
        description: ''
  - name: >-
      refreshAccessToken(string, string, string, string | undefined, string |
      undefined, (responseBody: any) => number, GetTokenOptions)
    uid: '@azure/identity.IdentityClient.refreshAccessToken'
    package: '@azure/identity'
    summary: ''
    syntax:
      content: >-
        function refreshAccessToken(tenantId: string, clientId: string, scopes:
        string, refreshToken: string | undefined, clientSecret: string |
        undefined, expiresOnParser?: (responseBody: any) => number, options?:
        GetTokenOptions)
      parameters:
        - id: tenantId
          type: string
          description: ''
        - id: clientId
          type: string
          description: ''
        - id: scopes
          type: string
          description: ''
        - id: refreshToken
          type: string | undefined
          description: ''
        - id: clientSecret
          type: string | undefined
          description: ''
        - id: expiresOnParser
          type: '(responseBody: any) =&gt; number'
          description: ''
        - id: options
          type: GetTokenOptions
          description: ''
      return:
        type: Promise&lt;<xref uid="@azure/identity.TokenResponse" /> | null&gt;
        description: ''
  - name: >-
      sendOperationRequest(OperationArguments, OperationSpec,
      ServiceCallback<any>)
    uid: '@azure/identity.IdentityClient.sendOperationRequest'
    package: '@azure/identity'
    summary: Send an HTTP request that is populated using the provided OperationSpec.
    syntax:
      content: >-
        function sendOperationRequest(operationArguments: OperationArguments,
        operationSpec: OperationSpec, callback?: ServiceCallback<any>)
      parameters:
        - id: operationArguments
          type: OperationArguments
          description: >-
            The arguments that the HTTP request's templated values will be
            populated from.
        - id: operationSpec
          type: OperationSpec
          description: The OperationSpec to use to populate the httpRequest.
        - id: callback
          type: ServiceCallback&lt;any&gt;
          description: |
            The callback to call when the response is received.
      return:
        type: Promise&lt;RestResponse&gt;
        description: ''
  - name: sendRequest(RequestPrepareOptions | WebResourceLike)
    uid: '@azure/identity.IdentityClient.sendRequest'
    package: '@azure/identity'
    summary: Send the provided httpRequest.
    syntax:
      content: 'function sendRequest(options: RequestPrepareOptions | WebResourceLike)'
      parameters:
        - id: options
          type: RequestPrepareOptions | WebResourceLike
          description: ''
      return:
        type: Promise&lt;HttpOperationResponse&gt;
        description: ''
  - name: 'sendTokenRequest(WebResource, (responseBody: any) => number)'
    uid: '@azure/identity.IdentityClient.sendTokenRequest'
    package: '@azure/identity'
    summary: ''
    syntax:
      content: >-
        function sendTokenRequest(webResource: WebResource, expiresOnParser?:
        (responseBody: any) => number)
      parameters:
        - id: webResource
          type: WebResource
          description: ''
        - id: expiresOnParser
          type: '(responseBody: any) =&gt; number'
          description: ''
      return:
        type: Promise&lt;<xref uid="@azure/identity.TokenResponse" /> | null&gt;
        description: ''
extends: ServiceClient
