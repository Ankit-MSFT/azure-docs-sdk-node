### YamlMime:UniversalReference
items:
  - uid: azure-cognitiveservices-luis-authoring.Train
    name: Train
    fullName: Train
    children:
      - azure-cognitiveservices-luis-authoring.Train.getStatus
      - azure-cognitiveservices-luis-authoring.Train.getStatus_2
      - azure-cognitiveservices-luis-authoring.Train.getStatus_1
      - >-
        azure-cognitiveservices-luis-authoring.Train.getStatusWithHttpOperationResponse
      - azure-cognitiveservices-luis-authoring.Train.trainVersion
      - azure-cognitiveservices-luis-authoring.Train.trainVersion_2
      - azure-cognitiveservices-luis-authoring.Train.trainVersion_1
      - >-
        azure-cognitiveservices-luis-authoring.Train.trainVersionWithHttpOperationResponse
    langs:
      - typeScript
    type: interface
    summary: ''
    package: azure-cognitiveservices-luis-authoring
  - uid: azure-cognitiveservices-luis-authoring.Train.getStatus
    name: 'getStatus(string, string, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      Gets the training status of all models (intents and entities) for the

      specified LUIS app. You must call the train API to train the LUIS app
      before

      you call this API to get training status. "appID" specifies the LUIS app
      ID.

      "versionId" specifies the version number of the LUIS app. For example,

      "0.1".
    syntax:
      content: 'function getStatus(appId: string, versionId: string, options?: Object)'
      parameters:
        - id: appId
          type:
            - string
          description: |
            The application ID.
        - id: versionId
          type:
            - string
          description: |
            The version ID.
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - 'Promise<azure-cognitiveservices-luis-authoring.ModelTrainingInfo[]>'
    package: azure-cognitiveservices-luis-authoring
  - uid: azure-cognitiveservices-luis-authoring.Train.getStatus_2
    name: 'getStatus(string, string, Object, ServiceCallback<ModelTrainingInfo[]>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      Gets the training status of all models (intents and entities) for the

      specified LUIS app. You must call the train API to train the LUIS app
      before

      you call this API to get training status. "appID" specifies the LUIS app
      ID.

      "versionId" specifies the version number of the LUIS app. For example,

      "0.1".
    syntax:
      content: >-
        function getStatus(appId: string, versionId: string, options: Object,
        callback: ServiceCallback<ModelTrainingInfo[]>)
      parameters:
        - id: appId
          type:
            - string
          description: ''
        - id: versionId
          type:
            - string
          description: ''
        - id: options
          type:
            - Object
          description: ''
        - id: callback
          type:
            - >-
              ServiceCallback<azure-cognitiveservices-luis-authoring.ModelTrainingInfo[]>
          description: ''
      return:
        type:
          - 'Promise<azure-cognitiveservices-luis-authoring.ModelTrainingInfo[]>'
    package: azure-cognitiveservices-luis-authoring
  - uid: azure-cognitiveservices-luis-authoring.Train.getStatus_1
    name: 'getStatus(string, string, ServiceCallback<ModelTrainingInfo[]>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      Gets the training status of all models (intents and entities) for the

      specified LUIS app. You must call the train API to train the LUIS app
      before

      you call this API to get training status. "appID" specifies the LUIS app
      ID.

      "versionId" specifies the version number of the LUIS app. For example,

      "0.1".
    syntax:
      content: >-
        function getStatus(appId: string, versionId: string, callback:
        ServiceCallback<ModelTrainingInfo[]>)
      parameters:
        - id: appId
          type:
            - string
          description: ''
        - id: versionId
          type:
            - string
          description: ''
        - id: callback
          type:
            - >-
              ServiceCallback<azure-cognitiveservices-luis-authoring.ModelTrainingInfo[]>
          description: ''
      return:
        type:
          - 'Promise<azure-cognitiveservices-luis-authoring.ModelTrainingInfo[]>'
    package: azure-cognitiveservices-luis-authoring
  - uid: >-
      azure-cognitiveservices-luis-authoring.Train.getStatusWithHttpOperationResponse
    name: 'getStatusWithHttpOperationResponse(string, string, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      Gets the training status of all models (intents and entities) for the

      specified LUIS app. You must call the train API to train the LUIS app
      before

      you call this API to get training status. "appID" specifies the LUIS app
      ID.

      "versionId" specifies the version number of the LUIS app. For example,

      "0.1".
    syntax:
      content: >-
        function getStatusWithHttpOperationResponse(appId: string, versionId:
        string, options?: Object)
      parameters:
        - id: appId
          type:
            - string
          description: |
            The application ID.
        - id: versionId
          type:
            - string
          description: |
            The version ID.
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - >-
            Promise<HttpOperationResponse<azure-cognitiveservices-luis-authoring.ModelTrainingInfo[]>>
    package: azure-cognitiveservices-luis-authoring
  - uid: azure-cognitiveservices-luis-authoring.Train.trainVersion
    name: 'trainVersion(string, string, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      Sends a training request for a version of a specified LUIS app. This POST

      request initiates a request asynchronously. To determine whether the

      training request is successful, submit a GET request to get training
      status.

      Note: The application version is not fully trained unless all the models

      (intents and entities) are trained successfully or are up to date. To
      verify

      training success, get the training status at least once after training is

      complete.
    syntax:
      content: >-
        function trainVersion(appId: string, versionId: string, options?:
        Object)
      parameters:
        - id: appId
          type:
            - string
          description: |
            The application ID.
        - id: versionId
          type:
            - string
          description: |
            The version ID.
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - >-
            Promise<azure-cognitiveservices-luis-authoring.EnqueueTrainingResponse>
    package: azure-cognitiveservices-luis-authoring
  - uid: azure-cognitiveservices-luis-authoring.Train.trainVersion_2
    name: >-
      trainVersion(string, string, Object,
      ServiceCallback<EnqueueTrainingResponse>)
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      Sends a training request for a version of a specified LUIS app. This POST

      request initiates a request asynchronously. To determine whether the

      training request is successful, submit a GET request to get training
      status.

      Note: The application version is not fully trained unless all the models

      (intents and entities) are trained successfully or are up to date. To
      verify

      training success, get the training status at least once after training is

      complete.
    syntax:
      content: >-
        function trainVersion(appId: string, versionId: string, options: Object,
        callback: ServiceCallback<EnqueueTrainingResponse>)
      parameters:
        - id: appId
          type:
            - string
          description: ''
        - id: versionId
          type:
            - string
          description: ''
        - id: options
          type:
            - Object
          description: ''
        - id: callback
          type:
            - >-
              ServiceCallback<azure-cognitiveservices-luis-authoring.EnqueueTrainingResponse>
          description: ''
      return:
        type:
          - >-
            Promise<azure-cognitiveservices-luis-authoring.EnqueueTrainingResponse>
    package: azure-cognitiveservices-luis-authoring
  - uid: azure-cognitiveservices-luis-authoring.Train.trainVersion_1
    name: 'trainVersion(string, string, ServiceCallback<EnqueueTrainingResponse>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      Sends a training request for a version of a specified LUIS app. This POST

      request initiates a request asynchronously. To determine whether the

      training request is successful, submit a GET request to get training
      status.

      Note: The application version is not fully trained unless all the models

      (intents and entities) are trained successfully or are up to date. To
      verify

      training success, get the training status at least once after training is

      complete.
    syntax:
      content: >-
        function trainVersion(appId: string, versionId: string, callback:
        ServiceCallback<EnqueueTrainingResponse>)
      parameters:
        - id: appId
          type:
            - string
          description: ''
        - id: versionId
          type:
            - string
          description: ''
        - id: callback
          type:
            - >-
              ServiceCallback<azure-cognitiveservices-luis-authoring.EnqueueTrainingResponse>
          description: ''
      return:
        type:
          - >-
            Promise<azure-cognitiveservices-luis-authoring.EnqueueTrainingResponse>
    package: azure-cognitiveservices-luis-authoring
  - uid: >-
      azure-cognitiveservices-luis-authoring.Train.trainVersionWithHttpOperationResponse
    name: 'trainVersionWithHttpOperationResponse(string, string, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      Sends a training request for a version of a specified LUIS app. This POST

      request initiates a request asynchronously. To determine whether the

      training request is successful, submit a GET request to get training
      status.

      Note: The application version is not fully trained unless all the models

      (intents and entities) are trained successfully or are up to date. To
      verify

      training success, get the training status at least once after training is

      complete.
    syntax:
      content: >-
        function trainVersionWithHttpOperationResponse(appId: string, versionId:
        string, options?: Object)
      parameters:
        - id: appId
          type:
            - string
          description: |
            The application ID.
        - id: versionId
          type:
            - string
          description: |
            The version ID.
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - >-
            Promise<HttpOperationResponse<azure-cognitiveservices-luis-authoring.EnqueueTrainingResponse>>
    package: azure-cognitiveservices-luis-authoring
references:
  - uid: 'Promise<azure-cognitiveservices-luis-authoring.ModelTrainingInfo[]>'
    name: 'ModelTrainingInfo[]>'
    spec.typeScript:
      - name: Promise<
        fullName: Promise<
      - name: ModelTrainingInfo
        fullName: ModelTrainingInfo
        uid: azure-cognitiveservices-luis-authoring.ModelTrainingInfo
      - name: '[]>'
        fullName: '[]>'
  - uid: >-
      ServiceCallback<azure-cognitiveservices-luis-authoring.ModelTrainingInfo[]>
    name: 'ModelTrainingInfo[]>'
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: ModelTrainingInfo
        fullName: ModelTrainingInfo
        uid: azure-cognitiveservices-luis-authoring.ModelTrainingInfo
      - name: '[]>'
        fullName: '[]>'
  - uid: >-
      Promise<HttpOperationResponse<azure-cognitiveservices-luis-authoring.ModelTrainingInfo[]>>
    name: 'ModelTrainingInfo[]>>'
    spec.typeScript:
      - name: Promise<HttpOperationResponse<
        fullName: Promise<HttpOperationResponse<
      - name: ModelTrainingInfo
        fullName: ModelTrainingInfo
        uid: azure-cognitiveservices-luis-authoring.ModelTrainingInfo
      - name: '[]>>'
        fullName: '[]>>'
  - uid: Promise<azure-cognitiveservices-luis-authoring.EnqueueTrainingResponse>
    name: EnqueueTrainingResponse>
    spec.typeScript:
      - name: Promise<
        fullName: Promise<
      - name: EnqueueTrainingResponse
        fullName: EnqueueTrainingResponse
        uid: azure-cognitiveservices-luis-authoring.EnqueueTrainingResponse
      - name: '>'
        fullName: '>'
  - uid: >-
      ServiceCallback<azure-cognitiveservices-luis-authoring.EnqueueTrainingResponse>
    name: EnqueueTrainingResponse>
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: EnqueueTrainingResponse
        fullName: EnqueueTrainingResponse
        uid: azure-cognitiveservices-luis-authoring.EnqueueTrainingResponse
      - name: '>'
        fullName: '>'
  - uid: >-
      Promise<HttpOperationResponse<azure-cognitiveservices-luis-authoring.EnqueueTrainingResponse>>
    name: EnqueueTrainingResponse>>
    spec.typeScript:
      - name: Promise<HttpOperationResponse<
        fullName: Promise<HttpOperationResponse<
      - name: EnqueueTrainingResponse
        fullName: EnqueueTrainingResponse
        uid: azure-cognitiveservices-luis-authoring.EnqueueTrainingResponse
      - name: '>>'
        fullName: '>>'
