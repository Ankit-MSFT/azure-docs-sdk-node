### YamlMime:UniversalReference
items:
  - uid: azure-arm-apimanagement.ApiIssue
    name: ApiIssue
    fullName: ApiIssue
    children:
      - azure-arm-apimanagement.ApiIssue.createOrUpdate
      - azure-arm-apimanagement.ApiIssue.createOrUpdate_1
      - azure-arm-apimanagement.ApiIssue.createOrUpdate_2
      - azure-arm-apimanagement.ApiIssue.createOrUpdateWithHttpOperationResponse
      - azure-arm-apimanagement.ApiIssue.deleteMethod
      - azure-arm-apimanagement.ApiIssue.deleteMethod_1
      - azure-arm-apimanagement.ApiIssue.deleteMethod_2
      - azure-arm-apimanagement.ApiIssue.deleteMethodWithHttpOperationResponse
      - azure-arm-apimanagement.ApiIssue.get
      - azure-arm-apimanagement.ApiIssue.get_1
      - azure-arm-apimanagement.ApiIssue.get_2
      - azure-arm-apimanagement.ApiIssue.getEntityTag
      - azure-arm-apimanagement.ApiIssue.getEntityTag_1
      - azure-arm-apimanagement.ApiIssue.getEntityTag_2
      - azure-arm-apimanagement.ApiIssue.getEntityTagWithHttpOperationResponse
      - azure-arm-apimanagement.ApiIssue.getWithHttpOperationResponse
      - azure-arm-apimanagement.ApiIssue.listByService
      - azure-arm-apimanagement.ApiIssue.listByService_1
      - azure-arm-apimanagement.ApiIssue.listByService_2
      - azure-arm-apimanagement.ApiIssue.listByServiceNext
      - azure-arm-apimanagement.ApiIssue.listByServiceNext_1
      - azure-arm-apimanagement.ApiIssue.listByServiceNext_2
      - >-
        azure-arm-apimanagement.ApiIssue.listByServiceNextWithHttpOperationResponse
      - azure-arm-apimanagement.ApiIssue.listByServiceWithHttpOperationResponse
    langs:
      - typeScript
    type: interface
    summary: ''
    package: azure-arm-apimanagement
  - uid: azure-arm-apimanagement.ApiIssue.createOrUpdate
    name: createOrUpdate
    children: []
    type: method
    langs:
      - typeScript
    summary: Creates a new Issue for an API or updates an existing one.
    syntax:
      content: >-
        function createOrUpdate(resourceGroupName: string, serviceName: string,
        apiId: string, issueId: string, parameters: IssueContract, options?:
        Object)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |
            The name of the resource group.
        - id: serviceName
          type:
            - string
          description: |
            The name of the API Management service.
        - id: apiId
          type:
            - string
          description: |
            API identifier. Must be unique in the current API
            Management service instance.
        - id: issueId
          type:
            - string
          description: |
            Issue identifier. Must be unique in the current API
            Management service instance.
        - id: parameters
          type:
            - azure-arm-apimanagement.IssueContract
          description: |
            Create parameters.
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<azure-arm-apimanagement.IssueContract>
    package: azure-arm-apimanagement
  - uid: azure-arm-apimanagement.ApiIssue.createOrUpdate_1
    name: createOrUpdate
    children: []
    type: method
    langs:
      - typeScript
    summary: Creates a new Issue for an API or updates an existing one.
    syntax:
      content: >-
        function createOrUpdate(resourceGroupName: string, serviceName: string,
        apiId: string, issueId: string, parameters: IssueContract, callback:
        ServiceCallback<IssueContract>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: ''
        - id: serviceName
          type:
            - string
          description: ''
        - id: apiId
          type:
            - string
          description: ''
        - id: issueId
          type:
            - string
          description: ''
        - id: parameters
          type:
            - azure-arm-apimanagement.IssueContract
          description: ''
        - id: callback
          type:
            - ServiceCallback<azure-arm-apimanagement.IssueContract>
          description: ''
      return:
        type:
          - Promise<azure-arm-apimanagement.IssueContract>
    package: azure-arm-apimanagement
  - uid: azure-arm-apimanagement.ApiIssue.createOrUpdate_2
    name: createOrUpdate
    children: []
    type: method
    langs:
      - typeScript
    summary: Creates a new Issue for an API or updates an existing one.
    syntax:
      content: >-
        function createOrUpdate(resourceGroupName: string, serviceName: string,
        apiId: string, issueId: string, parameters: IssueContract, options:
        Object, callback: ServiceCallback<IssueContract>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: ''
        - id: serviceName
          type:
            - string
          description: ''
        - id: apiId
          type:
            - string
          description: ''
        - id: issueId
          type:
            - string
          description: ''
        - id: parameters
          type:
            - azure-arm-apimanagement.IssueContract
          description: ''
        - id: options
          type:
            - Object
          description: ''
        - id: callback
          type:
            - ServiceCallback<azure-arm-apimanagement.IssueContract>
          description: ''
      return:
        type:
          - Promise<azure-arm-apimanagement.IssueContract>
    package: azure-arm-apimanagement
  - uid: azure-arm-apimanagement.ApiIssue.createOrUpdateWithHttpOperationResponse
    name: createOrUpdateWithHttpOperationResponse
    children: []
    type: method
    langs:
      - typeScript
    summary: Creates a new Issue for an API or updates an existing one.
    syntax:
      content: >-
        function createOrUpdateWithHttpOperationResponse(resourceGroupName:
        string, serviceName: string, apiId: string, issueId: string, parameters:
        IssueContract, options?: Object)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |
            The name of the resource group.
        - id: serviceName
          type:
            - string
          description: |
            The name of the API Management service.
        - id: apiId
          type:
            - string
          description: |
            API identifier. Must be unique in the current API
            Management service instance.
        - id: issueId
          type:
            - string
          description: |
            Issue identifier. Must be unique in the current API
            Management service instance.
        - id: parameters
          type:
            - azure-arm-apimanagement.IssueContract
          description: |
            Create parameters.
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - >-
            Promise<HttpOperationResponse<azure-arm-apimanagement.IssueContract>>
    package: azure-arm-apimanagement
  - uid: azure-arm-apimanagement.ApiIssue.deleteMethod
    name: deleteMethod
    children: []
    type: method
    langs:
      - typeScript
    summary: Deletes the specified Issue from an API.
    syntax:
      content: >-
        function deleteMethod(resourceGroupName: string, serviceName: string,
        apiId: string, issueId: string, ifMatch: string, options?: Object)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |
            The name of the resource group.
        - id: serviceName
          type:
            - string
          description: |
            The name of the API Management service.
        - id: apiId
          type:
            - string
          description: |
            API identifier. Must be unique in the current API
            Management service instance.
        - id: issueId
          type:
            - string
          description: |
            Issue identifier. Must be unique in the current API
            Management service instance.
        - id: ifMatch
          type:
            - string
          description: >
            ETag of the Issue Entity. ETag should match the

            current entity state from the header response of the GET request or
            it

            should be * for unconditional update.
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<void>
    package: azure-arm-apimanagement
  - uid: azure-arm-apimanagement.ApiIssue.deleteMethod_1
    name: deleteMethod
    children: []
    type: method
    langs:
      - typeScript
    summary: Deletes the specified Issue from an API.
    syntax:
      content: >-
        function deleteMethod(resourceGroupName: string, serviceName: string,
        apiId: string, issueId: string, ifMatch: string, callback:
        ServiceCallback<void>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: ''
        - id: serviceName
          type:
            - string
          description: ''
        - id: apiId
          type:
            - string
          description: ''
        - id: issueId
          type:
            - string
          description: ''
        - id: ifMatch
          type:
            - string
          description: ''
        - id: callback
          type:
            - ServiceCallback<void>
          description: ''
      return:
        type:
          - Promise<void>
    package: azure-arm-apimanagement
  - uid: azure-arm-apimanagement.ApiIssue.deleteMethod_2
    name: deleteMethod
    children: []
    type: method
    langs:
      - typeScript
    summary: Deletes the specified Issue from an API.
    syntax:
      content: >-
        function deleteMethod(resourceGroupName: string, serviceName: string,
        apiId: string, issueId: string, ifMatch: string, options: Object,
        callback: ServiceCallback<void>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: ''
        - id: serviceName
          type:
            - string
          description: ''
        - id: apiId
          type:
            - string
          description: ''
        - id: issueId
          type:
            - string
          description: ''
        - id: ifMatch
          type:
            - string
          description: ''
        - id: options
          type:
            - Object
          description: ''
        - id: callback
          type:
            - ServiceCallback<void>
          description: ''
      return:
        type:
          - Promise<void>
    package: azure-arm-apimanagement
  - uid: azure-arm-apimanagement.ApiIssue.deleteMethodWithHttpOperationResponse
    name: deleteMethodWithHttpOperationResponse
    children: []
    type: method
    langs:
      - typeScript
    summary: Deletes the specified Issue from an API.
    syntax:
      content: >-
        function deleteMethodWithHttpOperationResponse(resourceGroupName:
        string, serviceName: string, apiId: string, issueId: string, ifMatch:
        string, options?: Object)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |
            The name of the resource group.
        - id: serviceName
          type:
            - string
          description: |
            The name of the API Management service.
        - id: apiId
          type:
            - string
          description: |
            API identifier. Must be unique in the current API
            Management service instance.
        - id: issueId
          type:
            - string
          description: |
            Issue identifier. Must be unique in the current API
            Management service instance.
        - id: ifMatch
          type:
            - string
          description: >
            ETag of the Issue Entity. ETag should match the

            current entity state from the header response of the GET request or
            it

            should be * for unconditional update.
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<HttpOperationResponse<void>>
    package: azure-arm-apimanagement
  - uid: azure-arm-apimanagement.ApiIssue.get
    name: get
    children: []
    type: method
    langs:
      - typeScript
    summary: Gets the details of the Issue for an API specified by its identifier.
    syntax:
      content: >-
        function get(resourceGroupName: string, serviceName: string, apiId:
        string, issueId: string, options?: Object)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |
            The name of the resource group.
        - id: serviceName
          type:
            - string
          description: |
            The name of the API Management service.
        - id: apiId
          type:
            - string
          description: |
            API identifier. Must be unique in the current API
            Management service instance.
        - id: issueId
          type:
            - string
          description: |
            Issue identifier. Must be unique in the current API
            Management service instance.
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<azure-arm-apimanagement.IssueContract>
    package: azure-arm-apimanagement
  - uid: azure-arm-apimanagement.ApiIssue.get_1
    name: get
    children: []
    type: method
    langs:
      - typeScript
    summary: Gets the details of the Issue for an API specified by its identifier.
    syntax:
      content: >-
        function get(resourceGroupName: string, serviceName: string, apiId:
        string, issueId: string, callback: ServiceCallback<IssueContract>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: ''
        - id: serviceName
          type:
            - string
          description: ''
        - id: apiId
          type:
            - string
          description: ''
        - id: issueId
          type:
            - string
          description: ''
        - id: callback
          type:
            - ServiceCallback<azure-arm-apimanagement.IssueContract>
          description: ''
      return:
        type:
          - Promise<azure-arm-apimanagement.IssueContract>
    package: azure-arm-apimanagement
  - uid: azure-arm-apimanagement.ApiIssue.get_2
    name: get
    children: []
    type: method
    langs:
      - typeScript
    summary: Gets the details of the Issue for an API specified by its identifier.
    syntax:
      content: >-
        function get(resourceGroupName: string, serviceName: string, apiId:
        string, issueId: string, options: Object, callback:
        ServiceCallback<IssueContract>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: ''
        - id: serviceName
          type:
            - string
          description: ''
        - id: apiId
          type:
            - string
          description: ''
        - id: issueId
          type:
            - string
          description: ''
        - id: options
          type:
            - Object
          description: ''
        - id: callback
          type:
            - ServiceCallback<azure-arm-apimanagement.IssueContract>
          description: ''
      return:
        type:
          - Promise<azure-arm-apimanagement.IssueContract>
    package: azure-arm-apimanagement
  - uid: azure-arm-apimanagement.ApiIssue.getEntityTag
    name: getEntityTag
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      Gets the entity state (Etag) version of the Issue for an API specified by
      its identifier.
    syntax:
      content: >-
        function getEntityTag(resourceGroupName: string, serviceName: string,
        apiId: string, issueId: string, options?: Object)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |
            The name of the resource group.
        - id: serviceName
          type:
            - string
          description: |
            The name of the API Management service.
        - id: apiId
          type:
            - string
          description: |
            API identifier. Must be unique in the current API
            Management service instance.
        - id: issueId
          type:
            - string
          description: |
            Issue identifier. Must be unique in the current API
            Management service instance.
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<void>
    package: azure-arm-apimanagement
  - uid: azure-arm-apimanagement.ApiIssue.getEntityTag_1
    name: getEntityTag
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      Gets the entity state (Etag) version of the Issue for an API specified by
      its identifier.
    syntax:
      content: >-
        function getEntityTag(resourceGroupName: string, serviceName: string,
        apiId: string, issueId: string, callback: ServiceCallback<void>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: ''
        - id: serviceName
          type:
            - string
          description: ''
        - id: apiId
          type:
            - string
          description: ''
        - id: issueId
          type:
            - string
          description: ''
        - id: callback
          type:
            - ServiceCallback<void>
          description: ''
      return:
        type:
          - Promise<void>
    package: azure-arm-apimanagement
  - uid: azure-arm-apimanagement.ApiIssue.getEntityTag_2
    name: getEntityTag
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      Gets the entity state (Etag) version of the Issue for an API specified by
      its identifier.
    syntax:
      content: >-
        function getEntityTag(resourceGroupName: string, serviceName: string,
        apiId: string, issueId: string, options: Object, callback:
        ServiceCallback<void>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: ''
        - id: serviceName
          type:
            - string
          description: ''
        - id: apiId
          type:
            - string
          description: ''
        - id: issueId
          type:
            - string
          description: ''
        - id: options
          type:
            - Object
          description: ''
        - id: callback
          type:
            - ServiceCallback<void>
          description: ''
      return:
        type:
          - Promise<void>
    package: azure-arm-apimanagement
  - uid: azure-arm-apimanagement.ApiIssue.getEntityTagWithHttpOperationResponse
    name: getEntityTagWithHttpOperationResponse
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      Gets the entity state (Etag) version of the Issue for an API specified by
      its identifier.
    syntax:
      content: >-
        function getEntityTagWithHttpOperationResponse(resourceGroupName:
        string, serviceName: string, apiId: string, issueId: string, options?:
        Object)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |
            The name of the resource group.
        - id: serviceName
          type:
            - string
          description: |
            The name of the API Management service.
        - id: apiId
          type:
            - string
          description: |
            API identifier. Must be unique in the current API
            Management service instance.
        - id: issueId
          type:
            - string
          description: |
            Issue identifier. Must be unique in the current API
            Management service instance.
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<HttpOperationResponse<void>>
    package: azure-arm-apimanagement
  - uid: azure-arm-apimanagement.ApiIssue.getWithHttpOperationResponse
    name: getWithHttpOperationResponse
    children: []
    type: method
    langs:
      - typeScript
    summary: Gets the details of the Issue for an API specified by its identifier.
    syntax:
      content: >-
        function getWithHttpOperationResponse(resourceGroupName: string,
        serviceName: string, apiId: string, issueId: string, options?: Object)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |
            The name of the resource group.
        - id: serviceName
          type:
            - string
          description: |
            The name of the API Management service.
        - id: apiId
          type:
            - string
          description: |
            API identifier. Must be unique in the current API
            Management service instance.
        - id: issueId
          type:
            - string
          description: |
            Issue identifier. Must be unique in the current API
            Management service instance.
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - >-
            Promise<HttpOperationResponse<azure-arm-apimanagement.IssueContract>>
    package: azure-arm-apimanagement
  - uid: azure-arm-apimanagement.ApiIssue.listByService
    name: listByService
    children: []
    type: method
    langs:
      - typeScript
    summary: Lists all issues assosiated with the specified API.
    syntax:
      content: >-
        function listByService(resourceGroupName: string, serviceName: string,
        apiId: string, options?: Object)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |
            The name of the resource group.
        - id: serviceName
          type:
            - string
          description: |
            The name of the API Management service.
        - id: apiId
          type:
            - string
          description: |
            API identifier. Must be unique in the current API
            Management service instance.
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<azure-arm-apimanagement.IssueCollection>
    package: azure-arm-apimanagement
  - uid: azure-arm-apimanagement.ApiIssue.listByService_1
    name: listByService
    children: []
    type: method
    langs:
      - typeScript
    summary: Lists all issues assosiated with the specified API.
    syntax:
      content: >-
        function listByService(resourceGroupName: string, serviceName: string,
        apiId: string, callback: ServiceCallback<IssueCollection>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: ''
        - id: serviceName
          type:
            - string
          description: ''
        - id: apiId
          type:
            - string
          description: ''
        - id: callback
          type:
            - ServiceCallback<azure-arm-apimanagement.IssueCollection>
          description: ''
      return:
        type:
          - Promise<azure-arm-apimanagement.IssueCollection>
    package: azure-arm-apimanagement
  - uid: azure-arm-apimanagement.ApiIssue.listByService_2
    name: listByService
    children: []
    type: method
    langs:
      - typeScript
    summary: Lists all issues assosiated with the specified API.
    syntax:
      content: >-
        function listByService(resourceGroupName: string, serviceName: string,
        apiId: string, options: Object, callback:
        ServiceCallback<IssueCollection>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: ''
        - id: serviceName
          type:
            - string
          description: ''
        - id: apiId
          type:
            - string
          description: ''
        - id: options
          type:
            - Object
          description: ''
        - id: callback
          type:
            - ServiceCallback<azure-arm-apimanagement.IssueCollection>
          description: ''
      return:
        type:
          - Promise<azure-arm-apimanagement.IssueCollection>
    package: azure-arm-apimanagement
  - uid: azure-arm-apimanagement.ApiIssue.listByServiceNext
    name: listByServiceNext
    children: []
    type: method
    langs:
      - typeScript
    summary: Lists all issues assosiated with the specified API.
    syntax:
      content: 'function listByServiceNext(nextPageLink: string, options?: Object)'
      parameters:
        - id: nextPageLink
          type:
            - string
          description: |
            The NextLink from the previous successful call
            to List operation.
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<azure-arm-apimanagement.IssueCollection>
    package: azure-arm-apimanagement
  - uid: azure-arm-apimanagement.ApiIssue.listByServiceNext_1
    name: listByServiceNext
    children: []
    type: method
    langs:
      - typeScript
    summary: Lists all issues assosiated with the specified API.
    syntax:
      content: >-
        function listByServiceNext(nextPageLink: string, callback:
        ServiceCallback<IssueCollection>)
      parameters:
        - id: nextPageLink
          type:
            - string
          description: ''
        - id: callback
          type:
            - ServiceCallback<azure-arm-apimanagement.IssueCollection>
          description: ''
      return:
        type:
          - Promise<azure-arm-apimanagement.IssueCollection>
    package: azure-arm-apimanagement
  - uid: azure-arm-apimanagement.ApiIssue.listByServiceNext_2
    name: listByServiceNext
    children: []
    type: method
    langs:
      - typeScript
    summary: Lists all issues assosiated with the specified API.
    syntax:
      content: >-
        function listByServiceNext(nextPageLink: string, options: Object,
        callback: ServiceCallback<IssueCollection>)
      parameters:
        - id: nextPageLink
          type:
            - string
          description: ''
        - id: options
          type:
            - Object
          description: ''
        - id: callback
          type:
            - ServiceCallback<azure-arm-apimanagement.IssueCollection>
          description: ''
      return:
        type:
          - Promise<azure-arm-apimanagement.IssueCollection>
    package: azure-arm-apimanagement
  - uid: >-
      azure-arm-apimanagement.ApiIssue.listByServiceNextWithHttpOperationResponse
    name: listByServiceNextWithHttpOperationResponse
    children: []
    type: method
    langs:
      - typeScript
    summary: Lists all issues assosiated with the specified API.
    syntax:
      content: >-
        function listByServiceNextWithHttpOperationResponse(nextPageLink:
        string, options?: Object)
      parameters:
        - id: nextPageLink
          type:
            - string
          description: |
            The NextLink from the previous successful call
            to List operation.
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - >-
            Promise<HttpOperationResponse<azure-arm-apimanagement.IssueCollection>>
    package: azure-arm-apimanagement
  - uid: azure-arm-apimanagement.ApiIssue.listByServiceWithHttpOperationResponse
    name: listByServiceWithHttpOperationResponse
    children: []
    type: method
    langs:
      - typeScript
    summary: Lists all issues assosiated with the specified API.
    syntax:
      content: >-
        function listByServiceWithHttpOperationResponse(resourceGroupName:
        string, serviceName: string, apiId: string, options?: Object)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |
            The name of the resource group.
        - id: serviceName
          type:
            - string
          description: |
            The name of the API Management service.
        - id: apiId
          type:
            - string
          description: |
            API identifier. Must be unique in the current API
            Management service instance.
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - >-
            Promise<HttpOperationResponse<azure-arm-apimanagement.IssueCollection>>
    package: azure-arm-apimanagement
references:
  - uid: azure-arm-apimanagement.IssueContract
    name: IssueContract
    spec.typeScript:
      - name: IssueContract
        fullName: IssueContract
        uid: azure-arm-apimanagement.IssueContract
  - uid: Promise<azure-arm-apimanagement.IssueContract>
    name: IssueContract>
    spec.typeScript:
      - name: Promise<
        fullName: Promise<
      - name: IssueContract
        fullName: IssueContract
        uid: azure-arm-apimanagement.IssueContract
      - name: '>'
        fullName: '>'
  - uid: ServiceCallback<azure-arm-apimanagement.IssueContract>
    name: IssueContract>
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: IssueContract
        fullName: IssueContract
        uid: azure-arm-apimanagement.IssueContract
      - name: '>'
        fullName: '>'
  - uid: Promise<HttpOperationResponse<azure-arm-apimanagement.IssueContract>>
    name: IssueContract>>
    spec.typeScript:
      - name: Promise<HttpOperationResponse<
        fullName: Promise<HttpOperationResponse<
      - name: IssueContract
        fullName: IssueContract
        uid: azure-arm-apimanagement.IssueContract
      - name: '>>'
        fullName: '>>'
  - uid: Promise<azure-arm-apimanagement.IssueCollection>
    name: IssueCollection>
    spec.typeScript:
      - name: Promise<
        fullName: Promise<
      - name: IssueCollection
        fullName: IssueCollection
        uid: azure-arm-apimanagement.IssueCollection
      - name: '>'
        fullName: '>'
  - uid: ServiceCallback<azure-arm-apimanagement.IssueCollection>
    name: IssueCollection>
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: IssueCollection
        fullName: IssueCollection
        uid: azure-arm-apimanagement.IssueCollection
      - name: '>'
        fullName: '>'
  - uid: Promise<HttpOperationResponse<azure-arm-apimanagement.IssueCollection>>
    name: IssueCollection>>
    spec.typeScript:
      - name: Promise<HttpOperationResponse<
        fullName: Promise<HttpOperationResponse<
      - name: IssueCollection
        fullName: IssueCollection
        uid: azure-arm-apimanagement.IssueCollection
      - name: '>>'
        fullName: '>>'
