### YamlMime:UniversalReference
items:
  - uid: azure-arm-apimanagement.GroupUser
    name: GroupUser
    fullName: GroupUser
    children:
      - azure-arm-apimanagement.GroupUser.checkEntityExists
      - azure-arm-apimanagement.GroupUser.checkEntityExists_2
      - azure-arm-apimanagement.GroupUser.checkEntityExists_1
      - >-
        azure-arm-apimanagement.GroupUser.checkEntityExistsWithHttpOperationResponse
      - azure-arm-apimanagement.GroupUser.create
      - azure-arm-apimanagement.GroupUser.create_1
      - azure-arm-apimanagement.GroupUser.create_2
      - azure-arm-apimanagement.GroupUser.createWithHttpOperationResponse
      - azure-arm-apimanagement.GroupUser.deleteMethod
      - azure-arm-apimanagement.GroupUser.deleteMethod_1
      - azure-arm-apimanagement.GroupUser.deleteMethod_2
      - azure-arm-apimanagement.GroupUser.deleteMethodWithHttpOperationResponse
      - azure-arm-apimanagement.GroupUser.list
      - azure-arm-apimanagement.GroupUser.list_1
      - azure-arm-apimanagement.GroupUser.list_2
      - azure-arm-apimanagement.GroupUser.listNext
      - azure-arm-apimanagement.GroupUser.listNext_1
      - azure-arm-apimanagement.GroupUser.listNext_2
      - azure-arm-apimanagement.GroupUser.listNextWithHttpOperationResponse
      - azure-arm-apimanagement.GroupUser.listWithHttpOperationResponse
    langs:
      - typeScript
    type: interface
    summary: ''
    package: azure-arm-apimanagement
  - uid: azure-arm-apimanagement.GroupUser.checkEntityExists
    name: checkEntityExists
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      Checks that user entity specified by identifier is associated with the
      group

      entity.
    syntax:
      content: >-
        function checkEntityExists(resourceGroupName: string, serviceName:
        string, groupId: string, uid: string, options?: function)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |
            The name of the resource group.
        - id: serviceName
          type:
            - string
          description: |
            The name of the API Management service.
        - id: groupId
          type:
            - string
          description: |
            Group identifier. Must be unique in the current API
            Management service instance.
        - id: uid
          type:
            - string
          description: |
            User identifier. Must be unique in the current API
            Management service instance.
        - id: options
          type:
            - function
          description: ''
          optional: true
      return:
        type:
          - Promise<boolean>
    package: azure-arm-apimanagement
  - uid: azure-arm-apimanagement.GroupUser.checkEntityExists_2
    name: checkEntityExists
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      Checks that user entity specified by identifier is associated with the
      group

      entity.
    syntax:
      content: >-
        function checkEntityExists(resourceGroupName: string, serviceName:
        string, groupId: string, uid: string, options: function, callback:
        ServiceCallback<boolean>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: ''
        - id: serviceName
          type:
            - string
          description: ''
        - id: groupId
          type:
            - string
          description: ''
        - id: uid
          type:
            - string
          description: ''
        - id: options
          type:
            - function
          description: ''
        - id: callback
          type:
            - ServiceCallback<boolean>
          description: ''
      return:
        type:
          - Promise<boolean>
    package: azure-arm-apimanagement
  - uid: azure-arm-apimanagement.GroupUser.checkEntityExists_1
    name: checkEntityExists
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      Checks that user entity specified by identifier is associated with the
      group

      entity.
    syntax:
      content: >-
        function checkEntityExists(resourceGroupName: string, serviceName:
        string, groupId: string, uid: string, callback:
        ServiceCallback<boolean>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: ''
        - id: serviceName
          type:
            - string
          description: ''
        - id: groupId
          type:
            - string
          description: ''
        - id: uid
          type:
            - string
          description: ''
        - id: callback
          type:
            - ServiceCallback<boolean>
          description: ''
      return:
        type:
          - Promise<boolean>
    package: azure-arm-apimanagement
  - uid: >-
      azure-arm-apimanagement.GroupUser.checkEntityExistsWithHttpOperationResponse
    name: checkEntityExistsWithHttpOperationResponse
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      Checks that user entity specified by identifier is associated with the
      group

      entity.
    syntax:
      content: >-
        function checkEntityExistsWithHttpOperationResponse(resourceGroupName:
        string, serviceName: string, groupId: string, uid: string, options?:
        function)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |
            The name of the resource group.
        - id: serviceName
          type:
            - string
          description: |
            The name of the API Management service.
        - id: groupId
          type:
            - string
          description: |
            Group identifier. Must be unique in the current API
            Management service instance.
        - id: uid
          type:
            - string
          description: |
            User identifier. Must be unique in the current API
            Management service instance.
        - id: options
          type:
            - function
          description: ''
          optional: true
      return:
        type:
          - Promise<HttpOperationResponse<boolean>>
    package: azure-arm-apimanagement
  - uid: azure-arm-apimanagement.GroupUser.create
    name: create
    children: []
    type: method
    langs:
      - typeScript
    summary: Adds a user to the specified group.
    syntax:
      content: >-
        function create(resourceGroupName: string, serviceName: string, groupId:
        string, uid: string, options?: function)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |
            The name of the resource group.
        - id: serviceName
          type:
            - string
          description: |
            The name of the API Management service.
        - id: groupId
          type:
            - string
          description: |
            Group identifier. Must be unique in the current API
            Management service instance.
        - id: uid
          type:
            - string
          description: |
            User identifier. Must be unique in the current API
            Management service instance.
        - id: options
          type:
            - function
          description: ''
          optional: true
      return:
        type:
          - Promise<azure-arm-apimanagement.UserContract>
    package: azure-arm-apimanagement
  - uid: azure-arm-apimanagement.GroupUser.create_1
    name: create
    children: []
    type: method
    langs:
      - typeScript
    summary: Adds a user to the specified group.
    syntax:
      content: >-
        function create(resourceGroupName: string, serviceName: string, groupId:
        string, uid: string, callback: ServiceCallback<UserContract>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: ''
        - id: serviceName
          type:
            - string
          description: ''
        - id: groupId
          type:
            - string
          description: ''
        - id: uid
          type:
            - string
          description: ''
        - id: callback
          type:
            - ServiceCallback<azure-arm-apimanagement.UserContract>
          description: ''
      return:
        type:
          - Promise<azure-arm-apimanagement.UserContract>
    package: azure-arm-apimanagement
  - uid: azure-arm-apimanagement.GroupUser.create_2
    name: create
    children: []
    type: method
    langs:
      - typeScript
    summary: Adds a user to the specified group.
    syntax:
      content: >-
        function create(resourceGroupName: string, serviceName: string, groupId:
        string, uid: string, options: function, callback:
        ServiceCallback<UserContract>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: ''
        - id: serviceName
          type:
            - string
          description: ''
        - id: groupId
          type:
            - string
          description: ''
        - id: uid
          type:
            - string
          description: ''
        - id: options
          type:
            - function
          description: ''
        - id: callback
          type:
            - ServiceCallback<azure-arm-apimanagement.UserContract>
          description: ''
      return:
        type:
          - Promise<azure-arm-apimanagement.UserContract>
    package: azure-arm-apimanagement
  - uid: azure-arm-apimanagement.GroupUser.createWithHttpOperationResponse
    name: createWithHttpOperationResponse
    children: []
    type: method
    langs:
      - typeScript
    summary: Adds a user to the specified group.
    syntax:
      content: >-
        function createWithHttpOperationResponse(resourceGroupName: string,
        serviceName: string, groupId: string, uid: string, options?: function)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |
            The name of the resource group.
        - id: serviceName
          type:
            - string
          description: |
            The name of the API Management service.
        - id: groupId
          type:
            - string
          description: |
            Group identifier. Must be unique in the current API
            Management service instance.
        - id: uid
          type:
            - string
          description: |
            User identifier. Must be unique in the current API
            Management service instance.
        - id: options
          type:
            - function
          description: ''
          optional: true
      return:
        type:
          - Promise<HttpOperationResponse<azure-arm-apimanagement.UserContract>>
    package: azure-arm-apimanagement
  - uid: azure-arm-apimanagement.GroupUser.deleteMethod
    name: deleteMethod
    children: []
    type: method
    langs:
      - typeScript
    summary: Remove existing user from existing group.
    syntax:
      content: >-
        function deleteMethod(resourceGroupName: string, serviceName: string,
        groupId: string, uid: string, options?: function)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |
            The name of the resource group.
        - id: serviceName
          type:
            - string
          description: |
            The name of the API Management service.
        - id: groupId
          type:
            - string
          description: |
            Group identifier. Must be unique in the current API
            Management service instance.
        - id: uid
          type:
            - string
          description: |
            User identifier. Must be unique in the current API
            Management service instance.
        - id: options
          type:
            - function
          description: ''
          optional: true
      return:
        type:
          - Promise<void>
    package: azure-arm-apimanagement
  - uid: azure-arm-apimanagement.GroupUser.deleteMethod_1
    name: deleteMethod
    children: []
    type: method
    langs:
      - typeScript
    summary: Remove existing user from existing group.
    syntax:
      content: >-
        function deleteMethod(resourceGroupName: string, serviceName: string,
        groupId: string, uid: string, callback: ServiceCallback<void>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: ''
        - id: serviceName
          type:
            - string
          description: ''
        - id: groupId
          type:
            - string
          description: ''
        - id: uid
          type:
            - string
          description: ''
        - id: callback
          type:
            - ServiceCallback<void>
          description: ''
      return:
        type:
          - Promise<void>
    package: azure-arm-apimanagement
  - uid: azure-arm-apimanagement.GroupUser.deleteMethod_2
    name: deleteMethod
    children: []
    type: method
    langs:
      - typeScript
    summary: Remove existing user from existing group.
    syntax:
      content: >-
        function deleteMethod(resourceGroupName: string, serviceName: string,
        groupId: string, uid: string, options: function, callback:
        ServiceCallback<void>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: ''
        - id: serviceName
          type:
            - string
          description: ''
        - id: groupId
          type:
            - string
          description: ''
        - id: uid
          type:
            - string
          description: ''
        - id: options
          type:
            - function
          description: ''
        - id: callback
          type:
            - ServiceCallback<void>
          description: ''
      return:
        type:
          - Promise<void>
    package: azure-arm-apimanagement
  - uid: azure-arm-apimanagement.GroupUser.deleteMethodWithHttpOperationResponse
    name: deleteMethodWithHttpOperationResponse
    children: []
    type: method
    langs:
      - typeScript
    summary: Remove existing user from existing group.
    syntax:
      content: >-
        function deleteMethodWithHttpOperationResponse(resourceGroupName:
        string, serviceName: string, groupId: string, uid: string, options?:
        function)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |
            The name of the resource group.
        - id: serviceName
          type:
            - string
          description: |
            The name of the API Management service.
        - id: groupId
          type:
            - string
          description: |
            Group identifier. Must be unique in the current API
            Management service instance.
        - id: uid
          type:
            - string
          description: |
            User identifier. Must be unique in the current API
            Management service instance.
        - id: options
          type:
            - function
          description: ''
          optional: true
      return:
        type:
          - Promise<HttpOperationResponse<void>>
    package: azure-arm-apimanagement
  - uid: azure-arm-apimanagement.GroupUser.list
    name: list
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      Lists a collection of the members of the group, specified by its
      identifier.
    syntax:
      content: >-
        function list(resourceGroupName: string, serviceName: string, groupId:
        string, options?: function)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |
            The name of the resource group.
        - id: serviceName
          type:
            - string
          description: |
            The name of the API Management service.
        - id: groupId
          type:
            - string
          description: |
            Group identifier. Must be unique in the current API
            Management service instance.
        - id: options
          type:
            - function
          description: ''
          optional: true
      return:
        type:
          - Promise<azure-arm-apimanagement.UserCollection>
    package: azure-arm-apimanagement
  - uid: azure-arm-apimanagement.GroupUser.list_1
    name: list
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      Lists a collection of the members of the group, specified by its
      identifier.
    syntax:
      content: >-
        function list(resourceGroupName: string, serviceName: string, groupId:
        string, callback: ServiceCallback<UserCollection>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: ''
        - id: serviceName
          type:
            - string
          description: ''
        - id: groupId
          type:
            - string
          description: ''
        - id: callback
          type:
            - ServiceCallback<azure-arm-apimanagement.UserCollection>
          description: ''
      return:
        type:
          - Promise<azure-arm-apimanagement.UserCollection>
    package: azure-arm-apimanagement
  - uid: azure-arm-apimanagement.GroupUser.list_2
    name: list
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      Lists a collection of the members of the group, specified by its
      identifier.
    syntax:
      content: >-
        function list(resourceGroupName: string, serviceName: string, groupId:
        string, options: function, callback: ServiceCallback<UserCollection>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: ''
        - id: serviceName
          type:
            - string
          description: ''
        - id: groupId
          type:
            - string
          description: ''
        - id: options
          type:
            - function
          description: ''
        - id: callback
          type:
            - ServiceCallback<azure-arm-apimanagement.UserCollection>
          description: ''
      return:
        type:
          - Promise<azure-arm-apimanagement.UserCollection>
    package: azure-arm-apimanagement
  - uid: azure-arm-apimanagement.GroupUser.listNext
    name: listNext
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      Lists a collection of the members of the group, specified by its
      identifier.
    syntax:
      content: 'function listNext(nextPageLink: string, options?: function)'
      parameters:
        - id: nextPageLink
          type:
            - string
          description: |
            The NextLink from the previous successful call
            to List operation.
        - id: options
          type:
            - function
          description: ''
          optional: true
      return:
        type:
          - Promise<azure-arm-apimanagement.UserCollection>
    package: azure-arm-apimanagement
  - uid: azure-arm-apimanagement.GroupUser.listNext_1
    name: listNext
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      Lists a collection of the members of the group, specified by its
      identifier.
    syntax:
      content: >-
        function listNext(nextPageLink: string, callback:
        ServiceCallback<UserCollection>)
      parameters:
        - id: nextPageLink
          type:
            - string
          description: ''
        - id: callback
          type:
            - ServiceCallback<azure-arm-apimanagement.UserCollection>
          description: ''
      return:
        type:
          - Promise<azure-arm-apimanagement.UserCollection>
    package: azure-arm-apimanagement
  - uid: azure-arm-apimanagement.GroupUser.listNext_2
    name: listNext
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      Lists a collection of the members of the group, specified by its
      identifier.
    syntax:
      content: >-
        function listNext(nextPageLink: string, options: function, callback:
        ServiceCallback<UserCollection>)
      parameters:
        - id: nextPageLink
          type:
            - string
          description: ''
        - id: options
          type:
            - function
          description: ''
        - id: callback
          type:
            - ServiceCallback<azure-arm-apimanagement.UserCollection>
          description: ''
      return:
        type:
          - Promise<azure-arm-apimanagement.UserCollection>
    package: azure-arm-apimanagement
  - uid: azure-arm-apimanagement.GroupUser.listNextWithHttpOperationResponse
    name: listNextWithHttpOperationResponse
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      Lists a collection of the members of the group, specified by its
      identifier.
    syntax:
      content: >-
        function listNextWithHttpOperationResponse(nextPageLink: string,
        options?: function)
      parameters:
        - id: nextPageLink
          type:
            - string
          description: |
            The NextLink from the previous successful call
            to List operation.
        - id: options
          type:
            - function
          description: ''
          optional: true
      return:
        type:
          - >-
            Promise<HttpOperationResponse<azure-arm-apimanagement.UserCollection>>
    package: azure-arm-apimanagement
  - uid: azure-arm-apimanagement.GroupUser.listWithHttpOperationResponse
    name: listWithHttpOperationResponse
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      Lists a collection of the members of the group, specified by its
      identifier.
    syntax:
      content: >-
        function listWithHttpOperationResponse(resourceGroupName: string,
        serviceName: string, groupId: string, options?: function)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |
            The name of the resource group.
        - id: serviceName
          type:
            - string
          description: |
            The name of the API Management service.
        - id: groupId
          type:
            - string
          description: |
            Group identifier. Must be unique in the current API
            Management service instance.
        - id: options
          type:
            - function
          description: ''
          optional: true
      return:
        type:
          - >-
            Promise<HttpOperationResponse<azure-arm-apimanagement.UserCollection>>
    package: azure-arm-apimanagement
references:
  - uid: Promise<azure-arm-apimanagement.UserContract>
    spec.typeScript:
      - name: Promise<
        fullName: Promise<
      - name: UserContract
        fullName: UserContract
        uid: azure-arm-apimanagement.UserContract
      - name: '>'
        fullName: '>'
  - uid: ServiceCallback<azure-arm-apimanagement.UserContract>
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: UserContract
        fullName: UserContract
        uid: azure-arm-apimanagement.UserContract
      - name: '>'
        fullName: '>'
  - uid: Promise<HttpOperationResponse<azure-arm-apimanagement.UserContract>>
    spec.typeScript:
      - name: Promise<HttpOperationResponse<
        fullName: Promise<HttpOperationResponse<
      - name: UserContract
        fullName: UserContract
        uid: azure-arm-apimanagement.UserContract
      - name: '>>'
        fullName: '>>'
  - uid: Promise<azure-arm-apimanagement.UserCollection>
    spec.typeScript:
      - name: Promise<
        fullName: Promise<
      - name: UserCollection
        fullName: UserCollection
        uid: azure-arm-apimanagement.UserCollection
      - name: '>'
        fullName: '>'
  - uid: ServiceCallback<azure-arm-apimanagement.UserCollection>
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: UserCollection
        fullName: UserCollection
        uid: azure-arm-apimanagement.UserCollection
      - name: '>'
        fullName: '>'
  - uid: Promise<HttpOperationResponse<azure-arm-apimanagement.UserCollection>>
    spec.typeScript:
      - name: Promise<HttpOperationResponse<
        fullName: Promise<HttpOperationResponse<
      - name: UserCollection
        fullName: UserCollection
        uid: azure-arm-apimanagement.UserCollection
      - name: '>>'
        fullName: '>>'
