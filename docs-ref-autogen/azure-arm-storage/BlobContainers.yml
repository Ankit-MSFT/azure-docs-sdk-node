### YamlMime:UniversalReference
items:
  - uid: azure-arm-storage.BlobContainers
    id: azure-arm-storage.BlobContainers
    name: BlobContainers
    summary: Class representing a BlobContainers.
    fullName: azure-arm-storage.BlobContainers
    type: Class
    children:
      - 'azure-arm-storage.BlobContainers.#ctor'
      - 'azure-arm-storage.BlobContainers#listWithHttpOperationResponse'
      - 'azure-arm-storage.BlobContainers#list'
      - 'azure-arm-storage.BlobContainers#createWithHttpOperationResponse'
      - 'azure-arm-storage.BlobContainers#create'
      - 'azure-arm-storage.BlobContainers#updateWithHttpOperationResponse'
      - 'azure-arm-storage.BlobContainers#update'
      - 'azure-arm-storage.BlobContainers#getWithHttpOperationResponse'
      - 'azure-arm-storage.BlobContainers#get'
      - 'azure-arm-storage.BlobContainers#deleteMethodWithHttpOperationResponse'
      - 'azure-arm-storage.BlobContainers#deleteMethod'
      - 'azure-arm-storage.BlobContainers#setLegalHoldWithHttpOperationResponse'
      - 'azure-arm-storage.BlobContainers#setLegalHold'
      - 'azure-arm-storage.BlobContainers#clearLegalHoldWithHttpOperationResponse'
      - 'azure-arm-storage.BlobContainers#clearLegalHold'
      - >-
        azure-arm-storage.BlobContainers#createOrUpdateImmutabilityPolicyWithHttpOperationResponse
      - 'azure-arm-storage.BlobContainers#createOrUpdateImmutabilityPolicy'
      - >-
        azure-arm-storage.BlobContainers#getImmutabilityPolicyWithHttpOperationResponse
      - 'azure-arm-storage.BlobContainers#getImmutabilityPolicy'
      - >-
        azure-arm-storage.BlobContainers#deleteImmutabilityPolicyWithHttpOperationResponse
      - 'azure-arm-storage.BlobContainers#deleteImmutabilityPolicy'
      - >-
        azure-arm-storage.BlobContainers#lockImmutabilityPolicyWithHttpOperationResponse
      - 'azure-arm-storage.BlobContainers#lockImmutabilityPolicy'
      - >-
        azure-arm-storage.BlobContainers#extendImmutabilityPolicyWithHttpOperationResponse
      - 'azure-arm-storage.BlobContainers#extendImmutabilityPolicy'
    langs:
      - js
  - id: 'azure-arm-storage.BlobContainers.#ctor'
    uid: 'azure-arm-storage.BlobContainers.#ctor'
    parent: azure-arm-storage.BlobContainers
    name: BlobContainers(client)
    fullName: azure-arm-storage.BlobContainers.BlobContainers(client)
    summary: Create a BlobContainers.
    type: Constructor
    syntax:
      parameters:
        - id: client
          type:
            - undefinedStorageManagementClient
          description: Reference to the service client.
      content: new BlobContainers(client)
    langs:
      - js
  - uid: 'azure-arm-storage.BlobContainers#listWithHttpOperationResponse'
    id: 'azure-arm-storage.BlobContainers#listWithHttpOperationResponse'
    parent: azure-arm-storage.BlobContainers
    name: 'listWithHttpOperationResponse(resourceGroupName, accountName, options)'
    summary: >-
      Lists all containers and does not support a prefix like data plane. Also
      SRP

      today does not return continuation token.
    fullName: >-
      azure-arm-storage.BlobContainers.listWithHttpOperationResponse(resourceGroupName,
      accountName, options)
    tags:
      - originalTitle: resolve
        title: resolve
        text: >-
          {HttpOperationResponse<ListContainerItems>} - The deserialized result
          object.
        value: >-
          {HttpOperationResponse<ListContainerItems>} - The deserialized result
          object.
      - originalTitle: reject
        title: reject
        text: '{Error} - The error object.'
        value: '{Error} - The error object.'
    type: Function
    syntax:
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |-
            The name of the resource group within the
            user's subscription. The name is case insensitive.
        - id: accountName
          type:
            - string
          description: >-
            The name of the storage account within the

            specified resource group. Storage account names must be between 3
            and 24

            characters in length and use numbers and lower-case letters only.
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
      return:
        type:
          - Promise
        description: A promise is returned
      content: >-
        function listWithHttpOperationResponse(resourceGroupName, accountName,
        options)
    langs:
      - js
  - uid: 'azure-arm-storage.BlobContainers#list'
    id: 'azure-arm-storage.BlobContainers#list'
    parent: azure-arm-storage.BlobContainers
    name: 'list(resourceGroupName, accountName, options, optionalCallback)'
    summary: >-
      Lists all containers and does not support a prefix like data plane. Also
      SRP

      today does not return continuation token.
    fullName: >-
      azure-arm-storage.BlobContainers.list(resourceGroupName, accountName,
      options, optionalCallback)
    tags:
      - originalTitle: resolve
        title: resolve
        text: '{ListContainerItems} - The deserialized result object.'
        value: '{ListContainerItems} - The deserialized result object.'
      - originalTitle: reject
        title: reject
        text: |-
          {Error} - The error object.

          {function} optionalCallback(err, result, request, response)

                               {Error}  err        - The Error object if an error occurred, null otherwise.

                               {object} [result]   - The deserialized result object if an error did not occur.
                               See {@link ListContainerItems} for more information.

                               {object} [request]  - The HTTP Request object if an error did not occur.

                               {stream} [response] - The HTTP Response stream if an error did not occur.
        value: |-
          {Error} - The error object.

          {function} optionalCallback(err, result, request, response)

                               {Error}  err        - The Error object if an error occurred, null otherwise.

                               {object} [result]   - The deserialized result object if an error did not occur.
                               See {@link ListContainerItems} for more information.

                               {object} [request]  - The HTTP Request object if an error did not occur.

                               {stream} [response] - The HTTP Response stream if an error did not occur.
    type: Function
    syntax:
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |-
            The name of the resource group within the
            user's subscription. The name is case insensitive.
        - id: accountName
          type:
            - string
          description: >-
            The name of the storage account within the

            specified resource group. Storage account names must be between 3
            and 24

            characters in length and use numbers and lower-case letters only.
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
        - id: optionalCallback
          type:
            - function
          description: The optional callback.
          optional: true
      return:
        type:
          - function
          - Promise
        description: |-
          If a callback was passed as the last parameter
          then it returns the callback else returns a Promise.

          {Promise} A promise is returned
      content: 'function list(resourceGroupName, accountName, options, optionalCallback)'
    langs:
      - js
  - uid: 'azure-arm-storage.BlobContainers#createWithHttpOperationResponse'
    id: 'azure-arm-storage.BlobContainers#createWithHttpOperationResponse'
    parent: azure-arm-storage.BlobContainers
    name: >-
      createWithHttpOperationResponse(resourceGroupName, accountName,
      containerName, options)
    summary: >-
      Creates a new container under the specified account as described by
      request

      body. The container resource includes metadata and properties for that

      container. It does not include a list of the blobs contained by the

      container.
    fullName: >-
      azure-arm-storage.BlobContainers.createWithHttpOperationResponse(resourceGroupName,
      accountName, containerName, options)
    tags:
      - originalTitle: resolve
        title: resolve
        text: >-
          {HttpOperationResponse<BlobContainer>} - The deserialized result
          object.
        value: >-
          {HttpOperationResponse<BlobContainer>} - The deserialized result
          object.
      - originalTitle: reject
        title: reject
        text: '{Error} - The error object.'
        value: '{Error} - The error object.'
    type: Function
    syntax:
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |-
            The name of the resource group within the
            user's subscription. The name is case insensitive.
        - id: accountName
          type:
            - string
          description: >-
            The name of the storage account within the

            specified resource group. Storage account names must be between 3
            and 24

            characters in length and use numbers and lower-case letters only.
        - id: containerName
          type:
            - string
          description: >-
            The name of the blob container within the

            specified storage account. Blob container names must be between 3
            and 63

            characters in length and use numbers, lower-case letters and dash
            (-) only.

            Every dash (-) character must be immediately preceded and followed
            by a

            letter or number.
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.publicAccess
          type:
            - string
          description: >-
            Specifies whether data in the

            container may be accessed publicly and the level of access. Possible
            values

            include: 'Container', 'Blob', 'None'
          optional: true
        - id: options.metadata
          type:
            - object
          description: |-
            A name-value pair to associate with the
            container as metadata.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
      return:
        type:
          - Promise
        description: A promise is returned
      content: >-
        function createWithHttpOperationResponse(resourceGroupName, accountName,
        containerName, options)
    langs:
      - js
  - uid: 'azure-arm-storage.BlobContainers#create'
    id: 'azure-arm-storage.BlobContainers#create'
    parent: azure-arm-storage.BlobContainers
    name: >-
      create(resourceGroupName, accountName, containerName, options,
      optionalCallback)
    summary: >-
      Creates a new container under the specified account as described by
      request

      body. The container resource includes metadata and properties for that

      container. It does not include a list of the blobs contained by the

      container.
    fullName: >-
      azure-arm-storage.BlobContainers.create(resourceGroupName, accountName,
      containerName, options, optionalCallback)
    tags:
      - originalTitle: resolve
        title: resolve
        text: '{BlobContainer} - The deserialized result object.'
        value: '{BlobContainer} - The deserialized result object.'
      - originalTitle: reject
        title: reject
        text: |-
          {Error} - The error object.

          {function} optionalCallback(err, result, request, response)

                               {Error}  err        - The Error object if an error occurred, null otherwise.

                               {object} [result]   - The deserialized result object if an error did not occur.
                               See {@link BlobContainer} for more information.

                               {object} [request]  - The HTTP Request object if an error did not occur.

                               {stream} [response] - The HTTP Response stream if an error did not occur.
        value: |-
          {Error} - The error object.

          {function} optionalCallback(err, result, request, response)

                               {Error}  err        - The Error object if an error occurred, null otherwise.

                               {object} [result]   - The deserialized result object if an error did not occur.
                               See {@link BlobContainer} for more information.

                               {object} [request]  - The HTTP Request object if an error did not occur.

                               {stream} [response] - The HTTP Response stream if an error did not occur.
    type: Function
    syntax:
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |-
            The name of the resource group within the
            user's subscription. The name is case insensitive.
        - id: accountName
          type:
            - string
          description: >-
            The name of the storage account within the

            specified resource group. Storage account names must be between 3
            and 24

            characters in length and use numbers and lower-case letters only.
        - id: containerName
          type:
            - string
          description: >-
            The name of the blob container within the

            specified storage account. Blob container names must be between 3
            and 63

            characters in length and use numbers, lower-case letters and dash
            (-) only.

            Every dash (-) character must be immediately preceded and followed
            by a

            letter or number.
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.publicAccess
          type:
            - string
          description: >-
            Specifies whether data in the

            container may be accessed publicly and the level of access. Possible
            values

            include: 'Container', 'Blob', 'None'
          optional: true
        - id: options.metadata
          type:
            - object
          description: |-
            A name-value pair to associate with the
            container as metadata.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
        - id: optionalCallback
          type:
            - function
          description: The optional callback.
          optional: true
      return:
        type:
          - function
          - Promise
        description: |-
          If a callback was passed as the last parameter
          then it returns the callback else returns a Promise.

          {Promise} A promise is returned
      content: >-
        function create(resourceGroupName, accountName, containerName, options,
        optionalCallback)
    langs:
      - js
  - uid: 'azure-arm-storage.BlobContainers#updateWithHttpOperationResponse'
    id: 'azure-arm-storage.BlobContainers#updateWithHttpOperationResponse'
    parent: azure-arm-storage.BlobContainers
    name: >-
      updateWithHttpOperationResponse(resourceGroupName, accountName,
      containerName, options)
    summary: |-
      Updates container properties as specified in request body. Properties not
      mentioned in the request will be unchanged. Update fails if the specified
      container doesn't already exist.
    fullName: >-
      azure-arm-storage.BlobContainers.updateWithHttpOperationResponse(resourceGroupName,
      accountName, containerName, options)
    tags:
      - originalTitle: resolve
        title: resolve
        text: >-
          {HttpOperationResponse<BlobContainer>} - The deserialized result
          object.
        value: >-
          {HttpOperationResponse<BlobContainer>} - The deserialized result
          object.
      - originalTitle: reject
        title: reject
        text: '{Error} - The error object.'
        value: '{Error} - The error object.'
    type: Function
    syntax:
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |-
            The name of the resource group within the
            user's subscription. The name is case insensitive.
        - id: accountName
          type:
            - string
          description: >-
            The name of the storage account within the

            specified resource group. Storage account names must be between 3
            and 24

            characters in length and use numbers and lower-case letters only.
        - id: containerName
          type:
            - string
          description: >-
            The name of the blob container within the

            specified storage account. Blob container names must be between 3
            and 63

            characters in length and use numbers, lower-case letters and dash
            (-) only.

            Every dash (-) character must be immediately preceded and followed
            by a

            letter or number.
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.publicAccess
          type:
            - string
          description: >-
            Specifies whether data in the

            container may be accessed publicly and the level of access. Possible
            values

            include: 'Container', 'Blob', 'None'
          optional: true
        - id: options.metadata
          type:
            - object
          description: |-
            A name-value pair to associate with the
            container as metadata.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
      return:
        type:
          - Promise
        description: A promise is returned
      content: >-
        function updateWithHttpOperationResponse(resourceGroupName, accountName,
        containerName, options)
    langs:
      - js
  - uid: 'azure-arm-storage.BlobContainers#update'
    id: 'azure-arm-storage.BlobContainers#update'
    parent: azure-arm-storage.BlobContainers
    name: >-
      update(resourceGroupName, accountName, containerName, options,
      optionalCallback)
    summary: |-
      Updates container properties as specified in request body. Properties not
      mentioned in the request will be unchanged. Update fails if the specified
      container doesn't already exist.
    fullName: >-
      azure-arm-storage.BlobContainers.update(resourceGroupName, accountName,
      containerName, options, optionalCallback)
    tags:
      - originalTitle: resolve
        title: resolve
        text: '{BlobContainer} - The deserialized result object.'
        value: '{BlobContainer} - The deserialized result object.'
      - originalTitle: reject
        title: reject
        text: |-
          {Error} - The error object.

          {function} optionalCallback(err, result, request, response)

                               {Error}  err        - The Error object if an error occurred, null otherwise.

                               {object} [result]   - The deserialized result object if an error did not occur.
                               See {@link BlobContainer} for more information.

                               {object} [request]  - The HTTP Request object if an error did not occur.

                               {stream} [response] - The HTTP Response stream if an error did not occur.
        value: |-
          {Error} - The error object.

          {function} optionalCallback(err, result, request, response)

                               {Error}  err        - The Error object if an error occurred, null otherwise.

                               {object} [result]   - The deserialized result object if an error did not occur.
                               See {@link BlobContainer} for more information.

                               {object} [request]  - The HTTP Request object if an error did not occur.

                               {stream} [response] - The HTTP Response stream if an error did not occur.
    type: Function
    syntax:
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |-
            The name of the resource group within the
            user's subscription. The name is case insensitive.
        - id: accountName
          type:
            - string
          description: >-
            The name of the storage account within the

            specified resource group. Storage account names must be between 3
            and 24

            characters in length and use numbers and lower-case letters only.
        - id: containerName
          type:
            - string
          description: >-
            The name of the blob container within the

            specified storage account. Blob container names must be between 3
            and 63

            characters in length and use numbers, lower-case letters and dash
            (-) only.

            Every dash (-) character must be immediately preceded and followed
            by a

            letter or number.
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.publicAccess
          type:
            - string
          description: >-
            Specifies whether data in the

            container may be accessed publicly and the level of access. Possible
            values

            include: 'Container', 'Blob', 'None'
          optional: true
        - id: options.metadata
          type:
            - object
          description: |-
            A name-value pair to associate with the
            container as metadata.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
        - id: optionalCallback
          type:
            - function
          description: The optional callback.
          optional: true
      return:
        type:
          - function
          - Promise
        description: |-
          If a callback was passed as the last parameter
          then it returns the callback else returns a Promise.

          {Promise} A promise is returned
      content: >-
        function update(resourceGroupName, accountName, containerName, options,
        optionalCallback)
    langs:
      - js
  - uid: 'azure-arm-storage.BlobContainers#getWithHttpOperationResponse'
    id: 'azure-arm-storage.BlobContainers#getWithHttpOperationResponse'
    parent: azure-arm-storage.BlobContainers
    name: >-
      getWithHttpOperationResponse(resourceGroupName, accountName,
      containerName, options)
    summary: Gets properties of a specified container.
    fullName: >-
      azure-arm-storage.BlobContainers.getWithHttpOperationResponse(resourceGroupName,
      accountName, containerName, options)
    tags:
      - originalTitle: resolve
        title: resolve
        text: >-
          {HttpOperationResponse<BlobContainer>} - The deserialized result
          object.
        value: >-
          {HttpOperationResponse<BlobContainer>} - The deserialized result
          object.
      - originalTitle: reject
        title: reject
        text: '{Error} - The error object.'
        value: '{Error} - The error object.'
    type: Function
    syntax:
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |-
            The name of the resource group within the
            user's subscription. The name is case insensitive.
        - id: accountName
          type:
            - string
          description: >-
            The name of the storage account within the

            specified resource group. Storage account names must be between 3
            and 24

            characters in length and use numbers and lower-case letters only.
        - id: containerName
          type:
            - string
          description: >-
            The name of the blob container within the

            specified storage account. Blob container names must be between 3
            and 63

            characters in length and use numbers, lower-case letters and dash
            (-) only.

            Every dash (-) character must be immediately preceded and followed
            by a

            letter or number.
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
      return:
        type:
          - Promise
        description: A promise is returned
      content: >-
        function getWithHttpOperationResponse(resourceGroupName, accountName,
        containerName, options)
    langs:
      - js
  - uid: 'azure-arm-storage.BlobContainers#get'
    id: 'azure-arm-storage.BlobContainers#get'
    parent: azure-arm-storage.BlobContainers
    name: >-
      get(resourceGroupName, accountName, containerName, options,
      optionalCallback)
    summary: Gets properties of a specified container.
    fullName: >-
      azure-arm-storage.BlobContainers.get(resourceGroupName, accountName,
      containerName, options, optionalCallback)
    tags:
      - originalTitle: resolve
        title: resolve
        text: '{BlobContainer} - The deserialized result object.'
        value: '{BlobContainer} - The deserialized result object.'
      - originalTitle: reject
        title: reject
        text: |-
          {Error} - The error object.

          {function} optionalCallback(err, result, request, response)

                               {Error}  err        - The Error object if an error occurred, null otherwise.

                               {object} [result]   - The deserialized result object if an error did not occur.
                               See {@link BlobContainer} for more information.

                               {object} [request]  - The HTTP Request object if an error did not occur.

                               {stream} [response] - The HTTP Response stream if an error did not occur.
        value: |-
          {Error} - The error object.

          {function} optionalCallback(err, result, request, response)

                               {Error}  err        - The Error object if an error occurred, null otherwise.

                               {object} [result]   - The deserialized result object if an error did not occur.
                               See {@link BlobContainer} for more information.

                               {object} [request]  - The HTTP Request object if an error did not occur.

                               {stream} [response] - The HTTP Response stream if an error did not occur.
    type: Function
    syntax:
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |-
            The name of the resource group within the
            user's subscription. The name is case insensitive.
        - id: accountName
          type:
            - string
          description: >-
            The name of the storage account within the

            specified resource group. Storage account names must be between 3
            and 24

            characters in length and use numbers and lower-case letters only.
        - id: containerName
          type:
            - string
          description: >-
            The name of the blob container within the

            specified storage account. Blob container names must be between 3
            and 63

            characters in length and use numbers, lower-case letters and dash
            (-) only.

            Every dash (-) character must be immediately preceded and followed
            by a

            letter or number.
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
        - id: optionalCallback
          type:
            - function
          description: The optional callback.
          optional: true
      return:
        type:
          - function
          - Promise
        description: |-
          If a callback was passed as the last parameter
          then it returns the callback else returns a Promise.

          {Promise} A promise is returned
      content: >-
        function get(resourceGroupName, accountName, containerName, options,
        optionalCallback)
    langs:
      - js
  - uid: 'azure-arm-storage.BlobContainers#deleteMethodWithHttpOperationResponse'
    id: 'azure-arm-storage.BlobContainers#deleteMethodWithHttpOperationResponse'
    parent: azure-arm-storage.BlobContainers
    name: >-
      deleteMethodWithHttpOperationResponse(resourceGroupName, accountName,
      containerName, options)
    summary: Deletes specified container under its account.
    fullName: >-
      azure-arm-storage.BlobContainers.deleteMethodWithHttpOperationResponse(resourceGroupName,
      accountName, containerName, options)
    tags:
      - originalTitle: resolve
        title: resolve
        text: '{HttpOperationResponse<null>} - The deserialized result object.'
        value: '{HttpOperationResponse<null>} - The deserialized result object.'
      - originalTitle: reject
        title: reject
        text: '{Error} - The error object.'
        value: '{Error} - The error object.'
    type: Function
    syntax:
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |-
            The name of the resource group within the
            user's subscription. The name is case insensitive.
        - id: accountName
          type:
            - string
          description: >-
            The name of the storage account within the

            specified resource group. Storage account names must be between 3
            and 24

            characters in length and use numbers and lower-case letters only.
        - id: containerName
          type:
            - string
          description: >-
            The name of the blob container within the

            specified storage account. Blob container names must be between 3
            and 63

            characters in length and use numbers, lower-case letters and dash
            (-) only.

            Every dash (-) character must be immediately preceded and followed
            by a

            letter or number.
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
      return:
        type:
          - Promise
        description: A promise is returned
      content: >-
        function deleteMethodWithHttpOperationResponse(resourceGroupName,
        accountName, containerName, options)
    langs:
      - js
  - uid: 'azure-arm-storage.BlobContainers#deleteMethod'
    id: 'azure-arm-storage.BlobContainers#deleteMethod'
    parent: azure-arm-storage.BlobContainers
    name: >-
      deleteMethod(resourceGroupName, accountName, containerName, options,
      optionalCallback)
    summary: Deletes specified container under its account.
    fullName: >-
      azure-arm-storage.BlobContainers.deleteMethod(resourceGroupName,
      accountName, containerName, options, optionalCallback)
    tags:
      - originalTitle: resolve
        title: resolve
        text: '{null} - The deserialized result object.'
        value: '{null} - The deserialized result object.'
      - originalTitle: reject
        title: reject
        text: |-
          {Error} - The error object.

          {function} optionalCallback(err, result, request, response)

                               {Error}  err        - The Error object if an error occurred, null otherwise.

                               {null} [result]   - The deserialized result object if an error did not occur.

                               {object} [request]  - The HTTP Request object if an error did not occur.

                               {stream} [response] - The HTTP Response stream if an error did not occur.
        value: |-
          {Error} - The error object.

          {function} optionalCallback(err, result, request, response)

                               {Error}  err        - The Error object if an error occurred, null otherwise.

                               {null} [result]   - The deserialized result object if an error did not occur.

                               {object} [request]  - The HTTP Request object if an error did not occur.

                               {stream} [response] - The HTTP Response stream if an error did not occur.
    type: Function
    syntax:
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |-
            The name of the resource group within the
            user's subscription. The name is case insensitive.
        - id: accountName
          type:
            - string
          description: >-
            The name of the storage account within the

            specified resource group. Storage account names must be between 3
            and 24

            characters in length and use numbers and lower-case letters only.
        - id: containerName
          type:
            - string
          description: >-
            The name of the blob container within the

            specified storage account. Blob container names must be between 3
            and 63

            characters in length and use numbers, lower-case letters and dash
            (-) only.

            Every dash (-) character must be immediately preceded and followed
            by a

            letter or number.
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
        - id: optionalCallback
          type:
            - function
          description: The optional callback.
          optional: true
      return:
        type:
          - function
          - Promise
        description: |-
          If a callback was passed as the last parameter
          then it returns the callback else returns a Promise.

          {Promise} A promise is returned
      content: >-
        function deleteMethod(resourceGroupName, accountName, containerName,
        options, optionalCallback)
    langs:
      - js
  - uid: 'azure-arm-storage.BlobContainers#setLegalHoldWithHttpOperationResponse'
    id: 'azure-arm-storage.BlobContainers#setLegalHoldWithHttpOperationResponse'
    parent: azure-arm-storage.BlobContainers
    name: >-
      setLegalHoldWithHttpOperationResponse(resourceGroupName, accountName,
      containerName, tags, options)
    summary: >-
      Sets legal hold tags. Setting the same tag results in an idempotent

      operation. SetLegalHold follows an append pattern and does not clear out
      the

      existing tags that are not specified in the request.
    fullName: >-
      azure-arm-storage.BlobContainers.setLegalHoldWithHttpOperationResponse(resourceGroupName,
      accountName, containerName, tags, options)
    tags:
      - originalTitle: resolve
        title: resolve
        text: '{HttpOperationResponse<LegalHold>} - The deserialized result object.'
        value: '{HttpOperationResponse<LegalHold>} - The deserialized result object.'
      - originalTitle: reject
        title: reject
        text: '{Error} - The error object.'
        value: '{Error} - The error object.'
    type: Function
    syntax:
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |-
            The name of the resource group within the
            user's subscription. The name is case insensitive.
        - id: accountName
          type:
            - string
          description: >-
            The name of the storage account within the

            specified resource group. Storage account names must be between 3
            and 24

            characters in length and use numbers and lower-case letters only.
        - id: containerName
          type:
            - string
          description: >-
            The name of the blob container within the

            specified storage account. Blob container names must be between 3
            and 63

            characters in length and use numbers, lower-case letters and dash
            (-) only.

            Every dash (-) character must be immediately preceded and followed
            by a

            letter or number.
        - id: tags
          type:
            - array
          description: |-
            Each tag should be 3 to 23 alphanumeric characters and
            is normalized to lower case at SRP.
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
      return:
        type:
          - Promise
        description: A promise is returned
      content: >-
        function setLegalHoldWithHttpOperationResponse(resourceGroupName,
        accountName, containerName, tags, options)
    langs:
      - js
  - uid: 'azure-arm-storage.BlobContainers#setLegalHold'
    id: 'azure-arm-storage.BlobContainers#setLegalHold'
    parent: azure-arm-storage.BlobContainers
    name: >-
      setLegalHold(resourceGroupName, accountName, containerName, tags, options,
      optionalCallback)
    summary: >-
      Sets legal hold tags. Setting the same tag results in an idempotent

      operation. SetLegalHold follows an append pattern and does not clear out
      the

      existing tags that are not specified in the request.
    fullName: >-
      azure-arm-storage.BlobContainers.setLegalHold(resourceGroupName,
      accountName, containerName, tags, options, optionalCallback)
    tags:
      - originalTitle: resolve
        title: resolve
        text: '{LegalHold} - The deserialized result object.'
        value: '{LegalHold} - The deserialized result object.'
      - originalTitle: reject
        title: reject
        text: |-
          {Error} - The error object.

          {function} optionalCallback(err, result, request, response)

                               {Error}  err        - The Error object if an error occurred, null otherwise.

                               {object} [result]   - The deserialized result object if an error did not occur.
                               See {@link LegalHold} for more information.

                               {object} [request]  - The HTTP Request object if an error did not occur.

                               {stream} [response] - The HTTP Response stream if an error did not occur.
        value: |-
          {Error} - The error object.

          {function} optionalCallback(err, result, request, response)

                               {Error}  err        - The Error object if an error occurred, null otherwise.

                               {object} [result]   - The deserialized result object if an error did not occur.
                               See {@link LegalHold} for more information.

                               {object} [request]  - The HTTP Request object if an error did not occur.

                               {stream} [response] - The HTTP Response stream if an error did not occur.
    type: Function
    syntax:
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |-
            The name of the resource group within the
            user's subscription. The name is case insensitive.
        - id: accountName
          type:
            - string
          description: >-
            The name of the storage account within the

            specified resource group. Storage account names must be between 3
            and 24

            characters in length and use numbers and lower-case letters only.
        - id: containerName
          type:
            - string
          description: >-
            The name of the blob container within the

            specified storage account. Blob container names must be between 3
            and 63

            characters in length and use numbers, lower-case letters and dash
            (-) only.

            Every dash (-) character must be immediately preceded and followed
            by a

            letter or number.
        - id: tags
          type:
            - array
          description: |-
            Each tag should be 3 to 23 alphanumeric characters and
            is normalized to lower case at SRP.
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
        - id: optionalCallback
          type:
            - function
          description: The optional callback.
          optional: true
      return:
        type:
          - function
          - Promise
        description: |-
          If a callback was passed as the last parameter
          then it returns the callback else returns a Promise.

          {Promise} A promise is returned
      content: >-
        function setLegalHold(resourceGroupName, accountName, containerName,
        tags, options, optionalCallback)
    langs:
      - js
  - uid: 'azure-arm-storage.BlobContainers#clearLegalHoldWithHttpOperationResponse'
    id: 'azure-arm-storage.BlobContainers#clearLegalHoldWithHttpOperationResponse'
    parent: azure-arm-storage.BlobContainers
    name: >-
      clearLegalHoldWithHttpOperationResponse(resourceGroupName, accountName,
      containerName, tags, options)
    summary: >-
      Clears legal hold tags. Clearing the same or non-existent tag results in
      an

      idempotent operation. ClearLegalHold clears out only the specified tags in

      the request.
    fullName: >-
      azure-arm-storage.BlobContainers.clearLegalHoldWithHttpOperationResponse(resourceGroupName,
      accountName, containerName, tags, options)
    tags:
      - originalTitle: resolve
        title: resolve
        text: '{HttpOperationResponse<LegalHold>} - The deserialized result object.'
        value: '{HttpOperationResponse<LegalHold>} - The deserialized result object.'
      - originalTitle: reject
        title: reject
        text: '{Error} - The error object.'
        value: '{Error} - The error object.'
    type: Function
    syntax:
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |-
            The name of the resource group within the
            user's subscription. The name is case insensitive.
        - id: accountName
          type:
            - string
          description: >-
            The name of the storage account within the

            specified resource group. Storage account names must be between 3
            and 24

            characters in length and use numbers and lower-case letters only.
        - id: containerName
          type:
            - string
          description: >-
            The name of the blob container within the

            specified storage account. Blob container names must be between 3
            and 63

            characters in length and use numbers, lower-case letters and dash
            (-) only.

            Every dash (-) character must be immediately preceded and followed
            by a

            letter or number.
        - id: tags
          type:
            - array
          description: |-
            Each tag should be 3 to 23 alphanumeric characters and
            is normalized to lower case at SRP.
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
      return:
        type:
          - Promise
        description: A promise is returned
      content: >-
        function clearLegalHoldWithHttpOperationResponse(resourceGroupName,
        accountName, containerName, tags, options)
    langs:
      - js
  - uid: 'azure-arm-storage.BlobContainers#clearLegalHold'
    id: 'azure-arm-storage.BlobContainers#clearLegalHold'
    parent: azure-arm-storage.BlobContainers
    name: >-
      clearLegalHold(resourceGroupName, accountName, containerName, tags,
      options, optionalCallback)
    summary: >-
      Clears legal hold tags. Clearing the same or non-existent tag results in
      an

      idempotent operation. ClearLegalHold clears out only the specified tags in

      the request.
    fullName: >-
      azure-arm-storage.BlobContainers.clearLegalHold(resourceGroupName,
      accountName, containerName, tags, options, optionalCallback)
    tags:
      - originalTitle: resolve
        title: resolve
        text: '{LegalHold} - The deserialized result object.'
        value: '{LegalHold} - The deserialized result object.'
      - originalTitle: reject
        title: reject
        text: |-
          {Error} - The error object.

          {function} optionalCallback(err, result, request, response)

                               {Error}  err        - The Error object if an error occurred, null otherwise.

                               {object} [result]   - The deserialized result object if an error did not occur.
                               See {@link LegalHold} for more information.

                               {object} [request]  - The HTTP Request object if an error did not occur.

                               {stream} [response] - The HTTP Response stream if an error did not occur.
        value: |-
          {Error} - The error object.

          {function} optionalCallback(err, result, request, response)

                               {Error}  err        - The Error object if an error occurred, null otherwise.

                               {object} [result]   - The deserialized result object if an error did not occur.
                               See {@link LegalHold} for more information.

                               {object} [request]  - The HTTP Request object if an error did not occur.

                               {stream} [response] - The HTTP Response stream if an error did not occur.
    type: Function
    syntax:
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |-
            The name of the resource group within the
            user's subscription. The name is case insensitive.
        - id: accountName
          type:
            - string
          description: >-
            The name of the storage account within the

            specified resource group. Storage account names must be between 3
            and 24

            characters in length and use numbers and lower-case letters only.
        - id: containerName
          type:
            - string
          description: >-
            The name of the blob container within the

            specified storage account. Blob container names must be between 3
            and 63

            characters in length and use numbers, lower-case letters and dash
            (-) only.

            Every dash (-) character must be immediately preceded and followed
            by a

            letter or number.
        - id: tags
          type:
            - array
          description: |-
            Each tag should be 3 to 23 alphanumeric characters and
            is normalized to lower case at SRP.
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
        - id: optionalCallback
          type:
            - function
          description: The optional callback.
          optional: true
      return:
        type:
          - function
          - Promise
        description: |-
          If a callback was passed as the last parameter
          then it returns the callback else returns a Promise.

          {Promise} A promise is returned
      content: >-
        function clearLegalHold(resourceGroupName, accountName, containerName,
        tags, options, optionalCallback)
    langs:
      - js
  - uid: >-
      azure-arm-storage.BlobContainers#createOrUpdateImmutabilityPolicyWithHttpOperationResponse
    id: >-
      azure-arm-storage.BlobContainers#createOrUpdateImmutabilityPolicyWithHttpOperationResponse
    parent: azure-arm-storage.BlobContainers
    name: >-
      createOrUpdateImmutabilityPolicyWithHttpOperationResponse(resourceGroupName,
      accountName, containerName, immutabilityPeriodSinceCreationInDays,
      options)
    summary: |-
      Creates or updates an unlocked immutability policy. ETag in If-Match is
      honored if given but not required for this operation.
    fullName: >-
      azure-arm-storage.BlobContainers.createOrUpdateImmutabilityPolicyWithHttpOperationResponse(resourceGroupName,
      accountName, containerName, immutabilityPeriodSinceCreationInDays,
      options)
    tags:
      - originalTitle: resolve
        title: resolve
        text: >-
          {HttpOperationResponse<ImmutabilityPolicy>} - The deserialized result
          object.
        value: >-
          {HttpOperationResponse<ImmutabilityPolicy>} - The deserialized result
          object.
      - originalTitle: reject
        title: reject
        text: '{Error} - The error object.'
        value: '{Error} - The error object.'
    type: Function
    syntax:
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |-
            The name of the resource group within the
            user's subscription. The name is case insensitive.
        - id: accountName
          type:
            - string
          description: >-
            The name of the storage account within the

            specified resource group. Storage account names must be between 3
            and 24

            characters in length and use numbers and lower-case letters only.
        - id: containerName
          type:
            - string
          description: >-
            The name of the blob container within the

            specified storage account. Blob container names must be between 3
            and 63

            characters in length and use numbers, lower-case letters and dash
            (-) only.

            Every dash (-) character must be immediately preceded and followed
            by a

            letter or number.
        - id: immutabilityPeriodSinceCreationInDays
          type:
            - number
          description: >-
            The immutability

            period for the blobs in the container since the policy creation, in
            days.
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.ifMatch
          type:
            - string
          description: >-
            The entity state (ETag) version of the

            immutability policy to update. A value of "*" can be used to apply
            the

            operation only if the immutability policy already exists. If
            omitted, this

            operation will always be applied.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
      return:
        type:
          - Promise
        description: A promise is returned
      content: >-
        function
        createOrUpdateImmutabilityPolicyWithHttpOperationResponse(resourceGroupName,
        accountName, containerName, immutabilityPeriodSinceCreationInDays,
        options)
    langs:
      - js
  - uid: 'azure-arm-storage.BlobContainers#createOrUpdateImmutabilityPolicy'
    id: 'azure-arm-storage.BlobContainers#createOrUpdateImmutabilityPolicy'
    parent: azure-arm-storage.BlobContainers
    name: >-
      createOrUpdateImmutabilityPolicy(resourceGroupName, accountName,
      containerName, immutabilityPeriodSinceCreationInDays, options,
      optionalCallback)
    summary: |-
      Creates or updates an unlocked immutability policy. ETag in If-Match is
      honored if given but not required for this operation.
    fullName: >-
      azure-arm-storage.BlobContainers.createOrUpdateImmutabilityPolicy(resourceGroupName,
      accountName, containerName, immutabilityPeriodSinceCreationInDays,
      options, optionalCallback)
    tags:
      - originalTitle: resolve
        title: resolve
        text: '{ImmutabilityPolicy} - The deserialized result object.'
        value: '{ImmutabilityPolicy} - The deserialized result object.'
      - originalTitle: reject
        title: reject
        text: |-
          {Error} - The error object.

          {function} optionalCallback(err, result, request, response)

                               {Error}  err        - The Error object if an error occurred, null otherwise.

                               {object} [result]   - The deserialized result object if an error did not occur.
                               See {@link ImmutabilityPolicy} for more information.

                               {object} [request]  - The HTTP Request object if an error did not occur.

                               {stream} [response] - The HTTP Response stream if an error did not occur.
        value: |-
          {Error} - The error object.

          {function} optionalCallback(err, result, request, response)

                               {Error}  err        - The Error object if an error occurred, null otherwise.

                               {object} [result]   - The deserialized result object if an error did not occur.
                               See {@link ImmutabilityPolicy} for more information.

                               {object} [request]  - The HTTP Request object if an error did not occur.

                               {stream} [response] - The HTTP Response stream if an error did not occur.
    type: Function
    syntax:
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |-
            The name of the resource group within the
            user's subscription. The name is case insensitive.
        - id: accountName
          type:
            - string
          description: >-
            The name of the storage account within the

            specified resource group. Storage account names must be between 3
            and 24

            characters in length and use numbers and lower-case letters only.
        - id: containerName
          type:
            - string
          description: >-
            The name of the blob container within the

            specified storage account. Blob container names must be between 3
            and 63

            characters in length and use numbers, lower-case letters and dash
            (-) only.

            Every dash (-) character must be immediately preceded and followed
            by a

            letter or number.
        - id: immutabilityPeriodSinceCreationInDays
          type:
            - number
          description: >-
            The immutability

            period for the blobs in the container since the policy creation, in
            days.
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.ifMatch
          type:
            - string
          description: >-
            The entity state (ETag) version of the

            immutability policy to update. A value of "*" can be used to apply
            the

            operation only if the immutability policy already exists. If
            omitted, this

            operation will always be applied.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
        - id: optionalCallback
          type:
            - function
          description: The optional callback.
          optional: true
      return:
        type:
          - function
          - Promise
        description: |-
          If a callback was passed as the last parameter
          then it returns the callback else returns a Promise.

          {Promise} A promise is returned
      content: >-
        function createOrUpdateImmutabilityPolicy(resourceGroupName,
        accountName, containerName, immutabilityPeriodSinceCreationInDays,
        options, optionalCallback)
    langs:
      - js
  - uid: >-
      azure-arm-storage.BlobContainers#getImmutabilityPolicyWithHttpOperationResponse
    id: >-
      azure-arm-storage.BlobContainers#getImmutabilityPolicyWithHttpOperationResponse
    parent: azure-arm-storage.BlobContainers
    name: >-
      getImmutabilityPolicyWithHttpOperationResponse(resourceGroupName,
      accountName, containerName, options)
    summary: |-
      Gets the existing immutability policy along with the corresponding ETag in
      response headers and body.
    fullName: >-
      azure-arm-storage.BlobContainers.getImmutabilityPolicyWithHttpOperationResponse(resourceGroupName,
      accountName, containerName, options)
    tags:
      - originalTitle: resolve
        title: resolve
        text: >-
          {HttpOperationResponse<ImmutabilityPolicy>} - The deserialized result
          object.
        value: >-
          {HttpOperationResponse<ImmutabilityPolicy>} - The deserialized result
          object.
      - originalTitle: reject
        title: reject
        text: '{Error} - The error object.'
        value: '{Error} - The error object.'
    type: Function
    syntax:
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |-
            The name of the resource group within the
            user's subscription. The name is case insensitive.
        - id: accountName
          type:
            - string
          description: >-
            The name of the storage account within the

            specified resource group. Storage account names must be between 3
            and 24

            characters in length and use numbers and lower-case letters only.
        - id: containerName
          type:
            - string
          description: >-
            The name of the blob container within the

            specified storage account. Blob container names must be between 3
            and 63

            characters in length and use numbers, lower-case letters and dash
            (-) only.

            Every dash (-) character must be immediately preceded and followed
            by a

            letter or number.
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.ifMatch
          type:
            - string
          description: >-
            The entity state (ETag) version of the

            immutability policy to update. A value of "*" can be used to apply
            the

            operation only if the immutability policy already exists. If
            omitted, this

            operation will always be applied.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
      return:
        type:
          - Promise
        description: A promise is returned
      content: >-
        function
        getImmutabilityPolicyWithHttpOperationResponse(resourceGroupName,
        accountName, containerName, options)
    langs:
      - js
  - uid: 'azure-arm-storage.BlobContainers#getImmutabilityPolicy'
    id: 'azure-arm-storage.BlobContainers#getImmutabilityPolicy'
    parent: azure-arm-storage.BlobContainers
    name: >-
      getImmutabilityPolicy(resourceGroupName, accountName, containerName,
      options, optionalCallback)
    summary: |-
      Gets the existing immutability policy along with the corresponding ETag in
      response headers and body.
    fullName: >-
      azure-arm-storage.BlobContainers.getImmutabilityPolicy(resourceGroupName,
      accountName, containerName, options, optionalCallback)
    tags:
      - originalTitle: resolve
        title: resolve
        text: '{ImmutabilityPolicy} - The deserialized result object.'
        value: '{ImmutabilityPolicy} - The deserialized result object.'
      - originalTitle: reject
        title: reject
        text: |-
          {Error} - The error object.

          {function} optionalCallback(err, result, request, response)

                               {Error}  err        - The Error object if an error occurred, null otherwise.

                               {object} [result]   - The deserialized result object if an error did not occur.
                               See {@link ImmutabilityPolicy} for more information.

                               {object} [request]  - The HTTP Request object if an error did not occur.

                               {stream} [response] - The HTTP Response stream if an error did not occur.
        value: |-
          {Error} - The error object.

          {function} optionalCallback(err, result, request, response)

                               {Error}  err        - The Error object if an error occurred, null otherwise.

                               {object} [result]   - The deserialized result object if an error did not occur.
                               See {@link ImmutabilityPolicy} for more information.

                               {object} [request]  - The HTTP Request object if an error did not occur.

                               {stream} [response] - The HTTP Response stream if an error did not occur.
    type: Function
    syntax:
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |-
            The name of the resource group within the
            user's subscription. The name is case insensitive.
        - id: accountName
          type:
            - string
          description: >-
            The name of the storage account within the

            specified resource group. Storage account names must be between 3
            and 24

            characters in length and use numbers and lower-case letters only.
        - id: containerName
          type:
            - string
          description: >-
            The name of the blob container within the

            specified storage account. Blob container names must be between 3
            and 63

            characters in length and use numbers, lower-case letters and dash
            (-) only.

            Every dash (-) character must be immediately preceded and followed
            by a

            letter or number.
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.ifMatch
          type:
            - string
          description: >-
            The entity state (ETag) version of the

            immutability policy to update. A value of "*" can be used to apply
            the

            operation only if the immutability policy already exists. If
            omitted, this

            operation will always be applied.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
        - id: optionalCallback
          type:
            - function
          description: The optional callback.
          optional: true
      return:
        type:
          - function
          - Promise
        description: |-
          If a callback was passed as the last parameter
          then it returns the callback else returns a Promise.

          {Promise} A promise is returned
      content: >-
        function getImmutabilityPolicy(resourceGroupName, accountName,
        containerName, options, optionalCallback)
    langs:
      - js
  - uid: >-
      azure-arm-storage.BlobContainers#deleteImmutabilityPolicyWithHttpOperationResponse
    id: >-
      azure-arm-storage.BlobContainers#deleteImmutabilityPolicyWithHttpOperationResponse
    parent: azure-arm-storage.BlobContainers
    name: >-
      deleteImmutabilityPolicyWithHttpOperationResponse(resourceGroupName,
      accountName, containerName, ifMatch, options)
    summary: >-
      Aborts an unlocked immutability policy. The response of delete has

      immutabilityPeriodSinceCreationInDays set to 0. ETag in If-Match is
      required

      for this operation. Deleting a locked immutability policy is not allowed,

      only way is to delete the container after deleting all blobs inside the

      container.
    fullName: >-
      azure-arm-storage.BlobContainers.deleteImmutabilityPolicyWithHttpOperationResponse(resourceGroupName,
      accountName, containerName, ifMatch, options)
    tags:
      - originalTitle: resolve
        title: resolve
        text: >-
          {HttpOperationResponse<ImmutabilityPolicy>} - The deserialized result
          object.
        value: >-
          {HttpOperationResponse<ImmutabilityPolicy>} - The deserialized result
          object.
      - originalTitle: reject
        title: reject
        text: '{Error} - The error object.'
        value: '{Error} - The error object.'
    type: Function
    syntax:
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |-
            The name of the resource group within the
            user's subscription. The name is case insensitive.
        - id: accountName
          type:
            - string
          description: >-
            The name of the storage account within the

            specified resource group. Storage account names must be between 3
            and 24

            characters in length and use numbers and lower-case letters only.
        - id: containerName
          type:
            - string
          description: >-
            The name of the blob container within the

            specified storage account. Blob container names must be between 3
            and 63

            characters in length and use numbers, lower-case letters and dash
            (-) only.

            Every dash (-) character must be immediately preceded and followed
            by a

            letter or number.
        - id: ifMatch
          type:
            - string
          description: >-
            The entity state (ETag) version of the immutability

            policy to update. A value of "*" can be used to apply the operation
            only if

            the immutability policy already exists. If omitted, this operation
            will

            always be applied.
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
      return:
        type:
          - Promise
        description: A promise is returned
      content: >-
        function
        deleteImmutabilityPolicyWithHttpOperationResponse(resourceGroupName,
        accountName, containerName, ifMatch, options)
    langs:
      - js
  - uid: 'azure-arm-storage.BlobContainers#deleteImmutabilityPolicy'
    id: 'azure-arm-storage.BlobContainers#deleteImmutabilityPolicy'
    parent: azure-arm-storage.BlobContainers
    name: >-
      deleteImmutabilityPolicy(resourceGroupName, accountName, containerName,
      ifMatch, options, optionalCallback)
    summary: >-
      Aborts an unlocked immutability policy. The response of delete has

      immutabilityPeriodSinceCreationInDays set to 0. ETag in If-Match is
      required

      for this operation. Deleting a locked immutability policy is not allowed,

      only way is to delete the container after deleting all blobs inside the

      container.
    fullName: >-
      azure-arm-storage.BlobContainers.deleteImmutabilityPolicy(resourceGroupName,
      accountName, containerName, ifMatch, options, optionalCallback)
    tags:
      - originalTitle: resolve
        title: resolve
        text: '{ImmutabilityPolicy} - The deserialized result object.'
        value: '{ImmutabilityPolicy} - The deserialized result object.'
      - originalTitle: reject
        title: reject
        text: |-
          {Error} - The error object.

          {function} optionalCallback(err, result, request, response)

                               {Error}  err        - The Error object if an error occurred, null otherwise.

                               {object} [result]   - The deserialized result object if an error did not occur.
                               See {@link ImmutabilityPolicy} for more information.

                               {object} [request]  - The HTTP Request object if an error did not occur.

                               {stream} [response] - The HTTP Response stream if an error did not occur.
        value: |-
          {Error} - The error object.

          {function} optionalCallback(err, result, request, response)

                               {Error}  err        - The Error object if an error occurred, null otherwise.

                               {object} [result]   - The deserialized result object if an error did not occur.
                               See {@link ImmutabilityPolicy} for more information.

                               {object} [request]  - The HTTP Request object if an error did not occur.

                               {stream} [response] - The HTTP Response stream if an error did not occur.
    type: Function
    syntax:
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |-
            The name of the resource group within the
            user's subscription. The name is case insensitive.
        - id: accountName
          type:
            - string
          description: >-
            The name of the storage account within the

            specified resource group. Storage account names must be between 3
            and 24

            characters in length and use numbers and lower-case letters only.
        - id: containerName
          type:
            - string
          description: >-
            The name of the blob container within the

            specified storage account. Blob container names must be between 3
            and 63

            characters in length and use numbers, lower-case letters and dash
            (-) only.

            Every dash (-) character must be immediately preceded and followed
            by a

            letter or number.
        - id: ifMatch
          type:
            - string
          description: >-
            The entity state (ETag) version of the immutability

            policy to update. A value of "*" can be used to apply the operation
            only if

            the immutability policy already exists. If omitted, this operation
            will

            always be applied.
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
        - id: optionalCallback
          type:
            - function
          description: The optional callback.
          optional: true
      return:
        type:
          - function
          - Promise
        description: |-
          If a callback was passed as the last parameter
          then it returns the callback else returns a Promise.

          {Promise} A promise is returned
      content: >-
        function deleteImmutabilityPolicy(resourceGroupName, accountName,
        containerName, ifMatch, options, optionalCallback)
    langs:
      - js
  - uid: >-
      azure-arm-storage.BlobContainers#lockImmutabilityPolicyWithHttpOperationResponse
    id: >-
      azure-arm-storage.BlobContainers#lockImmutabilityPolicyWithHttpOperationResponse
    parent: azure-arm-storage.BlobContainers
    name: >-
      lockImmutabilityPolicyWithHttpOperationResponse(resourceGroupName,
      accountName, containerName, ifMatch, options)
    summary: |-
      Sets the ImmutabilityPolicy to Locked state. The only action allowed on a
      Locked policy is ExtendImmutabilityPolicy action. ETag in If-Match is
      required for this operation.
    fullName: >-
      azure-arm-storage.BlobContainers.lockImmutabilityPolicyWithHttpOperationResponse(resourceGroupName,
      accountName, containerName, ifMatch, options)
    tags:
      - originalTitle: resolve
        title: resolve
        text: >-
          {HttpOperationResponse<ImmutabilityPolicy>} - The deserialized result
          object.
        value: >-
          {HttpOperationResponse<ImmutabilityPolicy>} - The deserialized result
          object.
      - originalTitle: reject
        title: reject
        text: '{Error} - The error object.'
        value: '{Error} - The error object.'
    type: Function
    syntax:
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |-
            The name of the resource group within the
            user's subscription. The name is case insensitive.
        - id: accountName
          type:
            - string
          description: >-
            The name of the storage account within the

            specified resource group. Storage account names must be between 3
            and 24

            characters in length and use numbers and lower-case letters only.
        - id: containerName
          type:
            - string
          description: >-
            The name of the blob container within the

            specified storage account. Blob container names must be between 3
            and 63

            characters in length and use numbers, lower-case letters and dash
            (-) only.

            Every dash (-) character must be immediately preceded and followed
            by a

            letter or number.
        - id: ifMatch
          type:
            - string
          description: >-
            The entity state (ETag) version of the immutability

            policy to update. A value of "*" can be used to apply the operation
            only if

            the immutability policy already exists. If omitted, this operation
            will

            always be applied.
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
      return:
        type:
          - Promise
        description: A promise is returned
      content: >-
        function
        lockImmutabilityPolicyWithHttpOperationResponse(resourceGroupName,
        accountName, containerName, ifMatch, options)
    langs:
      - js
  - uid: 'azure-arm-storage.BlobContainers#lockImmutabilityPolicy'
    id: 'azure-arm-storage.BlobContainers#lockImmutabilityPolicy'
    parent: azure-arm-storage.BlobContainers
    name: >-
      lockImmutabilityPolicy(resourceGroupName, accountName, containerName,
      ifMatch, options, optionalCallback)
    summary: |-
      Sets the ImmutabilityPolicy to Locked state. The only action allowed on a
      Locked policy is ExtendImmutabilityPolicy action. ETag in If-Match is
      required for this operation.
    fullName: >-
      azure-arm-storage.BlobContainers.lockImmutabilityPolicy(resourceGroupName,
      accountName, containerName, ifMatch, options, optionalCallback)
    tags:
      - originalTitle: resolve
        title: resolve
        text: '{ImmutabilityPolicy} - The deserialized result object.'
        value: '{ImmutabilityPolicy} - The deserialized result object.'
      - originalTitle: reject
        title: reject
        text: |-
          {Error} - The error object.

          {function} optionalCallback(err, result, request, response)

                               {Error}  err        - The Error object if an error occurred, null otherwise.

                               {object} [result]   - The deserialized result object if an error did not occur.
                               See {@link ImmutabilityPolicy} for more information.

                               {object} [request]  - The HTTP Request object if an error did not occur.

                               {stream} [response] - The HTTP Response stream if an error did not occur.
        value: |-
          {Error} - The error object.

          {function} optionalCallback(err, result, request, response)

                               {Error}  err        - The Error object if an error occurred, null otherwise.

                               {object} [result]   - The deserialized result object if an error did not occur.
                               See {@link ImmutabilityPolicy} for more information.

                               {object} [request]  - The HTTP Request object if an error did not occur.

                               {stream} [response] - The HTTP Response stream if an error did not occur.
    type: Function
    syntax:
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |-
            The name of the resource group within the
            user's subscription. The name is case insensitive.
        - id: accountName
          type:
            - string
          description: >-
            The name of the storage account within the

            specified resource group. Storage account names must be between 3
            and 24

            characters in length and use numbers and lower-case letters only.
        - id: containerName
          type:
            - string
          description: >-
            The name of the blob container within the

            specified storage account. Blob container names must be between 3
            and 63

            characters in length and use numbers, lower-case letters and dash
            (-) only.

            Every dash (-) character must be immediately preceded and followed
            by a

            letter or number.
        - id: ifMatch
          type:
            - string
          description: >-
            The entity state (ETag) version of the immutability

            policy to update. A value of "*" can be used to apply the operation
            only if

            the immutability policy already exists. If omitted, this operation
            will

            always be applied.
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
        - id: optionalCallback
          type:
            - function
          description: The optional callback.
          optional: true
      return:
        type:
          - function
          - Promise
        description: |-
          If a callback was passed as the last parameter
          then it returns the callback else returns a Promise.

          {Promise} A promise is returned
      content: >-
        function lockImmutabilityPolicy(resourceGroupName, accountName,
        containerName, ifMatch, options, optionalCallback)
    langs:
      - js
  - uid: >-
      azure-arm-storage.BlobContainers#extendImmutabilityPolicyWithHttpOperationResponse
    id: >-
      azure-arm-storage.BlobContainers#extendImmutabilityPolicyWithHttpOperationResponse
    parent: azure-arm-storage.BlobContainers
    name: >-
      extendImmutabilityPolicyWithHttpOperationResponse(resourceGroupName,
      accountName, containerName, ifMatch,
      immutabilityPeriodSinceCreationInDays, options)
    summary: >-
      Extends the immutabilityPeriodSinceCreationInDays of a locked

      immutabilityPolicy. The only action allowed on a Locked policy will be
      this

      action. ETag in If-Match is required for this operation.
    fullName: >-
      azure-arm-storage.BlobContainers.extendImmutabilityPolicyWithHttpOperationResponse(resourceGroupName,
      accountName, containerName, ifMatch,
      immutabilityPeriodSinceCreationInDays, options)
    tags:
      - originalTitle: resolve
        title: resolve
        text: >-
          {HttpOperationResponse<ImmutabilityPolicy>} - The deserialized result
          object.
        value: >-
          {HttpOperationResponse<ImmutabilityPolicy>} - The deserialized result
          object.
      - originalTitle: reject
        title: reject
        text: '{Error} - The error object.'
        value: '{Error} - The error object.'
    type: Function
    syntax:
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |-
            The name of the resource group within the
            user's subscription. The name is case insensitive.
        - id: accountName
          type:
            - string
          description: >-
            The name of the storage account within the

            specified resource group. Storage account names must be between 3
            and 24

            characters in length and use numbers and lower-case letters only.
        - id: containerName
          type:
            - string
          description: >-
            The name of the blob container within the

            specified storage account. Blob container names must be between 3
            and 63

            characters in length and use numbers, lower-case letters and dash
            (-) only.

            Every dash (-) character must be immediately preceded and followed
            by a

            letter or number.
        - id: ifMatch
          type:
            - string
          description: >-
            The entity state (ETag) version of the immutability

            policy to update. A value of "*" can be used to apply the operation
            only if

            the immutability policy already exists. If omitted, this operation
            will

            always be applied.
        - id: immutabilityPeriodSinceCreationInDays
          type:
            - number
          description: >-
            The immutability

            period for the blobs in the container since the policy creation, in
            days.
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
      return:
        type:
          - Promise
        description: A promise is returned
      content: >-
        function
        extendImmutabilityPolicyWithHttpOperationResponse(resourceGroupName,
        accountName, containerName, ifMatch,
        immutabilityPeriodSinceCreationInDays, options)
    langs:
      - js
  - uid: 'azure-arm-storage.BlobContainers#extendImmutabilityPolicy'
    id: 'azure-arm-storage.BlobContainers#extendImmutabilityPolicy'
    parent: azure-arm-storage.BlobContainers
    name: >-
      extendImmutabilityPolicy(resourceGroupName, accountName, containerName,
      ifMatch, immutabilityPeriodSinceCreationInDays, options, optionalCallback)
    summary: >-
      Extends the immutabilityPeriodSinceCreationInDays of a locked

      immutabilityPolicy. The only action allowed on a Locked policy will be
      this

      action. ETag in If-Match is required for this operation.
    fullName: >-
      azure-arm-storage.BlobContainers.extendImmutabilityPolicy(resourceGroupName,
      accountName, containerName, ifMatch,
      immutabilityPeriodSinceCreationInDays, options, optionalCallback)
    tags:
      - originalTitle: resolve
        title: resolve
        text: '{ImmutabilityPolicy} - The deserialized result object.'
        value: '{ImmutabilityPolicy} - The deserialized result object.'
      - originalTitle: reject
        title: reject
        text: |-
          {Error} - The error object.

          {function} optionalCallback(err, result, request, response)

                               {Error}  err        - The Error object if an error occurred, null otherwise.

                               {object} [result]   - The deserialized result object if an error did not occur.
                               See {@link ImmutabilityPolicy} for more information.

                               {object} [request]  - The HTTP Request object if an error did not occur.

                               {stream} [response] - The HTTP Response stream if an error did not occur.
        value: |-
          {Error} - The error object.

          {function} optionalCallback(err, result, request, response)

                               {Error}  err        - The Error object if an error occurred, null otherwise.

                               {object} [result]   - The deserialized result object if an error did not occur.
                               See {@link ImmutabilityPolicy} for more information.

                               {object} [request]  - The HTTP Request object if an error did not occur.

                               {stream} [response] - The HTTP Response stream if an error did not occur.
    type: Function
    syntax:
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |-
            The name of the resource group within the
            user's subscription. The name is case insensitive.
        - id: accountName
          type:
            - string
          description: >-
            The name of the storage account within the

            specified resource group. Storage account names must be between 3
            and 24

            characters in length and use numbers and lower-case letters only.
        - id: containerName
          type:
            - string
          description: >-
            The name of the blob container within the

            specified storage account. Blob container names must be between 3
            and 63

            characters in length and use numbers, lower-case letters and dash
            (-) only.

            Every dash (-) character must be immediately preceded and followed
            by a

            letter or number.
        - id: ifMatch
          type:
            - string
          description: >-
            The entity state (ETag) version of the immutability

            policy to update. A value of "*" can be used to apply the operation
            only if

            the immutability policy already exists. If omitted, this operation
            will

            always be applied.
        - id: immutabilityPeriodSinceCreationInDays
          type:
            - number
          description: >-
            The immutability

            period for the blobs in the container since the policy creation, in
            days.
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
        - id: optionalCallback
          type:
            - function
          description: The optional callback.
          optional: true
      return:
        type:
          - function
          - Promise
        description: |-
          If a callback was passed as the last parameter
          then it returns the callback else returns a Promise.

          {Promise} A promise is returned
      content: >-
        function extendImmutabilityPolicy(resourceGroupName, accountName,
        containerName, ifMatch, immutabilityPeriodSinceCreationInDays, options,
        optionalCallback)
    langs:
      - js
