### YamlMime:UniversalReference
items:
  - uid: azure-arm-devtestlabs.Policy
    name: Policy
    fullName: Policy
    children:
      - azure-arm-devtestlabs.Policy.createdDate
      - azure-arm-devtestlabs.Policy.description
      - azure-arm-devtestlabs.Policy.evaluatorType
      - azure-arm-devtestlabs.Policy.factData
      - azure-arm-devtestlabs.Policy.factName
      - azure-arm-devtestlabs.Policy.id
      - azure-arm-devtestlabs.Policy.location
      - azure-arm-devtestlabs.Policy.name
      - azure-arm-devtestlabs.Policy.provisioningState
      - azure-arm-devtestlabs.Policy.status
      - azure-arm-devtestlabs.Policy.tags
      - azure-arm-devtestlabs.Policy.threshold
      - azure-arm-devtestlabs.Policy.type
      - azure-arm-devtestlabs.Policy.uniqueIdentifier
    langs:
      - typeScript
    type: interface
    summary: ''
    extends:
      name: azure-arm-devtestlabs.Resource
    package: azure-arm-devtestlabs
  - uid: azure-arm-devtestlabs.Policy.createdDate
    name: createdDate
    fullName: createdDate
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    optional: true
    syntax:
      content: 'createdDate?: Date'
      return:
        type:
          - Date
    package: azure-arm-devtestlabs
  - uid: azure-arm-devtestlabs.Policy.description
    name: description
    fullName: description
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    optional: true
    syntax:
      content: 'description?: string'
      return:
        type:
          - string
    package: azure-arm-devtestlabs
  - uid: azure-arm-devtestlabs.Policy.evaluatorType
    name: evaluatorType
    fullName: evaluatorType
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    optional: true
    syntax:
      content: 'evaluatorType?: string'
      return:
        type:
          - string
    package: azure-arm-devtestlabs
  - uid: azure-arm-devtestlabs.Policy.factData
    name: factData
    fullName: factData
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    optional: true
    syntax:
      content: 'factData?: string'
      return:
        type:
          - string
    package: azure-arm-devtestlabs
  - uid: azure-arm-devtestlabs.Policy.factName
    name: factName
    fullName: factName
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    optional: true
    syntax:
      content: 'factName?: string'
      return:
        type:
          - string
    package: azure-arm-devtestlabs
  - uid: azure-arm-devtestlabs.Policy.id
    name: id
    fullName: id
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    optional: true
    syntax:
      content: 'id?: string'
      return:
        type:
          - string
    package: azure-arm-devtestlabs
  - uid: azure-arm-devtestlabs.Policy.location
    name: location
    fullName: location
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    optional: true
    syntax:
      content: 'location?: string'
      return:
        type:
          - string
    package: azure-arm-devtestlabs
  - uid: azure-arm-devtestlabs.Policy.name
    name: name
    fullName: name
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    optional: true
    syntax:
      content: 'name?: string'
      return:
        type:
          - string
    package: azure-arm-devtestlabs
  - uid: azure-arm-devtestlabs.Policy.provisioningState
    name: provisioningState
    fullName: provisioningState
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    optional: true
    syntax:
      content: 'provisioningState?: string'
      return:
        type:
          - string
    package: azure-arm-devtestlabs
  - uid: azure-arm-devtestlabs.Policy.status
    name: status
    fullName: status
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    optional: true
    syntax:
      content: 'status?: string'
      return:
        type:
          - string
    package: azure-arm-devtestlabs
  - uid: azure-arm-devtestlabs.Policy.tags
    name: tags
    fullName: tags
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    optional: true
    syntax:
      content: 'tags?: [key: string]: string'
      return:
        type:
          - '[key: string]: string'
    package: azure-arm-devtestlabs
  - uid: azure-arm-devtestlabs.Policy.threshold
    name: threshold
    fullName: threshold
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    optional: true
    syntax:
      content: 'threshold?: string'
      return:
        type:
          - string
    package: azure-arm-devtestlabs
  - uid: azure-arm-devtestlabs.Policy.type
    name: type
    fullName: type
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    optional: true
    syntax:
      content: 'type?: string'
      return:
        type:
          - string
    package: azure-arm-devtestlabs
  - uid: azure-arm-devtestlabs.Policy.uniqueIdentifier
    name: uniqueIdentifier
    fullName: uniqueIdentifier
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    optional: true
    syntax:
      content: 'uniqueIdentifier?: string'
      return:
        type:
          - string
    package: azure-arm-devtestlabs
references:
  - uid: azure-arm-devtestlabs.Resource
    name: Resource
    spec.typeScript:
      - name: Resource
        fullName: Resource
        uid: azure-arm-devtestlabs.Resource
