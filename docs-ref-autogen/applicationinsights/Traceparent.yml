### YamlMime:UniversalReference
items:
  - uid: applicationinsights.Traceparent
    name: Traceparent
    fullName: Traceparent
    children:
      - applicationinsights.Traceparent.getBackCompatRequestId
      - applicationinsights.Traceparent.isValidSpanId
      - applicationinsights.Traceparent.isValidTraceId
      - applicationinsights.Traceparent.legacyRootId
      - applicationinsights.Traceparent.parentId
      - applicationinsights.Traceparent.spanId
      - applicationinsights.Traceparent.toString
      - applicationinsights.Traceparent.traceFlag
      - applicationinsights.Traceparent.traceId
      - applicationinsights.Traceparent.constructor
      - applicationinsights.Traceparent.updateSpanId
      - applicationinsights.Traceparent.version
    langs:
      - typeScript
    type: class
    summary: >-
      Helper class to manage parsing and validation of traceparent header. Also
      handles hierarchical

      back-compatibility headers generated from traceparent. W3C traceparent
      spec is documented at

      https://www.w3.org/TR/trace-context/#traceparent-field
    package: applicationinsights
  - uid: applicationinsights.Traceparent.getBackCompatRequestId
    name: getBackCompatRequestId()
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: function getBackCompatRequestId()
      parameters: []
      return:
        type:
          - string
    package: applicationinsights
  - uid: applicationinsights.Traceparent.isValidSpanId
    name: isValidSpanId(string)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'static function isValidSpanId(id: string)'
      parameters:
        - id: id
          type:
            - string
          description: ''
      return:
        type:
          - boolean
    package: applicationinsights
  - uid: applicationinsights.Traceparent.isValidTraceId
    name: isValidTraceId(string)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'static function isValidTraceId(id: string)'
      parameters:
        - id: id
          type:
            - string
          description: ''
      return:
        type:
          - boolean
    package: applicationinsights
  - uid: applicationinsights.Traceparent.legacyRootId
    name: legacyRootId
    fullName: legacyRootId
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'legacyRootId: string'
      return:
        type:
          - string
    package: applicationinsights
  - uid: applicationinsights.Traceparent.parentId
    name: parentId
    fullName: parentId
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'parentId: string'
      return:
        type:
          - string
    package: applicationinsights
  - uid: applicationinsights.Traceparent.spanId
    name: spanId
    fullName: spanId
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'spanId: string'
      return:
        type:
          - string
    package: applicationinsights
  - uid: applicationinsights.Traceparent.toString
    name: toString()
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: function toString()
      parameters: []
      return:
        type:
          - string
    package: applicationinsights
  - uid: applicationinsights.Traceparent.traceFlag
    name: traceFlag
    fullName: traceFlag
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'traceFlag: string'
      return:
        type:
          - string
    package: applicationinsights
  - uid: applicationinsights.Traceparent.traceId
    name: traceId
    fullName: traceId
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'traceId: string'
      return:
        type:
          - string
    package: applicationinsights
  - uid: applicationinsights.Traceparent.constructor
    name: 'Traceparent(string, string)'
    children: []
    type: constructor
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'new Traceparent(traceparent?: string, parentId?: string)'
      parameters:
        - id: traceparent
          type:
            - string
          description: ''
          optional: true
        - id: parentId
          type:
            - string
          description: ''
          optional: true
    package: applicationinsights
  - uid: applicationinsights.Traceparent.updateSpanId
    name: updateSpanId()
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: function updateSpanId()
      parameters: []
    package: applicationinsights
  - uid: applicationinsights.Traceparent.version
    name: version
    fullName: version
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'version: string'
      return:
        type:
          - string
    package: applicationinsights
