### YamlMime:UniversalReference
items:
  - uid: applicationinsights.ExceptionData
    name: ExceptionData
    fullName: ExceptionData
    children:
      - applicationinsights.ExceptionData.constructor
      - applicationinsights.ExceptionData.exceptions
      - applicationinsights.ExceptionData.measurements
      - applicationinsights.ExceptionData.problemId
      - applicationinsights.ExceptionData.properties
      - applicationinsights.ExceptionData.severityLevel
      - applicationinsights.ExceptionData.ver
    langs:
      - typeScript
    type: class
    summary: >-
      An instance of Exception represents a handled or unhandled exception that
      occurred during execution of the monitored application.
    extends:
      name: applicationinsights.Domain
    package: applicationinsights
  - uid: applicationinsights.ExceptionData.constructor
    name: ExceptionData()
    children: []
    type: constructor
    langs:
      - typeScript
    summary: ''
    syntax:
      content: new ExceptionData()
      parameters: []
    package: applicationinsights
  - uid: applicationinsights.ExceptionData.exceptions
    name: exceptions
    fullName: exceptions
    children: []
    langs:
      - typeScript
    type: property
    summary: Exception chain - list of inner exceptions.
    syntax:
      content: 'exceptions: ExceptionDetails[]'
      return:
        type:
          - 'applicationinsights.ExceptionDetails[]'
    package: applicationinsights
  - uid: applicationinsights.ExceptionData.measurements
    name: measurements
    fullName: measurements
    children: []
    langs:
      - typeScript
    type: property
    summary: Collection of custom measurements.
    syntax:
      content: 'measurements: any'
      return:
        type:
          - any
    package: applicationinsights
  - uid: applicationinsights.ExceptionData.problemId
    name: problemId
    fullName: problemId
    children: []
    langs:
      - typeScript
    type: property
    summary: >-
      Identifier of where the exception was thrown in code. Used for exceptions
      grouping. Typically a combination of exception type and a function from
      the call stack.
    syntax:
      content: 'problemId: string'
      return:
        type:
          - string
    package: applicationinsights
  - uid: applicationinsights.ExceptionData.properties
    name: properties
    fullName: properties
    children: []
    langs:
      - typeScript
    type: property
    summary: Collection of custom properties.
    syntax:
      content: 'properties: any'
      return:
        type:
          - any
    package: applicationinsights
  - uid: applicationinsights.ExceptionData.severityLevel
    name: severityLevel
    fullName: severityLevel
    children: []
    langs:
      - typeScript
    type: property
    summary: >-
      Severity level. Mostly used to indicate exception severity level when it
      is reported by logging library.
    syntax:
      content: 'severityLevel: SeverityLevel'
      return:
        type:
          - applicationinsights.SeverityLevel
    package: applicationinsights
  - uid: applicationinsights.ExceptionData.ver
    name: ver
    fullName: ver
    children: []
    langs:
      - typeScript
    type: property
    summary: Schema version
    syntax:
      content: 'ver: number'
      return:
        type:
          - number
    package: applicationinsights
references:
  - uid: applicationinsights.Domain
    name: Domain
    spec.typeScript:
      - name: Domain
        fullName: Domain
        uid: applicationinsights.Domain
  - uid: 'applicationinsights.ExceptionDetails[]'
    name: 'ExceptionDetails[]'
    spec.typeScript:
      - name: ExceptionDetails
        fullName: ExceptionDetails
        uid: applicationinsights.ExceptionDetails
      - name: '[]'
        fullName: '[]'
  - uid: applicationinsights.SeverityLevel
    name: SeverityLevel
    spec.typeScript:
      - name: SeverityLevel
        fullName: SeverityLevel
        uid: applicationinsights.SeverityLevel
