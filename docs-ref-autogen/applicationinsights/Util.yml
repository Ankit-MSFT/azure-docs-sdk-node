### YamlMime:UniversalReference
items:
  - uid: applicationinsights.Util
    name: Util
    fullName: Util
    children:
      - applicationinsights.Util.canIncludeCorrelationHeader
      - applicationinsights.Util.getCookie
      - applicationinsights.Util.getCorrelationContextTarget
      - applicationinsights.Util.int32ArrayToBase64
      - applicationinsights.Util.isArray
      - applicationinsights.Util.isDate
      - applicationinsights.Util.isError
      - applicationinsights.Util.isPrimitive
      - applicationinsights.Util.isValidW3CId
      - applicationinsights.Util.makeRequest
      - applicationinsights.Util.MAX_PROPERTY_LENGTH
      - applicationinsights.Util.msToTimeSpan
      - applicationinsights.Util.random32
      - applicationinsights.Util.randomu32
      - applicationinsights.Util.safeIncludeCorrelationHeader
      - applicationinsights.Util.tlsRestrictedAgent
      - applicationinsights.Util.trim
      - applicationinsights.Util.validateStringMap
      - applicationinsights.Util.w3cTraceId
    langs:
      - typeScript
    type: class
    summary: ''
    package: applicationinsights
  - uid: applicationinsights.Util.canIncludeCorrelationHeader
    name: 'canIncludeCorrelationHeader(TelemetryClient, string)'
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      Checks if a request url is not on a excluded domain list
      and if it is safe to add correlation headers
    syntax:
      content: >-
        static function canIncludeCorrelationHeader(client: TelemetryClient,
        requestUrl: string)
      parameters:
        - id: client
          type:
            - applicationinsights.TelemetryClient
          description: ''
        - id: requestUrl
          type:
            - string
          description: ''
      return:
        type:
          - boolean
    package: applicationinsights
  - uid: applicationinsights.Util.getCookie
    name: 'getCookie(string, string)'
    children: []
    type: method
    langs:
      - typeScript
    summary: helper method to access userId and sessionId cookie
    syntax:
      content: 'static function getCookie(name: string, cookie: string)'
      parameters:
        - id: name
          type:
            - string
          description: ''
        - id: cookie
          type:
            - string
          description: ''
      return:
        type:
          - string
    package: applicationinsights
  - uid: applicationinsights.Util.getCorrelationContextTarget
    name: 'getCorrelationContextTarget(http, string)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'static function getCorrelationContextTarget(response: http, key: string)'
      parameters:
        - id: response
          type:
            - http
          description: ''
        - id: key
          type:
            - string
          description: ''
      return:
        type:
          - any
    package: applicationinsights
  - uid: applicationinsights.Util.int32ArrayToBase64
    name: 'int32ArrayToBase64(number[])'
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      Convert an array of int32 to Base64 (no '==' at the end).
      MSB first.
    syntax:
      content: 'static function int32ArrayToBase64(array: number[])'
      parameters:
        - id: array
          type:
            - 'number[]'
          description: ''
      return:
        type:
          - string
    package: applicationinsights
  - uid: applicationinsights.Util.isArray
    name: isArray(any)
    children: []
    type: method
    langs:
      - typeScript
    summary: Check if an object is of type Array
    syntax:
      content: 'static function isArray(obj: any)'
      parameters:
        - id: obj
          type:
            - any
          description: ''
      return:
        type:
          - boolean
    package: applicationinsights
  - uid: applicationinsights.Util.isDate
    name: isDate(any)
    children: []
    type: method
    langs:
      - typeScript
    summary: Check if an object is of type Date
    syntax:
      content: 'static function isDate(obj: any)'
      parameters:
        - id: obj
          type:
            - any
          description: ''
      return:
        type:
          - boolean
    package: applicationinsights
  - uid: applicationinsights.Util.isError
    name: isError(any)
    children: []
    type: method
    langs:
      - typeScript
    summary: Check if an object is of type Error
    syntax:
      content: 'static function isError(obj: any)'
      parameters:
        - id: obj
          type:
            - any
          description: ''
      return:
        type:
          - boolean
    package: applicationinsights
  - uid: applicationinsights.Util.isPrimitive
    name: isPrimitive(any)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'static function isPrimitive(input: any)'
      parameters:
        - id: input
          type:
            - any
          description: ''
      return:
        type:
          - boolean
    package: applicationinsights
  - uid: applicationinsights.Util.isValidW3CId
    name: isValidW3CId(string)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'static function isValidW3CId(id: string)'
      parameters:
        - id: id
          type:
            - string
          description: ''
      return:
        type:
          - boolean
    package: applicationinsights
  - uid: applicationinsights.Util.makeRequest
    name: 'makeRequest(Config, string, http, (res: http.IncomingMessage) => void)'
    children: []
    type: method
    langs:
      - typeScript
    summary: |
      Generate request
      Proxify the request creation to handle proxy http
    syntax:
      content: >-
        static function makeRequest(config: Config, requestUrl: string,
        requestOptions: http, requestCallback: (res: http.IncomingMessage) =>
        void)
      parameters:
        - id: config
          type:
            - applicationinsights.Config
          description: ''
        - id: requestUrl
          type:
            - string
          description: url endpoint
        - id: requestOptions
          type:
            - http
          description: Request option
        - id: requestCallback
          type:
            - '(res: http.IncomingMessage) => void'
          description: callback on request
      return:
        type:
          - http.ClientRequest
    package: applicationinsights
  - uid: applicationinsights.Util.MAX_PROPERTY_LENGTH
    name: MAX_PROPERTY_LENGTH
    fullName: MAX_PROPERTY_LENGTH
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'static MAX_PROPERTY_LENGTH: number'
      return:
        type:
          - number
    package: applicationinsights
  - uid: applicationinsights.Util.msToTimeSpan
    name: msToTimeSpan(number)
    children: []
    type: method
    langs:
      - typeScript
    summary: 'Convert ms to c# time span format'
    syntax:
      content: 'static function msToTimeSpan(totalms: number)'
      parameters:
        - id: totalms
          type:
            - number
          description: ''
      return:
        type:
          - string
    package: applicationinsights
  - uid: applicationinsights.Util.random32
    name: random32()
    children: []
    type: method
    langs:
      - typeScript
    summary: generate a random 32bit number (-0x80000000..0x7FFFFFFF).
    syntax:
      content: static function random32()
      parameters: []
      return:
        type:
          - number
    package: applicationinsights
  - uid: applicationinsights.Util.randomu32
    name: randomu32()
    children: []
    type: method
    langs:
      - typeScript
    summary: generate a random 32bit number (0x00000000..0xFFFFFFFF).
    syntax:
      content: static function randomu32()
      parameters: []
      return:
        type:
          - number
    package: applicationinsights
  - uid: applicationinsights.Util.safeIncludeCorrelationHeader
    name: 'safeIncludeCorrelationHeader(TelemetryClient, http, any)'
    children: []
    type: method
    langs:
      - typeScript
    summary: 'Parse standard <string | string[] | number> request-context header'
    syntax:
      content: >-
        static function safeIncludeCorrelationHeader(client: TelemetryClient,
        request: http, correlationHeader: any)
      parameters:
        - id: client
          type:
            - applicationinsights.TelemetryClient
          description: ''
        - id: request
          type:
            - http
          description: ''
        - id: correlationHeader
          type:
            - any
          description: ''
    package: applicationinsights
  - uid: applicationinsights.Util.tlsRestrictedAgent
    name: tlsRestrictedAgent
    fullName: tlsRestrictedAgent
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'static tlsRestrictedAgent: https.Agent'
      return:
        type:
          - https.Agent
    package: applicationinsights
  - uid: applicationinsights.Util.trim
    name: trim(string)
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      helper method to trim strings (IE8 does not implement
      String.prototype.trim)
    syntax:
      content: 'static function trim(str: string)'
      parameters:
        - id: str
          type:
            - string
          description: ''
      return:
        type:
          - string
    package: applicationinsights
  - uid: applicationinsights.Util.validateStringMap
    name: validateStringMap(any)
    children: []
    type: method
    langs:
      - typeScript
    summary: 'Validate that an object is of type { [key: string]: string }'
    syntax:
      content: 'static function validateStringMap(obj: any)'
      parameters:
        - id: obj
          type:
            - any
          description: ''
      return:
        type:
          - '[key: string]: string'
    package: applicationinsights
  - uid: applicationinsights.Util.w3cTraceId
    name: w3cTraceId()
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      generate W3C-compatible trace id

      https://github.com/w3c/distributed-tracing/blob/master/trace_context/HTTP_HEADER_FORMAT.md#trace-id
    syntax:
      content: static function w3cTraceId()
      parameters: []
      return:
        type:
          - string
    package: applicationinsights
references:
  - uid: applicationinsights.TelemetryClient
    name: TelemetryClient
    spec.typeScript:
      - name: TelemetryClient
        fullName: TelemetryClient
        uid: applicationinsights.TelemetryClient
  - uid: applicationinsights.Config
    name: Config
    spec.typeScript:
      - name: Config
        fullName: Config
        uid: applicationinsights.Config
