### YamlMime:UniversalReference
items:
  - uid: applicationinsights.AutoCollectHttpRequests
    name: AutoCollectHttpRequests
    fullName: AutoCollectHttpRequests
    children:
      - applicationinsights.AutoCollectHttpRequests.constructor
      - applicationinsights.AutoCollectHttpRequests.dispose
      - applicationinsights.AutoCollectHttpRequests.enable
      - applicationinsights.AutoCollectHttpRequests.INSTANCE
      - applicationinsights.AutoCollectHttpRequests.isAutoCorrelating
      - applicationinsights.AutoCollectHttpRequests.isInitialized
      - applicationinsights.AutoCollectHttpRequests.trackRequest
      - applicationinsights.AutoCollectHttpRequests.trackRequestSync
      - applicationinsights.AutoCollectHttpRequests.useAutoCorrelation
    langs:
      - typeScript
    type: class
    summary: ''
    package: applicationinsights
  - uid: applicationinsights.AutoCollectHttpRequests.constructor
    name: AutoCollectHttpRequests(TelemetryClient)
    children: []
    type: constructor
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'new AutoCollectHttpRequests(client: TelemetryClient)'
      parameters:
        - id: client
          type:
            - applicationinsights.TelemetryClient
          description: ''
    package: applicationinsights
  - uid: applicationinsights.AutoCollectHttpRequests.dispose
    name: dispose()
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: function dispose()
      parameters: []
    package: applicationinsights
  - uid: applicationinsights.AutoCollectHttpRequests.enable
    name: enable(boolean)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function enable(isEnabled: boolean)'
      parameters:
        - id: isEnabled
          type:
            - boolean
          description: ''
    package: applicationinsights
  - uid: applicationinsights.AutoCollectHttpRequests.INSTANCE
    name: INSTANCE
    fullName: INSTANCE
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'static INSTANCE: AutoCollectHttpRequests'
      return:
        type:
          - applicationinsights.AutoCollectHttpRequests
    package: applicationinsights
  - uid: applicationinsights.AutoCollectHttpRequests.isAutoCorrelating
    name: isAutoCorrelating()
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: function isAutoCorrelating()
      parameters: []
      return:
        type:
          - boolean
    package: applicationinsights
  - uid: applicationinsights.AutoCollectHttpRequests.isInitialized
    name: isInitialized()
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: function isInitialized()
      parameters: []
      return:
        type:
          - boolean
    package: applicationinsights
  - uid: applicationinsights.AutoCollectHttpRequests.trackRequest
    name: 'trackRequest(TelemetryClient, NodeHttpRequestTelemetry, HttpRequestParser)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Tracks a request by listening to the response 'finish' event
    syntax:
      content: >-
        static function trackRequest(client: TelemetryClient, telemetry:
        NodeHttpRequestTelemetry, _requestParser?: HttpRequestParser)
      parameters:
        - id: client
          type:
            - applicationinsights.TelemetryClient
          description: ''
        - id: telemetry
          type:
            - applicationinsights.NodeHttpRequestTelemetry
          description: ''
        - id: _requestParser
          type:
            - applicationinsights.HttpRequestParser
          description: ''
          optional: true
    package: applicationinsights
  - uid: applicationinsights.AutoCollectHttpRequests.trackRequestSync
    name: 'trackRequestSync(TelemetryClient, NodeHttpRequestTelemetry)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Tracks a request synchronously (doesn't wait for response 'finish' event)
    syntax:
      content: >-
        static function trackRequestSync(client: TelemetryClient, telemetry:
        NodeHttpRequestTelemetry)
      parameters:
        - id: client
          type:
            - applicationinsights.TelemetryClient
          description: ''
        - id: telemetry
          type:
            - applicationinsights.NodeHttpRequestTelemetry
          description: ''
    package: applicationinsights
  - uid: applicationinsights.AutoCollectHttpRequests.useAutoCorrelation
    name: 'useAutoCorrelation(boolean, boolean)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function useAutoCorrelation(isEnabled: boolean, forceClsHooked?:
        boolean)
      parameters:
        - id: isEnabled
          type:
            - boolean
          description: ''
        - id: forceClsHooked
          type:
            - boolean
          description: ''
          optional: true
    package: applicationinsights
references:
  - uid: applicationinsights.TelemetryClient
    name: TelemetryClient
    spec.typeScript:
      - name: TelemetryClient
        fullName: TelemetryClient
        uid: applicationinsights.TelemetryClient
  - uid: applicationinsights.AutoCollectHttpRequests
    name: AutoCollectHttpRequests
    spec.typeScript:
      - name: AutoCollectHttpRequests
        fullName: AutoCollectHttpRequests
        uid: applicationinsights.AutoCollectHttpRequests
  - uid: applicationinsights.NodeHttpRequestTelemetry
    name: NodeHttpRequestTelemetry
    spec.typeScript:
      - name: NodeHttpRequestTelemetry
        fullName: NodeHttpRequestTelemetry
        uid: applicationinsights.NodeHttpRequestTelemetry
  - uid: applicationinsights.HttpRequestParser
    name: HttpRequestParser
    spec.typeScript:
      - name: HttpRequestParser
        fullName: HttpRequestParser
        uid: applicationinsights.HttpRequestParser
