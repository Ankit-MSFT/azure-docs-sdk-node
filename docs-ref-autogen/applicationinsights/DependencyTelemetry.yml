### YamlMime:UniversalReference
items:
  - uid: applicationinsights.DependencyTelemetry
    name: DependencyTelemetry
    fullName: DependencyTelemetry
    children:
      - applicationinsights.DependencyTelemetry.contextObjects
      - applicationinsights.DependencyTelemetry.data
      - applicationinsights.DependencyTelemetry.dependencyTypeName
      - applicationinsights.DependencyTelemetry.duration
      - applicationinsights.DependencyTelemetry.name
      - applicationinsights.DependencyTelemetry.properties
      - applicationinsights.DependencyTelemetry.resultCode
      - applicationinsights.DependencyTelemetry.success
      - applicationinsights.DependencyTelemetry.tagOverrides
      - applicationinsights.DependencyTelemetry.target
      - applicationinsights.DependencyTelemetry.time
    langs:
      - typeScript
    type: interface
    summary: Telemetry about the call to remote component
    extends:
      name: applicationinsights.Telemetry
    package: applicationinsights
  - uid: applicationinsights.DependencyTelemetry.contextObjects
    name: contextObjects
    fullName: contextObjects
    children: []
    langs:
      - typeScript
    type: property
    summary: >-
      An event-specific context that will be passed to telemetry processors
      handling this event before it is sent. For a context spanning your entire
      operation, consider appInsights.getCorrelationContext
    optional: true
    syntax:
      content: 'contextObjects?: [key: string]: any'
      return:
        type:
          - '[key: string]: any'
    package: applicationinsights
  - uid: applicationinsights.DependencyTelemetry.data
    name: data
    fullName: data
    children: []
    langs:
      - typeScript
    type: property
    summary: >-
      Remote call data. This is the most detailed information about the call,
      such as full URL or SQL statement
    syntax:
      content: 'data: string'
      return:
        type:
          - string
    package: applicationinsights
  - uid: applicationinsights.DependencyTelemetry.dependencyTypeName
    name: dependencyTypeName
    fullName: dependencyTypeName
    children: []
    langs:
      - typeScript
    type: property
    summary: 'Type name of the telemetry, such as HTTP of SQL'
    syntax:
      content: 'dependencyTypeName: string'
      return:
        type:
          - string
    package: applicationinsights
  - uid: applicationinsights.DependencyTelemetry.duration
    name: duration
    fullName: duration
    children: []
    langs:
      - typeScript
    type: property
    summary: Remote call duration in ms
    syntax:
      content: 'duration: number'
      return:
        type:
          - number
    package: applicationinsights
  - uid: applicationinsights.DependencyTelemetry.name
    name: name
    fullName: name
    children: []
    langs:
      - typeScript
    type: property
    summary: Remote call name
    syntax:
      content: 'name: string'
      return:
        type:
          - string
    package: applicationinsights
  - uid: applicationinsights.DependencyTelemetry.properties
    name: properties
    fullName: properties
    children: []
    langs:
      - typeScript
    type: property
    summary: >-
      Additional data used to filter events and metrics in the portal. Defaults
      to empty.
    optional: true
    syntax:
      content: 'properties?: [key: string]: string'
      return:
        type:
          - '[key: string]: string'
    package: applicationinsights
  - uid: applicationinsights.DependencyTelemetry.resultCode
    name: resultCode
    fullName: resultCode
    children: []
    langs:
      - typeScript
    type: property
    summary: >-
      Result code returned form the remote component. This is domain specific
      and can be HTTP status code or SQL result code
    syntax:
      content: 'resultCode: string | number'
      return:
        type:
          - string | number
    package: applicationinsights
  - uid: applicationinsights.DependencyTelemetry.success
    name: success
    fullName: success
    children: []
    langs:
      - typeScript
    type: property
    summary: 'True if remote call was successful, false otherwise'
    syntax:
      content: 'success: boolean'
      return:
        type:
          - boolean
    package: applicationinsights
  - uid: applicationinsights.DependencyTelemetry.tagOverrides
    name: tagOverrides
    fullName: tagOverrides
    children: []
    langs:
      - typeScript
    type: property
    summary: >-
      The context tags to use for this telemetry which overwrite default context
      values
    optional: true
    syntax:
      content: 'tagOverrides?: [key: string]: string'
      return:
        type:
          - '[key: string]: string'
    package: applicationinsights
  - uid: applicationinsights.DependencyTelemetry.target
    name: target
    fullName: target
    children: []
    langs:
      - typeScript
    type: property
    summary: >-
      Remote component general target information

      If left empty, this will be prepopulated with an extracted hostname from
      the data field, if it is a url.

      This prepopulation happens when calling `trackDependency`. Use `track`
      directly to avoid this behavior.
    optional: true
    syntax:
      content: 'target?: string'
      return:
        type:
          - string
    package: applicationinsights
  - uid: applicationinsights.DependencyTelemetry.time
    name: time
    fullName: time
    children: []
    langs:
      - typeScript
    type: property
    summary: >-
      Telemetry time stamp. When it is not specified, current tiestamp will be
      used.
    optional: true
    syntax:
      content: 'time?: Date'
      return:
        type:
          - Date
    package: applicationinsights
references:
  - uid: applicationinsights.Telemetry
    name: Telemetry
    spec.typeScript:
      - name: Telemetry
        fullName: Telemetry
        uid: applicationinsights.Telemetry
