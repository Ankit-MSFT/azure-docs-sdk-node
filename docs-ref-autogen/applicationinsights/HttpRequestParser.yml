### YamlMime:UniversalReference
items:
  - uid: applicationinsights.HttpRequestParser
    name: HttpRequestParser
    fullName: HttpRequestParser
    children:
      - applicationinsights.HttpRequestParser.getCorrelationContextHeader
      - applicationinsights.HttpRequestParser.getLegacyRootId
      - applicationinsights.HttpRequestParser.getOperationId
      - applicationinsights.HttpRequestParser.getOperationName
      - applicationinsights.HttpRequestParser.getOperationParentId
      - applicationinsights.HttpRequestParser.getRequestId
      - applicationinsights.HttpRequestParser.getRequestTags
      - applicationinsights.HttpRequestParser.getRequestTelemetry
      - applicationinsights.HttpRequestParser.getTraceparent
      - applicationinsights.HttpRequestParser.getTracestate
      - applicationinsights.HttpRequestParser.getUrl
      - applicationinsights.HttpRequestParser.constructor
      - applicationinsights.HttpRequestParser.onError
      - applicationinsights.HttpRequestParser.onResponse
      - applicationinsights.HttpRequestParser.parseId
    langs:
      - typeScript
    type: class
    summary: >-
      Helper class to read data from the requst/response objects and convert
      them into the telemetry contract
    extends:
      name: applicationinsights.RequestParser
    package: applicationinsights
  - uid: applicationinsights.HttpRequestParser.getCorrelationContextHeader
    name: getCorrelationContextHeader()
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: function getCorrelationContextHeader()
      parameters: []
      return:
        type:
          - string
    package: applicationinsights
  - uid: applicationinsights.HttpRequestParser.getLegacyRootId
    name: getLegacyRootId()
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: function getLegacyRootId()
      parameters: []
      return:
        type:
          - string
    package: applicationinsights
  - uid: applicationinsights.HttpRequestParser.getOperationId
    name: 'getOperationId([key: string]: string)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getOperationId(tags: [key: string]: string)'
      parameters:
        - id: tags
          type:
            - '[key: string]: string'
          description: ''
      return:
        type:
          - string
    package: applicationinsights
  - uid: applicationinsights.HttpRequestParser.getOperationName
    name: 'getOperationName([key: string]: string)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getOperationName(tags: [key: string]: string)'
      parameters:
        - id: tags
          type:
            - '[key: string]: string'
          description: ''
      return:
        type:
          - string
    package: applicationinsights
  - uid: applicationinsights.HttpRequestParser.getOperationParentId
    name: 'getOperationParentId([key: string]: string)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getOperationParentId(tags: [key: string]: string)'
      parameters:
        - id: tags
          type:
            - '[key: string]: string'
          description: ''
      return:
        type:
          - string
    package: applicationinsights
  - uid: applicationinsights.HttpRequestParser.getRequestId
    name: getRequestId()
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: function getRequestId()
      parameters: []
      return:
        type:
          - string
    package: applicationinsights
  - uid: applicationinsights.HttpRequestParser.getRequestTags
    name: 'getRequestTags([key: string]: string)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getRequestTags(tags: [key: string]: string)'
      parameters:
        - id: tags
          type:
            - '[key: string]: string'
          description: ''
      return:
        type:
          - '[key: string]: string'
    package: applicationinsights
  - uid: applicationinsights.HttpRequestParser.getRequestTelemetry
    name: getRequestTelemetry(Telemetry)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getRequestTelemetry(baseTelemetry?: Telemetry)'
      parameters:
        - id: baseTelemetry
          type:
            - applicationinsights.Telemetry
          description: ''
          optional: true
      return:
        type:
          - applicationinsights.RequestTelemetry
    package: applicationinsights
  - uid: applicationinsights.HttpRequestParser.getTraceparent
    name: getTraceparent()
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: function getTraceparent()
      parameters: []
      return:
        type:
          - applicationinsights.Traceparent
    package: applicationinsights
  - uid: applicationinsights.HttpRequestParser.getTracestate
    name: getTracestate()
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: function getTracestate()
      parameters: []
      return:
        type:
          - applicationinsights.Tracestate
    package: applicationinsights
  - uid: applicationinsights.HttpRequestParser.getUrl
    name: getUrl()
    children: []
    type: method
    langs:
      - typeScript
    summary: Gets a url parsed out from request options
    syntax:
      content: function getUrl()
      parameters: []
      return:
        type:
          - string
    package: applicationinsights
  - uid: applicationinsights.HttpRequestParser.constructor
    name: 'HttpRequestParser(http.IncomingMessage, string)'
    children: []
    type: constructor
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'new HttpRequestParser(request: http.IncomingMessage, requestId?: string)'
      parameters:
        - id: request
          type:
            - http.IncomingMessage
          description: ''
        - id: requestId
          type:
            - string
          description: ''
          optional: true
    package: applicationinsights
  - uid: applicationinsights.HttpRequestParser.onError
    name: 'onError(Error | string, number)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function onError(error: Error | string, ellapsedMilliseconds?: number)'
      parameters:
        - id: error
          type:
            - Error | string
          description: ''
        - id: ellapsedMilliseconds
          type:
            - number
          description: ''
          optional: true
    package: applicationinsights
  - uid: applicationinsights.HttpRequestParser.onResponse
    name: 'onResponse(http.ServerResponse, number)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function onResponse(response: http.ServerResponse,
        ellapsedMilliseconds?: number)
      parameters:
        - id: response
          type:
            - http.ServerResponse
          description: ''
        - id: ellapsedMilliseconds
          type:
            - number
          description: ''
          optional: true
    package: applicationinsights
  - uid: applicationinsights.HttpRequestParser.parseId
    name: parseId(string)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'static function parseId(cookieValue: string)'
      parameters:
        - id: cookieValue
          type:
            - string
          description: ''
      return:
        type:
          - string
    package: applicationinsights
references:
  - uid: applicationinsights.RequestParser
    name: RequestParser
    spec.typeScript:
      - name: RequestParser
        fullName: RequestParser
        uid: applicationinsights.RequestParser
  - uid: applicationinsights.Telemetry
    name: Telemetry
    spec.typeScript:
      - name: Telemetry
        fullName: Telemetry
        uid: applicationinsights.Telemetry
  - uid: applicationinsights.RequestTelemetry
    name: RequestTelemetry
    spec.typeScript:
      - name: RequestTelemetry
        fullName: RequestTelemetry
        uid: applicationinsights.RequestTelemetry
  - uid: applicationinsights.Traceparent
    name: Traceparent
    spec.typeScript:
      - name: Traceparent
        fullName: Traceparent
        uid: applicationinsights.Traceparent
  - uid: applicationinsights.Tracestate
    name: Tracestate
    spec.typeScript:
      - name: Tracestate
        fullName: Tracestate
        uid: applicationinsights.Tracestate
