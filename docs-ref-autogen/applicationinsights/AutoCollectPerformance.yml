### YamlMime:UniversalReference
items:
  - uid: applicationinsights.AutoCollectPerformance
    name: AutoCollectPerformance
    fullName: AutoCollectPerformance
    children:
      - applicationinsights.AutoCollectPerformance.constructor
      - applicationinsights.AutoCollectPerformance.countDependency
      - applicationinsights.AutoCollectPerformance.countException
      - applicationinsights.AutoCollectPerformance.countRequest
      - applicationinsights.AutoCollectPerformance.dispose
      - applicationinsights.AutoCollectPerformance.enable
      - applicationinsights.AutoCollectPerformance.INSTANCE
      - applicationinsights.AutoCollectPerformance.isEnabled
      - applicationinsights.AutoCollectPerformance.isInitialized
      - applicationinsights.AutoCollectPerformance.trackPerformance
    langs:
      - typeScript
    type: class
    summary: ''
    package: applicationinsights
  - uid: applicationinsights.AutoCollectPerformance.constructor
    name: 'AutoCollectPerformance(TelemetryClient, number, boolean)'
    children: []
    type: constructor
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        new AutoCollectPerformance(client: TelemetryClient, collectionInterval?:
        number, enableLiveMetricsCounters?: boolean)
      parameters:
        - id: client
          type:
            - applicationinsights.TelemetryClient
          description: ''
        - id: collectionInterval
          type:
            - number
          description: ''
          optional: true
        - id: enableLiveMetricsCounters
          type:
            - boolean
          description: >
            enable sending additional live metrics information (dependency
            metrics, exception metrics, committed memory)
          optional: true
    package: applicationinsights
  - uid: applicationinsights.AutoCollectPerformance.countDependency
    name: 'countDependency(number | string, boolean)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        static function countDependency(duration: number | string, success:
        boolean)
      parameters:
        - id: duration
          type:
            - number | string
          description: ''
        - id: success
          type:
            - boolean
          description: ''
    package: applicationinsights
  - uid: applicationinsights.AutoCollectPerformance.countException
    name: countException()
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: static function countException()
      parameters: []
    package: applicationinsights
  - uid: applicationinsights.AutoCollectPerformance.countRequest
    name: 'countRequest(http.ServerRequest, http.ServerResponse)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        static function countRequest(request: http.ServerRequest, response:
        http.ServerResponse)
      parameters:
        - id: request
          type:
            - http.ServerRequest
          description: ''
        - id: response
          type:
            - http.ServerResponse
          description: ''
    package: applicationinsights
  - uid: applicationinsights.AutoCollectPerformance.dispose
    name: dispose()
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: function dispose()
      parameters: []
    package: applicationinsights
  - uid: applicationinsights.AutoCollectPerformance.enable
    name: 'enable(boolean, number)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function enable(isEnabled: boolean, collectionInterval?: number)'
      parameters:
        - id: isEnabled
          type:
            - boolean
          description: ''
        - id: collectionInterval
          type:
            - number
          description: ''
          optional: true
    package: applicationinsights
  - uid: applicationinsights.AutoCollectPerformance.INSTANCE
    name: INSTANCE
    fullName: INSTANCE
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'static INSTANCE: AutoCollectPerformance'
      return:
        type:
          - applicationinsights.AutoCollectPerformance
    package: applicationinsights
  - uid: applicationinsights.AutoCollectPerformance.isEnabled
    name: isEnabled()
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: static function isEnabled()
      parameters: []
      return:
        type:
          - boolean
    package: applicationinsights
  - uid: applicationinsights.AutoCollectPerformance.isInitialized
    name: isInitialized()
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: function isInitialized()
      parameters: []
      return:
        type:
          - boolean
    package: applicationinsights
  - uid: applicationinsights.AutoCollectPerformance.trackPerformance
    name: trackPerformance()
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: function trackPerformance()
      parameters: []
    package: applicationinsights
references:
  - uid: applicationinsights.TelemetryClient
    name: TelemetryClient
    spec.typeScript:
      - name: TelemetryClient
        fullName: TelemetryClient
        uid: applicationinsights.TelemetryClient
  - uid: applicationinsights.AutoCollectPerformance
    name: AutoCollectPerformance
    spec.typeScript:
      - name: AutoCollectPerformance
        fullName: AutoCollectPerformance
        uid: applicationinsights.AutoCollectPerformance
