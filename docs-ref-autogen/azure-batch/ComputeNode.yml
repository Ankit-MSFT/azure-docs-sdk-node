### YamlMime:UniversalReference
items:
  - uid: azure-batch.ComputeNode
    name: ComputeNode
    fullName: ComputeNode
    children:
      - azure-batch.ComputeNode.affinityId
      - azure-batch.ComputeNode.allocationTime
      - azure-batch.ComputeNode.certificateReferences
      - azure-batch.ComputeNode.endpointConfiguration
      - azure-batch.ComputeNode.errors
      - azure-batch.ComputeNode.id
      - azure-batch.ComputeNode.ipAddress
      - azure-batch.ComputeNode.isDedicated
      - azure-batch.ComputeNode.lastBootTime
      - azure-batch.ComputeNode.nodeAgentInfo
      - azure-batch.ComputeNode.recentTasks
      - azure-batch.ComputeNode.runningTasksCount
      - azure-batch.ComputeNode.schedulingState
      - azure-batch.ComputeNode.startTask
      - azure-batch.ComputeNode.startTaskInfo
      - azure-batch.ComputeNode.state
      - azure-batch.ComputeNode.stateTransitionTime
      - azure-batch.ComputeNode.totalTasksRun
      - azure-batch.ComputeNode.totalTasksSucceeded
      - azure-batch.ComputeNode.url
      - azure-batch.ComputeNode.vmSize
    langs:
      - typeScript
    type: interface
    summary: ''
    package: azure-batch
  - uid: azure-batch.ComputeNode.affinityId
    name: affinityId
    fullName: affinityId
    children: []
    langs:
      - typeScript
    type: property
    summary: >-
      Note that this is just a soft affinity. If the target Compute Node is busy
      or

      unavailable at the time the Task is scheduled, then the Task will be
      scheduled elsewhere.
    optional: true
    syntax:
      content: 'affinityId?: string'
      return:
        type:
          - string
    package: azure-batch
  - uid: azure-batch.ComputeNode.allocationTime
    name: allocationTime
    fullName: allocationTime
    children: []
    langs:
      - typeScript
    type: property
    summary: >-
      This is the time when the Compute Node was initially allocated and doesn't
      change

      once set. It is not updated when the Compute Node is service healed or
      preempted.
    optional: true
    syntax:
      content: 'allocationTime?: Date'
      return:
        type:
          - Date
    package: azure-batch
  - uid: azure-batch.ComputeNode.certificateReferences
    name: certificateReferences
    fullName: certificateReferences
    children: []
    langs:
      - typeScript
    type: property
    summary: >-
      For Windows Nodes, the Batch service installs the Certificates to the
      specified

      Certificate store and location. For Linux Compute Nodes, the Certificates
      are stored in a

      directory inside the Task working directory and an environment variable

      AZ_BATCH_CERTIFICATES_DIR is supplied to the Task to query for this
      location. For Certificates

      with visibility of 'remoteUser', a 'certs' directory is created in the
      user's home directory

      (e.g., /home/{user-name}/certs) and Certificates are placed in that
      directory.
    optional: true
    syntax:
      content: 'certificateReferences?: CertificateReference[]'
      return:
        type:
          - 'azure-batch.CertificateReference[]'
    package: azure-batch
  - uid: azure-batch.ComputeNode.endpointConfiguration
    name: endpointConfiguration
    fullName: endpointConfiguration
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    optional: true
    syntax:
      content: 'endpointConfiguration?: ComputeNodeEndpointConfiguration'
      return:
        type:
          - azure-batch.ComputeNodeEndpointConfiguration
    package: azure-batch
  - uid: azure-batch.ComputeNode.errors
    name: errors
    fullName: errors
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    optional: true
    syntax:
      content: 'errors?: ComputeNodeError[]'
      return:
        type:
          - 'azure-batch.ComputeNodeError[]'
    package: azure-batch
  - uid: azure-batch.ComputeNode.id
    name: id
    fullName: id
    children: []
    langs:
      - typeScript
    type: property
    summary: >-
      Every Compute Node that is added to a Pool is assigned a unique ID.
      Whenever a

      Compute Node is removed from a Pool, all of its local files are deleted,
      and the ID is

      reclaimed and could be reused for new Compute Nodes.
    optional: true
    syntax:
      content: 'id?: string'
      return:
        type:
          - string
    package: azure-batch
  - uid: azure-batch.ComputeNode.ipAddress
    name: ipAddress
    fullName: ipAddress
    children: []
    langs:
      - typeScript
    type: property
    summary: >-
      Every Compute Node that is added to a Pool is assigned a unique IP
      address.

      Whenever a Compute Node is removed from a Pool, all of its local files are
      deleted, and the IP

      address is reclaimed and could be reused for new Compute Nodes.
    optional: true
    syntax:
      content: 'ipAddress?: string'
      return:
        type:
          - string
    package: azure-batch
  - uid: azure-batch.ComputeNode.isDedicated
    name: isDedicated
    fullName: isDedicated
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    optional: true
    syntax:
      content: 'isDedicated?: boolean'
      return:
        type:
          - boolean
    package: azure-batch
  - uid: azure-batch.ComputeNode.lastBootTime
    name: lastBootTime
    fullName: lastBootTime
    children: []
    langs:
      - typeScript
    type: property
    summary: This property may not be present if the Compute Node state is unusable.
    optional: true
    syntax:
      content: 'lastBootTime?: Date'
      return:
        type:
          - Date
    package: azure-batch
  - uid: azure-batch.ComputeNode.nodeAgentInfo
    name: nodeAgentInfo
    fullName: nodeAgentInfo
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    optional: true
    syntax:
      content: 'nodeAgentInfo?: NodeAgentInformation'
      return:
        type:
          - azure-batch.NodeAgentInformation
    package: azure-batch
  - uid: azure-batch.ComputeNode.recentTasks
    name: recentTasks
    fullName: recentTasks
    children: []
    langs:
      - typeScript
    type: property
    summary: >-
      This property is present only if at least one Task has run on this Compute
      Node

      since it was assigned to the Pool.
    optional: true
    syntax:
      content: 'recentTasks?: TaskInformation[]'
      return:
        type:
          - 'azure-batch.TaskInformation[]'
    package: azure-batch
  - uid: azure-batch.ComputeNode.runningTasksCount
    name: runningTasksCount
    fullName: runningTasksCount
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    optional: true
    syntax:
      content: 'runningTasksCount?: number'
      return:
        type:
          - number
    package: azure-batch
  - uid: azure-batch.ComputeNode.schedulingState
    name: schedulingState
    fullName: schedulingState
    children: []
    langs:
      - typeScript
    type: property
    summary: 'Possible values include: ''enabled'', ''disabled'''
    optional: true
    syntax:
      content: 'schedulingState?: string'
      return:
        type:
          - string
    package: azure-batch
  - uid: azure-batch.ComputeNode.startTask
    name: startTask
    fullName: startTask
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    optional: true
    syntax:
      content: 'startTask?: StartTask'
      return:
        type:
          - azure-batch.StartTask
    package: azure-batch
  - uid: azure-batch.ComputeNode.startTaskInfo
    name: startTaskInfo
    fullName: startTaskInfo
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    optional: true
    syntax:
      content: 'startTaskInfo?: StartTaskInformation'
      return:
        type:
          - azure-batch.StartTaskInformation
    package: azure-batch
  - uid: azure-batch.ComputeNode.state
    name: state
    fullName: state
    children: []
    langs:
      - typeScript
    type: property
    summary: >-
      The low-priority Compute Node has been preempted. Tasks which were running
      on the

      Compute Node when it was preempted will be rescheduled when another
      Compute Node becomes

      available. Possible values include: 'idle', 'rebooting', 'reimaging',
      'running', 'unusable',

      'creating', 'starting', 'waitingForStartTask', 'startTaskFailed',
      'unknown', 'leavingPool',

      'offline', 'preempted'
    optional: true
    syntax:
      content: 'state?: string'
      return:
        type:
          - string
    package: azure-batch
  - uid: azure-batch.ComputeNode.stateTransitionTime
    name: stateTransitionTime
    fullName: stateTransitionTime
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    optional: true
    syntax:
      content: 'stateTransitionTime?: Date'
      return:
        type:
          - Date
    package: azure-batch
  - uid: azure-batch.ComputeNode.totalTasksRun
    name: totalTasksRun
    fullName: totalTasksRun
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    optional: true
    syntax:
      content: 'totalTasksRun?: number'
      return:
        type:
          - number
    package: azure-batch
  - uid: azure-batch.ComputeNode.totalTasksSucceeded
    name: totalTasksSucceeded
    fullName: totalTasksSucceeded
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    optional: true
    syntax:
      content: 'totalTasksSucceeded?: number'
      return:
        type:
          - number
    package: azure-batch
  - uid: azure-batch.ComputeNode.url
    name: url
    fullName: url
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    optional: true
    syntax:
      content: 'url?: string'
      return:
        type:
          - string
    package: azure-batch
  - uid: azure-batch.ComputeNode.vmSize
    name: vmSize
    fullName: vmSize
    children: []
    langs:
      - typeScript
    type: property
    summary: >-
      For information about available sizes of virtual machines in Pools, see
      Choose a

      VM size for Compute Nodes in an Azure Batch Pool

      (https://docs.microsoft.com/azure/batch/batch-pool-vm-sizes).
    optional: true
    syntax:
      content: 'vmSize?: string'
      return:
        type:
          - string
    package: azure-batch
references:
  - uid: 'azure-batch.CertificateReference[]'
    name: 'CertificateReference[]'
    spec.typeScript:
      - name: CertificateReference
        fullName: CertificateReference
        uid: azure-batch.CertificateReference
      - name: '[]'
        fullName: '[]'
  - uid: azure-batch.ComputeNodeEndpointConfiguration
    name: ComputeNodeEndpointConfiguration
    spec.typeScript:
      - name: ComputeNodeEndpointConfiguration
        fullName: ComputeNodeEndpointConfiguration
        uid: azure-batch.ComputeNodeEndpointConfiguration
  - uid: 'azure-batch.ComputeNodeError[]'
    name: 'ComputeNodeError[]'
    spec.typeScript:
      - name: ComputeNodeError
        fullName: ComputeNodeError
        uid: azure-batch.ComputeNodeError
      - name: '[]'
        fullName: '[]'
  - uid: azure-batch.NodeAgentInformation
    name: NodeAgentInformation
    spec.typeScript:
      - name: NodeAgentInformation
        fullName: NodeAgentInformation
        uid: azure-batch.NodeAgentInformation
  - uid: 'azure-batch.TaskInformation[]'
    name: 'TaskInformation[]'
    spec.typeScript:
      - name: TaskInformation
        fullName: TaskInformation
        uid: azure-batch.TaskInformation
      - name: '[]'
        fullName: '[]'
  - uid: azure-batch.StartTask
    name: StartTask
    spec.typeScript:
      - name: StartTask
        fullName: StartTask
        uid: azure-batch.StartTask
  - uid: azure-batch.StartTaskInformation
    name: StartTaskInformation
    spec.typeScript:
      - name: StartTaskInformation
        fullName: StartTaskInformation
        uid: azure-batch.StartTaskInformation
