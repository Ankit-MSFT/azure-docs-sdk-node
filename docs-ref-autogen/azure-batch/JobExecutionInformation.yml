### YamlMime:UniversalReference
items:
  - uid: azure-batch.JobExecutionInformation
    name: JobExecutionInformation
    fullName: JobExecutionInformation
    children:
      - azure-batch.JobExecutionInformation.endTime
      - azure-batch.JobExecutionInformation.poolId
      - azure-batch.JobExecutionInformation.schedulingError
      - azure-batch.JobExecutionInformation.startTime
      - azure-batch.JobExecutionInformation.terminateReason
    langs:
      - typeScript
    type: interface
    summary: ''
    package: azure-batch
  - uid: azure-batch.JobExecutionInformation.endTime
    name: endTime
    fullName: endTime
    children: []
    langs:
      - typeScript
    type: property
    summary: This property is set only if the Job is in the completed state.
    optional: true
    syntax:
      content: 'endTime?: Date'
      return:
        type:
          - Date
    package: azure-batch
  - uid: azure-batch.JobExecutionInformation.poolId
    name: poolId
    fullName: poolId
    children: []
    langs:
      - typeScript
    type: property
    summary: >-
      This element contains the actual Pool where the Job is assigned. When you
      get Job

      details from the service, they also contain a poolInfo element, which
      contains the Pool

      configuration data from when the Job was added or updated. That poolInfo
      element may also

      contain a poolId element. If it does, the two IDs are the same. If it does
      not, it means the

      Job ran on an auto Pool, and this property contains the ID of that auto
      Pool.
    optional: true
    syntax:
      content: 'poolId?: string'
      return:
        type:
          - string
    package: azure-batch
  - uid: azure-batch.JobExecutionInformation.schedulingError
    name: schedulingError
    fullName: schedulingError
    children: []
    langs:
      - typeScript
    type: property
    summary: This property is not set if there was no error starting the Job.
    optional: true
    syntax:
      content: 'schedulingError?: JobSchedulingError'
      return:
        type:
          - azure-batch.JobSchedulingError
    package: azure-batch
  - uid: azure-batch.JobExecutionInformation.startTime
    name: startTime
    fullName: startTime
    children: []
    langs:
      - typeScript
    type: property
    summary: This is the time at which the Job was created.
    syntax:
      content: 'startTime: Date'
      return:
        type:
          - Date
    package: azure-batch
  - uid: azure-batch.JobExecutionInformation.terminateReason
    name: terminateReason
    fullName: terminateReason
    children: []
    langs:
      - typeScript
    type: property
    summary: >-
      This property is set only if the Job is in the completed state. If the
      Batch

      service terminates the Job, it sets the reason as follows: JMComplete -
      the Job Manager Task

      completed, and killJobOnCompletion was set to true. MaxWallClockTimeExpiry
      - the Job reached

      its maxWallClockTime constraint. TerminateJobSchedule - the Job ran as
      part of a schedule, and

      the schedule terminated. AllTasksComplete - the Job's onAllTasksComplete
      attribute is set to

      terminatejob, and all Tasks in the Job are complete. TaskFailed - the
      Job's onTaskFailure

      attribute is set to performExitOptionsJobAction, and a Task in the Job
      failed with an exit

      condition that specified a jobAction of terminatejob. Any other string is
      a user-defined

      reason specified in a call to the 'Terminate a Job' operation.
    optional: true
    syntax:
      content: 'terminateReason?: string'
      return:
        type:
          - string
    package: azure-batch
references:
  - uid: azure-batch.JobSchedulingError
    name: JobSchedulingError
    spec.typeScript:
      - name: JobSchedulingError
        fullName: JobSchedulingError
        uid: azure-batch.JobSchedulingError
