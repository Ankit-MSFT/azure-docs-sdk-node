### YamlMime:UniversalReference
items:
  - uid: azure-batch.JobPatchParameter
    name: JobPatchParameter
    fullName: JobPatchParameter
    children:
      - azure-batch.JobPatchParameter.constraints
      - azure-batch.JobPatchParameter.metadata
      - azure-batch.JobPatchParameter.onAllTasksComplete
      - azure-batch.JobPatchParameter.poolInfo
      - azure-batch.JobPatchParameter.priority
    langs:
      - typeScript
    type: interface
    summary: ''
    package: azure-batch
  - uid: azure-batch.JobPatchParameter.constraints
    name: constraints
    fullName: constraints
    children: []
    langs:
      - typeScript
    type: property
    summary: 'If omitted, the existing execution constraints are left unchanged.'
    optional: true
    syntax:
      content: 'constraints?: JobConstraints'
      return:
        type:
          - azure-batch.JobConstraints
    package: azure-batch
  - uid: azure-batch.JobPatchParameter.metadata
    name: metadata
    fullName: metadata
    children: []
    langs:
      - typeScript
    type: property
    summary: 'If omitted, the existing Job metadata is left unchanged.'
    optional: true
    syntax:
      content: 'metadata?: MetadataItem[]'
      return:
        type:
          - 'azure-batch.MetadataItem[]'
    package: azure-batch
  - uid: azure-batch.JobPatchParameter.onAllTasksComplete
    name: onAllTasksComplete
    fullName: onAllTasksComplete
    children: []
    langs:
      - typeScript
    type: property
    summary: >-
      If omitted, the completion behavior is left unchanged. You may not change
      the

      value from terminatejob to noaction - that is, once you have engaged
      automatic Job

      termination, you cannot turn it off again. If you try to do this, the
      request fails with an

      'invalid property value' error response; if you are calling the REST API
      directly, the HTTP

      status code is 400 (Bad Request). Possible values include: 'noAction',
      'terminateJob'
    optional: true
    syntax:
      content: 'onAllTasksComplete?: string'
      return:
        type:
          - string
    package: azure-batch
  - uid: azure-batch.JobPatchParameter.poolInfo
    name: poolInfo
    fullName: poolInfo
    children: []
    langs:
      - typeScript
    type: property
    summary: >-
      You may change the Pool for a Job only when the Job is disabled. The Patch
      Job

      call will fail if you include the poolInfo element and the Job is not
      disabled. If you specify

      an autoPoolSpecification specification in the poolInfo, only the keepAlive
      property can be

      updated, and then only if the auto Pool has a poolLifetimeOption of Job.
      If omitted, the Job

      continues to run on its current Pool.
    optional: true
    syntax:
      content: 'poolInfo?: PoolInformation'
      return:
        type:
          - azure-batch.PoolInformation
    package: azure-batch
  - uid: azure-batch.JobPatchParameter.priority
    name: priority
    fullName: priority
    children: []
    langs:
      - typeScript
    type: property
    summary: >-
      Priority values can range from -1000 to 1000, with -1000 being the lowest

      priority and 1000 being the highest priority. If omitted, the priority of
      the Job is left

      unchanged.
    optional: true
    syntax:
      content: 'priority?: number'
      return:
        type:
          - number
    package: azure-batch
references:
  - uid: azure-batch.JobConstraints
    name: JobConstraints
    spec.typeScript:
      - name: JobConstraints
        fullName: JobConstraints
        uid: azure-batch.JobConstraints
  - uid: 'azure-batch.MetadataItem[]'
    name: 'MetadataItem[]'
    spec.typeScript:
      - name: MetadataItem
        fullName: MetadataItem
        uid: azure-batch.MetadataItem
      - name: '[]'
        fullName: '[]'
  - uid: azure-batch.PoolInformation
    name: PoolInformation
    spec.typeScript:
      - name: PoolInformation
        fullName: PoolInformation
        uid: azure-batch.PoolInformation
