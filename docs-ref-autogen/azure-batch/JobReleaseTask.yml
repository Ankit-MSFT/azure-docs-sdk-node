### YamlMime:UniversalReference
items:
  - uid: azure-batch.JobReleaseTask
    name: JobReleaseTask
    fullName: JobReleaseTask
    children:
      - azure-batch.JobReleaseTask.commandLine
      - azure-batch.JobReleaseTask.containerSettings
      - azure-batch.JobReleaseTask.environmentSettings
      - azure-batch.JobReleaseTask.id
      - azure-batch.JobReleaseTask.maxWallClockTime
      - azure-batch.JobReleaseTask.resourceFiles
      - azure-batch.JobReleaseTask.retentionTime
      - azure-batch.JobReleaseTask.userIdentity
    langs:
      - typeScript
    type: interface
    summary: >-
      The Job Release task runs when the job ends, because of one of the
      following: The

      user calls the Terminate Job API, or the Delete Job API while the job is
      still active, the job's

      maximum wall clock time constraint is reached, and the job is still
      active, or the job's Job

      Manager task completed, and the job is configured to terminate when the
      Job Manager completes.

      The Job Release task runs on each compute node where tasks of the job have
      run and the Job

      Preparation task ran and completed. If you reimage a compute node after it
      has run the Job

      Preparation task, and the job ends without any further tasks of the job
      running on that compute

      node (and hence the Job Preparation task does not re-run), then the Job
      Release task does not

      run on that node. If a compute node reboots while the Job Release task is
      still running, the Job

      Release task runs again when the compute node starts up. The job is not
      marked as complete until

      all Job Release tasks have completed. The Job Release task runs in the
      background. It does not

      occupy a scheduling slot; that is, it does not count towards the
      maxTasksPerNode limit specified

      on the pool.
    package: azure-batch
  - uid: azure-batch.JobReleaseTask.commandLine
    name: commandLine
    fullName: commandLine
    children: []
    langs:
      - typeScript
    type: property
    summary: >-
      The command line does not run under a shell, and therefore cannot take
      advantage

      of shell features such as environment variable expansion. If you want to
      take advantage of

      such features, you should invoke the shell in the command line, for
      example using "cmd /c

      MyCommand" in Windows or "/bin/sh -c MyCommand" in Linux. If the command
      line refers to file

      paths, it should use a relative path (relative to the task working
      directory), or use the

      Batch provided environment variable

      (https://docs.microsoft.com/en-us/azure/batch/batch-compute-node-environment-variables).
    syntax:
      content: 'commandLine: string'
      return:
        type:
          - string
    package: azure-batch
  - uid: azure-batch.JobReleaseTask.containerSettings
    name: containerSettings
    fullName: containerSettings
    children: []
    langs:
      - typeScript
    type: property
    summary: >-
      When this is specified, all directories recursively below the

      AZ_BATCH_NODE_ROOT_DIR (the root of Azure Batch directories on the node)
      are mapped into the

      container, all task environment variables are mapped into the container,
      and the task command

      line is executed in the container.
    optional: true
    syntax:
      content: 'containerSettings?: TaskContainerSettings'
      return:
        type:
          - azure-batch.TaskContainerSettings
    package: azure-batch
  - uid: azure-batch.JobReleaseTask.environmentSettings
    name: environmentSettings
    fullName: environmentSettings
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    optional: true
    syntax:
      content: 'environmentSettings?: EnvironmentSetting[]'
      return:
        type:
          - 'azure-batch.EnvironmentSetting[]'
    package: azure-batch
  - uid: azure-batch.JobReleaseTask.id
    name: id
    fullName: id
    children: []
    langs:
      - typeScript
    type: property
    summary: >-
      The ID can contain any combination of alphanumeric characters including
      hyphens

      and underscores and cannot contain more than 64 characters. If you do not
      specify this

      property, the Batch service assigns a default value of 'jobrelease'. No
      other task in the job

      can have the same ID as the Job Release task. If you try to submit a task
      with the same id,

      the Batch service rejects the request with error code
      TaskIdSameAsJobReleaseTask; if you are

      calling the REST API directly, the HTTP status code is 409 (Conflict).
    optional: true
    syntax:
      content: 'id?: string'
      return:
        type:
          - string
    package: azure-batch
  - uid: azure-batch.JobReleaseTask.maxWallClockTime
    name: maxWallClockTime
    fullName: maxWallClockTime
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    optional: true
    syntax:
      content: 'maxWallClockTime?: Duration'
      return:
        type:
          - Duration
    package: azure-batch
  - uid: azure-batch.JobReleaseTask.resourceFiles
    name: resourceFiles
    fullName: resourceFiles
    children: []
    langs:
      - typeScript
    type: property
    summary: >-
      Files listed under this element are located in the task's working
      directory.
    optional: true
    syntax:
      content: 'resourceFiles?: ResourceFile[]'
      return:
        type:
          - 'azure-batch.ResourceFile[]'
    package: azure-batch
  - uid: azure-batch.JobReleaseTask.retentionTime
    name: retentionTime
    fullName: retentionTime
    children: []
    langs:
      - typeScript
    type: property
    summary: >-
      The default is 7 days, i.e. the task directory will be retained for 7 days
      unless

      the compute node is removed or the job is deleted.
    optional: true
    syntax:
      content: 'retentionTime?: Duration'
      return:
        type:
          - Duration
    package: azure-batch
  - uid: azure-batch.JobReleaseTask.userIdentity
    name: userIdentity
    fullName: userIdentity
    children: []
    langs:
      - typeScript
    type: property
    summary: 'If omitted, the task runs as a non-administrative user unique to the task.'
    optional: true
    syntax:
      content: 'userIdentity?: UserIdentity'
      return:
        type:
          - azure-batch.UserIdentity
    package: azure-batch
references:
  - uid: azure-batch.TaskContainerSettings
    name: TaskContainerSettings
    spec.typeScript:
      - name: TaskContainerSettings
        fullName: TaskContainerSettings
        uid: azure-batch.TaskContainerSettings
  - uid: 'azure-batch.EnvironmentSetting[]'
    name: 'EnvironmentSetting[]'
    spec.typeScript:
      - name: EnvironmentSetting
        fullName: EnvironmentSetting
        uid: azure-batch.EnvironmentSetting
      - name: '[]'
        fullName: '[]'
  - uid: 'azure-batch.ResourceFile[]'
    name: 'ResourceFile[]'
    spec.typeScript:
      - name: ResourceFile
        fullName: ResourceFile
        uid: azure-batch.ResourceFile
      - name: '[]'
        fullName: '[]'
  - uid: azure-batch.UserIdentity
    name: UserIdentity
    spec.typeScript:
      - name: UserIdentity
        fullName: UserIdentity
        uid: azure-batch.UserIdentity
