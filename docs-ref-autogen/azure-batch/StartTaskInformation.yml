### YamlMime:UniversalReference
items:
  - uid: azure-batch.StartTaskInformation
    name: StartTaskInformation
    fullName: StartTaskInformation
    children:
      - azure-batch.StartTaskInformation.containerInfo
      - azure-batch.StartTaskInformation.endTime
      - azure-batch.StartTaskInformation.exitCode
      - azure-batch.StartTaskInformation.failureInfo
      - azure-batch.StartTaskInformation.lastRetryTime
      - azure-batch.StartTaskInformation.result
      - azure-batch.StartTaskInformation.retryCount
      - azure-batch.StartTaskInformation.startTime
      - azure-batch.StartTaskInformation.state
    langs:
      - typeScript
    type: interface
    summary: ''
    package: azure-batch
  - uid: azure-batch.StartTaskInformation.containerInfo
    name: containerInfo
    fullName: containerInfo
    children: []
    langs:
      - typeScript
    type: property
    summary: This property is set only if the Task runs in a container context.
    optional: true
    syntax:
      content: 'containerInfo?: TaskContainerExecutionInformation'
      return:
        type:
          - azure-batch.TaskContainerExecutionInformation
    package: azure-batch
  - uid: azure-batch.StartTaskInformation.endTime
    name: endTime
    fullName: endTime
    children: []
    langs:
      - typeScript
    type: property
    summary: >-
      This is the end time of the most recent run of the StartTask, if that run
      has

      completed (even if that run failed and a retry is pending). This element
      is not present if the

      StartTask is currently running.
    optional: true
    syntax:
      content: 'endTime?: Date'
      return:
        type:
          - Date
    package: azure-batch
  - uid: azure-batch.StartTaskInformation.exitCode
    name: exitCode
    fullName: exitCode
    children: []
    langs:
      - typeScript
    type: property
    summary: >-
      This property is set only if the StartTask is in the completed state. In
      general,

      the exit code for a process reflects the specific convention implemented
      by the application

      developer for that process. If you use the exit code value to make
      decisions in your code, be

      sure that you know the exit code convention used by the application
      process. However, if the

      Batch service terminates the StartTask (due to timeout, or user
      termination via the API) you

      may see an operating system-defined exit code.
    optional: true
    syntax:
      content: 'exitCode?: number'
      return:
        type:
          - number
    package: azure-batch
  - uid: azure-batch.StartTaskInformation.failureInfo
    name: failureInfo
    fullName: failureInfo
    children: []
    langs:
      - typeScript
    type: property
    summary: >-
      This property is set only if the Task is in the completed state and
      encountered a

      failure.
    optional: true
    syntax:
      content: 'failureInfo?: TaskFailureInformation'
      return:
        type:
          - azure-batch.TaskFailureInformation
    package: azure-batch
  - uid: azure-batch.StartTaskInformation.lastRetryTime
    name: lastRetryTime
    fullName: lastRetryTime
    children: []
    langs:
      - typeScript
    type: property
    summary: >-
      This element is present only if the Task was retried (i.e. retryCount is

      nonzero). If present, this is typically the same as startTime, but may be
      different if the

      Task has been restarted for reasons other than retry; for example, if the
      Compute Node was

      rebooted during a retry, then the startTime is updated but the
      lastRetryTime is not.
    optional: true
    syntax:
      content: 'lastRetryTime?: Date'
      return:
        type:
          - Date
    package: azure-batch
  - uid: azure-batch.StartTaskInformation.result
    name: result
    fullName: result
    children: []
    langs:
      - typeScript
    type: property
    summary: >-
      If the value is 'failed', then the details of the failure can be found in
      the

      failureInfo property. Possible values include: 'success', 'failure'
    optional: true
    syntax:
      content: 'result?: string'
      return:
        type:
          - string
    package: azure-batch
  - uid: azure-batch.StartTaskInformation.retryCount
    name: retryCount
    fullName: retryCount
    children: []
    langs:
      - typeScript
    type: property
    summary: >-
      Task application failures (non-zero exit code) are retried, pre-processing
      errors

      (the Task could not be run) and file upload errors are not retried. The
      Batch service will

      retry the Task up to the limit specified by the constraints.
    syntax:
      content: 'retryCount: number'
      return:
        type:
          - number
    package: azure-batch
  - uid: azure-batch.StartTaskInformation.startTime
    name: startTime
    fullName: startTime
    children: []
    langs:
      - typeScript
    type: property
    summary: >-
      This value is reset every time the Task is restarted or retried (that is,
      this is

      the most recent time at which the StartTask started running).
    syntax:
      content: 'startTime: Date'
      return:
        type:
          - Date
    package: azure-batch
  - uid: azure-batch.StartTaskInformation.state
    name: state
    fullName: state
    children: []
    langs:
      - typeScript
    type: property
    summary: 'Possible values include: ''running'', ''completed'''
    syntax:
      content: 'state: string'
      return:
        type:
          - string
    package: azure-batch
references:
  - uid: azure-batch.TaskContainerExecutionInformation
    name: TaskContainerExecutionInformation
    spec.typeScript:
      - name: TaskContainerExecutionInformation
        fullName: TaskContainerExecutionInformation
        uid: azure-batch.TaskContainerExecutionInformation
  - uid: azure-batch.TaskFailureInformation
    name: TaskFailureInformation
    spec.typeScript:
      - name: TaskFailureInformation
        fullName: TaskFailureInformation
        uid: azure-batch.TaskFailureInformation
