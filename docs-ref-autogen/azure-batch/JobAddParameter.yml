### YamlMime:UniversalReference
items:
  - uid: azure-batch.JobAddParameter
    name: JobAddParameter
    fullName: JobAddParameter
    children:
      - azure-batch.JobAddParameter.commonEnvironmentSettings
      - azure-batch.JobAddParameter.constraints
      - azure-batch.JobAddParameter.displayName
      - azure-batch.JobAddParameter.id
      - azure-batch.JobAddParameter.jobManagerTask
      - azure-batch.JobAddParameter.jobPreparationTask
      - azure-batch.JobAddParameter.jobReleaseTask
      - azure-batch.JobAddParameter.metadata
      - azure-batch.JobAddParameter.networkConfiguration
      - azure-batch.JobAddParameter.onAllTasksComplete
      - azure-batch.JobAddParameter.onTaskFailure
      - azure-batch.JobAddParameter.poolInfo
      - azure-batch.JobAddParameter.priority
      - azure-batch.JobAddParameter.usesTaskDependencies
    langs:
      - typeScript
    type: interface
    summary: ''
    package: azure-batch
  - uid: azure-batch.JobAddParameter.commonEnvironmentSettings
    name: commonEnvironmentSettings
    fullName: commonEnvironmentSettings
    children: []
    langs:
      - typeScript
    type: property
    summary: >-
      Individual Tasks can override an environment setting specified here by
      specifying

      the same setting name with a different value.
    optional: true
    syntax:
      content: 'commonEnvironmentSettings?: EnvironmentSetting[]'
      return:
        type:
          - 'azure-batch.EnvironmentSetting[]'
    package: azure-batch
  - uid: azure-batch.JobAddParameter.constraints
    name: constraints
    fullName: constraints
    children: []
    langs:
      - typeScript
    type: property
    summary: The execution constraints for the Job.
    optional: true
    syntax:
      content: 'constraints?: JobConstraints'
      return:
        type:
          - azure-batch.JobConstraints
    package: azure-batch
  - uid: azure-batch.JobAddParameter.displayName
    name: displayName
    fullName: displayName
    children: []
    langs:
      - typeScript
    type: property
    summary: >-
      The display name need not be unique and can contain any Unicode characters
      up to

      a maximum length of 1024.
    optional: true
    syntax:
      content: 'displayName?: string'
      return:
        type:
          - string
    package: azure-batch
  - uid: azure-batch.JobAddParameter.id
    name: id
    fullName: id
    children: []
    langs:
      - typeScript
    type: property
    summary: >-
      The ID can contain any combination of alphanumeric characters including
      hyphens

      and underscores, and cannot contain more than 64 characters. The ID is
      case-preserving and

      case-insensitive (that is, you may not have two IDs within an Account that
      differ only by

      case).
    syntax:
      content: 'id: string'
      return:
        type:
          - string
    package: azure-batch
  - uid: azure-batch.JobAddParameter.jobManagerTask
    name: jobManagerTask
    fullName: jobManagerTask
    children: []
    langs:
      - typeScript
    type: property
    summary: >-
      If the Job does not specify a Job Manager Task, the user must explicitly
      add

      Tasks to the Job. If the Job does specify a Job Manager Task, the Batch
      service creates the

      Job Manager Task when the Job is created, and will try to schedule the Job
      Manager Task before

      scheduling other Tasks in the Job. The Job Manager Task's typical purpose
      is to control and/or

      monitor Job execution, for example by deciding what additional Tasks to
      run, determining when

      the work is complete, etc. (However, a Job Manager Task is not restricted
      to these activities

      - it is a fully-fledged Task in the system and perform whatever actions
      are required for the

      Job.) For example, a Job Manager Task might download a file specified as a
      parameter, analyze

      the contents of that file and submit additional Tasks based on those
      contents.
    optional: true
    syntax:
      content: 'jobManagerTask?: JobManagerTask'
      return:
        type:
          - azure-batch.JobManagerTask
    package: azure-batch
  - uid: azure-batch.JobAddParameter.jobPreparationTask
    name: jobPreparationTask
    fullName: jobPreparationTask
    children: []
    langs:
      - typeScript
    type: property
    summary: >-
      If a Job has a Job Preparation Task, the Batch service will run the Job

      Preparation Task on a Node before starting any Tasks of that Job on that
      Compute Node.
    optional: true
    syntax:
      content: 'jobPreparationTask?: JobPreparationTask'
      return:
        type:
          - azure-batch.JobPreparationTask
    package: azure-batch
  - uid: azure-batch.JobAddParameter.jobReleaseTask
    name: jobReleaseTask
    fullName: jobReleaseTask
    children: []
    langs:
      - typeScript
    type: property
    summary: >-
      A Job Release Task cannot be specified without also specifying a Job
      Preparation

      Task for the Job. The Batch service runs the Job Release Task on the Nodes
      that have run the

      Job Preparation Task. The primary purpose of the Job Release Task is to
      undo changes to

      Compute Nodes made by the Job Preparation Task. Example activities include
      deleting local

      files, or shutting down services that were started as part of Job
      preparation.
    optional: true
    syntax:
      content: 'jobReleaseTask?: JobReleaseTask'
      return:
        type:
          - azure-batch.JobReleaseTask
    package: azure-batch
  - uid: azure-batch.JobAddParameter.metadata
    name: metadata
    fullName: metadata
    children: []
    langs:
      - typeScript
    type: property
    summary: >-
      The Batch service does not assign any meaning to metadata; it is solely
      for the

      use of user code.
    optional: true
    syntax:
      content: 'metadata?: MetadataItem[]'
      return:
        type:
          - 'azure-batch.MetadataItem[]'
    package: azure-batch
  - uid: azure-batch.JobAddParameter.networkConfiguration
    name: networkConfiguration
    fullName: networkConfiguration
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    optional: true
    syntax:
      content: 'networkConfiguration?: JobNetworkConfiguration'
      return:
        type:
          - azure-batch.JobNetworkConfiguration
    package: azure-batch
  - uid: azure-batch.JobAddParameter.onAllTasksComplete
    name: onAllTasksComplete
    fullName: onAllTasksComplete
    children: []
    langs:
      - typeScript
    type: property
    summary: >-
      Note that if a Job contains no Tasks, then all Tasks are considered
      complete.

      This option is therefore most commonly used with a Job Manager task; if
      you want to use

      automatic Job termination without a Job Manager, you should initially set
      onAllTasksComplete

      to noaction and update the Job properties to set onAllTasksComplete to
      terminatejob once you

      have finished adding Tasks. The default is noaction. Possible values
      include: 'noAction',

      'terminateJob'
    optional: true
    syntax:
      content: 'onAllTasksComplete?: string'
      return:
        type:
          - string
    package: azure-batch
  - uid: azure-batch.JobAddParameter.onTaskFailure
    name: onTaskFailure
    fullName: onTaskFailure
    children: []
    langs:
      - typeScript
    type: property
    summary: >-
      A Task is considered to have failed if has a failureInfo. A failureInfo is
      set if

      the Task completes with a non-zero exit code after exhausting its retry
      count, or if there was

      an error starting the Task, for example due to a resource file download
      error. The default is

      noaction. Possible values include: 'noAction',
      'performExitOptionsJobAction'
    optional: true
    syntax:
      content: 'onTaskFailure?: string'
      return:
        type:
          - string
    package: azure-batch
  - uid: azure-batch.JobAddParameter.poolInfo
    name: poolInfo
    fullName: poolInfo
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'poolInfo: PoolInformation'
      return:
        type:
          - azure-batch.PoolInformation
    package: azure-batch
  - uid: azure-batch.JobAddParameter.priority
    name: priority
    fullName: priority
    children: []
    langs:
      - typeScript
    type: property
    summary: |-
      Priority values can range from -1000 to 1000, with -1000 being the lowest
      priority and 1000 being the highest priority. The default value is 0.
    optional: true
    syntax:
      content: 'priority?: number'
      return:
        type:
          - number
    package: azure-batch
  - uid: azure-batch.JobAddParameter.usesTaskDependencies
    name: usesTaskDependencies
    fullName: usesTaskDependencies
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    optional: true
    syntax:
      content: 'usesTaskDependencies?: boolean'
      return:
        type:
          - boolean
    package: azure-batch
references:
  - uid: 'azure-batch.EnvironmentSetting[]'
    name: 'EnvironmentSetting[]'
    spec.typeScript:
      - name: EnvironmentSetting
        fullName: EnvironmentSetting
        uid: azure-batch.EnvironmentSetting
      - name: '[]'
        fullName: '[]'
  - uid: azure-batch.JobConstraints
    name: JobConstraints
    spec.typeScript:
      - name: JobConstraints
        fullName: JobConstraints
        uid: azure-batch.JobConstraints
  - uid: azure-batch.JobManagerTask
    name: JobManagerTask
    spec.typeScript:
      - name: JobManagerTask
        fullName: JobManagerTask
        uid: azure-batch.JobManagerTask
  - uid: azure-batch.JobPreparationTask
    name: JobPreparationTask
    spec.typeScript:
      - name: JobPreparationTask
        fullName: JobPreparationTask
        uid: azure-batch.JobPreparationTask
  - uid: azure-batch.JobReleaseTask
    name: JobReleaseTask
    spec.typeScript:
      - name: JobReleaseTask
        fullName: JobReleaseTask
        uid: azure-batch.JobReleaseTask
  - uid: 'azure-batch.MetadataItem[]'
    name: 'MetadataItem[]'
    spec.typeScript:
      - name: MetadataItem
        fullName: MetadataItem
        uid: azure-batch.MetadataItem
      - name: '[]'
        fullName: '[]'
  - uid: azure-batch.JobNetworkConfiguration
    name: JobNetworkConfiguration
    spec.typeScript:
      - name: JobNetworkConfiguration
        fullName: JobNetworkConfiguration
        uid: azure-batch.JobNetworkConfiguration
  - uid: azure-batch.PoolInformation
    name: PoolInformation
    spec.typeScript:
      - name: PoolInformation
        fullName: PoolInformation
        uid: azure-batch.PoolInformation
