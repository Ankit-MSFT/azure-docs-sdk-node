### YamlMime:UniversalReference
items:
  - uid: azure-batch.MultiInstanceSettings
    name: MultiInstanceSettings
    fullName: MultiInstanceSettings
    children:
      - azure-batch.MultiInstanceSettings.commonResourceFiles
      - azure-batch.MultiInstanceSettings.coordinationCommandLine
      - azure-batch.MultiInstanceSettings.numberOfInstances
    langs:
      - typeScript
    type: interface
    summary: Multi-instance tasks are commonly used to support MPI tasks.
    package: azure-batch
  - uid: azure-batch.MultiInstanceSettings.commonResourceFiles
    name: commonResourceFiles
    fullName: commonResourceFiles
    children: []
    langs:
      - typeScript
    type: property
    summary: >-
      The difference between common resource files and task resource files is
      that

      common resource files are downloaded for all subtasks including the
      primary, whereas task

      resource files are downloaded only for the primary. Also note that these
      resource files are

      not downloaded to the task working directory, but instead are downloaded
      to the task root

      directory (one directory above the working directory).  There is a maximum
      size for the list

      of resource files.  When the max size is exceeded, the request will fail
      and the response

      error code will be RequestEntityTooLarge. If this occurs, the collection
      of ResourceFiles must

      be reduced in size. This can be achieved using .zip files, Application
      Packages, or Docker

      Containers.
    optional: true
    syntax:
      content: 'commonResourceFiles?: ResourceFile[]'
      return:
        type:
          - 'azure-batch.ResourceFile[]'
    package: azure-batch
  - uid: azure-batch.MultiInstanceSettings.coordinationCommandLine
    name: coordinationCommandLine
    fullName: coordinationCommandLine
    children: []
    langs:
      - typeScript
    type: property
    summary: >-
      A typical coordination command line launches a background service and
      verifies

      that the service is ready to process inter-node messages.
    syntax:
      content: 'coordinationCommandLine: string'
      return:
        type:
          - string
    package: azure-batch
  - uid: azure-batch.MultiInstanceSettings.numberOfInstances
    name: numberOfInstances
    fullName: numberOfInstances
    children: []
    langs:
      - typeScript
    type: property
    summary: 'If omitted, the default is 1.'
    optional: true
    syntax:
      content: 'numberOfInstances?: number'
      return:
        type:
          - number
    package: azure-batch
references:
  - uid: 'azure-batch.ResourceFile[]'
    name: 'ResourceFile[]'
    spec.typeScript:
      - name: ResourceFile
        fullName: ResourceFile
        uid: azure-batch.ResourceFile
      - name: '[]'
        fullName: '[]'
