### YamlMime:UniversalReference
items:
  - uid: azure-batch.ExitOptions
    name: ExitOptions
    fullName: ExitOptions
    children:
      - azure-batch.ExitOptions.dependencyAction
      - azure-batch.ExitOptions.jobAction
    langs:
      - typeScript
    type: interface
    summary: ''
    package: azure-batch
  - uid: azure-batch.ExitOptions.dependencyAction
    name: dependencyAction
    fullName: dependencyAction
    children: []
    langs:
      - typeScript
    type: property
    summary: >-
      Possible values are 'satisfy' (allowing dependent tasks to progress) and
      'block'

      (dependent tasks continue to wait). Batch does not yet support
      cancellation of dependent

      tasks. Possible values include: 'satisfy', 'block'
    optional: true
    syntax:
      content: 'dependencyAction?: string'
      return:
        type:
          - string
    package: azure-batch
  - uid: azure-batch.ExitOptions.jobAction
    name: jobAction
    fullName: jobAction
    children: []
    langs:
      - typeScript
    type: property
    summary: >-
      The default is none for exit code 0 and terminate for all other exit
      conditions.

      If the Job's onTaskFailed property is noaction, then specifying this
      property returns an error

      and the add Task request fails with an invalid property value error; if
      you are calling the

      REST API directly, the HTTP status code is 400 (Bad Request). Possible
      values include: 'none',

      'disable', 'terminate'
    optional: true
    syntax:
      content: 'jobAction?: string'
      return:
        type:
          - string
    package: azure-batch
