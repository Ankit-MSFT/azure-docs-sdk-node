### YamlMime:UniversalReference
items:
  - uid: azure-arm-batchai.Clusters
    id: azure-arm-batchai.Clusters
    name: Clusters
    summary: Class representing a Clusters.
    fullName: azure-arm-batchai.Clusters
    type: Class
    children:
      - 'azure-arm-batchai.Clusters.#ctor'
      - 'azure-arm-batchai.Clusters#createWithHttpOperationResponse'
      - 'azure-arm-batchai.Clusters#create'
      - 'azure-arm-batchai.Clusters#updateWithHttpOperationResponse'
      - 'azure-arm-batchai.Clusters#update'
      - 'azure-arm-batchai.Clusters#deleteMethodWithHttpOperationResponse'
      - 'azure-arm-batchai.Clusters#deleteMethod'
      - 'azure-arm-batchai.Clusters#getWithHttpOperationResponse'
      - 'azure-arm-batchai.Clusters#get'
      - >-
        azure-arm-batchai.Clusters#listRemoteLoginInformationWithHttpOperationResponse
      - 'azure-arm-batchai.Clusters#listRemoteLoginInformation'
      - 'azure-arm-batchai.Clusters#listByWorkspaceWithHttpOperationResponse'
      - 'azure-arm-batchai.Clusters#listByWorkspace'
      - 'azure-arm-batchai.Clusters#beginCreateWithHttpOperationResponse'
      - 'azure-arm-batchai.Clusters#beginCreate'
      - 'azure-arm-batchai.Clusters#beginDeleteMethodWithHttpOperationResponse'
      - 'azure-arm-batchai.Clusters#beginDeleteMethod'
      - >-
        azure-arm-batchai.Clusters#listRemoteLoginInformationNextWithHttpOperationResponse
      - 'azure-arm-batchai.Clusters#listRemoteLoginInformationNext'
      - 'azure-arm-batchai.Clusters#listByWorkspaceNextWithHttpOperationResponse'
      - 'azure-arm-batchai.Clusters#listByWorkspaceNext'
    langs:
      - js
  - id: 'azure-arm-batchai.Clusters.#ctor'
    uid: 'azure-arm-batchai.Clusters.#ctor'
    parent: azure-arm-batchai.Clusters
    name: Clusters(client)
    fullName: azure-arm-batchai.Clusters.Clusters(client)
    summary: Create a Clusters.
    type: Constructor
    syntax:
      parameters:
        - id: client
          type:
            - undefinedBatchAIManagementClient
          description: Reference to the service client.
      content: new Clusters(client)
    langs:
      - js
  - uid: 'azure-arm-batchai.Clusters#createWithHttpOperationResponse'
    id: 'azure-arm-batchai.Clusters#createWithHttpOperationResponse'
    parent: azure-arm-batchai.Clusters
    name: >-
      createWithHttpOperationResponse(resourceGroupName, workspaceName,
      clusterName, parameters, options)
    summary: Creates a Cluster in the given Workspace.
    fullName: >-
      azure-arm-batchai.Clusters.createWithHttpOperationResponse(resourceGroupName,
      workspaceName, clusterName, parameters, options)
    tags:
      - originalTitle: resolve
        title: resolve
        text: '{HttpOperationResponse<Cluster>} - The deserialized result object.'
        value: '{HttpOperationResponse<Cluster>} - The deserialized result object.'
      - originalTitle: reject
        title: reject
        text: '{Error} - The error object.'
        value: '{Error} - The error object.'
    type: Function
    syntax:
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |-
            Name of the resource group to which the
            resource belongs.
        - id: workspaceName
          type:
            - string
          description: >-
            The name of the workspace. Workspace names can

            only contain a combination of alphanumeric characters along with
            dash (-)

            and underscore (_). The name must be from 1 through 64 characters
            long.
        - id: clusterName
          type:
            - string
          description: >-
            The name of the cluster within the specified

            resource group. Cluster names can only contain a combination of
            alphanumeric

            characters along with dash (-) and underscore (_). The name must be
            from 1

            through 64 characters long.
        - id: parameters
          type:
            - object
          description: |-
            The parameters to provide for the Cluster
            creation.
        - id: parameters.vmSize
          type:
            - string
          description: >-
            VM size. The size of the virtual machines

            in the cluster. All nodes in a cluster have the same VM size. For

            information about available VM sizes for clusters using images from
            the

            Virtual Machines Marketplace see Sizes for Virtual Machines (Linux).
            Batch

            AI service supports all Azure VM sizes except STANDARD_A0 and those
            with

            premium storage (STANDARD_GS, STANDARD_DS, and STANDARD_DSV2
            series).
        - id: parameters.vmPriority
          type:
            - string
          description: >-
            VM priority. VM priority. Allowed

            values are: dedicated (default) and lowpriority. Possible values
            include:

            'dedicated', 'lowpriority'
          optional: true
        - id: parameters.scaleSettings
          type:
            - object
          description: >-
            Scale settings. Scale settings

            for the cluster. Batch AI service supports manual and auto scale
            clusters.
          optional: true
        - id: parameters.scaleSettings.manual
          type:
            - object
          description: |-
            Manual scale settings.
            Manual scale settings for the cluster.
          optional: true
        - id: parameters.scaleSettings.manual.targetNodeCount
          type:
            - number
          description: >-
            Target node

            count. The desired number of compute nodes in the Cluster. Default
            is 0.
        - id: parameters.scaleSettings.manual.nodeDeallocationOption
          type:
            - string
          description: >-
            Node deallocation options. An action to be performed when the
            cluster size

            is decreasing. The default value is requeue. Possible values
            include:

            'requeue', 'terminate', 'waitforjobcompletion'
          optional: true
        - id: parameters.scaleSettings.autoScale
          type:
            - object
          description: |-
            Auto-scale settings.
            Auto-scale settings for the cluster.
          optional: true
        - id: parameters.scaleSettings.autoScale.minimumNodeCount
          type:
            - number
          description: >-
            Minimum

            node count. The minimum number of compute nodes the Batch AI service
            will

            try to allocate for the cluster. Note, the actual number of nodes
            can be

            less than the specified value if the subscription has not enough
            quota to

            fulfill the request.
        - id: parameters.scaleSettings.autoScale.maximumNodeCount
          type:
            - number
          description: >-
            Maximum

            node count. The maximum number of compute nodes the cluster can
            have.
        - id: parameters.scaleSettings.autoScale.initialNodeCount
          type:
            - number
          description: >-
            Initial node count. The number of compute nodes to allocate on
            cluster

            creation. Note that this value is used only during cluster creation.

            Default: 0.
          optional: true
        - id: parameters.virtualMachineConfiguration
          type:
            - object
          description: >-
            VM configuration.

            OS image configuration for cluster nodes. All nodes in a cluster
            have the

            same OS image.
          optional: true
        - id: parameters.virtualMachineConfiguration.imageReference
          type:
            - object
          description: Image reference. OS image reference for cluster nodes.
          optional: true
        - id: parameters.virtualMachineConfiguration.imageReference.publisher
          type:
            - string
          description: |-
            Publisher.
            Publisher of the image.
        - id: parameters.virtualMachineConfiguration.imageReference.offer
          type:
            - string
          description: Offer. Offer of the image.
        - id: parameters.virtualMachineConfiguration.imageReference.sku
          type:
            - string
          description: SKU. SKU of the image.
        - id: parameters.virtualMachineConfiguration.imageReference.version
          type:
            - string
          description: |-
            Version.
            Version of the image.
          optional: true
        - id: >-
            parameters.virtualMachineConfiguration.imageReference.virtualMachineImageId
          type:
            - string
          description: >-
            Custom VM image resource ID. The ARM resource identifier of the
            virtual

            machine image for the compute nodes. This is of the form

            /subscriptions/{subscriptionId}/resourceGroups/{resourceGroup}/providers/Microsoft.Compute/images/{imageName}.

            The virtual machine image must be in the same region and
            subscription as the

            cluster. For information about the firewall settings for the Batch
            node

            agent to communicate with the Batch service see

            https://docs.microsoft.com/en-us/azure/batch/batch-api-basics#virtual-network-vnet-and-firewall-configuration.

            Note, you need to provide publisher, offer and sku of the base OS
            image of

            which the custom image has been derived from.
          optional: true
        - id: parameters.nodeSetup
          type:
            - object
          description: |-
            Node setup. Setup to be performed on
            each compute node in the cluster.
          optional: true
        - id: parameters.nodeSetup.setupTask
          type:
            - object
          description: >-
            Setup task. Setup task to

            run on cluster nodes when nodes got created or rebooted. The setup
            task code

            needs to be idempotent. Generally the setup task is used to download
            static

            data that is required for all jobs that run on the cluster VMs
            and/or to

            download/install software.
          optional: true
        - id: parameters.nodeSetup.setupTask.commandLine
          type:
            - string
          description: >-
            Command line. The

            command line to be executed on each cluster's node after it being
            allocated

            or rebooted. The command is executed in a bash subshell as a root.
        - id: parameters.nodeSetup.setupTask.environmentVariables
          type:
            - array
          description: >-
            Environment variables. A collection of user defined environment
            variables to

            be set for setup task.
          optional: true
        - id: parameters.nodeSetup.setupTask.secrets
          type:
            - array
          description: >-
            Secrets. A

            collection of user defined environment variables with secret values
            to be

            set for the setup task. Server will never report values of these
            variables

            back.
          optional: true
        - id: parameters.nodeSetup.setupTask.stdOutErrPathPrefix
          type:
            - string
          description: >-
            Output

            path prefix. The prefix of a path where the Batch AI service will
            upload the

            stdout, stderr and execution log of the setup task.
        - id: parameters.nodeSetup.mountVolumes
          type:
            - object
          description: >-
            Mount volumes. Mount

            volumes to be available to setup task and all jobs executing on the
            cluster.

            The volumes will be mounted at location specified by
            $AZ_BATCHAI_MOUNT_ROOT

            environment variable.
          optional: true
        - id: parameters.nodeSetup.mountVolumes.azureFileShares
          type:
            - array
          description: >-
            Azure

            File Shares. A collection of Azure File Shares that are to be
            mounted to the

            cluster nodes.
          optional: true
        - id: parameters.nodeSetup.mountVolumes.azureBlobFileSystems
          type:
            - array
          description: >-
            Azure Blob file systems. A collection of Azure Blob Containers that
            are to

            be mounted to the cluster nodes.
          optional: true
        - id: parameters.nodeSetup.mountVolumes.fileServers
          type:
            - array
          description: >-
            File Servers.

            A collection of Batch AI File Servers that are to be mounted to the
            cluster

            nodes.
          optional: true
        - id: parameters.nodeSetup.mountVolumes.unmanagedFileSystems
          type:
            - array
          description: >-
            Unmanaged file systems. A collection of unmanaged file systems that
            are to

            be mounted to the cluster nodes.
          optional: true
        - id: parameters.nodeSetup.performanceCountersSettings
          type:
            - object
          description: >-
            Performance counters settings. Settings for performance counters
            collecting

            and uploading.
          optional: true
        - id: >-
            parameters.nodeSetup.performanceCountersSettings.appInsightsReference
          type:
            - object
          description: >-
            Azure

            Application Insights reference. Azure Application Insights
            information for

            performance counters reporting. If provided, Batch AI will upload
            node

            performance counters to the corresponding Azure Application Insights

            account.
        - id: >-
            parameters.nodeSetup.performanceCountersSettings.appInsightsReference.component
          type:
            - object
          description: Component ID. Azure Application Insights component resource ID.
        - id: >-
            parameters.nodeSetup.performanceCountersSettings.appInsightsReference.instrumentationKey
          type:
            - string
          description: >-
            Instrumentation Key. Value of the Azure Application Insights
            instrumentation

            key.
          optional: true
        - id: >-
            parameters.nodeSetup.performanceCountersSettings.appInsightsReference.instrumentationKeySecretReference
          type:
            - object
          description: >-
            Instrumentation key KeyVault Secret reference. KeyVault Store and
            Secret

            which contains Azure Application Insights instrumentation key. One
            of

            instrumentationKey or instrumentationKeySecretReference must be
            specified.
          optional: true
        - id: >-
            parameters.nodeSetup.performanceCountersSettings.appInsightsReference.instrumentationKeySecretReference.sourceVault
          type:
            - object
          description: >-
            Key Vault resource identifier. Fully qualified resource indentifier
            of the

            Key Vault.
        - id: >-
            parameters.nodeSetup.performanceCountersSettings.appInsightsReference.instrumentationKeySecretReference.secretUrl
          type:
            - string
          description: Secret URL. The URL referencing a secret in the Key Vault.
        - id: parameters.userAccountSettings
          type:
            - object
          description: >-
            User account settings.

            Settings for an administrator user account that will be created on
            each

            compute node in the cluster.
        - id: parameters.userAccountSettings.adminUserName
          type:
            - string
          description: |-
            User name. Name
            of the administrator user account which can be used to SSH to nodes.
        - id: parameters.userAccountSettings.adminUserSshPublicKey
          type:
            - string
          description: |-
            SSH
            public key. SSH public key of the administrator user account.
          optional: true
        - id: parameters.userAccountSettings.adminUserPassword
          type:
            - string
          description: |-
            Password.
            Password of the administrator user account.
          optional: true
        - id: parameters.subnet
          type:
            - object
          description: >-
            Subnet. Existing virtual network subnet

            to put the cluster nodes in. Note, if a File Server mount configured
            in node

            setup, the File Server's subnet will be used automatically.
          optional: true
        - id: parameters.subnet.id
          type:
            - string
          description: The ID of the resource
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
      return:
        type:
          - Promise
        description: A promise is returned
      content: >-
        function createWithHttpOperationResponse(resourceGroupName,
        workspaceName, clusterName, parameters, options)
    langs:
      - js
  - uid: 'azure-arm-batchai.Clusters#create'
    id: 'azure-arm-batchai.Clusters#create'
    parent: azure-arm-batchai.Clusters
    name: >-
      create(resourceGroupName, workspaceName, clusterName, parameters, options,
      optionalCallback)
    summary: Creates a Cluster in the given Workspace.
    fullName: >-
      azure-arm-batchai.Clusters.create(resourceGroupName, workspaceName,
      clusterName, parameters, options, optionalCallback)
    tags:
      - originalTitle: resolve
        title: resolve
        text: '{Cluster} - The deserialized result object.'
        value: '{Cluster} - The deserialized result object.'
      - originalTitle: reject
        title: reject
        text: |-
          {Error} - The error object.

          {function} optionalCallback(err, result, request, response)

                               {Error}  err        - The Error object if an error occurred, null otherwise.

                               {object} [result]   - The deserialized result object if an error did not occur.
                               See {@link Cluster} for more information.

                               {object} [request]  - The HTTP Request object if an error did not occur.

                               {stream} [response] - The HTTP Response stream if an error did not occur.
        value: |-
          {Error} - The error object.

          {function} optionalCallback(err, result, request, response)

                               {Error}  err        - The Error object if an error occurred, null otherwise.

                               {object} [result]   - The deserialized result object if an error did not occur.
                               See {@link Cluster} for more information.

                               {object} [request]  - The HTTP Request object if an error did not occur.

                               {stream} [response] - The HTTP Response stream if an error did not occur.
    type: Function
    syntax:
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |-
            Name of the resource group to which the
            resource belongs.
        - id: workspaceName
          type:
            - string
          description: >-
            The name of the workspace. Workspace names can

            only contain a combination of alphanumeric characters along with
            dash (-)

            and underscore (_). The name must be from 1 through 64 characters
            long.
        - id: clusterName
          type:
            - string
          description: >-
            The name of the cluster within the specified

            resource group. Cluster names can only contain a combination of
            alphanumeric

            characters along with dash (-) and underscore (_). The name must be
            from 1

            through 64 characters long.
        - id: parameters
          type:
            - object
          description: |-
            The parameters to provide for the Cluster
            creation.
        - id: parameters.vmSize
          type:
            - string
          description: >-
            VM size. The size of the virtual machines

            in the cluster. All nodes in a cluster have the same VM size. For

            information about available VM sizes for clusters using images from
            the

            Virtual Machines Marketplace see Sizes for Virtual Machines (Linux).
            Batch

            AI service supports all Azure VM sizes except STANDARD_A0 and those
            with

            premium storage (STANDARD_GS, STANDARD_DS, and STANDARD_DSV2
            series).
        - id: parameters.vmPriority
          type:
            - string
          description: >-
            VM priority. VM priority. Allowed

            values are: dedicated (default) and lowpriority. Possible values
            include:

            'dedicated', 'lowpriority'
          optional: true
        - id: parameters.scaleSettings
          type:
            - object
          description: >-
            Scale settings. Scale settings

            for the cluster. Batch AI service supports manual and auto scale
            clusters.
          optional: true
        - id: parameters.scaleSettings.manual
          type:
            - object
          description: |-
            Manual scale settings.
            Manual scale settings for the cluster.
          optional: true
        - id: parameters.scaleSettings.manual.targetNodeCount
          type:
            - number
          description: >-
            Target node

            count. The desired number of compute nodes in the Cluster. Default
            is 0.
        - id: parameters.scaleSettings.manual.nodeDeallocationOption
          type:
            - string
          description: >-
            Node deallocation options. An action to be performed when the
            cluster size

            is decreasing. The default value is requeue. Possible values
            include:

            'requeue', 'terminate', 'waitforjobcompletion'
          optional: true
        - id: parameters.scaleSettings.autoScale
          type:
            - object
          description: |-
            Auto-scale settings.
            Auto-scale settings for the cluster.
          optional: true
        - id: parameters.scaleSettings.autoScale.minimumNodeCount
          type:
            - number
          description: >-
            Minimum

            node count. The minimum number of compute nodes the Batch AI service
            will

            try to allocate for the cluster. Note, the actual number of nodes
            can be

            less than the specified value if the subscription has not enough
            quota to

            fulfill the request.
        - id: parameters.scaleSettings.autoScale.maximumNodeCount
          type:
            - number
          description: >-
            Maximum

            node count. The maximum number of compute nodes the cluster can
            have.
        - id: parameters.scaleSettings.autoScale.initialNodeCount
          type:
            - number
          description: >-
            Initial node count. The number of compute nodes to allocate on
            cluster

            creation. Note that this value is used only during cluster creation.

            Default: 0.
          optional: true
        - id: parameters.virtualMachineConfiguration
          type:
            - object
          description: >-
            VM configuration.

            OS image configuration for cluster nodes. All nodes in a cluster
            have the

            same OS image.
          optional: true
        - id: parameters.virtualMachineConfiguration.imageReference
          type:
            - object
          description: Image reference. OS image reference for cluster nodes.
          optional: true
        - id: parameters.virtualMachineConfiguration.imageReference.publisher
          type:
            - string
          description: |-
            Publisher.
            Publisher of the image.
        - id: parameters.virtualMachineConfiguration.imageReference.offer
          type:
            - string
          description: Offer. Offer of the image.
        - id: parameters.virtualMachineConfiguration.imageReference.sku
          type:
            - string
          description: SKU. SKU of the image.
        - id: parameters.virtualMachineConfiguration.imageReference.version
          type:
            - string
          description: |-
            Version.
            Version of the image.
          optional: true
        - id: >-
            parameters.virtualMachineConfiguration.imageReference.virtualMachineImageId
          type:
            - string
          description: >-
            Custom VM image resource ID. The ARM resource identifier of the
            virtual

            machine image for the compute nodes. This is of the form

            /subscriptions/{subscriptionId}/resourceGroups/{resourceGroup}/providers/Microsoft.Compute/images/{imageName}.

            The virtual machine image must be in the same region and
            subscription as the

            cluster. For information about the firewall settings for the Batch
            node

            agent to communicate with the Batch service see

            https://docs.microsoft.com/en-us/azure/batch/batch-api-basics#virtual-network-vnet-and-firewall-configuration.

            Note, you need to provide publisher, offer and sku of the base OS
            image of

            which the custom image has been derived from.
          optional: true
        - id: parameters.nodeSetup
          type:
            - object
          description: |-
            Node setup. Setup to be performed on
            each compute node in the cluster.
          optional: true
        - id: parameters.nodeSetup.setupTask
          type:
            - object
          description: >-
            Setup task. Setup task to

            run on cluster nodes when nodes got created or rebooted. The setup
            task code

            needs to be idempotent. Generally the setup task is used to download
            static

            data that is required for all jobs that run on the cluster VMs
            and/or to

            download/install software.
          optional: true
        - id: parameters.nodeSetup.setupTask.commandLine
          type:
            - string
          description: >-
            Command line. The

            command line to be executed on each cluster's node after it being
            allocated

            or rebooted. The command is executed in a bash subshell as a root.
        - id: parameters.nodeSetup.setupTask.environmentVariables
          type:
            - array
          description: >-
            Environment variables. A collection of user defined environment
            variables to

            be set for setup task.
          optional: true
        - id: parameters.nodeSetup.setupTask.secrets
          type:
            - array
          description: >-
            Secrets. A

            collection of user defined environment variables with secret values
            to be

            set for the setup task. Server will never report values of these
            variables

            back.
          optional: true
        - id: parameters.nodeSetup.setupTask.stdOutErrPathPrefix
          type:
            - string
          description: >-
            Output

            path prefix. The prefix of a path where the Batch AI service will
            upload the

            stdout, stderr and execution log of the setup task.
        - id: parameters.nodeSetup.mountVolumes
          type:
            - object
          description: >-
            Mount volumes. Mount

            volumes to be available to setup task and all jobs executing on the
            cluster.

            The volumes will be mounted at location specified by
            $AZ_BATCHAI_MOUNT_ROOT

            environment variable.
          optional: true
        - id: parameters.nodeSetup.mountVolumes.azureFileShares
          type:
            - array
          description: >-
            Azure

            File Shares. A collection of Azure File Shares that are to be
            mounted to the

            cluster nodes.
          optional: true
        - id: parameters.nodeSetup.mountVolumes.azureBlobFileSystems
          type:
            - array
          description: >-
            Azure Blob file systems. A collection of Azure Blob Containers that
            are to

            be mounted to the cluster nodes.
          optional: true
        - id: parameters.nodeSetup.mountVolumes.fileServers
          type:
            - array
          description: >-
            File Servers.

            A collection of Batch AI File Servers that are to be mounted to the
            cluster

            nodes.
          optional: true
        - id: parameters.nodeSetup.mountVolumes.unmanagedFileSystems
          type:
            - array
          description: >-
            Unmanaged file systems. A collection of unmanaged file systems that
            are to

            be mounted to the cluster nodes.
          optional: true
        - id: parameters.nodeSetup.performanceCountersSettings
          type:
            - object
          description: >-
            Performance counters settings. Settings for performance counters
            collecting

            and uploading.
          optional: true
        - id: >-
            parameters.nodeSetup.performanceCountersSettings.appInsightsReference
          type:
            - object
          description: >-
            Azure

            Application Insights reference. Azure Application Insights
            information for

            performance counters reporting. If provided, Batch AI will upload
            node

            performance counters to the corresponding Azure Application Insights

            account.
        - id: >-
            parameters.nodeSetup.performanceCountersSettings.appInsightsReference.component
          type:
            - object
          description: Component ID. Azure Application Insights component resource ID.
        - id: >-
            parameters.nodeSetup.performanceCountersSettings.appInsightsReference.instrumentationKey
          type:
            - string
          description: >-
            Instrumentation Key. Value of the Azure Application Insights
            instrumentation

            key.
          optional: true
        - id: >-
            parameters.nodeSetup.performanceCountersSettings.appInsightsReference.instrumentationKeySecretReference
          type:
            - object
          description: >-
            Instrumentation key KeyVault Secret reference. KeyVault Store and
            Secret

            which contains Azure Application Insights instrumentation key. One
            of

            instrumentationKey or instrumentationKeySecretReference must be
            specified.
          optional: true
        - id: >-
            parameters.nodeSetup.performanceCountersSettings.appInsightsReference.instrumentationKeySecretReference.sourceVault
          type:
            - object
          description: >-
            Key Vault resource identifier. Fully qualified resource indentifier
            of the

            Key Vault.
        - id: >-
            parameters.nodeSetup.performanceCountersSettings.appInsightsReference.instrumentationKeySecretReference.secretUrl
          type:
            - string
          description: Secret URL. The URL referencing a secret in the Key Vault.
        - id: parameters.userAccountSettings
          type:
            - object
          description: >-
            User account settings.

            Settings for an administrator user account that will be created on
            each

            compute node in the cluster.
        - id: parameters.userAccountSettings.adminUserName
          type:
            - string
          description: |-
            User name. Name
            of the administrator user account which can be used to SSH to nodes.
        - id: parameters.userAccountSettings.adminUserSshPublicKey
          type:
            - string
          description: |-
            SSH
            public key. SSH public key of the administrator user account.
          optional: true
        - id: parameters.userAccountSettings.adminUserPassword
          type:
            - string
          description: |-
            Password.
            Password of the administrator user account.
          optional: true
        - id: parameters.subnet
          type:
            - object
          description: >-
            Subnet. Existing virtual network subnet

            to put the cluster nodes in. Note, if a File Server mount configured
            in node

            setup, the File Server's subnet will be used automatically.
          optional: true
        - id: parameters.subnet.id
          type:
            - string
          description: The ID of the resource
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
        - id: optionalCallback
          type:
            - function
          description: The optional callback.
          optional: true
      return:
        type:
          - function
          - Promise
        description: |-
          If a callback was passed as the last parameter
          then it returns the callback else returns a Promise.

          {Promise} A promise is returned
      content: >-
        function create(resourceGroupName, workspaceName, clusterName,
        parameters, options, optionalCallback)
    langs:
      - js
  - uid: 'azure-arm-batchai.Clusters#updateWithHttpOperationResponse'
    id: 'azure-arm-batchai.Clusters#updateWithHttpOperationResponse'
    parent: azure-arm-batchai.Clusters
    name: >-
      updateWithHttpOperationResponse(resourceGroupName, workspaceName,
      clusterName, options)
    summary: Updates properties of a Cluster.
    fullName: >-
      azure-arm-batchai.Clusters.updateWithHttpOperationResponse(resourceGroupName,
      workspaceName, clusterName, options)
    tags:
      - originalTitle: resolve
        title: resolve
        text: '{HttpOperationResponse<Cluster>} - The deserialized result object.'
        value: '{HttpOperationResponse<Cluster>} - The deserialized result object.'
      - originalTitle: reject
        title: reject
        text: '{Error} - The error object.'
        value: '{Error} - The error object.'
    type: Function
    syntax:
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |-
            Name of the resource group to which the
            resource belongs.
        - id: workspaceName
          type:
            - string
          description: >-
            The name of the workspace. Workspace names can

            only contain a combination of alphanumeric characters along with
            dash (-)

            and underscore (_). The name must be from 1 through 64 characters
            long.
        - id: clusterName
          type:
            - string
          description: >-
            The name of the cluster within the specified

            resource group. Cluster names can only contain a combination of
            alphanumeric

            characters along with dash (-) and underscore (_). The name must be
            from 1

            through 64 characters long.
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.scaleSettings
          type:
            - object
          description: >-
            Scale settings. Desired scale

            settings for the cluster. Batch AI service supports manual and auto
            scale

            clusters.
          optional: true
        - id: options.scaleSettings.manual
          type:
            - object
          description: |-
            Manual scale settings. Manual
            scale settings for the cluster.
          optional: true
        - id: options.scaleSettings.manual.targetNodeCount
          type:
            - number
          description: >-
            Target node

            count. The desired number of compute nodes in the Cluster. Default
            is 0.
        - id: options.scaleSettings.manual.nodeDeallocationOption
          type:
            - string
          description: >-
            Node

            deallocation options. An action to be performed when the cluster
            size is

            decreasing. The default value is requeue. Possible values include:

            'requeue', 'terminate', 'waitforjobcompletion'
          optional: true
        - id: options.scaleSettings.autoScale
          type:
            - object
          description: |-
            Auto-scale settings.
            Auto-scale settings for the cluster.
          optional: true
        - id: options.scaleSettings.autoScale.minimumNodeCount
          type:
            - number
          description: >-
            Minimum

            node count. The minimum number of compute nodes the Batch AI service
            will

            try to allocate for the cluster. Note, the actual number of nodes
            can be

            less than the specified value if the subscription has not enough
            quota to

            fulfill the request.
        - id: options.scaleSettings.autoScale.maximumNodeCount
          type:
            - number
          description: >-
            Maximum

            node count. The maximum number of compute nodes the cluster can
            have.
        - id: options.scaleSettings.autoScale.initialNodeCount
          type:
            - number
          description: >-
            Initial

            node count. The number of compute nodes to allocate on cluster
            creation.

            Note that this value is used only during cluster creation. Default:
            0.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
      return:
        type:
          - Promise
        description: A promise is returned
      content: >-
        function updateWithHttpOperationResponse(resourceGroupName,
        workspaceName, clusterName, options)
    langs:
      - js
  - uid: 'azure-arm-batchai.Clusters#update'
    id: 'azure-arm-batchai.Clusters#update'
    parent: azure-arm-batchai.Clusters
    name: >-
      update(resourceGroupName, workspaceName, clusterName, options,
      optionalCallback)
    summary: Updates properties of a Cluster.
    fullName: >-
      azure-arm-batchai.Clusters.update(resourceGroupName, workspaceName,
      clusterName, options, optionalCallback)
    tags:
      - originalTitle: resolve
        title: resolve
        text: '{Cluster} - The deserialized result object.'
        value: '{Cluster} - The deserialized result object.'
      - originalTitle: reject
        title: reject
        text: |-
          {Error} - The error object.

          {function} optionalCallback(err, result, request, response)

                               {Error}  err        - The Error object if an error occurred, null otherwise.

                               {object} [result]   - The deserialized result object if an error did not occur.
                               See {@link Cluster} for more information.

                               {object} [request]  - The HTTP Request object if an error did not occur.

                               {stream} [response] - The HTTP Response stream if an error did not occur.
        value: |-
          {Error} - The error object.

          {function} optionalCallback(err, result, request, response)

                               {Error}  err        - The Error object if an error occurred, null otherwise.

                               {object} [result]   - The deserialized result object if an error did not occur.
                               See {@link Cluster} for more information.

                               {object} [request]  - The HTTP Request object if an error did not occur.

                               {stream} [response] - The HTTP Response stream if an error did not occur.
    type: Function
    syntax:
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |-
            Name of the resource group to which the
            resource belongs.
        - id: workspaceName
          type:
            - string
          description: >-
            The name of the workspace. Workspace names can

            only contain a combination of alphanumeric characters along with
            dash (-)

            and underscore (_). The name must be from 1 through 64 characters
            long.
        - id: clusterName
          type:
            - string
          description: >-
            The name of the cluster within the specified

            resource group. Cluster names can only contain a combination of
            alphanumeric

            characters along with dash (-) and underscore (_). The name must be
            from 1

            through 64 characters long.
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.scaleSettings
          type:
            - object
          description: >-
            Scale settings. Desired scale

            settings for the cluster. Batch AI service supports manual and auto
            scale

            clusters.
          optional: true
        - id: options.scaleSettings.manual
          type:
            - object
          description: |-
            Manual scale settings. Manual
            scale settings for the cluster.
          optional: true
        - id: options.scaleSettings.manual.targetNodeCount
          type:
            - number
          description: >-
            Target node

            count. The desired number of compute nodes in the Cluster. Default
            is 0.
        - id: options.scaleSettings.manual.nodeDeallocationOption
          type:
            - string
          description: >-
            Node

            deallocation options. An action to be performed when the cluster
            size is

            decreasing. The default value is requeue. Possible values include:

            'requeue', 'terminate', 'waitforjobcompletion'
          optional: true
        - id: options.scaleSettings.autoScale
          type:
            - object
          description: |-
            Auto-scale settings.
            Auto-scale settings for the cluster.
          optional: true
        - id: options.scaleSettings.autoScale.minimumNodeCount
          type:
            - number
          description: >-
            Minimum

            node count. The minimum number of compute nodes the Batch AI service
            will

            try to allocate for the cluster. Note, the actual number of nodes
            can be

            less than the specified value if the subscription has not enough
            quota to

            fulfill the request.
        - id: options.scaleSettings.autoScale.maximumNodeCount
          type:
            - number
          description: >-
            Maximum

            node count. The maximum number of compute nodes the cluster can
            have.
        - id: options.scaleSettings.autoScale.initialNodeCount
          type:
            - number
          description: >-
            Initial

            node count. The number of compute nodes to allocate on cluster
            creation.

            Note that this value is used only during cluster creation. Default:
            0.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
        - id: optionalCallback
          type:
            - function
          description: The optional callback.
          optional: true
      return:
        type:
          - function
          - Promise
        description: |-
          If a callback was passed as the last parameter
          then it returns the callback else returns a Promise.

          {Promise} A promise is returned
      content: >-
        function update(resourceGroupName, workspaceName, clusterName, options,
        optionalCallback)
    langs:
      - js
  - uid: 'azure-arm-batchai.Clusters#deleteMethodWithHttpOperationResponse'
    id: 'azure-arm-batchai.Clusters#deleteMethodWithHttpOperationResponse'
    parent: azure-arm-batchai.Clusters
    name: >-
      deleteMethodWithHttpOperationResponse(resourceGroupName, workspaceName,
      clusterName, options)
    summary: Deletes a Cluster.
    fullName: >-
      azure-arm-batchai.Clusters.deleteMethodWithHttpOperationResponse(resourceGroupName,
      workspaceName, clusterName, options)
    tags:
      - originalTitle: resolve
        title: resolve
        text: '{HttpOperationResponse<null>} - The deserialized result object.'
        value: '{HttpOperationResponse<null>} - The deserialized result object.'
      - originalTitle: reject
        title: reject
        text: '{Error} - The error object.'
        value: '{Error} - The error object.'
    type: Function
    syntax:
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |-
            Name of the resource group to which the
            resource belongs.
        - id: workspaceName
          type:
            - string
          description: >-
            The name of the workspace. Workspace names can

            only contain a combination of alphanumeric characters along with
            dash (-)

            and underscore (_). The name must be from 1 through 64 characters
            long.
        - id: clusterName
          type:
            - string
          description: >-
            The name of the cluster within the specified

            resource group. Cluster names can only contain a combination of
            alphanumeric

            characters along with dash (-) and underscore (_). The name must be
            from 1

            through 64 characters long.
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
      return:
        type:
          - Promise
        description: A promise is returned
      content: >-
        function deleteMethodWithHttpOperationResponse(resourceGroupName,
        workspaceName, clusterName, options)
    langs:
      - js
  - uid: 'azure-arm-batchai.Clusters#deleteMethod'
    id: 'azure-arm-batchai.Clusters#deleteMethod'
    parent: azure-arm-batchai.Clusters
    name: >-
      deleteMethod(resourceGroupName, workspaceName, clusterName, options,
      optionalCallback)
    summary: Deletes a Cluster.
    fullName: >-
      azure-arm-batchai.Clusters.deleteMethod(resourceGroupName, workspaceName,
      clusterName, options, optionalCallback)
    tags:
      - originalTitle: resolve
        title: resolve
        text: '{null} - The deserialized result object.'
        value: '{null} - The deserialized result object.'
      - originalTitle: reject
        title: reject
        text: |-
          {Error} - The error object.

          {function} optionalCallback(err, result, request, response)

                               {Error}  err        - The Error object if an error occurred, null otherwise.

                               {null} [result]   - The deserialized result object if an error did not occur.

                               {object} [request]  - The HTTP Request object if an error did not occur.

                               {stream} [response] - The HTTP Response stream if an error did not occur.
        value: |-
          {Error} - The error object.

          {function} optionalCallback(err, result, request, response)

                               {Error}  err        - The Error object if an error occurred, null otherwise.

                               {null} [result]   - The deserialized result object if an error did not occur.

                               {object} [request]  - The HTTP Request object if an error did not occur.

                               {stream} [response] - The HTTP Response stream if an error did not occur.
    type: Function
    syntax:
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |-
            Name of the resource group to which the
            resource belongs.
        - id: workspaceName
          type:
            - string
          description: >-
            The name of the workspace. Workspace names can

            only contain a combination of alphanumeric characters along with
            dash (-)

            and underscore (_). The name must be from 1 through 64 characters
            long.
        - id: clusterName
          type:
            - string
          description: >-
            The name of the cluster within the specified

            resource group. Cluster names can only contain a combination of
            alphanumeric

            characters along with dash (-) and underscore (_). The name must be
            from 1

            through 64 characters long.
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
        - id: optionalCallback
          type:
            - function
          description: The optional callback.
          optional: true
      return:
        type:
          - function
          - Promise
        description: |-
          If a callback was passed as the last parameter
          then it returns the callback else returns a Promise.

          {Promise} A promise is returned
      content: >-
        function deleteMethod(resourceGroupName, workspaceName, clusterName,
        options, optionalCallback)
    langs:
      - js
  - uid: 'azure-arm-batchai.Clusters#getWithHttpOperationResponse'
    id: 'azure-arm-batchai.Clusters#getWithHttpOperationResponse'
    parent: azure-arm-batchai.Clusters
    name: >-
      getWithHttpOperationResponse(resourceGroupName, workspaceName,
      clusterName, options)
    summary: Gets information about a Cluster.
    fullName: >-
      azure-arm-batchai.Clusters.getWithHttpOperationResponse(resourceGroupName,
      workspaceName, clusterName, options)
    tags:
      - originalTitle: resolve
        title: resolve
        text: '{HttpOperationResponse<Cluster>} - The deserialized result object.'
        value: '{HttpOperationResponse<Cluster>} - The deserialized result object.'
      - originalTitle: reject
        title: reject
        text: '{Error} - The error object.'
        value: '{Error} - The error object.'
    type: Function
    syntax:
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |-
            Name of the resource group to which the
            resource belongs.
        - id: workspaceName
          type:
            - string
          description: >-
            The name of the workspace. Workspace names can

            only contain a combination of alphanumeric characters along with
            dash (-)

            and underscore (_). The name must be from 1 through 64 characters
            long.
        - id: clusterName
          type:
            - string
          description: >-
            The name of the cluster within the specified

            resource group. Cluster names can only contain a combination of
            alphanumeric

            characters along with dash (-) and underscore (_). The name must be
            from 1

            through 64 characters long.
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
      return:
        type:
          - Promise
        description: A promise is returned
      content: >-
        function getWithHttpOperationResponse(resourceGroupName, workspaceName,
        clusterName, options)
    langs:
      - js
  - uid: 'azure-arm-batchai.Clusters#get'
    id: 'azure-arm-batchai.Clusters#get'
    parent: azure-arm-batchai.Clusters
    name: >-
      get(resourceGroupName, workspaceName, clusterName, options,
      optionalCallback)
    summary: Gets information about a Cluster.
    fullName: >-
      azure-arm-batchai.Clusters.get(resourceGroupName, workspaceName,
      clusterName, options, optionalCallback)
    tags:
      - originalTitle: resolve
        title: resolve
        text: '{Cluster} - The deserialized result object.'
        value: '{Cluster} - The deserialized result object.'
      - originalTitle: reject
        title: reject
        text: |-
          {Error} - The error object.

          {function} optionalCallback(err, result, request, response)

                               {Error}  err        - The Error object if an error occurred, null otherwise.

                               {object} [result]   - The deserialized result object if an error did not occur.
                               See {@link Cluster} for more information.

                               {object} [request]  - The HTTP Request object if an error did not occur.

                               {stream} [response] - The HTTP Response stream if an error did not occur.
        value: |-
          {Error} - The error object.

          {function} optionalCallback(err, result, request, response)

                               {Error}  err        - The Error object if an error occurred, null otherwise.

                               {object} [result]   - The deserialized result object if an error did not occur.
                               See {@link Cluster} for more information.

                               {object} [request]  - The HTTP Request object if an error did not occur.

                               {stream} [response] - The HTTP Response stream if an error did not occur.
    type: Function
    syntax:
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |-
            Name of the resource group to which the
            resource belongs.
        - id: workspaceName
          type:
            - string
          description: >-
            The name of the workspace. Workspace names can

            only contain a combination of alphanumeric characters along with
            dash (-)

            and underscore (_). The name must be from 1 through 64 characters
            long.
        - id: clusterName
          type:
            - string
          description: >-
            The name of the cluster within the specified

            resource group. Cluster names can only contain a combination of
            alphanumeric

            characters along with dash (-) and underscore (_). The name must be
            from 1

            through 64 characters long.
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
        - id: optionalCallback
          type:
            - function
          description: The optional callback.
          optional: true
      return:
        type:
          - function
          - Promise
        description: |-
          If a callback was passed as the last parameter
          then it returns the callback else returns a Promise.

          {Promise} A promise is returned
      content: >-
        function get(resourceGroupName, workspaceName, clusterName, options,
        optionalCallback)
    langs:
      - js
  - uid: >-
      azure-arm-batchai.Clusters#listRemoteLoginInformationWithHttpOperationResponse
    id: >-
      azure-arm-batchai.Clusters#listRemoteLoginInformationWithHttpOperationResponse
    parent: azure-arm-batchai.Clusters
    name: >-
      listRemoteLoginInformationWithHttpOperationResponse(resourceGroupName,
      workspaceName, clusterName, options)
    summary: 'Get the IP address, port of all the compute nodes in the Cluster.'
    fullName: >-
      azure-arm-batchai.Clusters.listRemoteLoginInformationWithHttpOperationResponse(resourceGroupName,
      workspaceName, clusterName, options)
    tags:
      - originalTitle: resolve
        title: resolve
        text: >-
          {HttpOperationResponse<RemoteLoginInformationListResult>} - The
          deserialized result object.
        value: >-
          {HttpOperationResponse<RemoteLoginInformationListResult>} - The
          deserialized result object.
      - originalTitle: reject
        title: reject
        text: '{Error} - The error object.'
        value: '{Error} - The error object.'
    type: Function
    syntax:
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |-
            Name of the resource group to which the
            resource belongs.
        - id: workspaceName
          type:
            - string
          description: >-
            The name of the workspace. Workspace names can

            only contain a combination of alphanumeric characters along with
            dash (-)

            and underscore (_). The name must be from 1 through 64 characters
            long.
        - id: clusterName
          type:
            - string
          description: >-
            The name of the cluster within the specified

            resource group. Cluster names can only contain a combination of
            alphanumeric

            characters along with dash (-) and underscore (_). The name must be
            from 1

            through 64 characters long.
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
      return:
        type:
          - Promise
        description: A promise is returned
      content: >-
        function
        listRemoteLoginInformationWithHttpOperationResponse(resourceGroupName,
        workspaceName, clusterName, options)
    langs:
      - js
  - uid: 'azure-arm-batchai.Clusters#listRemoteLoginInformation'
    id: 'azure-arm-batchai.Clusters#listRemoteLoginInformation'
    parent: azure-arm-batchai.Clusters
    name: >-
      listRemoteLoginInformation(resourceGroupName, workspaceName, clusterName,
      options, optionalCallback)
    summary: 'Get the IP address, port of all the compute nodes in the Cluster.'
    fullName: >-
      azure-arm-batchai.Clusters.listRemoteLoginInformation(resourceGroupName,
      workspaceName, clusterName, options, optionalCallback)
    tags:
      - originalTitle: resolve
        title: resolve
        text: '{RemoteLoginInformationListResult} - The deserialized result object.'
        value: '{RemoteLoginInformationListResult} - The deserialized result object.'
      - originalTitle: reject
        title: reject
        text: |-
          {Error} - The error object.

          {function} optionalCallback(err, result, request, response)

                               {Error}  err        - The Error object if an error occurred, null otherwise.

                               {object} [result]   - The deserialized result object if an error did not occur.
                               See {@link RemoteLoginInformationListResult} for more
                               information.

                               {object} [request]  - The HTTP Request object if an error did not occur.

                               {stream} [response] - The HTTP Response stream if an error did not occur.
        value: |-
          {Error} - The error object.

          {function} optionalCallback(err, result, request, response)

                               {Error}  err        - The Error object if an error occurred, null otherwise.

                               {object} [result]   - The deserialized result object if an error did not occur.
                               See {@link RemoteLoginInformationListResult} for more
                               information.

                               {object} [request]  - The HTTP Request object if an error did not occur.

                               {stream} [response] - The HTTP Response stream if an error did not occur.
    type: Function
    syntax:
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |-
            Name of the resource group to which the
            resource belongs.
        - id: workspaceName
          type:
            - string
          description: >-
            The name of the workspace. Workspace names can

            only contain a combination of alphanumeric characters along with
            dash (-)

            and underscore (_). The name must be from 1 through 64 characters
            long.
        - id: clusterName
          type:
            - string
          description: >-
            The name of the cluster within the specified

            resource group. Cluster names can only contain a combination of
            alphanumeric

            characters along with dash (-) and underscore (_). The name must be
            from 1

            through 64 characters long.
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
        - id: optionalCallback
          type:
            - function
          description: The optional callback.
          optional: true
      return:
        type:
          - function
          - Promise
        description: |-
          If a callback was passed as the last parameter
          then it returns the callback else returns a Promise.

          {Promise} A promise is returned
      content: >-
        function listRemoteLoginInformation(resourceGroupName, workspaceName,
        clusterName, options, optionalCallback)
    langs:
      - js
  - uid: 'azure-arm-batchai.Clusters#listByWorkspaceWithHttpOperationResponse'
    id: 'azure-arm-batchai.Clusters#listByWorkspaceWithHttpOperationResponse'
    parent: azure-arm-batchai.Clusters
    name: >-
      listByWorkspaceWithHttpOperationResponse(resourceGroupName, workspaceName,
      options)
    summary: Gets information about Clusters associated with the given Workspace.
    fullName: >-
      azure-arm-batchai.Clusters.listByWorkspaceWithHttpOperationResponse(resourceGroupName,
      workspaceName, options)
    tags:
      - originalTitle: resolve
        title: resolve
        text: >-
          {HttpOperationResponse<ClusterListResult>} - The deserialized result
          object.
        value: >-
          {HttpOperationResponse<ClusterListResult>} - The deserialized result
          object.
      - originalTitle: reject
        title: reject
        text: '{Error} - The error object.'
        value: '{Error} - The error object.'
    type: Function
    syntax:
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |-
            Name of the resource group to which the
            resource belongs.
        - id: workspaceName
          type:
            - string
          description: >-
            The name of the workspace. Workspace names can

            only contain a combination of alphanumeric characters along with
            dash (-)

            and underscore (_). The name must be from 1 through 64 characters
            long.
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.clustersListByWorkspaceOptions
          type:
            - object
          description: |-
            Additional
            parameters for the operation
          optional: true
        - id: options.clustersListByWorkspaceOptions.maxResults
          type:
            - number
          description: >-
            The

            maximum number of items to return in the response. A maximum of 1000
            files

            can be returned.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
      return:
        type:
          - Promise
        description: A promise is returned
      content: >-
        function listByWorkspaceWithHttpOperationResponse(resourceGroupName,
        workspaceName, options)
    langs:
      - js
  - uid: 'azure-arm-batchai.Clusters#listByWorkspace'
    id: 'azure-arm-batchai.Clusters#listByWorkspace'
    parent: azure-arm-batchai.Clusters
    name: >-
      listByWorkspace(resourceGroupName, workspaceName, options,
      optionalCallback)
    summary: Gets information about Clusters associated with the given Workspace.
    fullName: >-
      azure-arm-batchai.Clusters.listByWorkspace(resourceGroupName,
      workspaceName, options, optionalCallback)
    tags:
      - originalTitle: resolve
        title: resolve
        text: '{ClusterListResult} - The deserialized result object.'
        value: '{ClusterListResult} - The deserialized result object.'
      - originalTitle: reject
        title: reject
        text: |-
          {Error} - The error object.

          {function} optionalCallback(err, result, request, response)

                               {Error}  err        - The Error object if an error occurred, null otherwise.

                               {object} [result]   - The deserialized result object if an error did not occur.
                               See {@link ClusterListResult} for more information.

                               {object} [request]  - The HTTP Request object if an error did not occur.

                               {stream} [response] - The HTTP Response stream if an error did not occur.
        value: |-
          {Error} - The error object.

          {function} optionalCallback(err, result, request, response)

                               {Error}  err        - The Error object if an error occurred, null otherwise.

                               {object} [result]   - The deserialized result object if an error did not occur.
                               See {@link ClusterListResult} for more information.

                               {object} [request]  - The HTTP Request object if an error did not occur.

                               {stream} [response] - The HTTP Response stream if an error did not occur.
    type: Function
    syntax:
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |-
            Name of the resource group to which the
            resource belongs.
        - id: workspaceName
          type:
            - string
          description: >-
            The name of the workspace. Workspace names can

            only contain a combination of alphanumeric characters along with
            dash (-)

            and underscore (_). The name must be from 1 through 64 characters
            long.
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.clustersListByWorkspaceOptions
          type:
            - object
          description: |-
            Additional
            parameters for the operation
          optional: true
        - id: options.clustersListByWorkspaceOptions.maxResults
          type:
            - number
          description: >-
            The

            maximum number of items to return in the response. A maximum of 1000
            files

            can be returned.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
        - id: optionalCallback
          type:
            - function
          description: The optional callback.
          optional: true
      return:
        type:
          - function
          - Promise
        description: |-
          If a callback was passed as the last parameter
          then it returns the callback else returns a Promise.

          {Promise} A promise is returned
      content: >-
        function listByWorkspace(resourceGroupName, workspaceName, options,
        optionalCallback)
    langs:
      - js
  - uid: 'azure-arm-batchai.Clusters#beginCreateWithHttpOperationResponse'
    id: 'azure-arm-batchai.Clusters#beginCreateWithHttpOperationResponse'
    parent: azure-arm-batchai.Clusters
    name: >-
      beginCreateWithHttpOperationResponse(resourceGroupName, workspaceName,
      clusterName, parameters, options)
    summary: Creates a Cluster in the given Workspace.
    fullName: >-
      azure-arm-batchai.Clusters.beginCreateWithHttpOperationResponse(resourceGroupName,
      workspaceName, clusterName, parameters, options)
    tags:
      - originalTitle: resolve
        title: resolve
        text: '{HttpOperationResponse<Cluster>} - The deserialized result object.'
        value: '{HttpOperationResponse<Cluster>} - The deserialized result object.'
      - originalTitle: reject
        title: reject
        text: '{Error} - The error object.'
        value: '{Error} - The error object.'
    type: Function
    syntax:
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |-
            Name of the resource group to which the
            resource belongs.
        - id: workspaceName
          type:
            - string
          description: >-
            The name of the workspace. Workspace names can

            only contain a combination of alphanumeric characters along with
            dash (-)

            and underscore (_). The name must be from 1 through 64 characters
            long.
        - id: clusterName
          type:
            - string
          description: >-
            The name of the cluster within the specified

            resource group. Cluster names can only contain a combination of
            alphanumeric

            characters along with dash (-) and underscore (_). The name must be
            from 1

            through 64 characters long.
        - id: parameters
          type:
            - object
          description: |-
            The parameters to provide for the Cluster
            creation.
        - id: parameters.vmSize
          type:
            - string
          description: >-
            VM size. The size of the virtual machines

            in the cluster. All nodes in a cluster have the same VM size. For

            information about available VM sizes for clusters using images from
            the

            Virtual Machines Marketplace see Sizes for Virtual Machines (Linux).
            Batch

            AI service supports all Azure VM sizes except STANDARD_A0 and those
            with

            premium storage (STANDARD_GS, STANDARD_DS, and STANDARD_DSV2
            series).
        - id: parameters.vmPriority
          type:
            - string
          description: >-
            VM priority. VM priority. Allowed

            values are: dedicated (default) and lowpriority. Possible values
            include:

            'dedicated', 'lowpriority'
          optional: true
        - id: parameters.scaleSettings
          type:
            - object
          description: >-
            Scale settings. Scale settings

            for the cluster. Batch AI service supports manual and auto scale
            clusters.
          optional: true
        - id: parameters.scaleSettings.manual
          type:
            - object
          description: |-
            Manual scale settings.
            Manual scale settings for the cluster.
          optional: true
        - id: parameters.scaleSettings.manual.targetNodeCount
          type:
            - number
          description: >-
            Target node

            count. The desired number of compute nodes in the Cluster. Default
            is 0.
        - id: parameters.scaleSettings.manual.nodeDeallocationOption
          type:
            - string
          description: >-
            Node deallocation options. An action to be performed when the
            cluster size

            is decreasing. The default value is requeue. Possible values
            include:

            'requeue', 'terminate', 'waitforjobcompletion'
          optional: true
        - id: parameters.scaleSettings.autoScale
          type:
            - object
          description: |-
            Auto-scale settings.
            Auto-scale settings for the cluster.
          optional: true
        - id: parameters.scaleSettings.autoScale.minimumNodeCount
          type:
            - number
          description: >-
            Minimum

            node count. The minimum number of compute nodes the Batch AI service
            will

            try to allocate for the cluster. Note, the actual number of nodes
            can be

            less than the specified value if the subscription has not enough
            quota to

            fulfill the request.
        - id: parameters.scaleSettings.autoScale.maximumNodeCount
          type:
            - number
          description: >-
            Maximum

            node count. The maximum number of compute nodes the cluster can
            have.
        - id: parameters.scaleSettings.autoScale.initialNodeCount
          type:
            - number
          description: >-
            Initial node count. The number of compute nodes to allocate on
            cluster

            creation. Note that this value is used only during cluster creation.

            Default: 0.
          optional: true
        - id: parameters.virtualMachineConfiguration
          type:
            - object
          description: >-
            VM configuration.

            OS image configuration for cluster nodes. All nodes in a cluster
            have the

            same OS image.
          optional: true
        - id: parameters.virtualMachineConfiguration.imageReference
          type:
            - object
          description: Image reference. OS image reference for cluster nodes.
          optional: true
        - id: parameters.virtualMachineConfiguration.imageReference.publisher
          type:
            - string
          description: |-
            Publisher.
            Publisher of the image.
        - id: parameters.virtualMachineConfiguration.imageReference.offer
          type:
            - string
          description: Offer. Offer of the image.
        - id: parameters.virtualMachineConfiguration.imageReference.sku
          type:
            - string
          description: SKU. SKU of the image.
        - id: parameters.virtualMachineConfiguration.imageReference.version
          type:
            - string
          description: |-
            Version.
            Version of the image.
          optional: true
        - id: >-
            parameters.virtualMachineConfiguration.imageReference.virtualMachineImageId
          type:
            - string
          description: >-
            Custom VM image resource ID. The ARM resource identifier of the
            virtual

            machine image for the compute nodes. This is of the form

            /subscriptions/{subscriptionId}/resourceGroups/{resourceGroup}/providers/Microsoft.Compute/images/{imageName}.

            The virtual machine image must be in the same region and
            subscription as the

            cluster. For information about the firewall settings for the Batch
            node

            agent to communicate with the Batch service see

            https://docs.microsoft.com/en-us/azure/batch/batch-api-basics#virtual-network-vnet-and-firewall-configuration.

            Note, you need to provide publisher, offer and sku of the base OS
            image of

            which the custom image has been derived from.
          optional: true
        - id: parameters.nodeSetup
          type:
            - object
          description: |-
            Node setup. Setup to be performed on
            each compute node in the cluster.
          optional: true
        - id: parameters.nodeSetup.setupTask
          type:
            - object
          description: >-
            Setup task. Setup task to

            run on cluster nodes when nodes got created or rebooted. The setup
            task code

            needs to be idempotent. Generally the setup task is used to download
            static

            data that is required for all jobs that run on the cluster VMs
            and/or to

            download/install software.
          optional: true
        - id: parameters.nodeSetup.setupTask.commandLine
          type:
            - string
          description: >-
            Command line. The

            command line to be executed on each cluster's node after it being
            allocated

            or rebooted. The command is executed in a bash subshell as a root.
        - id: parameters.nodeSetup.setupTask.environmentVariables
          type:
            - array
          description: >-
            Environment variables. A collection of user defined environment
            variables to

            be set for setup task.
          optional: true
        - id: parameters.nodeSetup.setupTask.secrets
          type:
            - array
          description: >-
            Secrets. A

            collection of user defined environment variables with secret values
            to be

            set for the setup task. Server will never report values of these
            variables

            back.
          optional: true
        - id: parameters.nodeSetup.setupTask.stdOutErrPathPrefix
          type:
            - string
          description: >-
            Output

            path prefix. The prefix of a path where the Batch AI service will
            upload the

            stdout, stderr and execution log of the setup task.
        - id: parameters.nodeSetup.mountVolumes
          type:
            - object
          description: >-
            Mount volumes. Mount

            volumes to be available to setup task and all jobs executing on the
            cluster.

            The volumes will be mounted at location specified by
            $AZ_BATCHAI_MOUNT_ROOT

            environment variable.
          optional: true
        - id: parameters.nodeSetup.mountVolumes.azureFileShares
          type:
            - array
          description: >-
            Azure

            File Shares. A collection of Azure File Shares that are to be
            mounted to the

            cluster nodes.
          optional: true
        - id: parameters.nodeSetup.mountVolumes.azureBlobFileSystems
          type:
            - array
          description: >-
            Azure Blob file systems. A collection of Azure Blob Containers that
            are to

            be mounted to the cluster nodes.
          optional: true
        - id: parameters.nodeSetup.mountVolumes.fileServers
          type:
            - array
          description: >-
            File Servers.

            A collection of Batch AI File Servers that are to be mounted to the
            cluster

            nodes.
          optional: true
        - id: parameters.nodeSetup.mountVolumes.unmanagedFileSystems
          type:
            - array
          description: >-
            Unmanaged file systems. A collection of unmanaged file systems that
            are to

            be mounted to the cluster nodes.
          optional: true
        - id: parameters.nodeSetup.performanceCountersSettings
          type:
            - object
          description: >-
            Performance counters settings. Settings for performance counters
            collecting

            and uploading.
          optional: true
        - id: >-
            parameters.nodeSetup.performanceCountersSettings.appInsightsReference
          type:
            - object
          description: >-
            Azure

            Application Insights reference. Azure Application Insights
            information for

            performance counters reporting. If provided, Batch AI will upload
            node

            performance counters to the corresponding Azure Application Insights

            account.
        - id: >-
            parameters.nodeSetup.performanceCountersSettings.appInsightsReference.component
          type:
            - object
          description: Component ID. Azure Application Insights component resource ID.
        - id: >-
            parameters.nodeSetup.performanceCountersSettings.appInsightsReference.instrumentationKey
          type:
            - string
          description: >-
            Instrumentation Key. Value of the Azure Application Insights
            instrumentation

            key.
          optional: true
        - id: >-
            parameters.nodeSetup.performanceCountersSettings.appInsightsReference.instrumentationKeySecretReference
          type:
            - object
          description: >-
            Instrumentation key KeyVault Secret reference. KeyVault Store and
            Secret

            which contains Azure Application Insights instrumentation key. One
            of

            instrumentationKey or instrumentationKeySecretReference must be
            specified.
          optional: true
        - id: >-
            parameters.nodeSetup.performanceCountersSettings.appInsightsReference.instrumentationKeySecretReference.sourceVault
          type:
            - object
          description: >-
            Key Vault resource identifier. Fully qualified resource indentifier
            of the

            Key Vault.
        - id: >-
            parameters.nodeSetup.performanceCountersSettings.appInsightsReference.instrumentationKeySecretReference.secretUrl
          type:
            - string
          description: Secret URL. The URL referencing a secret in the Key Vault.
        - id: parameters.userAccountSettings
          type:
            - object
          description: >-
            User account settings.

            Settings for an administrator user account that will be created on
            each

            compute node in the cluster.
        - id: parameters.userAccountSettings.adminUserName
          type:
            - string
          description: |-
            User name. Name
            of the administrator user account which can be used to SSH to nodes.
        - id: parameters.userAccountSettings.adminUserSshPublicKey
          type:
            - string
          description: |-
            SSH
            public key. SSH public key of the administrator user account.
          optional: true
        - id: parameters.userAccountSettings.adminUserPassword
          type:
            - string
          description: |-
            Password.
            Password of the administrator user account.
          optional: true
        - id: parameters.subnet
          type:
            - object
          description: >-
            Subnet. Existing virtual network subnet

            to put the cluster nodes in. Note, if a File Server mount configured
            in node

            setup, the File Server's subnet will be used automatically.
          optional: true
        - id: parameters.subnet.id
          type:
            - string
          description: The ID of the resource
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
      return:
        type:
          - Promise
        description: A promise is returned
      content: >-
        function beginCreateWithHttpOperationResponse(resourceGroupName,
        workspaceName, clusterName, parameters, options)
    langs:
      - js
  - uid: 'azure-arm-batchai.Clusters#beginCreate'
    id: 'azure-arm-batchai.Clusters#beginCreate'
    parent: azure-arm-batchai.Clusters
    name: >-
      beginCreate(resourceGroupName, workspaceName, clusterName, parameters,
      options, optionalCallback)
    summary: Creates a Cluster in the given Workspace.
    fullName: >-
      azure-arm-batchai.Clusters.beginCreate(resourceGroupName, workspaceName,
      clusterName, parameters, options, optionalCallback)
    tags:
      - originalTitle: resolve
        title: resolve
        text: '{Cluster} - The deserialized result object.'
        value: '{Cluster} - The deserialized result object.'
      - originalTitle: reject
        title: reject
        text: |-
          {Error} - The error object.

          {function} optionalCallback(err, result, request, response)

                               {Error}  err        - The Error object if an error occurred, null otherwise.

                               {object} [result]   - The deserialized result object if an error did not occur.
                               See {@link Cluster} for more information.

                               {object} [request]  - The HTTP Request object if an error did not occur.

                               {stream} [response] - The HTTP Response stream if an error did not occur.
        value: |-
          {Error} - The error object.

          {function} optionalCallback(err, result, request, response)

                               {Error}  err        - The Error object if an error occurred, null otherwise.

                               {object} [result]   - The deserialized result object if an error did not occur.
                               See {@link Cluster} for more information.

                               {object} [request]  - The HTTP Request object if an error did not occur.

                               {stream} [response] - The HTTP Response stream if an error did not occur.
    type: Function
    syntax:
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |-
            Name of the resource group to which the
            resource belongs.
        - id: workspaceName
          type:
            - string
          description: >-
            The name of the workspace. Workspace names can

            only contain a combination of alphanumeric characters along with
            dash (-)

            and underscore (_). The name must be from 1 through 64 characters
            long.
        - id: clusterName
          type:
            - string
          description: >-
            The name of the cluster within the specified

            resource group. Cluster names can only contain a combination of
            alphanumeric

            characters along with dash (-) and underscore (_). The name must be
            from 1

            through 64 characters long.
        - id: parameters
          type:
            - object
          description: |-
            The parameters to provide for the Cluster
            creation.
        - id: parameters.vmSize
          type:
            - string
          description: >-
            VM size. The size of the virtual machines

            in the cluster. All nodes in a cluster have the same VM size. For

            information about available VM sizes for clusters using images from
            the

            Virtual Machines Marketplace see Sizes for Virtual Machines (Linux).
            Batch

            AI service supports all Azure VM sizes except STANDARD_A0 and those
            with

            premium storage (STANDARD_GS, STANDARD_DS, and STANDARD_DSV2
            series).
        - id: parameters.vmPriority
          type:
            - string
          description: >-
            VM priority. VM priority. Allowed

            values are: dedicated (default) and lowpriority. Possible values
            include:

            'dedicated', 'lowpriority'
          optional: true
        - id: parameters.scaleSettings
          type:
            - object
          description: >-
            Scale settings. Scale settings

            for the cluster. Batch AI service supports manual and auto scale
            clusters.
          optional: true
        - id: parameters.scaleSettings.manual
          type:
            - object
          description: |-
            Manual scale settings.
            Manual scale settings for the cluster.
          optional: true
        - id: parameters.scaleSettings.manual.targetNodeCount
          type:
            - number
          description: >-
            Target node

            count. The desired number of compute nodes in the Cluster. Default
            is 0.
        - id: parameters.scaleSettings.manual.nodeDeallocationOption
          type:
            - string
          description: >-
            Node deallocation options. An action to be performed when the
            cluster size

            is decreasing. The default value is requeue. Possible values
            include:

            'requeue', 'terminate', 'waitforjobcompletion'
          optional: true
        - id: parameters.scaleSettings.autoScale
          type:
            - object
          description: |-
            Auto-scale settings.
            Auto-scale settings for the cluster.
          optional: true
        - id: parameters.scaleSettings.autoScale.minimumNodeCount
          type:
            - number
          description: >-
            Minimum

            node count. The minimum number of compute nodes the Batch AI service
            will

            try to allocate for the cluster. Note, the actual number of nodes
            can be

            less than the specified value if the subscription has not enough
            quota to

            fulfill the request.
        - id: parameters.scaleSettings.autoScale.maximumNodeCount
          type:
            - number
          description: >-
            Maximum

            node count. The maximum number of compute nodes the cluster can
            have.
        - id: parameters.scaleSettings.autoScale.initialNodeCount
          type:
            - number
          description: >-
            Initial node count. The number of compute nodes to allocate on
            cluster

            creation. Note that this value is used only during cluster creation.

            Default: 0.
          optional: true
        - id: parameters.virtualMachineConfiguration
          type:
            - object
          description: >-
            VM configuration.

            OS image configuration for cluster nodes. All nodes in a cluster
            have the

            same OS image.
          optional: true
        - id: parameters.virtualMachineConfiguration.imageReference
          type:
            - object
          description: Image reference. OS image reference for cluster nodes.
          optional: true
        - id: parameters.virtualMachineConfiguration.imageReference.publisher
          type:
            - string
          description: |-
            Publisher.
            Publisher of the image.
        - id: parameters.virtualMachineConfiguration.imageReference.offer
          type:
            - string
          description: Offer. Offer of the image.
        - id: parameters.virtualMachineConfiguration.imageReference.sku
          type:
            - string
          description: SKU. SKU of the image.
        - id: parameters.virtualMachineConfiguration.imageReference.version
          type:
            - string
          description: |-
            Version.
            Version of the image.
          optional: true
        - id: >-
            parameters.virtualMachineConfiguration.imageReference.virtualMachineImageId
          type:
            - string
          description: >-
            Custom VM image resource ID. The ARM resource identifier of the
            virtual

            machine image for the compute nodes. This is of the form

            /subscriptions/{subscriptionId}/resourceGroups/{resourceGroup}/providers/Microsoft.Compute/images/{imageName}.

            The virtual machine image must be in the same region and
            subscription as the

            cluster. For information about the firewall settings for the Batch
            node

            agent to communicate with the Batch service see

            https://docs.microsoft.com/en-us/azure/batch/batch-api-basics#virtual-network-vnet-and-firewall-configuration.

            Note, you need to provide publisher, offer and sku of the base OS
            image of

            which the custom image has been derived from.
          optional: true
        - id: parameters.nodeSetup
          type:
            - object
          description: |-
            Node setup. Setup to be performed on
            each compute node in the cluster.
          optional: true
        - id: parameters.nodeSetup.setupTask
          type:
            - object
          description: >-
            Setup task. Setup task to

            run on cluster nodes when nodes got created or rebooted. The setup
            task code

            needs to be idempotent. Generally the setup task is used to download
            static

            data that is required for all jobs that run on the cluster VMs
            and/or to

            download/install software.
          optional: true
        - id: parameters.nodeSetup.setupTask.commandLine
          type:
            - string
          description: >-
            Command line. The

            command line to be executed on each cluster's node after it being
            allocated

            or rebooted. The command is executed in a bash subshell as a root.
        - id: parameters.nodeSetup.setupTask.environmentVariables
          type:
            - array
          description: >-
            Environment variables. A collection of user defined environment
            variables to

            be set for setup task.
          optional: true
        - id: parameters.nodeSetup.setupTask.secrets
          type:
            - array
          description: >-
            Secrets. A

            collection of user defined environment variables with secret values
            to be

            set for the setup task. Server will never report values of these
            variables

            back.
          optional: true
        - id: parameters.nodeSetup.setupTask.stdOutErrPathPrefix
          type:
            - string
          description: >-
            Output

            path prefix. The prefix of a path where the Batch AI service will
            upload the

            stdout, stderr and execution log of the setup task.
        - id: parameters.nodeSetup.mountVolumes
          type:
            - object
          description: >-
            Mount volumes. Mount

            volumes to be available to setup task and all jobs executing on the
            cluster.

            The volumes will be mounted at location specified by
            $AZ_BATCHAI_MOUNT_ROOT

            environment variable.
          optional: true
        - id: parameters.nodeSetup.mountVolumes.azureFileShares
          type:
            - array
          description: >-
            Azure

            File Shares. A collection of Azure File Shares that are to be
            mounted to the

            cluster nodes.
          optional: true
        - id: parameters.nodeSetup.mountVolumes.azureBlobFileSystems
          type:
            - array
          description: >-
            Azure Blob file systems. A collection of Azure Blob Containers that
            are to

            be mounted to the cluster nodes.
          optional: true
        - id: parameters.nodeSetup.mountVolumes.fileServers
          type:
            - array
          description: >-
            File Servers.

            A collection of Batch AI File Servers that are to be mounted to the
            cluster

            nodes.
          optional: true
        - id: parameters.nodeSetup.mountVolumes.unmanagedFileSystems
          type:
            - array
          description: >-
            Unmanaged file systems. A collection of unmanaged file systems that
            are to

            be mounted to the cluster nodes.
          optional: true
        - id: parameters.nodeSetup.performanceCountersSettings
          type:
            - object
          description: >-
            Performance counters settings. Settings for performance counters
            collecting

            and uploading.
          optional: true
        - id: >-
            parameters.nodeSetup.performanceCountersSettings.appInsightsReference
          type:
            - object
          description: >-
            Azure

            Application Insights reference. Azure Application Insights
            information for

            performance counters reporting. If provided, Batch AI will upload
            node

            performance counters to the corresponding Azure Application Insights

            account.
        - id: >-
            parameters.nodeSetup.performanceCountersSettings.appInsightsReference.component
          type:
            - object
          description: Component ID. Azure Application Insights component resource ID.
        - id: >-
            parameters.nodeSetup.performanceCountersSettings.appInsightsReference.instrumentationKey
          type:
            - string
          description: >-
            Instrumentation Key. Value of the Azure Application Insights
            instrumentation

            key.
          optional: true
        - id: >-
            parameters.nodeSetup.performanceCountersSettings.appInsightsReference.instrumentationKeySecretReference
          type:
            - object
          description: >-
            Instrumentation key KeyVault Secret reference. KeyVault Store and
            Secret

            which contains Azure Application Insights instrumentation key. One
            of

            instrumentationKey or instrumentationKeySecretReference must be
            specified.
          optional: true
        - id: >-
            parameters.nodeSetup.performanceCountersSettings.appInsightsReference.instrumentationKeySecretReference.sourceVault
          type:
            - object
          description: >-
            Key Vault resource identifier. Fully qualified resource indentifier
            of the

            Key Vault.
        - id: >-
            parameters.nodeSetup.performanceCountersSettings.appInsightsReference.instrumentationKeySecretReference.secretUrl
          type:
            - string
          description: Secret URL. The URL referencing a secret in the Key Vault.
        - id: parameters.userAccountSettings
          type:
            - object
          description: >-
            User account settings.

            Settings for an administrator user account that will be created on
            each

            compute node in the cluster.
        - id: parameters.userAccountSettings.adminUserName
          type:
            - string
          description: |-
            User name. Name
            of the administrator user account which can be used to SSH to nodes.
        - id: parameters.userAccountSettings.adminUserSshPublicKey
          type:
            - string
          description: |-
            SSH
            public key. SSH public key of the administrator user account.
          optional: true
        - id: parameters.userAccountSettings.adminUserPassword
          type:
            - string
          description: |-
            Password.
            Password of the administrator user account.
          optional: true
        - id: parameters.subnet
          type:
            - object
          description: >-
            Subnet. Existing virtual network subnet

            to put the cluster nodes in. Note, if a File Server mount configured
            in node

            setup, the File Server's subnet will be used automatically.
          optional: true
        - id: parameters.subnet.id
          type:
            - string
          description: The ID of the resource
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
        - id: optionalCallback
          type:
            - function
          description: The optional callback.
          optional: true
      return:
        type:
          - function
          - Promise
        description: |-
          If a callback was passed as the last parameter
          then it returns the callback else returns a Promise.

          {Promise} A promise is returned
      content: >-
        function beginCreate(resourceGroupName, workspaceName, clusterName,
        parameters, options, optionalCallback)
    langs:
      - js
  - uid: 'azure-arm-batchai.Clusters#beginDeleteMethodWithHttpOperationResponse'
    id: 'azure-arm-batchai.Clusters#beginDeleteMethodWithHttpOperationResponse'
    parent: azure-arm-batchai.Clusters
    name: >-
      beginDeleteMethodWithHttpOperationResponse(resourceGroupName,
      workspaceName, clusterName, options)
    summary: Deletes a Cluster.
    fullName: >-
      azure-arm-batchai.Clusters.beginDeleteMethodWithHttpOperationResponse(resourceGroupName,
      workspaceName, clusterName, options)
    tags:
      - originalTitle: resolve
        title: resolve
        text: '{HttpOperationResponse<null>} - The deserialized result object.'
        value: '{HttpOperationResponse<null>} - The deserialized result object.'
      - originalTitle: reject
        title: reject
        text: '{Error} - The error object.'
        value: '{Error} - The error object.'
    type: Function
    syntax:
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |-
            Name of the resource group to which the
            resource belongs.
        - id: workspaceName
          type:
            - string
          description: >-
            The name of the workspace. Workspace names can

            only contain a combination of alphanumeric characters along with
            dash (-)

            and underscore (_). The name must be from 1 through 64 characters
            long.
        - id: clusterName
          type:
            - string
          description: >-
            The name of the cluster within the specified

            resource group. Cluster names can only contain a combination of
            alphanumeric

            characters along with dash (-) and underscore (_). The name must be
            from 1

            through 64 characters long.
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
      return:
        type:
          - Promise
        description: A promise is returned
      content: >-
        function beginDeleteMethodWithHttpOperationResponse(resourceGroupName,
        workspaceName, clusterName, options)
    langs:
      - js
  - uid: 'azure-arm-batchai.Clusters#beginDeleteMethod'
    id: 'azure-arm-batchai.Clusters#beginDeleteMethod'
    parent: azure-arm-batchai.Clusters
    name: >-
      beginDeleteMethod(resourceGroupName, workspaceName, clusterName, options,
      optionalCallback)
    summary: Deletes a Cluster.
    fullName: >-
      azure-arm-batchai.Clusters.beginDeleteMethod(resourceGroupName,
      workspaceName, clusterName, options, optionalCallback)
    tags:
      - originalTitle: resolve
        title: resolve
        text: '{null} - The deserialized result object.'
        value: '{null} - The deserialized result object.'
      - originalTitle: reject
        title: reject
        text: |-
          {Error} - The error object.

          {function} optionalCallback(err, result, request, response)

                               {Error}  err        - The Error object if an error occurred, null otherwise.

                               {null} [result]   - The deserialized result object if an error did not occur.

                               {object} [request]  - The HTTP Request object if an error did not occur.

                               {stream} [response] - The HTTP Response stream if an error did not occur.
        value: |-
          {Error} - The error object.

          {function} optionalCallback(err, result, request, response)

                               {Error}  err        - The Error object if an error occurred, null otherwise.

                               {null} [result]   - The deserialized result object if an error did not occur.

                               {object} [request]  - The HTTP Request object if an error did not occur.

                               {stream} [response] - The HTTP Response stream if an error did not occur.
    type: Function
    syntax:
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |-
            Name of the resource group to which the
            resource belongs.
        - id: workspaceName
          type:
            - string
          description: >-
            The name of the workspace. Workspace names can

            only contain a combination of alphanumeric characters along with
            dash (-)

            and underscore (_). The name must be from 1 through 64 characters
            long.
        - id: clusterName
          type:
            - string
          description: >-
            The name of the cluster within the specified

            resource group. Cluster names can only contain a combination of
            alphanumeric

            characters along with dash (-) and underscore (_). The name must be
            from 1

            through 64 characters long.
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
        - id: optionalCallback
          type:
            - function
          description: The optional callback.
          optional: true
      return:
        type:
          - function
          - Promise
        description: |-
          If a callback was passed as the last parameter
          then it returns the callback else returns a Promise.

          {Promise} A promise is returned
      content: >-
        function beginDeleteMethod(resourceGroupName, workspaceName,
        clusterName, options, optionalCallback)
    langs:
      - js
  - uid: >-
      azure-arm-batchai.Clusters#listRemoteLoginInformationNextWithHttpOperationResponse
    id: >-
      azure-arm-batchai.Clusters#listRemoteLoginInformationNextWithHttpOperationResponse
    parent: azure-arm-batchai.Clusters
    name: >-
      listRemoteLoginInformationNextWithHttpOperationResponse(nextPageLink,
      options)
    summary: 'Get the IP address, port of all the compute nodes in the Cluster.'
    fullName: >-
      azure-arm-batchai.Clusters.listRemoteLoginInformationNextWithHttpOperationResponse(nextPageLink,
      options)
    tags:
      - originalTitle: resolve
        title: resolve
        text: >-
          {HttpOperationResponse<RemoteLoginInformationListResult>} - The
          deserialized result object.
        value: >-
          {HttpOperationResponse<RemoteLoginInformationListResult>} - The
          deserialized result object.
      - originalTitle: reject
        title: reject
        text: '{Error} - The error object.'
        value: '{Error} - The error object.'
    type: Function
    syntax:
      parameters:
        - id: nextPageLink
          type:
            - string
          description: |-
            The NextLink from the previous successful call
            to List operation.
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
      return:
        type:
          - Promise
        description: A promise is returned
      content: >-
        function
        listRemoteLoginInformationNextWithHttpOperationResponse(nextPageLink,
        options)
    langs:
      - js
  - uid: 'azure-arm-batchai.Clusters#listRemoteLoginInformationNext'
    id: 'azure-arm-batchai.Clusters#listRemoteLoginInformationNext'
    parent: azure-arm-batchai.Clusters
    name: 'listRemoteLoginInformationNext(nextPageLink, options, optionalCallback)'
    summary: 'Get the IP address, port of all the compute nodes in the Cluster.'
    fullName: >-
      azure-arm-batchai.Clusters.listRemoteLoginInformationNext(nextPageLink,
      options, optionalCallback)
    tags:
      - originalTitle: resolve
        title: resolve
        text: '{RemoteLoginInformationListResult} - The deserialized result object.'
        value: '{RemoteLoginInformationListResult} - The deserialized result object.'
      - originalTitle: reject
        title: reject
        text: |-
          {Error} - The error object.

          {function} optionalCallback(err, result, request, response)

                               {Error}  err        - The Error object if an error occurred, null otherwise.

                               {object} [result]   - The deserialized result object if an error did not occur.
                               See {@link RemoteLoginInformationListResult} for more
                               information.

                               {object} [request]  - The HTTP Request object if an error did not occur.

                               {stream} [response] - The HTTP Response stream if an error did not occur.
        value: |-
          {Error} - The error object.

          {function} optionalCallback(err, result, request, response)

                               {Error}  err        - The Error object if an error occurred, null otherwise.

                               {object} [result]   - The deserialized result object if an error did not occur.
                               See {@link RemoteLoginInformationListResult} for more
                               information.

                               {object} [request]  - The HTTP Request object if an error did not occur.

                               {stream} [response] - The HTTP Response stream if an error did not occur.
    type: Function
    syntax:
      parameters:
        - id: nextPageLink
          type:
            - string
          description: |-
            The NextLink from the previous successful call
            to List operation.
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
        - id: optionalCallback
          type:
            - function
          description: The optional callback.
          optional: true
      return:
        type:
          - function
          - Promise
        description: |-
          If a callback was passed as the last parameter
          then it returns the callback else returns a Promise.

          {Promise} A promise is returned
      content: >-
        function listRemoteLoginInformationNext(nextPageLink, options,
        optionalCallback)
    langs:
      - js
  - uid: 'azure-arm-batchai.Clusters#listByWorkspaceNextWithHttpOperationResponse'
    id: 'azure-arm-batchai.Clusters#listByWorkspaceNextWithHttpOperationResponse'
    parent: azure-arm-batchai.Clusters
    name: 'listByWorkspaceNextWithHttpOperationResponse(nextPageLink, options)'
    summary: Gets information about Clusters associated with the given Workspace.
    fullName: >-
      azure-arm-batchai.Clusters.listByWorkspaceNextWithHttpOperationResponse(nextPageLink,
      options)
    tags:
      - originalTitle: resolve
        title: resolve
        text: >-
          {HttpOperationResponse<ClusterListResult>} - The deserialized result
          object.
        value: >-
          {HttpOperationResponse<ClusterListResult>} - The deserialized result
          object.
      - originalTitle: reject
        title: reject
        text: '{Error} - The error object.'
        value: '{Error} - The error object.'
    type: Function
    syntax:
      parameters:
        - id: nextPageLink
          type:
            - string
          description: |-
            The NextLink from the previous successful call
            to List operation.
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
      return:
        type:
          - Promise
        description: A promise is returned
      content: >-
        function listByWorkspaceNextWithHttpOperationResponse(nextPageLink,
        options)
    langs:
      - js
  - uid: 'azure-arm-batchai.Clusters#listByWorkspaceNext'
    id: 'azure-arm-batchai.Clusters#listByWorkspaceNext'
    parent: azure-arm-batchai.Clusters
    name: 'listByWorkspaceNext(nextPageLink, options, optionalCallback)'
    summary: Gets information about Clusters associated with the given Workspace.
    fullName: >-
      azure-arm-batchai.Clusters.listByWorkspaceNext(nextPageLink, options,
      optionalCallback)
    tags:
      - originalTitle: resolve
        title: resolve
        text: '{ClusterListResult} - The deserialized result object.'
        value: '{ClusterListResult} - The deserialized result object.'
      - originalTitle: reject
        title: reject
        text: |-
          {Error} - The error object.

          {function} optionalCallback(err, result, request, response)

                               {Error}  err        - The Error object if an error occurred, null otherwise.

                               {object} [result]   - The deserialized result object if an error did not occur.
                               See {@link ClusterListResult} for more information.

                               {object} [request]  - The HTTP Request object if an error did not occur.

                               {stream} [response] - The HTTP Response stream if an error did not occur.
        value: |-
          {Error} - The error object.

          {function} optionalCallback(err, result, request, response)

                               {Error}  err        - The Error object if an error occurred, null otherwise.

                               {object} [result]   - The deserialized result object if an error did not occur.
                               See {@link ClusterListResult} for more information.

                               {object} [request]  - The HTTP Request object if an error did not occur.

                               {stream} [response] - The HTTP Response stream if an error did not occur.
    type: Function
    syntax:
      parameters:
        - id: nextPageLink
          type:
            - string
          description: |-
            The NextLink from the previous successful call
            to List operation.
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
        - id: optionalCallback
          type:
            - function
          description: The optional callback.
          optional: true
      return:
        type:
          - function
          - Promise
        description: |-
          If a callback was passed as the last parameter
          then it returns the callback else returns a Promise.

          {Promise} A promise is returned
      content: 'function listByWorkspaceNext(nextPageLink, options, optionalCallback)'
    langs:
      - js
