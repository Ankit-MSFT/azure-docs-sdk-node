### YamlMime:UniversalReference
items:
  - uid: azure-arm-batchai.FileServers
    id: azure-arm-batchai.FileServers
    name: FileServers
    summary: Class representing a FileServers.
    fullName: azure-arm-batchai.FileServers
    type: Class
    children:
      - 'azure-arm-batchai.FileServers.#ctor'
      - 'azure-arm-batchai.FileServers#createWithHttpOperationResponse'
      - 'azure-arm-batchai.FileServers#create'
      - 'azure-arm-batchai.FileServers#deleteMethodWithHttpOperationResponse'
      - 'azure-arm-batchai.FileServers#deleteMethod'
      - 'azure-arm-batchai.FileServers#getWithHttpOperationResponse'
      - 'azure-arm-batchai.FileServers#get'
      - 'azure-arm-batchai.FileServers#listByWorkspaceWithHttpOperationResponse'
      - 'azure-arm-batchai.FileServers#listByWorkspace'
      - 'azure-arm-batchai.FileServers#beginCreateWithHttpOperationResponse'
      - 'azure-arm-batchai.FileServers#beginCreate'
      - 'azure-arm-batchai.FileServers#beginDeleteMethodWithHttpOperationResponse'
      - 'azure-arm-batchai.FileServers#beginDeleteMethod'
      - >-
        azure-arm-batchai.FileServers#listByWorkspaceNextWithHttpOperationResponse
      - 'azure-arm-batchai.FileServers#listByWorkspaceNext'
    langs:
      - js
  - id: 'azure-arm-batchai.FileServers.#ctor'
    uid: 'azure-arm-batchai.FileServers.#ctor'
    parent: azure-arm-batchai.FileServers
    name: FileServers(client)
    fullName: azure-arm-batchai.FileServers.FileServers(client)
    summary: Create a FileServers.
    type: Constructor
    syntax:
      parameters:
        - id: client
          type:
            - undefinedBatchAIManagementClient
          description: Reference to the service client.
      content: new FileServers(client)
    langs:
      - js
  - uid: 'azure-arm-batchai.FileServers#createWithHttpOperationResponse'
    id: 'azure-arm-batchai.FileServers#createWithHttpOperationResponse'
    parent: azure-arm-batchai.FileServers
    name: >-
      createWithHttpOperationResponse(resourceGroupName, workspaceName,
      fileServerName, parameters, options)
    summary: Creates a File Server in the given workspace.
    fullName: >-
      azure-arm-batchai.FileServers.createWithHttpOperationResponse(resourceGroupName,
      workspaceName, fileServerName, parameters, options)
    tags:
      - originalTitle: resolve
        title: resolve
        text: '{HttpOperationResponse<FileServer>} - The deserialized result object.'
        value: '{HttpOperationResponse<FileServer>} - The deserialized result object.'
      - originalTitle: reject
        title: reject
        text: '{Error} - The error object.'
        value: '{Error} - The error object.'
    type: Function
    syntax:
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |-
            Name of the resource group to which the
            resource belongs.
        - id: workspaceName
          type:
            - string
          description: >-
            The name of the workspace. Workspace names can

            only contain a combination of alphanumeric characters along with
            dash (-)

            and underscore (_). The name must be from 1 through 64 characters
            long.
        - id: fileServerName
          type:
            - string
          description: >-
            The name of the file server within the

            specified resource group. File server names can only contain a
            combination

            of alphanumeric characters along with dash (-) and underscore (_).
            The name

            must be from 1 through 64 characters long.
        - id: parameters
          type:
            - object
          description: |-
            The parameters to provide for File Server
            creation.
        - id: parameters.vmSize
          type:
            - string
          description: >-
            VM size. The size of the virtual machine

            for the File Server. For information about available VM sizes from
            the

            Virtual Machines Marketplace, see Sizes for Virtual Machines
            (Linux).
        - id: parameters.sshConfiguration
          type:
            - object
          description: |-
            SSH configuration. SSH
            configuration for the File Server node.
        - id: parameters.sshConfiguration.publicIPsToAllow
          type:
            - array
          description: >-
            Allowed public

            IPs. List of source IP ranges to allow SSH connection from. The
            default

            value is '*' (all source IPs are allowed). Maximum number of IP
            ranges that

            can be specified is 400.
          optional: true
        - id: parameters.sshConfiguration.userAccountSettings
          type:
            - object
          description: >-
            User account

            settings. Settings for administrator user account to be created on a
            node.

            The account can be used to establish SSH connection to the node.
        - id: parameters.sshConfiguration.userAccountSettings.adminUserName
          type:
            - string
          description: >-
            User name.

            Name of the administrator user account which can be used to SSH to
            nodes.
        - id: >-
            parameters.sshConfiguration.userAccountSettings.adminUserSshPublicKey
          type:
            - string
          description: |-
            SSH
            public key. SSH public key of the administrator user account.
          optional: true
        - id: parameters.sshConfiguration.userAccountSettings.adminUserPassword
          type:
            - string
          description: Password. Password of the administrator user account.
          optional: true
        - id: parameters.dataDisks
          type:
            - object
          description: |-
            Data disks. Settings for the data disks
            which will be created for the File Server.
        - id: parameters.dataDisks.diskSizeInGB
          type:
            - number
          description: |-
            Disk size in GB. Disk size
            in GB for the blank data disks.
        - id: parameters.dataDisks.cachingType
          type:
            - string
          description: >-
            Caching type. Caching

            type for the disks. Available values are none (default), readonly,

            readwrite. Caching type can be set only for VM sizes supporting
            premium

            storage. Possible values include: 'none', 'readonly', 'readwrite'
          optional: true
        - id: parameters.dataDisks.diskCount
          type:
            - number
          description: >-
            Number of data disks. Number

            of data disks attached to the File Server. If multiple disks
            attached, they

            will be configured in RAID level 0.
        - id: parameters.dataDisks.storageAccountType
          type:
            - string
          description: >-
            Storage account

            type. Type of storage account to be used on the disk. Possible
            values are:

            Standard_LRS or Premium_LRS. Premium storage account type can only
            be used

            with VM sizes supporting premium storage. Possible values include:

            'Standard_LRS', 'Premium_LRS'
        - id: parameters.subnet
          type:
            - object
          description: >-
            Subnet identifier. Identifier of an

            existing virtual network subnet to put the File Server in. If not
            provided,

            a new virtual network and subnet will be created.
          optional: true
        - id: parameters.subnet.id
          type:
            - string
          description: The ID of the resource
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
      return:
        type:
          - Promise
        description: A promise is returned
      content: >-
        function createWithHttpOperationResponse(resourceGroupName,
        workspaceName, fileServerName, parameters, options)
    langs:
      - js
  - uid: 'azure-arm-batchai.FileServers#create'
    id: 'azure-arm-batchai.FileServers#create'
    parent: azure-arm-batchai.FileServers
    name: >-
      create(resourceGroupName, workspaceName, fileServerName, parameters,
      options, optionalCallback)
    summary: Creates a File Server in the given workspace.
    fullName: >-
      azure-arm-batchai.FileServers.create(resourceGroupName, workspaceName,
      fileServerName, parameters, options, optionalCallback)
    tags:
      - originalTitle: resolve
        title: resolve
        text: '{FileServer} - The deserialized result object.'
        value: '{FileServer} - The deserialized result object.'
      - originalTitle: reject
        title: reject
        text: |-
          {Error} - The error object.

          {function} optionalCallback(err, result, request, response)

                               {Error}  err        - The Error object if an error occurred, null otherwise.

                               {object} [result]   - The deserialized result object if an error did not occur.
                               See {@link FileServer} for more information.

                               {object} [request]  - The HTTP Request object if an error did not occur.

                               {stream} [response] - The HTTP Response stream if an error did not occur.
        value: |-
          {Error} - The error object.

          {function} optionalCallback(err, result, request, response)

                               {Error}  err        - The Error object if an error occurred, null otherwise.

                               {object} [result]   - The deserialized result object if an error did not occur.
                               See {@link FileServer} for more information.

                               {object} [request]  - The HTTP Request object if an error did not occur.

                               {stream} [response] - The HTTP Response stream if an error did not occur.
    type: Function
    syntax:
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |-
            Name of the resource group to which the
            resource belongs.
        - id: workspaceName
          type:
            - string
          description: >-
            The name of the workspace. Workspace names can

            only contain a combination of alphanumeric characters along with
            dash (-)

            and underscore (_). The name must be from 1 through 64 characters
            long.
        - id: fileServerName
          type:
            - string
          description: >-
            The name of the file server within the

            specified resource group. File server names can only contain a
            combination

            of alphanumeric characters along with dash (-) and underscore (_).
            The name

            must be from 1 through 64 characters long.
        - id: parameters
          type:
            - object
          description: |-
            The parameters to provide for File Server
            creation.
        - id: parameters.vmSize
          type:
            - string
          description: >-
            VM size. The size of the virtual machine

            for the File Server. For information about available VM sizes from
            the

            Virtual Machines Marketplace, see Sizes for Virtual Machines
            (Linux).
        - id: parameters.sshConfiguration
          type:
            - object
          description: |-
            SSH configuration. SSH
            configuration for the File Server node.
        - id: parameters.sshConfiguration.publicIPsToAllow
          type:
            - array
          description: >-
            Allowed public

            IPs. List of source IP ranges to allow SSH connection from. The
            default

            value is '*' (all source IPs are allowed). Maximum number of IP
            ranges that

            can be specified is 400.
          optional: true
        - id: parameters.sshConfiguration.userAccountSettings
          type:
            - object
          description: >-
            User account

            settings. Settings for administrator user account to be created on a
            node.

            The account can be used to establish SSH connection to the node.
        - id: parameters.sshConfiguration.userAccountSettings.adminUserName
          type:
            - string
          description: >-
            User name.

            Name of the administrator user account which can be used to SSH to
            nodes.
        - id: >-
            parameters.sshConfiguration.userAccountSettings.adminUserSshPublicKey
          type:
            - string
          description: |-
            SSH
            public key. SSH public key of the administrator user account.
          optional: true
        - id: parameters.sshConfiguration.userAccountSettings.adminUserPassword
          type:
            - string
          description: Password. Password of the administrator user account.
          optional: true
        - id: parameters.dataDisks
          type:
            - object
          description: |-
            Data disks. Settings for the data disks
            which will be created for the File Server.
        - id: parameters.dataDisks.diskSizeInGB
          type:
            - number
          description: |-
            Disk size in GB. Disk size
            in GB for the blank data disks.
        - id: parameters.dataDisks.cachingType
          type:
            - string
          description: >-
            Caching type. Caching

            type for the disks. Available values are none (default), readonly,

            readwrite. Caching type can be set only for VM sizes supporting
            premium

            storage. Possible values include: 'none', 'readonly', 'readwrite'
          optional: true
        - id: parameters.dataDisks.diskCount
          type:
            - number
          description: >-
            Number of data disks. Number

            of data disks attached to the File Server. If multiple disks
            attached, they

            will be configured in RAID level 0.
        - id: parameters.dataDisks.storageAccountType
          type:
            - string
          description: >-
            Storage account

            type. Type of storage account to be used on the disk. Possible
            values are:

            Standard_LRS or Premium_LRS. Premium storage account type can only
            be used

            with VM sizes supporting premium storage. Possible values include:

            'Standard_LRS', 'Premium_LRS'
        - id: parameters.subnet
          type:
            - object
          description: >-
            Subnet identifier. Identifier of an

            existing virtual network subnet to put the File Server in. If not
            provided,

            a new virtual network and subnet will be created.
          optional: true
        - id: parameters.subnet.id
          type:
            - string
          description: The ID of the resource
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
        - id: optionalCallback
          type:
            - function
          description: The optional callback.
          optional: true
      return:
        type:
          - function
          - Promise
        description: |-
          If a callback was passed as the last parameter
          then it returns the callback else returns a Promise.

          {Promise} A promise is returned
      content: >-
        function create(resourceGroupName, workspaceName, fileServerName,
        parameters, options, optionalCallback)
    langs:
      - js
  - uid: 'azure-arm-batchai.FileServers#deleteMethodWithHttpOperationResponse'
    id: 'azure-arm-batchai.FileServers#deleteMethodWithHttpOperationResponse'
    parent: azure-arm-batchai.FileServers
    name: >-
      deleteMethodWithHttpOperationResponse(resourceGroupName, workspaceName,
      fileServerName, options)
    summary: Deletes a File Server.
    fullName: >-
      azure-arm-batchai.FileServers.deleteMethodWithHttpOperationResponse(resourceGroupName,
      workspaceName, fileServerName, options)
    tags:
      - originalTitle: resolve
        title: resolve
        text: '{HttpOperationResponse<null>} - The deserialized result object.'
        value: '{HttpOperationResponse<null>} - The deserialized result object.'
      - originalTitle: reject
        title: reject
        text: '{Error} - The error object.'
        value: '{Error} - The error object.'
    type: Function
    syntax:
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |-
            Name of the resource group to which the
            resource belongs.
        - id: workspaceName
          type:
            - string
          description: >-
            The name of the workspace. Workspace names can

            only contain a combination of alphanumeric characters along with
            dash (-)

            and underscore (_). The name must be from 1 through 64 characters
            long.
        - id: fileServerName
          type:
            - string
          description: >-
            The name of the file server within the

            specified resource group. File server names can only contain a
            combination

            of alphanumeric characters along with dash (-) and underscore (_).
            The name

            must be from 1 through 64 characters long.
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
      return:
        type:
          - Promise
        description: A promise is returned
      content: >-
        function deleteMethodWithHttpOperationResponse(resourceGroupName,
        workspaceName, fileServerName, options)
    langs:
      - js
  - uid: 'azure-arm-batchai.FileServers#deleteMethod'
    id: 'azure-arm-batchai.FileServers#deleteMethod'
    parent: azure-arm-batchai.FileServers
    name: >-
      deleteMethod(resourceGroupName, workspaceName, fileServerName, options,
      optionalCallback)
    summary: Deletes a File Server.
    fullName: >-
      azure-arm-batchai.FileServers.deleteMethod(resourceGroupName,
      workspaceName, fileServerName, options, optionalCallback)
    tags:
      - originalTitle: resolve
        title: resolve
        text: '{null} - The deserialized result object.'
        value: '{null} - The deserialized result object.'
      - originalTitle: reject
        title: reject
        text: |-
          {Error} - The error object.

          {function} optionalCallback(err, result, request, response)

                               {Error}  err        - The Error object if an error occurred, null otherwise.

                               {null} [result]   - The deserialized result object if an error did not occur.

                               {object} [request]  - The HTTP Request object if an error did not occur.

                               {stream} [response] - The HTTP Response stream if an error did not occur.
        value: |-
          {Error} - The error object.

          {function} optionalCallback(err, result, request, response)

                               {Error}  err        - The Error object if an error occurred, null otherwise.

                               {null} [result]   - The deserialized result object if an error did not occur.

                               {object} [request]  - The HTTP Request object if an error did not occur.

                               {stream} [response] - The HTTP Response stream if an error did not occur.
    type: Function
    syntax:
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |-
            Name of the resource group to which the
            resource belongs.
        - id: workspaceName
          type:
            - string
          description: >-
            The name of the workspace. Workspace names can

            only contain a combination of alphanumeric characters along with
            dash (-)

            and underscore (_). The name must be from 1 through 64 characters
            long.
        - id: fileServerName
          type:
            - string
          description: >-
            The name of the file server within the

            specified resource group. File server names can only contain a
            combination

            of alphanumeric characters along with dash (-) and underscore (_).
            The name

            must be from 1 through 64 characters long.
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
        - id: optionalCallback
          type:
            - function
          description: The optional callback.
          optional: true
      return:
        type:
          - function
          - Promise
        description: |-
          If a callback was passed as the last parameter
          then it returns the callback else returns a Promise.

          {Promise} A promise is returned
      content: >-
        function deleteMethod(resourceGroupName, workspaceName, fileServerName,
        options, optionalCallback)
    langs:
      - js
  - uid: 'azure-arm-batchai.FileServers#getWithHttpOperationResponse'
    id: 'azure-arm-batchai.FileServers#getWithHttpOperationResponse'
    parent: azure-arm-batchai.FileServers
    name: >-
      getWithHttpOperationResponse(resourceGroupName, workspaceName,
      fileServerName, options)
    summary: Gets information about a File Server.
    fullName: >-
      azure-arm-batchai.FileServers.getWithHttpOperationResponse(resourceGroupName,
      workspaceName, fileServerName, options)
    tags:
      - originalTitle: resolve
        title: resolve
        text: '{HttpOperationResponse<FileServer>} - The deserialized result object.'
        value: '{HttpOperationResponse<FileServer>} - The deserialized result object.'
      - originalTitle: reject
        title: reject
        text: '{Error} - The error object.'
        value: '{Error} - The error object.'
    type: Function
    syntax:
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |-
            Name of the resource group to which the
            resource belongs.
        - id: workspaceName
          type:
            - string
          description: >-
            The name of the workspace. Workspace names can

            only contain a combination of alphanumeric characters along with
            dash (-)

            and underscore (_). The name must be from 1 through 64 characters
            long.
        - id: fileServerName
          type:
            - string
          description: >-
            The name of the file server within the

            specified resource group. File server names can only contain a
            combination

            of alphanumeric characters along with dash (-) and underscore (_).
            The name

            must be from 1 through 64 characters long.
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
      return:
        type:
          - Promise
        description: A promise is returned
      content: >-
        function getWithHttpOperationResponse(resourceGroupName, workspaceName,
        fileServerName, options)
    langs:
      - js
  - uid: 'azure-arm-batchai.FileServers#get'
    id: 'azure-arm-batchai.FileServers#get'
    parent: azure-arm-batchai.FileServers
    name: >-
      get(resourceGroupName, workspaceName, fileServerName, options,
      optionalCallback)
    summary: Gets information about a File Server.
    fullName: >-
      azure-arm-batchai.FileServers.get(resourceGroupName, workspaceName,
      fileServerName, options, optionalCallback)
    tags:
      - originalTitle: resolve
        title: resolve
        text: '{FileServer} - The deserialized result object.'
        value: '{FileServer} - The deserialized result object.'
      - originalTitle: reject
        title: reject
        text: |-
          {Error} - The error object.

          {function} optionalCallback(err, result, request, response)

                               {Error}  err        - The Error object if an error occurred, null otherwise.

                               {object} [result]   - The deserialized result object if an error did not occur.
                               See {@link FileServer} for more information.

                               {object} [request]  - The HTTP Request object if an error did not occur.

                               {stream} [response] - The HTTP Response stream if an error did not occur.
        value: |-
          {Error} - The error object.

          {function} optionalCallback(err, result, request, response)

                               {Error}  err        - The Error object if an error occurred, null otherwise.

                               {object} [result]   - The deserialized result object if an error did not occur.
                               See {@link FileServer} for more information.

                               {object} [request]  - The HTTP Request object if an error did not occur.

                               {stream} [response] - The HTTP Response stream if an error did not occur.
    type: Function
    syntax:
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |-
            Name of the resource group to which the
            resource belongs.
        - id: workspaceName
          type:
            - string
          description: >-
            The name of the workspace. Workspace names can

            only contain a combination of alphanumeric characters along with
            dash (-)

            and underscore (_). The name must be from 1 through 64 characters
            long.
        - id: fileServerName
          type:
            - string
          description: >-
            The name of the file server within the

            specified resource group. File server names can only contain a
            combination

            of alphanumeric characters along with dash (-) and underscore (_).
            The name

            must be from 1 through 64 characters long.
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
        - id: optionalCallback
          type:
            - function
          description: The optional callback.
          optional: true
      return:
        type:
          - function
          - Promise
        description: |-
          If a callback was passed as the last parameter
          then it returns the callback else returns a Promise.

          {Promise} A promise is returned
      content: >-
        function get(resourceGroupName, workspaceName, fileServerName, options,
        optionalCallback)
    langs:
      - js
  - uid: 'azure-arm-batchai.FileServers#listByWorkspaceWithHttpOperationResponse'
    id: 'azure-arm-batchai.FileServers#listByWorkspaceWithHttpOperationResponse'
    parent: azure-arm-batchai.FileServers
    name: >-
      listByWorkspaceWithHttpOperationResponse(resourceGroupName, workspaceName,
      options)
    summary: Gets a list of File Servers associated with the specified workspace.
    fullName: >-
      azure-arm-batchai.FileServers.listByWorkspaceWithHttpOperationResponse(resourceGroupName,
      workspaceName, options)
    tags:
      - originalTitle: resolve
        title: resolve
        text: >-
          {HttpOperationResponse<FileServerListResult>} - The deserialized
          result object.
        value: >-
          {HttpOperationResponse<FileServerListResult>} - The deserialized
          result object.
      - originalTitle: reject
        title: reject
        text: '{Error} - The error object.'
        value: '{Error} - The error object.'
    type: Function
    syntax:
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |-
            Name of the resource group to which the
            resource belongs.
        - id: workspaceName
          type:
            - string
          description: >-
            The name of the workspace. Workspace names can

            only contain a combination of alphanumeric characters along with
            dash (-)

            and underscore (_). The name must be from 1 through 64 characters
            long.
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.fileServersListByWorkspaceOptions
          type:
            - object
          description: |-
            Additional
            parameters for the operation
          optional: true
        - id: options.fileServersListByWorkspaceOptions.maxResults
          type:
            - number
          description: >-
            The

            maximum number of items to return in the response. A maximum of 1000
            files

            can be returned.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
      return:
        type:
          - Promise
        description: A promise is returned
      content: >-
        function listByWorkspaceWithHttpOperationResponse(resourceGroupName,
        workspaceName, options)
    langs:
      - js
  - uid: 'azure-arm-batchai.FileServers#listByWorkspace'
    id: 'azure-arm-batchai.FileServers#listByWorkspace'
    parent: azure-arm-batchai.FileServers
    name: >-
      listByWorkspace(resourceGroupName, workspaceName, options,
      optionalCallback)
    summary: Gets a list of File Servers associated with the specified workspace.
    fullName: >-
      azure-arm-batchai.FileServers.listByWorkspace(resourceGroupName,
      workspaceName, options, optionalCallback)
    tags:
      - originalTitle: resolve
        title: resolve
        text: '{FileServerListResult} - The deserialized result object.'
        value: '{FileServerListResult} - The deserialized result object.'
      - originalTitle: reject
        title: reject
        text: |-
          {Error} - The error object.

          {function} optionalCallback(err, result, request, response)

                               {Error}  err        - The Error object if an error occurred, null otherwise.

                               {object} [result]   - The deserialized result object if an error did not occur.
                               See {@link FileServerListResult} for more information.

                               {object} [request]  - The HTTP Request object if an error did not occur.

                               {stream} [response] - The HTTP Response stream if an error did not occur.
        value: |-
          {Error} - The error object.

          {function} optionalCallback(err, result, request, response)

                               {Error}  err        - The Error object if an error occurred, null otherwise.

                               {object} [result]   - The deserialized result object if an error did not occur.
                               See {@link FileServerListResult} for more information.

                               {object} [request]  - The HTTP Request object if an error did not occur.

                               {stream} [response] - The HTTP Response stream if an error did not occur.
    type: Function
    syntax:
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |-
            Name of the resource group to which the
            resource belongs.
        - id: workspaceName
          type:
            - string
          description: >-
            The name of the workspace. Workspace names can

            only contain a combination of alphanumeric characters along with
            dash (-)

            and underscore (_). The name must be from 1 through 64 characters
            long.
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.fileServersListByWorkspaceOptions
          type:
            - object
          description: |-
            Additional
            parameters for the operation
          optional: true
        - id: options.fileServersListByWorkspaceOptions.maxResults
          type:
            - number
          description: >-
            The

            maximum number of items to return in the response. A maximum of 1000
            files

            can be returned.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
        - id: optionalCallback
          type:
            - function
          description: The optional callback.
          optional: true
      return:
        type:
          - function
          - Promise
        description: |-
          If a callback was passed as the last parameter
          then it returns the callback else returns a Promise.

          {Promise} A promise is returned
      content: >-
        function listByWorkspace(resourceGroupName, workspaceName, options,
        optionalCallback)
    langs:
      - js
  - uid: 'azure-arm-batchai.FileServers#beginCreateWithHttpOperationResponse'
    id: 'azure-arm-batchai.FileServers#beginCreateWithHttpOperationResponse'
    parent: azure-arm-batchai.FileServers
    name: >-
      beginCreateWithHttpOperationResponse(resourceGroupName, workspaceName,
      fileServerName, parameters, options)
    summary: Creates a File Server in the given workspace.
    fullName: >-
      azure-arm-batchai.FileServers.beginCreateWithHttpOperationResponse(resourceGroupName,
      workspaceName, fileServerName, parameters, options)
    tags:
      - originalTitle: resolve
        title: resolve
        text: '{HttpOperationResponse<FileServer>} - The deserialized result object.'
        value: '{HttpOperationResponse<FileServer>} - The deserialized result object.'
      - originalTitle: reject
        title: reject
        text: '{Error} - The error object.'
        value: '{Error} - The error object.'
    type: Function
    syntax:
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |-
            Name of the resource group to which the
            resource belongs.
        - id: workspaceName
          type:
            - string
          description: >-
            The name of the workspace. Workspace names can

            only contain a combination of alphanumeric characters along with
            dash (-)

            and underscore (_). The name must be from 1 through 64 characters
            long.
        - id: fileServerName
          type:
            - string
          description: >-
            The name of the file server within the

            specified resource group. File server names can only contain a
            combination

            of alphanumeric characters along with dash (-) and underscore (_).
            The name

            must be from 1 through 64 characters long.
        - id: parameters
          type:
            - object
          description: |-
            The parameters to provide for File Server
            creation.
        - id: parameters.vmSize
          type:
            - string
          description: >-
            VM size. The size of the virtual machine

            for the File Server. For information about available VM sizes from
            the

            Virtual Machines Marketplace, see Sizes for Virtual Machines
            (Linux).
        - id: parameters.sshConfiguration
          type:
            - object
          description: |-
            SSH configuration. SSH
            configuration for the File Server node.
        - id: parameters.sshConfiguration.publicIPsToAllow
          type:
            - array
          description: >-
            Allowed public

            IPs. List of source IP ranges to allow SSH connection from. The
            default

            value is '*' (all source IPs are allowed). Maximum number of IP
            ranges that

            can be specified is 400.
          optional: true
        - id: parameters.sshConfiguration.userAccountSettings
          type:
            - object
          description: >-
            User account

            settings. Settings for administrator user account to be created on a
            node.

            The account can be used to establish SSH connection to the node.
        - id: parameters.sshConfiguration.userAccountSettings.adminUserName
          type:
            - string
          description: >-
            User name.

            Name of the administrator user account which can be used to SSH to
            nodes.
        - id: >-
            parameters.sshConfiguration.userAccountSettings.adminUserSshPublicKey
          type:
            - string
          description: |-
            SSH
            public key. SSH public key of the administrator user account.
          optional: true
        - id: parameters.sshConfiguration.userAccountSettings.adminUserPassword
          type:
            - string
          description: Password. Password of the administrator user account.
          optional: true
        - id: parameters.dataDisks
          type:
            - object
          description: |-
            Data disks. Settings for the data disks
            which will be created for the File Server.
        - id: parameters.dataDisks.diskSizeInGB
          type:
            - number
          description: |-
            Disk size in GB. Disk size
            in GB for the blank data disks.
        - id: parameters.dataDisks.cachingType
          type:
            - string
          description: >-
            Caching type. Caching

            type for the disks. Available values are none (default), readonly,

            readwrite. Caching type can be set only for VM sizes supporting
            premium

            storage. Possible values include: 'none', 'readonly', 'readwrite'
          optional: true
        - id: parameters.dataDisks.diskCount
          type:
            - number
          description: >-
            Number of data disks. Number

            of data disks attached to the File Server. If multiple disks
            attached, they

            will be configured in RAID level 0.
        - id: parameters.dataDisks.storageAccountType
          type:
            - string
          description: >-
            Storage account

            type. Type of storage account to be used on the disk. Possible
            values are:

            Standard_LRS or Premium_LRS. Premium storage account type can only
            be used

            with VM sizes supporting premium storage. Possible values include:

            'Standard_LRS', 'Premium_LRS'
        - id: parameters.subnet
          type:
            - object
          description: >-
            Subnet identifier. Identifier of an

            existing virtual network subnet to put the File Server in. If not
            provided,

            a new virtual network and subnet will be created.
          optional: true
        - id: parameters.subnet.id
          type:
            - string
          description: The ID of the resource
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
      return:
        type:
          - Promise
        description: A promise is returned
      content: >-
        function beginCreateWithHttpOperationResponse(resourceGroupName,
        workspaceName, fileServerName, parameters, options)
    langs:
      - js
  - uid: 'azure-arm-batchai.FileServers#beginCreate'
    id: 'azure-arm-batchai.FileServers#beginCreate'
    parent: azure-arm-batchai.FileServers
    name: >-
      beginCreate(resourceGroupName, workspaceName, fileServerName, parameters,
      options, optionalCallback)
    summary: Creates a File Server in the given workspace.
    fullName: >-
      azure-arm-batchai.FileServers.beginCreate(resourceGroupName,
      workspaceName, fileServerName, parameters, options, optionalCallback)
    tags:
      - originalTitle: resolve
        title: resolve
        text: '{FileServer} - The deserialized result object.'
        value: '{FileServer} - The deserialized result object.'
      - originalTitle: reject
        title: reject
        text: |-
          {Error} - The error object.

          {function} optionalCallback(err, result, request, response)

                               {Error}  err        - The Error object if an error occurred, null otherwise.

                               {object} [result]   - The deserialized result object if an error did not occur.
                               See {@link FileServer} for more information.

                               {object} [request]  - The HTTP Request object if an error did not occur.

                               {stream} [response] - The HTTP Response stream if an error did not occur.
        value: |-
          {Error} - The error object.

          {function} optionalCallback(err, result, request, response)

                               {Error}  err        - The Error object if an error occurred, null otherwise.

                               {object} [result]   - The deserialized result object if an error did not occur.
                               See {@link FileServer} for more information.

                               {object} [request]  - The HTTP Request object if an error did not occur.

                               {stream} [response] - The HTTP Response stream if an error did not occur.
    type: Function
    syntax:
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |-
            Name of the resource group to which the
            resource belongs.
        - id: workspaceName
          type:
            - string
          description: >-
            The name of the workspace. Workspace names can

            only contain a combination of alphanumeric characters along with
            dash (-)

            and underscore (_). The name must be from 1 through 64 characters
            long.
        - id: fileServerName
          type:
            - string
          description: >-
            The name of the file server within the

            specified resource group. File server names can only contain a
            combination

            of alphanumeric characters along with dash (-) and underscore (_).
            The name

            must be from 1 through 64 characters long.
        - id: parameters
          type:
            - object
          description: |-
            The parameters to provide for File Server
            creation.
        - id: parameters.vmSize
          type:
            - string
          description: >-
            VM size. The size of the virtual machine

            for the File Server. For information about available VM sizes from
            the

            Virtual Machines Marketplace, see Sizes for Virtual Machines
            (Linux).
        - id: parameters.sshConfiguration
          type:
            - object
          description: |-
            SSH configuration. SSH
            configuration for the File Server node.
        - id: parameters.sshConfiguration.publicIPsToAllow
          type:
            - array
          description: >-
            Allowed public

            IPs. List of source IP ranges to allow SSH connection from. The
            default

            value is '*' (all source IPs are allowed). Maximum number of IP
            ranges that

            can be specified is 400.
          optional: true
        - id: parameters.sshConfiguration.userAccountSettings
          type:
            - object
          description: >-
            User account

            settings. Settings for administrator user account to be created on a
            node.

            The account can be used to establish SSH connection to the node.
        - id: parameters.sshConfiguration.userAccountSettings.adminUserName
          type:
            - string
          description: >-
            User name.

            Name of the administrator user account which can be used to SSH to
            nodes.
        - id: >-
            parameters.sshConfiguration.userAccountSettings.adminUserSshPublicKey
          type:
            - string
          description: |-
            SSH
            public key. SSH public key of the administrator user account.
          optional: true
        - id: parameters.sshConfiguration.userAccountSettings.adminUserPassword
          type:
            - string
          description: Password. Password of the administrator user account.
          optional: true
        - id: parameters.dataDisks
          type:
            - object
          description: |-
            Data disks. Settings for the data disks
            which will be created for the File Server.
        - id: parameters.dataDisks.diskSizeInGB
          type:
            - number
          description: |-
            Disk size in GB. Disk size
            in GB for the blank data disks.
        - id: parameters.dataDisks.cachingType
          type:
            - string
          description: >-
            Caching type. Caching

            type for the disks. Available values are none (default), readonly,

            readwrite. Caching type can be set only for VM sizes supporting
            premium

            storage. Possible values include: 'none', 'readonly', 'readwrite'
          optional: true
        - id: parameters.dataDisks.diskCount
          type:
            - number
          description: >-
            Number of data disks. Number

            of data disks attached to the File Server. If multiple disks
            attached, they

            will be configured in RAID level 0.
        - id: parameters.dataDisks.storageAccountType
          type:
            - string
          description: >-
            Storage account

            type. Type of storage account to be used on the disk. Possible
            values are:

            Standard_LRS or Premium_LRS. Premium storage account type can only
            be used

            with VM sizes supporting premium storage. Possible values include:

            'Standard_LRS', 'Premium_LRS'
        - id: parameters.subnet
          type:
            - object
          description: >-
            Subnet identifier. Identifier of an

            existing virtual network subnet to put the File Server in. If not
            provided,

            a new virtual network and subnet will be created.
          optional: true
        - id: parameters.subnet.id
          type:
            - string
          description: The ID of the resource
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
        - id: optionalCallback
          type:
            - function
          description: The optional callback.
          optional: true
      return:
        type:
          - function
          - Promise
        description: |-
          If a callback was passed as the last parameter
          then it returns the callback else returns a Promise.

          {Promise} A promise is returned
      content: >-
        function beginCreate(resourceGroupName, workspaceName, fileServerName,
        parameters, options, optionalCallback)
    langs:
      - js
  - uid: 'azure-arm-batchai.FileServers#beginDeleteMethodWithHttpOperationResponse'
    id: 'azure-arm-batchai.FileServers#beginDeleteMethodWithHttpOperationResponse'
    parent: azure-arm-batchai.FileServers
    name: >-
      beginDeleteMethodWithHttpOperationResponse(resourceGroupName,
      workspaceName, fileServerName, options)
    summary: Deletes a File Server.
    fullName: >-
      azure-arm-batchai.FileServers.beginDeleteMethodWithHttpOperationResponse(resourceGroupName,
      workspaceName, fileServerName, options)
    tags:
      - originalTitle: resolve
        title: resolve
        text: '{HttpOperationResponse<null>} - The deserialized result object.'
        value: '{HttpOperationResponse<null>} - The deserialized result object.'
      - originalTitle: reject
        title: reject
        text: '{Error} - The error object.'
        value: '{Error} - The error object.'
    type: Function
    syntax:
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |-
            Name of the resource group to which the
            resource belongs.
        - id: workspaceName
          type:
            - string
          description: >-
            The name of the workspace. Workspace names can

            only contain a combination of alphanumeric characters along with
            dash (-)

            and underscore (_). The name must be from 1 through 64 characters
            long.
        - id: fileServerName
          type:
            - string
          description: >-
            The name of the file server within the

            specified resource group. File server names can only contain a
            combination

            of alphanumeric characters along with dash (-) and underscore (_).
            The name

            must be from 1 through 64 characters long.
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
      return:
        type:
          - Promise
        description: A promise is returned
      content: >-
        function beginDeleteMethodWithHttpOperationResponse(resourceGroupName,
        workspaceName, fileServerName, options)
    langs:
      - js
  - uid: 'azure-arm-batchai.FileServers#beginDeleteMethod'
    id: 'azure-arm-batchai.FileServers#beginDeleteMethod'
    parent: azure-arm-batchai.FileServers
    name: >-
      beginDeleteMethod(resourceGroupName, workspaceName, fileServerName,
      options, optionalCallback)
    summary: Deletes a File Server.
    fullName: >-
      azure-arm-batchai.FileServers.beginDeleteMethod(resourceGroupName,
      workspaceName, fileServerName, options, optionalCallback)
    tags:
      - originalTitle: resolve
        title: resolve
        text: '{null} - The deserialized result object.'
        value: '{null} - The deserialized result object.'
      - originalTitle: reject
        title: reject
        text: |-
          {Error} - The error object.

          {function} optionalCallback(err, result, request, response)

                               {Error}  err        - The Error object if an error occurred, null otherwise.

                               {null} [result]   - The deserialized result object if an error did not occur.

                               {object} [request]  - The HTTP Request object if an error did not occur.

                               {stream} [response] - The HTTP Response stream if an error did not occur.
        value: |-
          {Error} - The error object.

          {function} optionalCallback(err, result, request, response)

                               {Error}  err        - The Error object if an error occurred, null otherwise.

                               {null} [result]   - The deserialized result object if an error did not occur.

                               {object} [request]  - The HTTP Request object if an error did not occur.

                               {stream} [response] - The HTTP Response stream if an error did not occur.
    type: Function
    syntax:
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |-
            Name of the resource group to which the
            resource belongs.
        - id: workspaceName
          type:
            - string
          description: >-
            The name of the workspace. Workspace names can

            only contain a combination of alphanumeric characters along with
            dash (-)

            and underscore (_). The name must be from 1 through 64 characters
            long.
        - id: fileServerName
          type:
            - string
          description: >-
            The name of the file server within the

            specified resource group. File server names can only contain a
            combination

            of alphanumeric characters along with dash (-) and underscore (_).
            The name

            must be from 1 through 64 characters long.
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
        - id: optionalCallback
          type:
            - function
          description: The optional callback.
          optional: true
      return:
        type:
          - function
          - Promise
        description: |-
          If a callback was passed as the last parameter
          then it returns the callback else returns a Promise.

          {Promise} A promise is returned
      content: >-
        function beginDeleteMethod(resourceGroupName, workspaceName,
        fileServerName, options, optionalCallback)
    langs:
      - js
  - uid: 'azure-arm-batchai.FileServers#listByWorkspaceNextWithHttpOperationResponse'
    id: 'azure-arm-batchai.FileServers#listByWorkspaceNextWithHttpOperationResponse'
    parent: azure-arm-batchai.FileServers
    name: 'listByWorkspaceNextWithHttpOperationResponse(nextPageLink, options)'
    summary: Gets a list of File Servers associated with the specified workspace.
    fullName: >-
      azure-arm-batchai.FileServers.listByWorkspaceNextWithHttpOperationResponse(nextPageLink,
      options)
    tags:
      - originalTitle: resolve
        title: resolve
        text: >-
          {HttpOperationResponse<FileServerListResult>} - The deserialized
          result object.
        value: >-
          {HttpOperationResponse<FileServerListResult>} - The deserialized
          result object.
      - originalTitle: reject
        title: reject
        text: '{Error} - The error object.'
        value: '{Error} - The error object.'
    type: Function
    syntax:
      parameters:
        - id: nextPageLink
          type:
            - string
          description: |-
            The NextLink from the previous successful call
            to List operation.
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
      return:
        type:
          - Promise
        description: A promise is returned
      content: >-
        function listByWorkspaceNextWithHttpOperationResponse(nextPageLink,
        options)
    langs:
      - js
  - uid: 'azure-arm-batchai.FileServers#listByWorkspaceNext'
    id: 'azure-arm-batchai.FileServers#listByWorkspaceNext'
    parent: azure-arm-batchai.FileServers
    name: 'listByWorkspaceNext(nextPageLink, options, optionalCallback)'
    summary: Gets a list of File Servers associated with the specified workspace.
    fullName: >-
      azure-arm-batchai.FileServers.listByWorkspaceNext(nextPageLink, options,
      optionalCallback)
    tags:
      - originalTitle: resolve
        title: resolve
        text: '{FileServerListResult} - The deserialized result object.'
        value: '{FileServerListResult} - The deserialized result object.'
      - originalTitle: reject
        title: reject
        text: |-
          {Error} - The error object.

          {function} optionalCallback(err, result, request, response)

                               {Error}  err        - The Error object if an error occurred, null otherwise.

                               {object} [result]   - The deserialized result object if an error did not occur.
                               See {@link FileServerListResult} for more information.

                               {object} [request]  - The HTTP Request object if an error did not occur.

                               {stream} [response] - The HTTP Response stream if an error did not occur.
        value: |-
          {Error} - The error object.

          {function} optionalCallback(err, result, request, response)

                               {Error}  err        - The Error object if an error occurred, null otherwise.

                               {object} [result]   - The deserialized result object if an error did not occur.
                               See {@link FileServerListResult} for more information.

                               {object} [request]  - The HTTP Request object if an error did not occur.

                               {stream} [response] - The HTTP Response stream if an error did not occur.
    type: Function
    syntax:
      parameters:
        - id: nextPageLink
          type:
            - string
          description: |-
            The NextLink from the previous successful call
            to List operation.
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
        - id: optionalCallback
          type:
            - function
          description: The optional callback.
          optional: true
      return:
        type:
          - function
          - Promise
        description: |-
          If a callback was passed as the last parameter
          then it returns the callback else returns a Promise.

          {Promise} A promise is returned
      content: 'function listByWorkspaceNext(nextPageLink, options, optionalCallback)'
    langs:
      - js
