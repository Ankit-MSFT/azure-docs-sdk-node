### YamlMime:UniversalReference
items:
  - uid: azure-arm-batchai.Jobs
    id: azure-arm-batchai.Jobs
    name: Jobs
    summary: Class representing a Jobs.
    fullName: azure-arm-batchai.Jobs
    type: Class
    children:
      - 'azure-arm-batchai.Jobs.#ctor'
      - 'azure-arm-batchai.Jobs#listByExperimentWithHttpOperationResponse'
      - 'azure-arm-batchai.Jobs#listByExperiment'
      - 'azure-arm-batchai.Jobs#createWithHttpOperationResponse'
      - 'azure-arm-batchai.Jobs#create'
      - 'azure-arm-batchai.Jobs#deleteMethodWithHttpOperationResponse'
      - 'azure-arm-batchai.Jobs#deleteMethod'
      - 'azure-arm-batchai.Jobs#getWithHttpOperationResponse'
      - 'azure-arm-batchai.Jobs#get'
      - 'azure-arm-batchai.Jobs#listOutputFilesWithHttpOperationResponse'
      - 'azure-arm-batchai.Jobs#listOutputFiles'
      - >-
        azure-arm-batchai.Jobs#listRemoteLoginInformationWithHttpOperationResponse
      - 'azure-arm-batchai.Jobs#listRemoteLoginInformation'
      - 'azure-arm-batchai.Jobs#terminateWithHttpOperationResponse'
      - 'azure-arm-batchai.Jobs#terminate'
      - 'azure-arm-batchai.Jobs#beginCreateWithHttpOperationResponse'
      - 'azure-arm-batchai.Jobs#beginCreate'
      - 'azure-arm-batchai.Jobs#beginDeleteMethodWithHttpOperationResponse'
      - 'azure-arm-batchai.Jobs#beginDeleteMethod'
      - 'azure-arm-batchai.Jobs#beginTerminateWithHttpOperationResponse'
      - 'azure-arm-batchai.Jobs#beginTerminate'
      - 'azure-arm-batchai.Jobs#listByExperimentNextWithHttpOperationResponse'
      - 'azure-arm-batchai.Jobs#listByExperimentNext'
      - 'azure-arm-batchai.Jobs#listOutputFilesNextWithHttpOperationResponse'
      - 'azure-arm-batchai.Jobs#listOutputFilesNext'
      - >-
        azure-arm-batchai.Jobs#listRemoteLoginInformationNextWithHttpOperationResponse
      - 'azure-arm-batchai.Jobs#listRemoteLoginInformationNext'
    langs:
      - js
  - id: 'azure-arm-batchai.Jobs.#ctor'
    uid: 'azure-arm-batchai.Jobs.#ctor'
    parent: azure-arm-batchai.Jobs
    name: Jobs(client)
    fullName: azure-arm-batchai.Jobs.Jobs(client)
    summary: Create a Jobs.
    type: Constructor
    syntax:
      parameters:
        - id: client
          type:
            - undefinedBatchAIManagementClient
          description: Reference to the service client.
      content: new Jobs(client)
    langs:
      - js
  - uid: 'azure-arm-batchai.Jobs#listByExperimentWithHttpOperationResponse'
    id: 'azure-arm-batchai.Jobs#listByExperimentWithHttpOperationResponse'
    parent: azure-arm-batchai.Jobs
    name: >-
      listByExperimentWithHttpOperationResponse(resourceGroupName,
      workspaceName, experimentName, options)
    summary: Gets a list of Jobs within the specified Experiment.
    fullName: >-
      azure-arm-batchai.Jobs.listByExperimentWithHttpOperationResponse(resourceGroupName,
      workspaceName, experimentName, options)
    tags:
      - originalTitle: resolve
        title: resolve
        text: >-
          {HttpOperationResponse<JobListResult>} - The deserialized result
          object.
        value: >-
          {HttpOperationResponse<JobListResult>} - The deserialized result
          object.
      - originalTitle: reject
        title: reject
        text: '{Error} - The error object.'
        value: '{Error} - The error object.'
    type: Function
    syntax:
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |-
            Name of the resource group to which the
            resource belongs.
        - id: workspaceName
          type:
            - string
          description: >-
            The name of the workspace. Workspace names can

            only contain a combination of alphanumeric characters along with
            dash (-)

            and underscore (_). The name must be from 1 through 64 characters
            long.
        - id: experimentName
          type:
            - string
          description: >-
            The name of the experiment. Experiment names

            can only contain a combination of alphanumeric characters along with
            dash

            (-) and underscore (_). The name must be from 1 through 64
            characters long.
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.jobsListByExperimentOptions
          type:
            - object
          description: |-
            Additional parameters
            for the operation
          optional: true
        - id: options.jobsListByExperimentOptions.maxResults
          type:
            - number
          description: >-
            The maximum

            number of items to return in the response. A maximum of 1000 files
            can be

            returned.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
      return:
        type:
          - Promise
        description: A promise is returned
      content: >-
        function listByExperimentWithHttpOperationResponse(resourceGroupName,
        workspaceName, experimentName, options)
    langs:
      - js
  - uid: 'azure-arm-batchai.Jobs#listByExperiment'
    id: 'azure-arm-batchai.Jobs#listByExperiment'
    parent: azure-arm-batchai.Jobs
    name: >-
      listByExperiment(resourceGroupName, workspaceName, experimentName,
      options, optionalCallback)
    summary: Gets a list of Jobs within the specified Experiment.
    fullName: >-
      azure-arm-batchai.Jobs.listByExperiment(resourceGroupName, workspaceName,
      experimentName, options, optionalCallback)
    tags:
      - originalTitle: resolve
        title: resolve
        text: '{JobListResult} - The deserialized result object.'
        value: '{JobListResult} - The deserialized result object.'
      - originalTitle: reject
        title: reject
        text: |-
          {Error} - The error object.

          {function} optionalCallback(err, result, request, response)

                               {Error}  err        - The Error object if an error occurred, null otherwise.

                               {object} [result]   - The deserialized result object if an error did not occur.
                               See {@link JobListResult} for more information.

                               {object} [request]  - The HTTP Request object if an error did not occur.

                               {stream} [response] - The HTTP Response stream if an error did not occur.
        value: |-
          {Error} - The error object.

          {function} optionalCallback(err, result, request, response)

                               {Error}  err        - The Error object if an error occurred, null otherwise.

                               {object} [result]   - The deserialized result object if an error did not occur.
                               See {@link JobListResult} for more information.

                               {object} [request]  - The HTTP Request object if an error did not occur.

                               {stream} [response] - The HTTP Response stream if an error did not occur.
    type: Function
    syntax:
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |-
            Name of the resource group to which the
            resource belongs.
        - id: workspaceName
          type:
            - string
          description: >-
            The name of the workspace. Workspace names can

            only contain a combination of alphanumeric characters along with
            dash (-)

            and underscore (_). The name must be from 1 through 64 characters
            long.
        - id: experimentName
          type:
            - string
          description: >-
            The name of the experiment. Experiment names

            can only contain a combination of alphanumeric characters along with
            dash

            (-) and underscore (_). The name must be from 1 through 64
            characters long.
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.jobsListByExperimentOptions
          type:
            - object
          description: |-
            Additional parameters
            for the operation
          optional: true
        - id: options.jobsListByExperimentOptions.maxResults
          type:
            - number
          description: >-
            The maximum

            number of items to return in the response. A maximum of 1000 files
            can be

            returned.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
        - id: optionalCallback
          type:
            - function
          description: The optional callback.
          optional: true
      return:
        type:
          - function
          - Promise
        description: |-
          If a callback was passed as the last parameter
          then it returns the callback else returns a Promise.

          {Promise} A promise is returned
      content: >-
        function listByExperiment(resourceGroupName, workspaceName,
        experimentName, options, optionalCallback)
    langs:
      - js
  - uid: 'azure-arm-batchai.Jobs#createWithHttpOperationResponse'
    id: 'azure-arm-batchai.Jobs#createWithHttpOperationResponse'
    parent: azure-arm-batchai.Jobs
    name: >-
      createWithHttpOperationResponse(resourceGroupName, workspaceName,
      experimentName, jobName, parameters, options)
    summary: Creates a Job in the given Experiment.
    fullName: >-
      azure-arm-batchai.Jobs.createWithHttpOperationResponse(resourceGroupName,
      workspaceName, experimentName, jobName, parameters, options)
    tags:
      - originalTitle: resolve
        title: resolve
        text: '{HttpOperationResponse<Job>} - The deserialized result object.'
        value: '{HttpOperationResponse<Job>} - The deserialized result object.'
      - originalTitle: reject
        title: reject
        text: '{Error} - The error object.'
        value: '{Error} - The error object.'
    type: Function
    syntax:
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |-
            Name of the resource group to which the
            resource belongs.
        - id: workspaceName
          type:
            - string
          description: >-
            The name of the workspace. Workspace names can

            only contain a combination of alphanumeric characters along with
            dash (-)

            and underscore (_). The name must be from 1 through 64 characters
            long.
        - id: experimentName
          type:
            - string
          description: >-
            The name of the experiment. Experiment names

            can only contain a combination of alphanumeric characters along with
            dash

            (-) and underscore (_). The name must be from 1 through 64
            characters long.
        - id: jobName
          type:
            - string
          description: >-
            The name of the job within the specified resource

            group. Job names can only contain a combination of alphanumeric
            characters

            along with dash (-) and underscore (_). The name must be from 1
            through 64

            characters long.
        - id: parameters
          type:
            - object
          description: The parameters to provide for job creation.
        - id: parameters.schedulingPriority
          type:
            - string
          description: >-
            Scheduling priority.

            Scheduling priority associated with the job. Possible values: low,
            normal,

            high. Possible values include: 'low', 'normal', 'high'
          optional: true
        - id: parameters.cluster
          type:
            - object
          description: |-
            Cluster. Resource ID of the cluster on
            which this job will run.
        - id: parameters.mountVolumes
          type:
            - object
          description: >-
            Mount volumes. Information on

            mount volumes to be used by the job. These volumes will be mounted
            before

            the job execution and will be unmouted after the job completion. The
            volumes

            will be mounted at location specified by $AZ_BATCHAI_JOB_MOUNT_ROOT

            environment variable.
          optional: true
        - id: parameters.mountVolumes.azureFileShares
          type:
            - array
          description: >-
            Azure File Shares.

            A collection of Azure File Shares that are to be mounted to the
            cluster

            nodes.
          optional: true
        - id: parameters.mountVolumes.azureBlobFileSystems
          type:
            - array
          description: >-
            Azure Blob

            file systems. A collection of Azure Blob Containers that are to be
            mounted

            to the cluster nodes.
          optional: true
        - id: parameters.mountVolumes.fileServers
          type:
            - array
          description: >-
            File Servers. A

            collection of Batch AI File Servers that are to be mounted to the
            cluster

            nodes.
          optional: true
        - id: parameters.mountVolumes.unmanagedFileSystems
          type:
            - array
          description: >-
            Unmanaged file

            systems. A collection of unmanaged file systems that are to be
            mounted to

            the cluster nodes.
          optional: true
        - id: parameters.nodeCount
          type:
            - number
          description: >-
            Node count. Number of compute nodes to

            run the job on. The job will be gang scheduled on that many compute
            nodes.
        - id: parameters.containerSettings
          type:
            - object
          description: >-
            Container settings. Docker

            container settings for the job. If not provided, the job will run
            directly

            on the node.
          optional: true
        - id: parameters.containerSettings.imageSourceRegistry
          type:
            - object
          description: >-
            Image

            source registry. Information about docker image and docker registry
            to

            download the container from.
        - id: parameters.containerSettings.imageSourceRegistry.serverUrl
          type:
            - string
          description: Server URL. URL for image repository.
          optional: true
        - id: parameters.containerSettings.imageSourceRegistry.image
          type:
            - string
          description: Image. The name of the image in the image repository.
        - id: parameters.containerSettings.imageSourceRegistry.credentials
          type:
            - object
          description: |-
            Credentials.
            Credentials to access the private docker repository.
          optional: true
        - id: >-
            parameters.containerSettings.imageSourceRegistry.credentials.username
          type:
            - string
          description: |-
            User
            name. User name to login to the repository.
        - id: >-
            parameters.containerSettings.imageSourceRegistry.credentials.password
          type:
            - string
          description: >-
            Password. User password to login to the docker repository. One of
            password

            or passwordSecretReference must be specified.
          optional: true
        - id: >-
            parameters.containerSettings.imageSourceRegistry.credentials.passwordSecretReference
          type:
            - object
          description: >-
            Password secret reference. KeyVault Secret storing the password.
            Users can

            store their secrets in Azure KeyVault and pass it to the Batch AI
            service to

            integrate with KeyVault. One of password or passwordSecretReference
            must be

            specified.
          optional: true
        - id: >-
            parameters.containerSettings.imageSourceRegistry.credentials.passwordSecretReference.sourceVault
          type:
            - object
          description: >-
            Key Vault resource identifier. Fully qualified resource indentifier
            of the

            Key Vault.
        - id: >-
            parameters.containerSettings.imageSourceRegistry.credentials.passwordSecretReference.sourceVault.id
          type:
            - string
          description: The ID of the resource
        - id: >-
            parameters.containerSettings.imageSourceRegistry.credentials.passwordSecretReference.secretUrl
          type:
            - string
          description: Secret URL. The URL referencing a secret in the Key Vault.
        - id: parameters.containerSettings.shmSize
          type:
            - string
          description: >-
            /dev/shm size. Size

            of /dev/shm. Please refer to docker documentation for supported
            argument

            formats.
          optional: true
        - id: parameters.cntkSettings
          type:
            - object
          description: |-
            CNTK settings. Settings for CNTK
            (aka Microsoft Cognitive Toolkit) job.
          optional: true
        - id: parameters.cntkSettings.languageType
          type:
            - string
          description: >-
            Language type. The

            language to use for launching CNTK (aka Microsoft Cognitive Toolkit)
            job.

            Valid values are 'BrainScript' or 'Python'.
          optional: true
        - id: parameters.cntkSettings.configFilePath
          type:
            - string
          description: >-
            Config file path.

            Specifies the path of the BrainScript config file. This property can
            be

            specified only if the languageType is 'BrainScript'.
          optional: true
        - id: parameters.cntkSettings.pythonScriptFilePath
          type:
            - string
          description: >-
            Python script

            file path. Python script to execute. This property can be specified
            only if

            the languageType is 'Python'.
          optional: true
        - id: parameters.cntkSettings.pythonInterpreterPath
          type:
            - string
          description: >-
            Python

            interpreter path. The path to the Python interpreter. This property
            can be

            specified only if the languageType is 'Python'.
          optional: true
        - id: parameters.cntkSettings.commandLineArgs
          type:
            - string
          description: >-
            Command line

            arguments. Command line arguments that need to be passed to the
            python

            script or cntk executable.
          optional: true
        - id: parameters.cntkSettings.processCount
          type:
            - number
          description: >-
            Process count. Number

            of processes to launch for the job execution. The default value for
            this

            property is equal to nodeCount property
          optional: true
        - id: parameters.pyTorchSettings
          type:
            - object
          description: |-
            pyTorch settings. Settings for
            pyTorch job.
          optional: true
        - id: parameters.pyTorchSettings.pythonScriptFilePath
          type:
            - string
          description: |-
            Python
            script file path. The python script to execute.
        - id: parameters.pyTorchSettings.pythonInterpreterPath
          type:
            - string
          description: |-
            Python
            interpreter path. The path to the Python interpreter.
          optional: true
        - id: parameters.pyTorchSettings.commandLineArgs
          type:
            - string
          description: >-
            Command line

            arguments. Command line arguments that need to be passed to the
            python

            script.
          optional: true
        - id: parameters.pyTorchSettings.processCount
          type:
            - number
          description: >-
            Process count.

            Number of processes to launch for the job execution. The default
            value for

            this property is equal to nodeCount property
          optional: true
        - id: parameters.pyTorchSettings.communicationBackend
          type:
            - string
          description: >-
            Communication backend. Type of the communication backend for
            distributed

            jobs. Valid values are 'TCP', 'Gloo' or 'MPI'. Not required for

            non-distributed jobs.
          optional: true
        - id: parameters.tensorFlowSettings
          type:
            - object
          description: |-
            TensorFlow settings.
            Settings for Tensor Flow job.
          optional: true
        - id: parameters.tensorFlowSettings.pythonScriptFilePath
          type:
            - string
          description: |-
            Python
            script file path. The python script to execute.
        - id: parameters.tensorFlowSettings.pythonInterpreterPath
          type:
            - string
          description: |-
            Python
            interpreter path. The path to the Python interpreter.
          optional: true
        - id: parameters.tensorFlowSettings.masterCommandLineArgs
          type:
            - string
          description: >-
            Master

            command line arguments. Command line arguments that need to be
            passed to the

            python script for the master task.
          optional: true
        - id: parameters.tensorFlowSettings.workerCommandLineArgs
          type:
            - string
          description: >-
            Worker

            command line arguments. Command line arguments that need to be
            passed to the

            python script for the worker task. Optional for single process jobs.
          optional: true
        - id: parameters.tensorFlowSettings.parameterServerCommandLineArgs
          type:
            - string
          description: >-
            Parameter

            server command line arguments. Command line arguments that need to
            be passed

            to the python script for the parameter server. Optional for single
            process

            jobs.
          optional: true
        - id: parameters.tensorFlowSettings.workerCount
          type:
            - number
          description: >-
            Worker count.

            The number of worker tasks. If specified, the value must be less
            than or

            equal to (nodeCount * numberOfGPUs per VM). If not specified, the
            default

            value is equal to nodeCount. This property can be specified only for

            distributed TensorFlow training.
          optional: true
        - id: parameters.tensorFlowSettings.parameterServerCount
          type:
            - number
          description: >-
            Parameter server count. The number of parameter server tasks. If
            specified,

            the value must be less than or equal to nodeCount. If not specified,
            the

            default value is equal to 1 for distributed TensorFlow training.
            This

            property can be specified only for distributed TensorFlow training.
          optional: true
        - id: parameters.caffeSettings
          type:
            - object
          description: |-
            Caffe settings. Settings for
            Caffe job.
          optional: true
        - id: parameters.caffeSettings.configFilePath
          type:
            - string
          description: >-
            Config file path.

            Path of the config file for the job. This property cannot be
            specified if

            pythonScriptFilePath is specified.
          optional: true
        - id: parameters.caffeSettings.pythonScriptFilePath
          type:
            - string
          description: |-
            Python
            script file path. Python script to execute. This property cannot be
            specified if configFilePath is specified.
          optional: true
        - id: parameters.caffeSettings.pythonInterpreterPath
          type:
            - string
          description: >-
            Python

            interpreter path. The path to the Python interpreter. The property
            can be

            specified only if the pythonScriptFilePath is specified.
          optional: true
        - id: parameters.caffeSettings.commandLineArgs
          type:
            - string
          description: >-
            Command line

            arguments. Command line arguments that need to be passed to the
            Caffe job.
          optional: true
        - id: parameters.caffeSettings.processCount
          type:
            - number
          description: >-
            Process count.

            Number of processes to launch for the job execution. The default
            value for

            this property is equal to nodeCount property
          optional: true
        - id: parameters.caffe2Settings
          type:
            - object
          description: |-
            Caffe2 settings. Settings for
            Caffe2 job.
          optional: true
        - id: parameters.caffe2Settings.pythonScriptFilePath
          type:
            - string
          description: |-
            Python script
            file path. The python script to execute.
        - id: parameters.caffe2Settings.pythonInterpreterPath
          type:
            - string
          description: |-
            Python
            interpreter path. The path to the Python interpreter.
          optional: true
        - id: parameters.caffe2Settings.commandLineArgs
          type:
            - string
          description: >-
            Command line

            arguments. Command line arguments that need to be passed to the
            python

            script.
          optional: true
        - id: parameters.chainerSettings
          type:
            - object
          description: |-
            Chainer settings. Settings for
            Chainer job.
          optional: true
        - id: parameters.chainerSettings.pythonScriptFilePath
          type:
            - string
          description: |-
            Python
            script file path. The python script to execute.
        - id: parameters.chainerSettings.pythonInterpreterPath
          type:
            - string
          description: |-
            Python
            interpreter path. The path to the Python interpreter.
          optional: true
        - id: parameters.chainerSettings.commandLineArgs
          type:
            - string
          description: >-
            Command line

            arguments. Command line arguments that need to be passed to the
            python

            script.
          optional: true
        - id: parameters.chainerSettings.processCount
          type:
            - number
          description: >-
            Process count.

            Number of processes to launch for the job execution. The default
            value for

            this property is equal to nodeCount property
          optional: true
        - id: parameters.customToolkitSettings
          type:
            - object
          description: |-
            Custom tool kit job.
            Settings for custom tool kit job.
          optional: true
        - id: parameters.customToolkitSettings.commandLine
          type:
            - string
          description: |-
            Command line.
            The command line to execute on the master node.
          optional: true
        - id: parameters.customMpiSettings
          type:
            - object
          description: |-
            Custom MPI settings. Settings
            for custom MPI job.
          optional: true
        - id: parameters.customMpiSettings.commandLine
          type:
            - string
          description: |-
            Command line. The
            command line to be executed by mpi runtime on each compute node.
        - id: parameters.customMpiSettings.processCount
          type:
            - number
          description: >-
            Process count.

            Number of processes to launch for the job execution. The default
            value for

            this property is equal to nodeCount property
          optional: true
        - id: parameters.horovodSettings
          type:
            - object
          description: |-
            Horovod settings. Settings for
            Horovod job.
          optional: true
        - id: parameters.horovodSettings.pythonScriptFilePath
          type:
            - string
          description: |-
            Python
            script file path. The python script to execute.
        - id: parameters.horovodSettings.pythonInterpreterPath
          type:
            - string
          description: |-
            Python
            interpreter path. The path to the Python interpreter.
          optional: true
        - id: parameters.horovodSettings.commandLineArgs
          type:
            - string
          description: >-
            Command line

            arguments. Command line arguments that need to be passed to the
            python

            script.
          optional: true
        - id: parameters.horovodSettings.processCount
          type:
            - number
          description: >-
            Process count.

            Number of processes to launch for the job execution. The default
            value for

            this property is equal to nodeCount property
          optional: true
        - id: parameters.jobPreparation
          type:
            - object
          description: |-
            Job preparation. A command line
            to be executed on each node allocated for the job before tool kit is
            launched.
          optional: true
        - id: parameters.jobPreparation.commandLine
          type:
            - string
          description: >-
            Command line. The

            command line to execute. If containerSettings is specified on the
            job, this

            commandLine will be executed in the same container as job. Otherwise
            it will

            be executed on the node.
        - id: parameters.stdOutErrPathPrefix
          type:
            - string
          description: |-
            Standard output path prefix.
            The path where the Batch AI service will store stdout, stderror and
            execution log of the job.
        - id: parameters.inputDirectories
          type:
            - array
          description: |-
            Input directories. A list of
            input directories for the job.
          optional: true
        - id: parameters.outputDirectories
          type:
            - array
          description: |-
            Output directories. A list of
            output directories for the job.
          optional: true
        - id: parameters.environmentVariables
          type:
            - array
          description: >-
            Environment variables. A

            list of user defined environment variables which will be setup for
            the job.
          optional: true
        - id: parameters.secrets
          type:
            - array
          description: >-
            Secrets. A list of user defined

            environment variables with secret values which will be setup for the
            job.

            Server will never report values of these variables back.
          optional: true
        - id: parameters.constraints
          type:
            - object
          description: |-
            Constraints associated with the
            Job.
          optional: true
        - id: parameters.constraints.maxWallClockTime
          type:
            - azure-arm-batchai.moment.duration
          description: |-
            Max wall
            clock time. Max time the job can run. Default value: 1 week.
          optional: true
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
      return:
        type:
          - Promise
        description: A promise is returned
      content: >-
        function createWithHttpOperationResponse(resourceGroupName,
        workspaceName, experimentName, jobName, parameters, options)
    langs:
      - js
  - uid: 'azure-arm-batchai.Jobs#create'
    id: 'azure-arm-batchai.Jobs#create'
    parent: azure-arm-batchai.Jobs
    name: >-
      create(resourceGroupName, workspaceName, experimentName, jobName,
      parameters, options, optionalCallback)
    summary: Creates a Job in the given Experiment.
    fullName: >-
      azure-arm-batchai.Jobs.create(resourceGroupName, workspaceName,
      experimentName, jobName, parameters, options, optionalCallback)
    tags:
      - originalTitle: resolve
        title: resolve
        text: '{Job} - The deserialized result object.'
        value: '{Job} - The deserialized result object.'
      - originalTitle: reject
        title: reject
        text: |-
          {Error} - The error object.

          {function} optionalCallback(err, result, request, response)

                               {Error}  err        - The Error object if an error occurred, null otherwise.

                               {object} [result]   - The deserialized result object if an error did not occur.
                               See {@link Job} for more information.

                               {object} [request]  - The HTTP Request object if an error did not occur.

                               {stream} [response] - The HTTP Response stream if an error did not occur.
        value: |-
          {Error} - The error object.

          {function} optionalCallback(err, result, request, response)

                               {Error}  err        - The Error object if an error occurred, null otherwise.

                               {object} [result]   - The deserialized result object if an error did not occur.
                               See {@link Job} for more information.

                               {object} [request]  - The HTTP Request object if an error did not occur.

                               {stream} [response] - The HTTP Response stream if an error did not occur.
    type: Function
    syntax:
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |-
            Name of the resource group to which the
            resource belongs.
        - id: workspaceName
          type:
            - string
          description: >-
            The name of the workspace. Workspace names can

            only contain a combination of alphanumeric characters along with
            dash (-)

            and underscore (_). The name must be from 1 through 64 characters
            long.
        - id: experimentName
          type:
            - string
          description: >-
            The name of the experiment. Experiment names

            can only contain a combination of alphanumeric characters along with
            dash

            (-) and underscore (_). The name must be from 1 through 64
            characters long.
        - id: jobName
          type:
            - string
          description: >-
            The name of the job within the specified resource

            group. Job names can only contain a combination of alphanumeric
            characters

            along with dash (-) and underscore (_). The name must be from 1
            through 64

            characters long.
        - id: parameters
          type:
            - object
          description: The parameters to provide for job creation.
        - id: parameters.schedulingPriority
          type:
            - string
          description: >-
            Scheduling priority.

            Scheduling priority associated with the job. Possible values: low,
            normal,

            high. Possible values include: 'low', 'normal', 'high'
          optional: true
        - id: parameters.cluster
          type:
            - object
          description: |-
            Cluster. Resource ID of the cluster on
            which this job will run.
        - id: parameters.mountVolumes
          type:
            - object
          description: >-
            Mount volumes. Information on

            mount volumes to be used by the job. These volumes will be mounted
            before

            the job execution and will be unmouted after the job completion. The
            volumes

            will be mounted at location specified by $AZ_BATCHAI_JOB_MOUNT_ROOT

            environment variable.
          optional: true
        - id: parameters.mountVolumes.azureFileShares
          type:
            - array
          description: >-
            Azure File Shares.

            A collection of Azure File Shares that are to be mounted to the
            cluster

            nodes.
          optional: true
        - id: parameters.mountVolumes.azureBlobFileSystems
          type:
            - array
          description: >-
            Azure Blob

            file systems. A collection of Azure Blob Containers that are to be
            mounted

            to the cluster nodes.
          optional: true
        - id: parameters.mountVolumes.fileServers
          type:
            - array
          description: >-
            File Servers. A

            collection of Batch AI File Servers that are to be mounted to the
            cluster

            nodes.
          optional: true
        - id: parameters.mountVolumes.unmanagedFileSystems
          type:
            - array
          description: >-
            Unmanaged file

            systems. A collection of unmanaged file systems that are to be
            mounted to

            the cluster nodes.
          optional: true
        - id: parameters.nodeCount
          type:
            - number
          description: >-
            Node count. Number of compute nodes to

            run the job on. The job will be gang scheduled on that many compute
            nodes.
        - id: parameters.containerSettings
          type:
            - object
          description: >-
            Container settings. Docker

            container settings for the job. If not provided, the job will run
            directly

            on the node.
          optional: true
        - id: parameters.containerSettings.imageSourceRegistry
          type:
            - object
          description: >-
            Image

            source registry. Information about docker image and docker registry
            to

            download the container from.
        - id: parameters.containerSettings.imageSourceRegistry.serverUrl
          type:
            - string
          description: Server URL. URL for image repository.
          optional: true
        - id: parameters.containerSettings.imageSourceRegistry.image
          type:
            - string
          description: Image. The name of the image in the image repository.
        - id: parameters.containerSettings.imageSourceRegistry.credentials
          type:
            - object
          description: |-
            Credentials.
            Credentials to access the private docker repository.
          optional: true
        - id: >-
            parameters.containerSettings.imageSourceRegistry.credentials.username
          type:
            - string
          description: |-
            User
            name. User name to login to the repository.
        - id: >-
            parameters.containerSettings.imageSourceRegistry.credentials.password
          type:
            - string
          description: >-
            Password. User password to login to the docker repository. One of
            password

            or passwordSecretReference must be specified.
          optional: true
        - id: >-
            parameters.containerSettings.imageSourceRegistry.credentials.passwordSecretReference
          type:
            - object
          description: >-
            Password secret reference. KeyVault Secret storing the password.
            Users can

            store their secrets in Azure KeyVault and pass it to the Batch AI
            service to

            integrate with KeyVault. One of password or passwordSecretReference
            must be

            specified.
          optional: true
        - id: >-
            parameters.containerSettings.imageSourceRegistry.credentials.passwordSecretReference.sourceVault
          type:
            - object
          description: >-
            Key Vault resource identifier. Fully qualified resource indentifier
            of the

            Key Vault.
        - id: >-
            parameters.containerSettings.imageSourceRegistry.credentials.passwordSecretReference.sourceVault.id
          type:
            - string
          description: The ID of the resource
        - id: >-
            parameters.containerSettings.imageSourceRegistry.credentials.passwordSecretReference.secretUrl
          type:
            - string
          description: Secret URL. The URL referencing a secret in the Key Vault.
        - id: parameters.containerSettings.shmSize
          type:
            - string
          description: >-
            /dev/shm size. Size

            of /dev/shm. Please refer to docker documentation for supported
            argument

            formats.
          optional: true
        - id: parameters.cntkSettings
          type:
            - object
          description: |-
            CNTK settings. Settings for CNTK
            (aka Microsoft Cognitive Toolkit) job.
          optional: true
        - id: parameters.cntkSettings.languageType
          type:
            - string
          description: >-
            Language type. The

            language to use for launching CNTK (aka Microsoft Cognitive Toolkit)
            job.

            Valid values are 'BrainScript' or 'Python'.
          optional: true
        - id: parameters.cntkSettings.configFilePath
          type:
            - string
          description: >-
            Config file path.

            Specifies the path of the BrainScript config file. This property can
            be

            specified only if the languageType is 'BrainScript'.
          optional: true
        - id: parameters.cntkSettings.pythonScriptFilePath
          type:
            - string
          description: >-
            Python script

            file path. Python script to execute. This property can be specified
            only if

            the languageType is 'Python'.
          optional: true
        - id: parameters.cntkSettings.pythonInterpreterPath
          type:
            - string
          description: >-
            Python

            interpreter path. The path to the Python interpreter. This property
            can be

            specified only if the languageType is 'Python'.
          optional: true
        - id: parameters.cntkSettings.commandLineArgs
          type:
            - string
          description: >-
            Command line

            arguments. Command line arguments that need to be passed to the
            python

            script or cntk executable.
          optional: true
        - id: parameters.cntkSettings.processCount
          type:
            - number
          description: >-
            Process count. Number

            of processes to launch for the job execution. The default value for
            this

            property is equal to nodeCount property
          optional: true
        - id: parameters.pyTorchSettings
          type:
            - object
          description: |-
            pyTorch settings. Settings for
            pyTorch job.
          optional: true
        - id: parameters.pyTorchSettings.pythonScriptFilePath
          type:
            - string
          description: |-
            Python
            script file path. The python script to execute.
        - id: parameters.pyTorchSettings.pythonInterpreterPath
          type:
            - string
          description: |-
            Python
            interpreter path. The path to the Python interpreter.
          optional: true
        - id: parameters.pyTorchSettings.commandLineArgs
          type:
            - string
          description: >-
            Command line

            arguments. Command line arguments that need to be passed to the
            python

            script.
          optional: true
        - id: parameters.pyTorchSettings.processCount
          type:
            - number
          description: >-
            Process count.

            Number of processes to launch for the job execution. The default
            value for

            this property is equal to nodeCount property
          optional: true
        - id: parameters.pyTorchSettings.communicationBackend
          type:
            - string
          description: >-
            Communication backend. Type of the communication backend for
            distributed

            jobs. Valid values are 'TCP', 'Gloo' or 'MPI'. Not required for

            non-distributed jobs.
          optional: true
        - id: parameters.tensorFlowSettings
          type:
            - object
          description: |-
            TensorFlow settings.
            Settings for Tensor Flow job.
          optional: true
        - id: parameters.tensorFlowSettings.pythonScriptFilePath
          type:
            - string
          description: |-
            Python
            script file path. The python script to execute.
        - id: parameters.tensorFlowSettings.pythonInterpreterPath
          type:
            - string
          description: |-
            Python
            interpreter path. The path to the Python interpreter.
          optional: true
        - id: parameters.tensorFlowSettings.masterCommandLineArgs
          type:
            - string
          description: >-
            Master

            command line arguments. Command line arguments that need to be
            passed to the

            python script for the master task.
          optional: true
        - id: parameters.tensorFlowSettings.workerCommandLineArgs
          type:
            - string
          description: >-
            Worker

            command line arguments. Command line arguments that need to be
            passed to the

            python script for the worker task. Optional for single process jobs.
          optional: true
        - id: parameters.tensorFlowSettings.parameterServerCommandLineArgs
          type:
            - string
          description: >-
            Parameter

            server command line arguments. Command line arguments that need to
            be passed

            to the python script for the parameter server. Optional for single
            process

            jobs.
          optional: true
        - id: parameters.tensorFlowSettings.workerCount
          type:
            - number
          description: >-
            Worker count.

            The number of worker tasks. If specified, the value must be less
            than or

            equal to (nodeCount * numberOfGPUs per VM). If not specified, the
            default

            value is equal to nodeCount. This property can be specified only for

            distributed TensorFlow training.
          optional: true
        - id: parameters.tensorFlowSettings.parameterServerCount
          type:
            - number
          description: >-
            Parameter server count. The number of parameter server tasks. If
            specified,

            the value must be less than or equal to nodeCount. If not specified,
            the

            default value is equal to 1 for distributed TensorFlow training.
            This

            property can be specified only for distributed TensorFlow training.
          optional: true
        - id: parameters.caffeSettings
          type:
            - object
          description: |-
            Caffe settings. Settings for
            Caffe job.
          optional: true
        - id: parameters.caffeSettings.configFilePath
          type:
            - string
          description: >-
            Config file path.

            Path of the config file for the job. This property cannot be
            specified if

            pythonScriptFilePath is specified.
          optional: true
        - id: parameters.caffeSettings.pythonScriptFilePath
          type:
            - string
          description: |-
            Python
            script file path. Python script to execute. This property cannot be
            specified if configFilePath is specified.
          optional: true
        - id: parameters.caffeSettings.pythonInterpreterPath
          type:
            - string
          description: >-
            Python

            interpreter path. The path to the Python interpreter. The property
            can be

            specified only if the pythonScriptFilePath is specified.
          optional: true
        - id: parameters.caffeSettings.commandLineArgs
          type:
            - string
          description: >-
            Command line

            arguments. Command line arguments that need to be passed to the
            Caffe job.
          optional: true
        - id: parameters.caffeSettings.processCount
          type:
            - number
          description: >-
            Process count.

            Number of processes to launch for the job execution. The default
            value for

            this property is equal to nodeCount property
          optional: true
        - id: parameters.caffe2Settings
          type:
            - object
          description: |-
            Caffe2 settings. Settings for
            Caffe2 job.
          optional: true
        - id: parameters.caffe2Settings.pythonScriptFilePath
          type:
            - string
          description: |-
            Python script
            file path. The python script to execute.
        - id: parameters.caffe2Settings.pythonInterpreterPath
          type:
            - string
          description: |-
            Python
            interpreter path. The path to the Python interpreter.
          optional: true
        - id: parameters.caffe2Settings.commandLineArgs
          type:
            - string
          description: >-
            Command line

            arguments. Command line arguments that need to be passed to the
            python

            script.
          optional: true
        - id: parameters.chainerSettings
          type:
            - object
          description: |-
            Chainer settings. Settings for
            Chainer job.
          optional: true
        - id: parameters.chainerSettings.pythonScriptFilePath
          type:
            - string
          description: |-
            Python
            script file path. The python script to execute.
        - id: parameters.chainerSettings.pythonInterpreterPath
          type:
            - string
          description: |-
            Python
            interpreter path. The path to the Python interpreter.
          optional: true
        - id: parameters.chainerSettings.commandLineArgs
          type:
            - string
          description: >-
            Command line

            arguments. Command line arguments that need to be passed to the
            python

            script.
          optional: true
        - id: parameters.chainerSettings.processCount
          type:
            - number
          description: >-
            Process count.

            Number of processes to launch for the job execution. The default
            value for

            this property is equal to nodeCount property
          optional: true
        - id: parameters.customToolkitSettings
          type:
            - object
          description: |-
            Custom tool kit job.
            Settings for custom tool kit job.
          optional: true
        - id: parameters.customToolkitSettings.commandLine
          type:
            - string
          description: |-
            Command line.
            The command line to execute on the master node.
          optional: true
        - id: parameters.customMpiSettings
          type:
            - object
          description: |-
            Custom MPI settings. Settings
            for custom MPI job.
          optional: true
        - id: parameters.customMpiSettings.commandLine
          type:
            - string
          description: |-
            Command line. The
            command line to be executed by mpi runtime on each compute node.
        - id: parameters.customMpiSettings.processCount
          type:
            - number
          description: >-
            Process count.

            Number of processes to launch for the job execution. The default
            value for

            this property is equal to nodeCount property
          optional: true
        - id: parameters.horovodSettings
          type:
            - object
          description: |-
            Horovod settings. Settings for
            Horovod job.
          optional: true
        - id: parameters.horovodSettings.pythonScriptFilePath
          type:
            - string
          description: |-
            Python
            script file path. The python script to execute.
        - id: parameters.horovodSettings.pythonInterpreterPath
          type:
            - string
          description: |-
            Python
            interpreter path. The path to the Python interpreter.
          optional: true
        - id: parameters.horovodSettings.commandLineArgs
          type:
            - string
          description: >-
            Command line

            arguments. Command line arguments that need to be passed to the
            python

            script.
          optional: true
        - id: parameters.horovodSettings.processCount
          type:
            - number
          description: >-
            Process count.

            Number of processes to launch for the job execution. The default
            value for

            this property is equal to nodeCount property
          optional: true
        - id: parameters.jobPreparation
          type:
            - object
          description: |-
            Job preparation. A command line
            to be executed on each node allocated for the job before tool kit is
            launched.
          optional: true
        - id: parameters.jobPreparation.commandLine
          type:
            - string
          description: >-
            Command line. The

            command line to execute. If containerSettings is specified on the
            job, this

            commandLine will be executed in the same container as job. Otherwise
            it will

            be executed on the node.
        - id: parameters.stdOutErrPathPrefix
          type:
            - string
          description: |-
            Standard output path prefix.
            The path where the Batch AI service will store stdout, stderror and
            execution log of the job.
        - id: parameters.inputDirectories
          type:
            - array
          description: |-
            Input directories. A list of
            input directories for the job.
          optional: true
        - id: parameters.outputDirectories
          type:
            - array
          description: |-
            Output directories. A list of
            output directories for the job.
          optional: true
        - id: parameters.environmentVariables
          type:
            - array
          description: >-
            Environment variables. A

            list of user defined environment variables which will be setup for
            the job.
          optional: true
        - id: parameters.secrets
          type:
            - array
          description: >-
            Secrets. A list of user defined

            environment variables with secret values which will be setup for the
            job.

            Server will never report values of these variables back.
          optional: true
        - id: parameters.constraints
          type:
            - object
          description: |-
            Constraints associated with the
            Job.
          optional: true
        - id: parameters.constraints.maxWallClockTime
          type:
            - azure-arm-batchai.moment.duration
          description: |-
            Max wall
            clock time. Max time the job can run. Default value: 1 week.
          optional: true
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
        - id: optionalCallback
          type:
            - function
          description: The optional callback.
          optional: true
      return:
        type:
          - function
          - Promise
        description: |-
          If a callback was passed as the last parameter
          then it returns the callback else returns a Promise.

          {Promise} A promise is returned
      content: >-
        function create(resourceGroupName, workspaceName, experimentName,
        jobName, parameters, options, optionalCallback)
    langs:
      - js
  - uid: 'azure-arm-batchai.Jobs#deleteMethodWithHttpOperationResponse'
    id: 'azure-arm-batchai.Jobs#deleteMethodWithHttpOperationResponse'
    parent: azure-arm-batchai.Jobs
    name: >-
      deleteMethodWithHttpOperationResponse(resourceGroupName, workspaceName,
      experimentName, jobName, options)
    summary: Deletes a Job.
    fullName: >-
      azure-arm-batchai.Jobs.deleteMethodWithHttpOperationResponse(resourceGroupName,
      workspaceName, experimentName, jobName, options)
    tags:
      - originalTitle: resolve
        title: resolve
        text: '{HttpOperationResponse<null>} - The deserialized result object.'
        value: '{HttpOperationResponse<null>} - The deserialized result object.'
      - originalTitle: reject
        title: reject
        text: '{Error} - The error object.'
        value: '{Error} - The error object.'
    type: Function
    syntax:
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |-
            Name of the resource group to which the
            resource belongs.
        - id: workspaceName
          type:
            - string
          description: >-
            The name of the workspace. Workspace names can

            only contain a combination of alphanumeric characters along with
            dash (-)

            and underscore (_). The name must be from 1 through 64 characters
            long.
        - id: experimentName
          type:
            - string
          description: >-
            The name of the experiment. Experiment names

            can only contain a combination of alphanumeric characters along with
            dash

            (-) and underscore (_). The name must be from 1 through 64
            characters long.
        - id: jobName
          type:
            - string
          description: >-
            The name of the job within the specified resource

            group. Job names can only contain a combination of alphanumeric
            characters

            along with dash (-) and underscore (_). The name must be from 1
            through 64

            characters long.
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
      return:
        type:
          - Promise
        description: A promise is returned
      content: >-
        function deleteMethodWithHttpOperationResponse(resourceGroupName,
        workspaceName, experimentName, jobName, options)
    langs:
      - js
  - uid: 'azure-arm-batchai.Jobs#deleteMethod'
    id: 'azure-arm-batchai.Jobs#deleteMethod'
    parent: azure-arm-batchai.Jobs
    name: >-
      deleteMethod(resourceGroupName, workspaceName, experimentName, jobName,
      options, optionalCallback)
    summary: Deletes a Job.
    fullName: >-
      azure-arm-batchai.Jobs.deleteMethod(resourceGroupName, workspaceName,
      experimentName, jobName, options, optionalCallback)
    tags:
      - originalTitle: resolve
        title: resolve
        text: '{null} - The deserialized result object.'
        value: '{null} - The deserialized result object.'
      - originalTitle: reject
        title: reject
        text: |-
          {Error} - The error object.

          {function} optionalCallback(err, result, request, response)

                               {Error}  err        - The Error object if an error occurred, null otherwise.

                               {null} [result]   - The deserialized result object if an error did not occur.

                               {object} [request]  - The HTTP Request object if an error did not occur.

                               {stream} [response] - The HTTP Response stream if an error did not occur.
        value: |-
          {Error} - The error object.

          {function} optionalCallback(err, result, request, response)

                               {Error}  err        - The Error object if an error occurred, null otherwise.

                               {null} [result]   - The deserialized result object if an error did not occur.

                               {object} [request]  - The HTTP Request object if an error did not occur.

                               {stream} [response] - The HTTP Response stream if an error did not occur.
    type: Function
    syntax:
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |-
            Name of the resource group to which the
            resource belongs.
        - id: workspaceName
          type:
            - string
          description: >-
            The name of the workspace. Workspace names can

            only contain a combination of alphanumeric characters along with
            dash (-)

            and underscore (_). The name must be from 1 through 64 characters
            long.
        - id: experimentName
          type:
            - string
          description: >-
            The name of the experiment. Experiment names

            can only contain a combination of alphanumeric characters along with
            dash

            (-) and underscore (_). The name must be from 1 through 64
            characters long.
        - id: jobName
          type:
            - string
          description: >-
            The name of the job within the specified resource

            group. Job names can only contain a combination of alphanumeric
            characters

            along with dash (-) and underscore (_). The name must be from 1
            through 64

            characters long.
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
        - id: optionalCallback
          type:
            - function
          description: The optional callback.
          optional: true
      return:
        type:
          - function
          - Promise
        description: |-
          If a callback was passed as the last parameter
          then it returns the callback else returns a Promise.

          {Promise} A promise is returned
      content: >-
        function deleteMethod(resourceGroupName, workspaceName, experimentName,
        jobName, options, optionalCallback)
    langs:
      - js
  - uid: 'azure-arm-batchai.Jobs#getWithHttpOperationResponse'
    id: 'azure-arm-batchai.Jobs#getWithHttpOperationResponse'
    parent: azure-arm-batchai.Jobs
    name: >-
      getWithHttpOperationResponse(resourceGroupName, workspaceName,
      experimentName, jobName, options)
    summary: Gets information about a Job.
    fullName: >-
      azure-arm-batchai.Jobs.getWithHttpOperationResponse(resourceGroupName,
      workspaceName, experimentName, jobName, options)
    tags:
      - originalTitle: resolve
        title: resolve
        text: '{HttpOperationResponse<Job>} - The deserialized result object.'
        value: '{HttpOperationResponse<Job>} - The deserialized result object.'
      - originalTitle: reject
        title: reject
        text: '{Error} - The error object.'
        value: '{Error} - The error object.'
    type: Function
    syntax:
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |-
            Name of the resource group to which the
            resource belongs.
        - id: workspaceName
          type:
            - string
          description: >-
            The name of the workspace. Workspace names can

            only contain a combination of alphanumeric characters along with
            dash (-)

            and underscore (_). The name must be from 1 through 64 characters
            long.
        - id: experimentName
          type:
            - string
          description: >-
            The name of the experiment. Experiment names

            can only contain a combination of alphanumeric characters along with
            dash

            (-) and underscore (_). The name must be from 1 through 64
            characters long.
        - id: jobName
          type:
            - string
          description: >-
            The name of the job within the specified resource

            group. Job names can only contain a combination of alphanumeric
            characters

            along with dash (-) and underscore (_). The name must be from 1
            through 64

            characters long.
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
      return:
        type:
          - Promise
        description: A promise is returned
      content: >-
        function getWithHttpOperationResponse(resourceGroupName, workspaceName,
        experimentName, jobName, options)
    langs:
      - js
  - uid: 'azure-arm-batchai.Jobs#get'
    id: 'azure-arm-batchai.Jobs#get'
    parent: azure-arm-batchai.Jobs
    name: >-
      get(resourceGroupName, workspaceName, experimentName, jobName, options,
      optionalCallback)
    summary: Gets information about a Job.
    fullName: >-
      azure-arm-batchai.Jobs.get(resourceGroupName, workspaceName,
      experimentName, jobName, options, optionalCallback)
    tags:
      - originalTitle: resolve
        title: resolve
        text: '{Job} - The deserialized result object.'
        value: '{Job} - The deserialized result object.'
      - originalTitle: reject
        title: reject
        text: |-
          {Error} - The error object.

          {function} optionalCallback(err, result, request, response)

                               {Error}  err        - The Error object if an error occurred, null otherwise.

                               {object} [result]   - The deserialized result object if an error did not occur.
                               See {@link Job} for more information.

                               {object} [request]  - The HTTP Request object if an error did not occur.

                               {stream} [response] - The HTTP Response stream if an error did not occur.
        value: |-
          {Error} - The error object.

          {function} optionalCallback(err, result, request, response)

                               {Error}  err        - The Error object if an error occurred, null otherwise.

                               {object} [result]   - The deserialized result object if an error did not occur.
                               See {@link Job} for more information.

                               {object} [request]  - The HTTP Request object if an error did not occur.

                               {stream} [response] - The HTTP Response stream if an error did not occur.
    type: Function
    syntax:
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |-
            Name of the resource group to which the
            resource belongs.
        - id: workspaceName
          type:
            - string
          description: >-
            The name of the workspace. Workspace names can

            only contain a combination of alphanumeric characters along with
            dash (-)

            and underscore (_). The name must be from 1 through 64 characters
            long.
        - id: experimentName
          type:
            - string
          description: >-
            The name of the experiment. Experiment names

            can only contain a combination of alphanumeric characters along with
            dash

            (-) and underscore (_). The name must be from 1 through 64
            characters long.
        - id: jobName
          type:
            - string
          description: >-
            The name of the job within the specified resource

            group. Job names can only contain a combination of alphanumeric
            characters

            along with dash (-) and underscore (_). The name must be from 1
            through 64

            characters long.
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
        - id: optionalCallback
          type:
            - function
          description: The optional callback.
          optional: true
      return:
        type:
          - function
          - Promise
        description: |-
          If a callback was passed as the last parameter
          then it returns the callback else returns a Promise.

          {Promise} A promise is returned
      content: >-
        function get(resourceGroupName, workspaceName, experimentName, jobName,
        options, optionalCallback)
    langs:
      - js
  - uid: 'azure-arm-batchai.Jobs#listOutputFilesWithHttpOperationResponse'
    id: 'azure-arm-batchai.Jobs#listOutputFilesWithHttpOperationResponse'
    parent: azure-arm-batchai.Jobs
    name: >-
      listOutputFilesWithHttpOperationResponse(resourceGroupName, workspaceName,
      experimentName, jobName, jobsListOutputFilesOptions, options)
    summary: |-
      List all directories and files inside the given directory of the Job's
      output directory (if the output directory is on Azure File Share or Azure
      Storage Container).
    fullName: >-
      azure-arm-batchai.Jobs.listOutputFilesWithHttpOperationResponse(resourceGroupName,
      workspaceName, experimentName, jobName, jobsListOutputFilesOptions,
      options)
    tags:
      - originalTitle: resolve
        title: resolve
        text: >-
          {HttpOperationResponse<FileListResult>} - The deserialized result
          object.
        value: >-
          {HttpOperationResponse<FileListResult>} - The deserialized result
          object.
      - originalTitle: reject
        title: reject
        text: '{Error} - The error object.'
        value: '{Error} - The error object.'
    type: Function
    syntax:
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |-
            Name of the resource group to which the
            resource belongs.
        - id: workspaceName
          type:
            - string
          description: >-
            The name of the workspace. Workspace names can

            only contain a combination of alphanumeric characters along with
            dash (-)

            and underscore (_). The name must be from 1 through 64 characters
            long.
        - id: experimentName
          type:
            - string
          description: >-
            The name of the experiment. Experiment names

            can only contain a combination of alphanumeric characters along with
            dash

            (-) and underscore (_). The name must be from 1 through 64
            characters long.
        - id: jobName
          type:
            - string
          description: >-
            The name of the job within the specified resource

            group. Job names can only contain a combination of alphanumeric
            characters

            along with dash (-) and underscore (_). The name must be from 1
            through 64

            characters long.
        - id: jobsListOutputFilesOptions
          type:
            - object
          description: |-
            Additional parameters for the
            operation
        - id: jobsListOutputFilesOptions.outputdirectoryid
          type:
            - string
          description: >-
            Id of the job

            output directory. This is the OutputDirectory-->id parameter that is
            given

            by the user during Create Job.
        - id: jobsListOutputFilesOptions.directory
          type:
            - string
          description: |-
            The path to the
            directory.
          optional: true
        - id: jobsListOutputFilesOptions.linkexpiryinminutes
          type:
            - number
          description: |-
            The number
            of minutes after which the download link will expire.
          optional: true
        - id: jobsListOutputFilesOptions.maxResults
          type:
            - number
          description: >-
            The maximum number

            of items to return in the response. A maximum of 1000 files can be
            returned.
          optional: true
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
      return:
        type:
          - Promise
        description: A promise is returned
      content: >-
        function listOutputFilesWithHttpOperationResponse(resourceGroupName,
        workspaceName, experimentName, jobName, jobsListOutputFilesOptions,
        options)
    langs:
      - js
  - uid: 'azure-arm-batchai.Jobs#listOutputFiles'
    id: 'azure-arm-batchai.Jobs#listOutputFiles'
    parent: azure-arm-batchai.Jobs
    name: >-
      listOutputFiles(resourceGroupName, workspaceName, experimentName, jobName,
      jobsListOutputFilesOptions, options, optionalCallback)
    summary: |-
      List all directories and files inside the given directory of the Job's
      output directory (if the output directory is on Azure File Share or Azure
      Storage Container).
    fullName: >-
      azure-arm-batchai.Jobs.listOutputFiles(resourceGroupName, workspaceName,
      experimentName, jobName, jobsListOutputFilesOptions, options,
      optionalCallback)
    tags:
      - originalTitle: resolve
        title: resolve
        text: '{FileListResult} - The deserialized result object.'
        value: '{FileListResult} - The deserialized result object.'
      - originalTitle: reject
        title: reject
        text: |-
          {Error} - The error object.

          {function} optionalCallback(err, result, request, response)

                               {Error}  err        - The Error object if an error occurred, null otherwise.

                               {object} [result]   - The deserialized result object if an error did not occur.
                               See {@link FileListResult} for more information.

                               {object} [request]  - The HTTP Request object if an error did not occur.

                               {stream} [response] - The HTTP Response stream if an error did not occur.
        value: |-
          {Error} - The error object.

          {function} optionalCallback(err, result, request, response)

                               {Error}  err        - The Error object if an error occurred, null otherwise.

                               {object} [result]   - The deserialized result object if an error did not occur.
                               See {@link FileListResult} for more information.

                               {object} [request]  - The HTTP Request object if an error did not occur.

                               {stream} [response] - The HTTP Response stream if an error did not occur.
    type: Function
    syntax:
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |-
            Name of the resource group to which the
            resource belongs.
        - id: workspaceName
          type:
            - string
          description: >-
            The name of the workspace. Workspace names can

            only contain a combination of alphanumeric characters along with
            dash (-)

            and underscore (_). The name must be from 1 through 64 characters
            long.
        - id: experimentName
          type:
            - string
          description: >-
            The name of the experiment. Experiment names

            can only contain a combination of alphanumeric characters along with
            dash

            (-) and underscore (_). The name must be from 1 through 64
            characters long.
        - id: jobName
          type:
            - string
          description: >-
            The name of the job within the specified resource

            group. Job names can only contain a combination of alphanumeric
            characters

            along with dash (-) and underscore (_). The name must be from 1
            through 64

            characters long.
        - id: jobsListOutputFilesOptions
          type:
            - object
          description: |-
            Additional parameters for the
            operation
        - id: jobsListOutputFilesOptions.outputdirectoryid
          type:
            - string
          description: >-
            Id of the job

            output directory. This is the OutputDirectory-->id parameter that is
            given

            by the user during Create Job.
        - id: jobsListOutputFilesOptions.directory
          type:
            - string
          description: |-
            The path to the
            directory.
          optional: true
        - id: jobsListOutputFilesOptions.linkexpiryinminutes
          type:
            - number
          description: |-
            The number
            of minutes after which the download link will expire.
          optional: true
        - id: jobsListOutputFilesOptions.maxResults
          type:
            - number
          description: >-
            The maximum number

            of items to return in the response. A maximum of 1000 files can be
            returned.
          optional: true
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
        - id: optionalCallback
          type:
            - function
          description: The optional callback.
          optional: true
      return:
        type:
          - function
          - Promise
        description: |-
          If a callback was passed as the last parameter
          then it returns the callback else returns a Promise.

          {Promise} A promise is returned
      content: >-
        function listOutputFiles(resourceGroupName, workspaceName,
        experimentName, jobName, jobsListOutputFilesOptions, options,
        optionalCallback)
    langs:
      - js
  - uid: 'azure-arm-batchai.Jobs#listRemoteLoginInformationWithHttpOperationResponse'
    id: 'azure-arm-batchai.Jobs#listRemoteLoginInformationWithHttpOperationResponse'
    parent: azure-arm-batchai.Jobs
    name: >-
      listRemoteLoginInformationWithHttpOperationResponse(resourceGroupName,
      workspaceName, experimentName, jobName, options)
    summary: >-
      Gets a list of currently existing nodes which were used for the Job

      execution. The returned information contains the node ID, its public IP
      and

      SSH port.
    fullName: >-
      azure-arm-batchai.Jobs.listRemoteLoginInformationWithHttpOperationResponse(resourceGroupName,
      workspaceName, experimentName, jobName, options)
    tags:
      - originalTitle: resolve
        title: resolve
        text: >-
          {HttpOperationResponse<RemoteLoginInformationListResult>} - The
          deserialized result object.
        value: >-
          {HttpOperationResponse<RemoteLoginInformationListResult>} - The
          deserialized result object.
      - originalTitle: reject
        title: reject
        text: '{Error} - The error object.'
        value: '{Error} - The error object.'
    type: Function
    syntax:
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |-
            Name of the resource group to which the
            resource belongs.
        - id: workspaceName
          type:
            - string
          description: >-
            The name of the workspace. Workspace names can

            only contain a combination of alphanumeric characters along with
            dash (-)

            and underscore (_). The name must be from 1 through 64 characters
            long.
        - id: experimentName
          type:
            - string
          description: >-
            The name of the experiment. Experiment names

            can only contain a combination of alphanumeric characters along with
            dash

            (-) and underscore (_). The name must be from 1 through 64
            characters long.
        - id: jobName
          type:
            - string
          description: >-
            The name of the job within the specified resource

            group. Job names can only contain a combination of alphanumeric
            characters

            along with dash (-) and underscore (_). The name must be from 1
            through 64

            characters long.
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
      return:
        type:
          - Promise
        description: A promise is returned
      content: >-
        function
        listRemoteLoginInformationWithHttpOperationResponse(resourceGroupName,
        workspaceName, experimentName, jobName, options)
    langs:
      - js
  - uid: 'azure-arm-batchai.Jobs#listRemoteLoginInformation'
    id: 'azure-arm-batchai.Jobs#listRemoteLoginInformation'
    parent: azure-arm-batchai.Jobs
    name: >-
      listRemoteLoginInformation(resourceGroupName, workspaceName,
      experimentName, jobName, options, optionalCallback)
    summary: >-
      Gets a list of currently existing nodes which were used for the Job

      execution. The returned information contains the node ID, its public IP
      and

      SSH port.
    fullName: >-
      azure-arm-batchai.Jobs.listRemoteLoginInformation(resourceGroupName,
      workspaceName, experimentName, jobName, options, optionalCallback)
    tags:
      - originalTitle: resolve
        title: resolve
        text: '{RemoteLoginInformationListResult} - The deserialized result object.'
        value: '{RemoteLoginInformationListResult} - The deserialized result object.'
      - originalTitle: reject
        title: reject
        text: |-
          {Error} - The error object.

          {function} optionalCallback(err, result, request, response)

                               {Error}  err        - The Error object if an error occurred, null otherwise.

                               {object} [result]   - The deserialized result object if an error did not occur.
                               See {@link RemoteLoginInformationListResult} for more
                               information.

                               {object} [request]  - The HTTP Request object if an error did not occur.

                               {stream} [response] - The HTTP Response stream if an error did not occur.
        value: |-
          {Error} - The error object.

          {function} optionalCallback(err, result, request, response)

                               {Error}  err        - The Error object if an error occurred, null otherwise.

                               {object} [result]   - The deserialized result object if an error did not occur.
                               See {@link RemoteLoginInformationListResult} for more
                               information.

                               {object} [request]  - The HTTP Request object if an error did not occur.

                               {stream} [response] - The HTTP Response stream if an error did not occur.
    type: Function
    syntax:
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |-
            Name of the resource group to which the
            resource belongs.
        - id: workspaceName
          type:
            - string
          description: >-
            The name of the workspace. Workspace names can

            only contain a combination of alphanumeric characters along with
            dash (-)

            and underscore (_). The name must be from 1 through 64 characters
            long.
        - id: experimentName
          type:
            - string
          description: >-
            The name of the experiment. Experiment names

            can only contain a combination of alphanumeric characters along with
            dash

            (-) and underscore (_). The name must be from 1 through 64
            characters long.
        - id: jobName
          type:
            - string
          description: >-
            The name of the job within the specified resource

            group. Job names can only contain a combination of alphanumeric
            characters

            along with dash (-) and underscore (_). The name must be from 1
            through 64

            characters long.
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
        - id: optionalCallback
          type:
            - function
          description: The optional callback.
          optional: true
      return:
        type:
          - function
          - Promise
        description: |-
          If a callback was passed as the last parameter
          then it returns the callback else returns a Promise.

          {Promise} A promise is returned
      content: >-
        function listRemoteLoginInformation(resourceGroupName, workspaceName,
        experimentName, jobName, options, optionalCallback)
    langs:
      - js
  - uid: 'azure-arm-batchai.Jobs#terminateWithHttpOperationResponse'
    id: 'azure-arm-batchai.Jobs#terminateWithHttpOperationResponse'
    parent: azure-arm-batchai.Jobs
    name: >-
      terminateWithHttpOperationResponse(resourceGroupName, workspaceName,
      experimentName, jobName, options)
    summary: Terminates a job.
    fullName: >-
      azure-arm-batchai.Jobs.terminateWithHttpOperationResponse(resourceGroupName,
      workspaceName, experimentName, jobName, options)
    tags:
      - originalTitle: resolve
        title: resolve
        text: '{HttpOperationResponse<null>} - The deserialized result object.'
        value: '{HttpOperationResponse<null>} - The deserialized result object.'
      - originalTitle: reject
        title: reject
        text: '{Error} - The error object.'
        value: '{Error} - The error object.'
    type: Function
    syntax:
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |-
            Name of the resource group to which the
            resource belongs.
        - id: workspaceName
          type:
            - string
          description: >-
            The name of the workspace. Workspace names can

            only contain a combination of alphanumeric characters along with
            dash (-)

            and underscore (_). The name must be from 1 through 64 characters
            long.
        - id: experimentName
          type:
            - string
          description: >-
            The name of the experiment. Experiment names

            can only contain a combination of alphanumeric characters along with
            dash

            (-) and underscore (_). The name must be from 1 through 64
            characters long.
        - id: jobName
          type:
            - string
          description: >-
            The name of the job within the specified resource

            group. Job names can only contain a combination of alphanumeric
            characters

            along with dash (-) and underscore (_). The name must be from 1
            through 64

            characters long.
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
      return:
        type:
          - Promise
        description: A promise is returned
      content: >-
        function terminateWithHttpOperationResponse(resourceGroupName,
        workspaceName, experimentName, jobName, options)
    langs:
      - js
  - uid: 'azure-arm-batchai.Jobs#terminate'
    id: 'azure-arm-batchai.Jobs#terminate'
    parent: azure-arm-batchai.Jobs
    name: >-
      terminate(resourceGroupName, workspaceName, experimentName, jobName,
      options, optionalCallback)
    summary: Terminates a job.
    fullName: >-
      azure-arm-batchai.Jobs.terminate(resourceGroupName, workspaceName,
      experimentName, jobName, options, optionalCallback)
    tags:
      - originalTitle: resolve
        title: resolve
        text: '{null} - The deserialized result object.'
        value: '{null} - The deserialized result object.'
      - originalTitle: reject
        title: reject
        text: |-
          {Error} - The error object.

          {function} optionalCallback(err, result, request, response)

                               {Error}  err        - The Error object if an error occurred, null otherwise.

                               {null} [result]   - The deserialized result object if an error did not occur.

                               {object} [request]  - The HTTP Request object if an error did not occur.

                               {stream} [response] - The HTTP Response stream if an error did not occur.
        value: |-
          {Error} - The error object.

          {function} optionalCallback(err, result, request, response)

                               {Error}  err        - The Error object if an error occurred, null otherwise.

                               {null} [result]   - The deserialized result object if an error did not occur.

                               {object} [request]  - The HTTP Request object if an error did not occur.

                               {stream} [response] - The HTTP Response stream if an error did not occur.
    type: Function
    syntax:
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |-
            Name of the resource group to which the
            resource belongs.
        - id: workspaceName
          type:
            - string
          description: >-
            The name of the workspace. Workspace names can

            only contain a combination of alphanumeric characters along with
            dash (-)

            and underscore (_). The name must be from 1 through 64 characters
            long.
        - id: experimentName
          type:
            - string
          description: >-
            The name of the experiment. Experiment names

            can only contain a combination of alphanumeric characters along with
            dash

            (-) and underscore (_). The name must be from 1 through 64
            characters long.
        - id: jobName
          type:
            - string
          description: >-
            The name of the job within the specified resource

            group. Job names can only contain a combination of alphanumeric
            characters

            along with dash (-) and underscore (_). The name must be from 1
            through 64

            characters long.
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
        - id: optionalCallback
          type:
            - function
          description: The optional callback.
          optional: true
      return:
        type:
          - function
          - Promise
        description: |-
          If a callback was passed as the last parameter
          then it returns the callback else returns a Promise.

          {Promise} A promise is returned
      content: >-
        function terminate(resourceGroupName, workspaceName, experimentName,
        jobName, options, optionalCallback)
    langs:
      - js
  - uid: 'azure-arm-batchai.Jobs#beginCreateWithHttpOperationResponse'
    id: 'azure-arm-batchai.Jobs#beginCreateWithHttpOperationResponse'
    parent: azure-arm-batchai.Jobs
    name: >-
      beginCreateWithHttpOperationResponse(resourceGroupName, workspaceName,
      experimentName, jobName, parameters, options)
    summary: Creates a Job in the given Experiment.
    fullName: >-
      azure-arm-batchai.Jobs.beginCreateWithHttpOperationResponse(resourceGroupName,
      workspaceName, experimentName, jobName, parameters, options)
    tags:
      - originalTitle: resolve
        title: resolve
        text: '{HttpOperationResponse<Job>} - The deserialized result object.'
        value: '{HttpOperationResponse<Job>} - The deserialized result object.'
      - originalTitle: reject
        title: reject
        text: '{Error} - The error object.'
        value: '{Error} - The error object.'
    type: Function
    syntax:
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |-
            Name of the resource group to which the
            resource belongs.
        - id: workspaceName
          type:
            - string
          description: >-
            The name of the workspace. Workspace names can

            only contain a combination of alphanumeric characters along with
            dash (-)

            and underscore (_). The name must be from 1 through 64 characters
            long.
        - id: experimentName
          type:
            - string
          description: >-
            The name of the experiment. Experiment names

            can only contain a combination of alphanumeric characters along with
            dash

            (-) and underscore (_). The name must be from 1 through 64
            characters long.
        - id: jobName
          type:
            - string
          description: >-
            The name of the job within the specified resource

            group. Job names can only contain a combination of alphanumeric
            characters

            along with dash (-) and underscore (_). The name must be from 1
            through 64

            characters long.
        - id: parameters
          type:
            - object
          description: The parameters to provide for job creation.
        - id: parameters.schedulingPriority
          type:
            - string
          description: >-
            Scheduling priority.

            Scheduling priority associated with the job. Possible values: low,
            normal,

            high. Possible values include: 'low', 'normal', 'high'
          optional: true
        - id: parameters.cluster
          type:
            - object
          description: |-
            Cluster. Resource ID of the cluster on
            which this job will run.
        - id: parameters.mountVolumes
          type:
            - object
          description: >-
            Mount volumes. Information on

            mount volumes to be used by the job. These volumes will be mounted
            before

            the job execution and will be unmouted after the job completion. The
            volumes

            will be mounted at location specified by $AZ_BATCHAI_JOB_MOUNT_ROOT

            environment variable.
          optional: true
        - id: parameters.mountVolumes.azureFileShares
          type:
            - array
          description: >-
            Azure File Shares.

            A collection of Azure File Shares that are to be mounted to the
            cluster

            nodes.
          optional: true
        - id: parameters.mountVolumes.azureBlobFileSystems
          type:
            - array
          description: >-
            Azure Blob

            file systems. A collection of Azure Blob Containers that are to be
            mounted

            to the cluster nodes.
          optional: true
        - id: parameters.mountVolumes.fileServers
          type:
            - array
          description: >-
            File Servers. A

            collection of Batch AI File Servers that are to be mounted to the
            cluster

            nodes.
          optional: true
        - id: parameters.mountVolumes.unmanagedFileSystems
          type:
            - array
          description: >-
            Unmanaged file

            systems. A collection of unmanaged file systems that are to be
            mounted to

            the cluster nodes.
          optional: true
        - id: parameters.nodeCount
          type:
            - number
          description: >-
            Node count. Number of compute nodes to

            run the job on. The job will be gang scheduled on that many compute
            nodes.
        - id: parameters.containerSettings
          type:
            - object
          description: >-
            Container settings. Docker

            container settings for the job. If not provided, the job will run
            directly

            on the node.
          optional: true
        - id: parameters.containerSettings.imageSourceRegistry
          type:
            - object
          description: >-
            Image

            source registry. Information about docker image and docker registry
            to

            download the container from.
        - id: parameters.containerSettings.imageSourceRegistry.serverUrl
          type:
            - string
          description: Server URL. URL for image repository.
          optional: true
        - id: parameters.containerSettings.imageSourceRegistry.image
          type:
            - string
          description: Image. The name of the image in the image repository.
        - id: parameters.containerSettings.imageSourceRegistry.credentials
          type:
            - object
          description: |-
            Credentials.
            Credentials to access the private docker repository.
          optional: true
        - id: >-
            parameters.containerSettings.imageSourceRegistry.credentials.username
          type:
            - string
          description: |-
            User
            name. User name to login to the repository.
        - id: >-
            parameters.containerSettings.imageSourceRegistry.credentials.password
          type:
            - string
          description: >-
            Password. User password to login to the docker repository. One of
            password

            or passwordSecretReference must be specified.
          optional: true
        - id: >-
            parameters.containerSettings.imageSourceRegistry.credentials.passwordSecretReference
          type:
            - object
          description: >-
            Password secret reference. KeyVault Secret storing the password.
            Users can

            store their secrets in Azure KeyVault and pass it to the Batch AI
            service to

            integrate with KeyVault. One of password or passwordSecretReference
            must be

            specified.
          optional: true
        - id: >-
            parameters.containerSettings.imageSourceRegistry.credentials.passwordSecretReference.sourceVault
          type:
            - object
          description: >-
            Key Vault resource identifier. Fully qualified resource indentifier
            of the

            Key Vault.
        - id: >-
            parameters.containerSettings.imageSourceRegistry.credentials.passwordSecretReference.sourceVault.id
          type:
            - string
          description: The ID of the resource
        - id: >-
            parameters.containerSettings.imageSourceRegistry.credentials.passwordSecretReference.secretUrl
          type:
            - string
          description: Secret URL. The URL referencing a secret in the Key Vault.
        - id: parameters.containerSettings.shmSize
          type:
            - string
          description: >-
            /dev/shm size. Size

            of /dev/shm. Please refer to docker documentation for supported
            argument

            formats.
          optional: true
        - id: parameters.cntkSettings
          type:
            - object
          description: |-
            CNTK settings. Settings for CNTK
            (aka Microsoft Cognitive Toolkit) job.
          optional: true
        - id: parameters.cntkSettings.languageType
          type:
            - string
          description: >-
            Language type. The

            language to use for launching CNTK (aka Microsoft Cognitive Toolkit)
            job.

            Valid values are 'BrainScript' or 'Python'.
          optional: true
        - id: parameters.cntkSettings.configFilePath
          type:
            - string
          description: >-
            Config file path.

            Specifies the path of the BrainScript config file. This property can
            be

            specified only if the languageType is 'BrainScript'.
          optional: true
        - id: parameters.cntkSettings.pythonScriptFilePath
          type:
            - string
          description: >-
            Python script

            file path. Python script to execute. This property can be specified
            only if

            the languageType is 'Python'.
          optional: true
        - id: parameters.cntkSettings.pythonInterpreterPath
          type:
            - string
          description: >-
            Python

            interpreter path. The path to the Python interpreter. This property
            can be

            specified only if the languageType is 'Python'.
          optional: true
        - id: parameters.cntkSettings.commandLineArgs
          type:
            - string
          description: >-
            Command line

            arguments. Command line arguments that need to be passed to the
            python

            script or cntk executable.
          optional: true
        - id: parameters.cntkSettings.processCount
          type:
            - number
          description: >-
            Process count. Number

            of processes to launch for the job execution. The default value for
            this

            property is equal to nodeCount property
          optional: true
        - id: parameters.pyTorchSettings
          type:
            - object
          description: |-
            pyTorch settings. Settings for
            pyTorch job.
          optional: true
        - id: parameters.pyTorchSettings.pythonScriptFilePath
          type:
            - string
          description: |-
            Python
            script file path. The python script to execute.
        - id: parameters.pyTorchSettings.pythonInterpreterPath
          type:
            - string
          description: |-
            Python
            interpreter path. The path to the Python interpreter.
          optional: true
        - id: parameters.pyTorchSettings.commandLineArgs
          type:
            - string
          description: >-
            Command line

            arguments. Command line arguments that need to be passed to the
            python

            script.
          optional: true
        - id: parameters.pyTorchSettings.processCount
          type:
            - number
          description: >-
            Process count.

            Number of processes to launch for the job execution. The default
            value for

            this property is equal to nodeCount property
          optional: true
        - id: parameters.pyTorchSettings.communicationBackend
          type:
            - string
          description: >-
            Communication backend. Type of the communication backend for
            distributed

            jobs. Valid values are 'TCP', 'Gloo' or 'MPI'. Not required for

            non-distributed jobs.
          optional: true
        - id: parameters.tensorFlowSettings
          type:
            - object
          description: |-
            TensorFlow settings.
            Settings for Tensor Flow job.
          optional: true
        - id: parameters.tensorFlowSettings.pythonScriptFilePath
          type:
            - string
          description: |-
            Python
            script file path. The python script to execute.
        - id: parameters.tensorFlowSettings.pythonInterpreterPath
          type:
            - string
          description: |-
            Python
            interpreter path. The path to the Python interpreter.
          optional: true
        - id: parameters.tensorFlowSettings.masterCommandLineArgs
          type:
            - string
          description: >-
            Master

            command line arguments. Command line arguments that need to be
            passed to the

            python script for the master task.
          optional: true
        - id: parameters.tensorFlowSettings.workerCommandLineArgs
          type:
            - string
          description: >-
            Worker

            command line arguments. Command line arguments that need to be
            passed to the

            python script for the worker task. Optional for single process jobs.
          optional: true
        - id: parameters.tensorFlowSettings.parameterServerCommandLineArgs
          type:
            - string
          description: >-
            Parameter

            server command line arguments. Command line arguments that need to
            be passed

            to the python script for the parameter server. Optional for single
            process

            jobs.
          optional: true
        - id: parameters.tensorFlowSettings.workerCount
          type:
            - number
          description: >-
            Worker count.

            The number of worker tasks. If specified, the value must be less
            than or

            equal to (nodeCount * numberOfGPUs per VM). If not specified, the
            default

            value is equal to nodeCount. This property can be specified only for

            distributed TensorFlow training.
          optional: true
        - id: parameters.tensorFlowSettings.parameterServerCount
          type:
            - number
          description: >-
            Parameter server count. The number of parameter server tasks. If
            specified,

            the value must be less than or equal to nodeCount. If not specified,
            the

            default value is equal to 1 for distributed TensorFlow training.
            This

            property can be specified only for distributed TensorFlow training.
          optional: true
        - id: parameters.caffeSettings
          type:
            - object
          description: |-
            Caffe settings. Settings for
            Caffe job.
          optional: true
        - id: parameters.caffeSettings.configFilePath
          type:
            - string
          description: >-
            Config file path.

            Path of the config file for the job. This property cannot be
            specified if

            pythonScriptFilePath is specified.
          optional: true
        - id: parameters.caffeSettings.pythonScriptFilePath
          type:
            - string
          description: |-
            Python
            script file path. Python script to execute. This property cannot be
            specified if configFilePath is specified.
          optional: true
        - id: parameters.caffeSettings.pythonInterpreterPath
          type:
            - string
          description: >-
            Python

            interpreter path. The path to the Python interpreter. The property
            can be

            specified only if the pythonScriptFilePath is specified.
          optional: true
        - id: parameters.caffeSettings.commandLineArgs
          type:
            - string
          description: >-
            Command line

            arguments. Command line arguments that need to be passed to the
            Caffe job.
          optional: true
        - id: parameters.caffeSettings.processCount
          type:
            - number
          description: >-
            Process count.

            Number of processes to launch for the job execution. The default
            value for

            this property is equal to nodeCount property
          optional: true
        - id: parameters.caffe2Settings
          type:
            - object
          description: |-
            Caffe2 settings. Settings for
            Caffe2 job.
          optional: true
        - id: parameters.caffe2Settings.pythonScriptFilePath
          type:
            - string
          description: |-
            Python script
            file path. The python script to execute.
        - id: parameters.caffe2Settings.pythonInterpreterPath
          type:
            - string
          description: |-
            Python
            interpreter path. The path to the Python interpreter.
          optional: true
        - id: parameters.caffe2Settings.commandLineArgs
          type:
            - string
          description: >-
            Command line

            arguments. Command line arguments that need to be passed to the
            python

            script.
          optional: true
        - id: parameters.chainerSettings
          type:
            - object
          description: |-
            Chainer settings. Settings for
            Chainer job.
          optional: true
        - id: parameters.chainerSettings.pythonScriptFilePath
          type:
            - string
          description: |-
            Python
            script file path. The python script to execute.
        - id: parameters.chainerSettings.pythonInterpreterPath
          type:
            - string
          description: |-
            Python
            interpreter path. The path to the Python interpreter.
          optional: true
        - id: parameters.chainerSettings.commandLineArgs
          type:
            - string
          description: >-
            Command line

            arguments. Command line arguments that need to be passed to the
            python

            script.
          optional: true
        - id: parameters.chainerSettings.processCount
          type:
            - number
          description: >-
            Process count.

            Number of processes to launch for the job execution. The default
            value for

            this property is equal to nodeCount property
          optional: true
        - id: parameters.customToolkitSettings
          type:
            - object
          description: |-
            Custom tool kit job.
            Settings for custom tool kit job.
          optional: true
        - id: parameters.customToolkitSettings.commandLine
          type:
            - string
          description: |-
            Command line.
            The command line to execute on the master node.
          optional: true
        - id: parameters.customMpiSettings
          type:
            - object
          description: |-
            Custom MPI settings. Settings
            for custom MPI job.
          optional: true
        - id: parameters.customMpiSettings.commandLine
          type:
            - string
          description: |-
            Command line. The
            command line to be executed by mpi runtime on each compute node.
        - id: parameters.customMpiSettings.processCount
          type:
            - number
          description: >-
            Process count.

            Number of processes to launch for the job execution. The default
            value for

            this property is equal to nodeCount property
          optional: true
        - id: parameters.horovodSettings
          type:
            - object
          description: |-
            Horovod settings. Settings for
            Horovod job.
          optional: true
        - id: parameters.horovodSettings.pythonScriptFilePath
          type:
            - string
          description: |-
            Python
            script file path. The python script to execute.
        - id: parameters.horovodSettings.pythonInterpreterPath
          type:
            - string
          description: |-
            Python
            interpreter path. The path to the Python interpreter.
          optional: true
        - id: parameters.horovodSettings.commandLineArgs
          type:
            - string
          description: >-
            Command line

            arguments. Command line arguments that need to be passed to the
            python

            script.
          optional: true
        - id: parameters.horovodSettings.processCount
          type:
            - number
          description: >-
            Process count.

            Number of processes to launch for the job execution. The default
            value for

            this property is equal to nodeCount property
          optional: true
        - id: parameters.jobPreparation
          type:
            - object
          description: |-
            Job preparation. A command line
            to be executed on each node allocated for the job before tool kit is
            launched.
          optional: true
        - id: parameters.jobPreparation.commandLine
          type:
            - string
          description: >-
            Command line. The

            command line to execute. If containerSettings is specified on the
            job, this

            commandLine will be executed in the same container as job. Otherwise
            it will

            be executed on the node.
        - id: parameters.stdOutErrPathPrefix
          type:
            - string
          description: |-
            Standard output path prefix.
            The path where the Batch AI service will store stdout, stderror and
            execution log of the job.
        - id: parameters.inputDirectories
          type:
            - array
          description: |-
            Input directories. A list of
            input directories for the job.
          optional: true
        - id: parameters.outputDirectories
          type:
            - array
          description: |-
            Output directories. A list of
            output directories for the job.
          optional: true
        - id: parameters.environmentVariables
          type:
            - array
          description: >-
            Environment variables. A

            list of user defined environment variables which will be setup for
            the job.
          optional: true
        - id: parameters.secrets
          type:
            - array
          description: >-
            Secrets. A list of user defined

            environment variables with secret values which will be setup for the
            job.

            Server will never report values of these variables back.
          optional: true
        - id: parameters.constraints
          type:
            - object
          description: |-
            Constraints associated with the
            Job.
          optional: true
        - id: parameters.constraints.maxWallClockTime
          type:
            - azure-arm-batchai.moment.duration
          description: |-
            Max wall
            clock time. Max time the job can run. Default value: 1 week.
          optional: true
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
      return:
        type:
          - Promise
        description: A promise is returned
      content: >-
        function beginCreateWithHttpOperationResponse(resourceGroupName,
        workspaceName, experimentName, jobName, parameters, options)
    langs:
      - js
  - uid: 'azure-arm-batchai.Jobs#beginCreate'
    id: 'azure-arm-batchai.Jobs#beginCreate'
    parent: azure-arm-batchai.Jobs
    name: >-
      beginCreate(resourceGroupName, workspaceName, experimentName, jobName,
      parameters, options, optionalCallback)
    summary: Creates a Job in the given Experiment.
    fullName: >-
      azure-arm-batchai.Jobs.beginCreate(resourceGroupName, workspaceName,
      experimentName, jobName, parameters, options, optionalCallback)
    tags:
      - originalTitle: resolve
        title: resolve
        text: '{Job} - The deserialized result object.'
        value: '{Job} - The deserialized result object.'
      - originalTitle: reject
        title: reject
        text: |-
          {Error} - The error object.

          {function} optionalCallback(err, result, request, response)

                               {Error}  err        - The Error object if an error occurred, null otherwise.

                               {object} [result]   - The deserialized result object if an error did not occur.
                               See {@link Job} for more information.

                               {object} [request]  - The HTTP Request object if an error did not occur.

                               {stream} [response] - The HTTP Response stream if an error did not occur.
        value: |-
          {Error} - The error object.

          {function} optionalCallback(err, result, request, response)

                               {Error}  err        - The Error object if an error occurred, null otherwise.

                               {object} [result]   - The deserialized result object if an error did not occur.
                               See {@link Job} for more information.

                               {object} [request]  - The HTTP Request object if an error did not occur.

                               {stream} [response] - The HTTP Response stream if an error did not occur.
    type: Function
    syntax:
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |-
            Name of the resource group to which the
            resource belongs.
        - id: workspaceName
          type:
            - string
          description: >-
            The name of the workspace. Workspace names can

            only contain a combination of alphanumeric characters along with
            dash (-)

            and underscore (_). The name must be from 1 through 64 characters
            long.
        - id: experimentName
          type:
            - string
          description: >-
            The name of the experiment. Experiment names

            can only contain a combination of alphanumeric characters along with
            dash

            (-) and underscore (_). The name must be from 1 through 64
            characters long.
        - id: jobName
          type:
            - string
          description: >-
            The name of the job within the specified resource

            group. Job names can only contain a combination of alphanumeric
            characters

            along with dash (-) and underscore (_). The name must be from 1
            through 64

            characters long.
        - id: parameters
          type:
            - object
          description: The parameters to provide for job creation.
        - id: parameters.schedulingPriority
          type:
            - string
          description: >-
            Scheduling priority.

            Scheduling priority associated with the job. Possible values: low,
            normal,

            high. Possible values include: 'low', 'normal', 'high'
          optional: true
        - id: parameters.cluster
          type:
            - object
          description: |-
            Cluster. Resource ID of the cluster on
            which this job will run.
        - id: parameters.mountVolumes
          type:
            - object
          description: >-
            Mount volumes. Information on

            mount volumes to be used by the job. These volumes will be mounted
            before

            the job execution and will be unmouted after the job completion. The
            volumes

            will be mounted at location specified by $AZ_BATCHAI_JOB_MOUNT_ROOT

            environment variable.
          optional: true
        - id: parameters.mountVolumes.azureFileShares
          type:
            - array
          description: >-
            Azure File Shares.

            A collection of Azure File Shares that are to be mounted to the
            cluster

            nodes.
          optional: true
        - id: parameters.mountVolumes.azureBlobFileSystems
          type:
            - array
          description: >-
            Azure Blob

            file systems. A collection of Azure Blob Containers that are to be
            mounted

            to the cluster nodes.
          optional: true
        - id: parameters.mountVolumes.fileServers
          type:
            - array
          description: >-
            File Servers. A

            collection of Batch AI File Servers that are to be mounted to the
            cluster

            nodes.
          optional: true
        - id: parameters.mountVolumes.unmanagedFileSystems
          type:
            - array
          description: >-
            Unmanaged file

            systems. A collection of unmanaged file systems that are to be
            mounted to

            the cluster nodes.
          optional: true
        - id: parameters.nodeCount
          type:
            - number
          description: >-
            Node count. Number of compute nodes to

            run the job on. The job will be gang scheduled on that many compute
            nodes.
        - id: parameters.containerSettings
          type:
            - object
          description: >-
            Container settings. Docker

            container settings for the job. If not provided, the job will run
            directly

            on the node.
          optional: true
        - id: parameters.containerSettings.imageSourceRegistry
          type:
            - object
          description: >-
            Image

            source registry. Information about docker image and docker registry
            to

            download the container from.
        - id: parameters.containerSettings.imageSourceRegistry.serverUrl
          type:
            - string
          description: Server URL. URL for image repository.
          optional: true
        - id: parameters.containerSettings.imageSourceRegistry.image
          type:
            - string
          description: Image. The name of the image in the image repository.
        - id: parameters.containerSettings.imageSourceRegistry.credentials
          type:
            - object
          description: |-
            Credentials.
            Credentials to access the private docker repository.
          optional: true
        - id: >-
            parameters.containerSettings.imageSourceRegistry.credentials.username
          type:
            - string
          description: |-
            User
            name. User name to login to the repository.
        - id: >-
            parameters.containerSettings.imageSourceRegistry.credentials.password
          type:
            - string
          description: >-
            Password. User password to login to the docker repository. One of
            password

            or passwordSecretReference must be specified.
          optional: true
        - id: >-
            parameters.containerSettings.imageSourceRegistry.credentials.passwordSecretReference
          type:
            - object
          description: >-
            Password secret reference. KeyVault Secret storing the password.
            Users can

            store their secrets in Azure KeyVault and pass it to the Batch AI
            service to

            integrate with KeyVault. One of password or passwordSecretReference
            must be

            specified.
          optional: true
        - id: >-
            parameters.containerSettings.imageSourceRegistry.credentials.passwordSecretReference.sourceVault
          type:
            - object
          description: >-
            Key Vault resource identifier. Fully qualified resource indentifier
            of the

            Key Vault.
        - id: >-
            parameters.containerSettings.imageSourceRegistry.credentials.passwordSecretReference.sourceVault.id
          type:
            - string
          description: The ID of the resource
        - id: >-
            parameters.containerSettings.imageSourceRegistry.credentials.passwordSecretReference.secretUrl
          type:
            - string
          description: Secret URL. The URL referencing a secret in the Key Vault.
        - id: parameters.containerSettings.shmSize
          type:
            - string
          description: >-
            /dev/shm size. Size

            of /dev/shm. Please refer to docker documentation for supported
            argument

            formats.
          optional: true
        - id: parameters.cntkSettings
          type:
            - object
          description: |-
            CNTK settings. Settings for CNTK
            (aka Microsoft Cognitive Toolkit) job.
          optional: true
        - id: parameters.cntkSettings.languageType
          type:
            - string
          description: >-
            Language type. The

            language to use for launching CNTK (aka Microsoft Cognitive Toolkit)
            job.

            Valid values are 'BrainScript' or 'Python'.
          optional: true
        - id: parameters.cntkSettings.configFilePath
          type:
            - string
          description: >-
            Config file path.

            Specifies the path of the BrainScript config file. This property can
            be

            specified only if the languageType is 'BrainScript'.
          optional: true
        - id: parameters.cntkSettings.pythonScriptFilePath
          type:
            - string
          description: >-
            Python script

            file path. Python script to execute. This property can be specified
            only if

            the languageType is 'Python'.
          optional: true
        - id: parameters.cntkSettings.pythonInterpreterPath
          type:
            - string
          description: >-
            Python

            interpreter path. The path to the Python interpreter. This property
            can be

            specified only if the languageType is 'Python'.
          optional: true
        - id: parameters.cntkSettings.commandLineArgs
          type:
            - string
          description: >-
            Command line

            arguments. Command line arguments that need to be passed to the
            python

            script or cntk executable.
          optional: true
        - id: parameters.cntkSettings.processCount
          type:
            - number
          description: >-
            Process count. Number

            of processes to launch for the job execution. The default value for
            this

            property is equal to nodeCount property
          optional: true
        - id: parameters.pyTorchSettings
          type:
            - object
          description: |-
            pyTorch settings. Settings for
            pyTorch job.
          optional: true
        - id: parameters.pyTorchSettings.pythonScriptFilePath
          type:
            - string
          description: |-
            Python
            script file path. The python script to execute.
        - id: parameters.pyTorchSettings.pythonInterpreterPath
          type:
            - string
          description: |-
            Python
            interpreter path. The path to the Python interpreter.
          optional: true
        - id: parameters.pyTorchSettings.commandLineArgs
          type:
            - string
          description: >-
            Command line

            arguments. Command line arguments that need to be passed to the
            python

            script.
          optional: true
        - id: parameters.pyTorchSettings.processCount
          type:
            - number
          description: >-
            Process count.

            Number of processes to launch for the job execution. The default
            value for

            this property is equal to nodeCount property
          optional: true
        - id: parameters.pyTorchSettings.communicationBackend
          type:
            - string
          description: >-
            Communication backend. Type of the communication backend for
            distributed

            jobs. Valid values are 'TCP', 'Gloo' or 'MPI'. Not required for

            non-distributed jobs.
          optional: true
        - id: parameters.tensorFlowSettings
          type:
            - object
          description: |-
            TensorFlow settings.
            Settings for Tensor Flow job.
          optional: true
        - id: parameters.tensorFlowSettings.pythonScriptFilePath
          type:
            - string
          description: |-
            Python
            script file path. The python script to execute.
        - id: parameters.tensorFlowSettings.pythonInterpreterPath
          type:
            - string
          description: |-
            Python
            interpreter path. The path to the Python interpreter.
          optional: true
        - id: parameters.tensorFlowSettings.masterCommandLineArgs
          type:
            - string
          description: >-
            Master

            command line arguments. Command line arguments that need to be
            passed to the

            python script for the master task.
          optional: true
        - id: parameters.tensorFlowSettings.workerCommandLineArgs
          type:
            - string
          description: >-
            Worker

            command line arguments. Command line arguments that need to be
            passed to the

            python script for the worker task. Optional for single process jobs.
          optional: true
        - id: parameters.tensorFlowSettings.parameterServerCommandLineArgs
          type:
            - string
          description: >-
            Parameter

            server command line arguments. Command line arguments that need to
            be passed

            to the python script for the parameter server. Optional for single
            process

            jobs.
          optional: true
        - id: parameters.tensorFlowSettings.workerCount
          type:
            - number
          description: >-
            Worker count.

            The number of worker tasks. If specified, the value must be less
            than or

            equal to (nodeCount * numberOfGPUs per VM). If not specified, the
            default

            value is equal to nodeCount. This property can be specified only for

            distributed TensorFlow training.
          optional: true
        - id: parameters.tensorFlowSettings.parameterServerCount
          type:
            - number
          description: >-
            Parameter server count. The number of parameter server tasks. If
            specified,

            the value must be less than or equal to nodeCount. If not specified,
            the

            default value is equal to 1 for distributed TensorFlow training.
            This

            property can be specified only for distributed TensorFlow training.
          optional: true
        - id: parameters.caffeSettings
          type:
            - object
          description: |-
            Caffe settings. Settings for
            Caffe job.
          optional: true
        - id: parameters.caffeSettings.configFilePath
          type:
            - string
          description: >-
            Config file path.

            Path of the config file for the job. This property cannot be
            specified if

            pythonScriptFilePath is specified.
          optional: true
        - id: parameters.caffeSettings.pythonScriptFilePath
          type:
            - string
          description: |-
            Python
            script file path. Python script to execute. This property cannot be
            specified if configFilePath is specified.
          optional: true
        - id: parameters.caffeSettings.pythonInterpreterPath
          type:
            - string
          description: >-
            Python

            interpreter path. The path to the Python interpreter. The property
            can be

            specified only if the pythonScriptFilePath is specified.
          optional: true
        - id: parameters.caffeSettings.commandLineArgs
          type:
            - string
          description: >-
            Command line

            arguments. Command line arguments that need to be passed to the
            Caffe job.
          optional: true
        - id: parameters.caffeSettings.processCount
          type:
            - number
          description: >-
            Process count.

            Number of processes to launch for the job execution. The default
            value for

            this property is equal to nodeCount property
          optional: true
        - id: parameters.caffe2Settings
          type:
            - object
          description: |-
            Caffe2 settings. Settings for
            Caffe2 job.
          optional: true
        - id: parameters.caffe2Settings.pythonScriptFilePath
          type:
            - string
          description: |-
            Python script
            file path. The python script to execute.
        - id: parameters.caffe2Settings.pythonInterpreterPath
          type:
            - string
          description: |-
            Python
            interpreter path. The path to the Python interpreter.
          optional: true
        - id: parameters.caffe2Settings.commandLineArgs
          type:
            - string
          description: >-
            Command line

            arguments. Command line arguments that need to be passed to the
            python

            script.
          optional: true
        - id: parameters.chainerSettings
          type:
            - object
          description: |-
            Chainer settings. Settings for
            Chainer job.
          optional: true
        - id: parameters.chainerSettings.pythonScriptFilePath
          type:
            - string
          description: |-
            Python
            script file path. The python script to execute.
        - id: parameters.chainerSettings.pythonInterpreterPath
          type:
            - string
          description: |-
            Python
            interpreter path. The path to the Python interpreter.
          optional: true
        - id: parameters.chainerSettings.commandLineArgs
          type:
            - string
          description: >-
            Command line

            arguments. Command line arguments that need to be passed to the
            python

            script.
          optional: true
        - id: parameters.chainerSettings.processCount
          type:
            - number
          description: >-
            Process count.

            Number of processes to launch for the job execution. The default
            value for

            this property is equal to nodeCount property
          optional: true
        - id: parameters.customToolkitSettings
          type:
            - object
          description: |-
            Custom tool kit job.
            Settings for custom tool kit job.
          optional: true
        - id: parameters.customToolkitSettings.commandLine
          type:
            - string
          description: |-
            Command line.
            The command line to execute on the master node.
          optional: true
        - id: parameters.customMpiSettings
          type:
            - object
          description: |-
            Custom MPI settings. Settings
            for custom MPI job.
          optional: true
        - id: parameters.customMpiSettings.commandLine
          type:
            - string
          description: |-
            Command line. The
            command line to be executed by mpi runtime on each compute node.
        - id: parameters.customMpiSettings.processCount
          type:
            - number
          description: >-
            Process count.

            Number of processes to launch for the job execution. The default
            value for

            this property is equal to nodeCount property
          optional: true
        - id: parameters.horovodSettings
          type:
            - object
          description: |-
            Horovod settings. Settings for
            Horovod job.
          optional: true
        - id: parameters.horovodSettings.pythonScriptFilePath
          type:
            - string
          description: |-
            Python
            script file path. The python script to execute.
        - id: parameters.horovodSettings.pythonInterpreterPath
          type:
            - string
          description: |-
            Python
            interpreter path. The path to the Python interpreter.
          optional: true
        - id: parameters.horovodSettings.commandLineArgs
          type:
            - string
          description: >-
            Command line

            arguments. Command line arguments that need to be passed to the
            python

            script.
          optional: true
        - id: parameters.horovodSettings.processCount
          type:
            - number
          description: >-
            Process count.

            Number of processes to launch for the job execution. The default
            value for

            this property is equal to nodeCount property
          optional: true
        - id: parameters.jobPreparation
          type:
            - object
          description: |-
            Job preparation. A command line
            to be executed on each node allocated for the job before tool kit is
            launched.
          optional: true
        - id: parameters.jobPreparation.commandLine
          type:
            - string
          description: >-
            Command line. The

            command line to execute. If containerSettings is specified on the
            job, this

            commandLine will be executed in the same container as job. Otherwise
            it will

            be executed on the node.
        - id: parameters.stdOutErrPathPrefix
          type:
            - string
          description: |-
            Standard output path prefix.
            The path where the Batch AI service will store stdout, stderror and
            execution log of the job.
        - id: parameters.inputDirectories
          type:
            - array
          description: |-
            Input directories. A list of
            input directories for the job.
          optional: true
        - id: parameters.outputDirectories
          type:
            - array
          description: |-
            Output directories. A list of
            output directories for the job.
          optional: true
        - id: parameters.environmentVariables
          type:
            - array
          description: >-
            Environment variables. A

            list of user defined environment variables which will be setup for
            the job.
          optional: true
        - id: parameters.secrets
          type:
            - array
          description: >-
            Secrets. A list of user defined

            environment variables with secret values which will be setup for the
            job.

            Server will never report values of these variables back.
          optional: true
        - id: parameters.constraints
          type:
            - object
          description: |-
            Constraints associated with the
            Job.
          optional: true
        - id: parameters.constraints.maxWallClockTime
          type:
            - azure-arm-batchai.moment.duration
          description: |-
            Max wall
            clock time. Max time the job can run. Default value: 1 week.
          optional: true
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
        - id: optionalCallback
          type:
            - function
          description: The optional callback.
          optional: true
      return:
        type:
          - function
          - Promise
        description: |-
          If a callback was passed as the last parameter
          then it returns the callback else returns a Promise.

          {Promise} A promise is returned
      content: >-
        function beginCreate(resourceGroupName, workspaceName, experimentName,
        jobName, parameters, options, optionalCallback)
    langs:
      - js
  - uid: 'azure-arm-batchai.Jobs#beginDeleteMethodWithHttpOperationResponse'
    id: 'azure-arm-batchai.Jobs#beginDeleteMethodWithHttpOperationResponse'
    parent: azure-arm-batchai.Jobs
    name: >-
      beginDeleteMethodWithHttpOperationResponse(resourceGroupName,
      workspaceName, experimentName, jobName, options)
    summary: Deletes a Job.
    fullName: >-
      azure-arm-batchai.Jobs.beginDeleteMethodWithHttpOperationResponse(resourceGroupName,
      workspaceName, experimentName, jobName, options)
    tags:
      - originalTitle: resolve
        title: resolve
        text: '{HttpOperationResponse<null>} - The deserialized result object.'
        value: '{HttpOperationResponse<null>} - The deserialized result object.'
      - originalTitle: reject
        title: reject
        text: '{Error} - The error object.'
        value: '{Error} - The error object.'
    type: Function
    syntax:
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |-
            Name of the resource group to which the
            resource belongs.
        - id: workspaceName
          type:
            - string
          description: >-
            The name of the workspace. Workspace names can

            only contain a combination of alphanumeric characters along with
            dash (-)

            and underscore (_). The name must be from 1 through 64 characters
            long.
        - id: experimentName
          type:
            - string
          description: >-
            The name of the experiment. Experiment names

            can only contain a combination of alphanumeric characters along with
            dash

            (-) and underscore (_). The name must be from 1 through 64
            characters long.
        - id: jobName
          type:
            - string
          description: >-
            The name of the job within the specified resource

            group. Job names can only contain a combination of alphanumeric
            characters

            along with dash (-) and underscore (_). The name must be from 1
            through 64

            characters long.
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
      return:
        type:
          - Promise
        description: A promise is returned
      content: >-
        function beginDeleteMethodWithHttpOperationResponse(resourceGroupName,
        workspaceName, experimentName, jobName, options)
    langs:
      - js
  - uid: 'azure-arm-batchai.Jobs#beginDeleteMethod'
    id: 'azure-arm-batchai.Jobs#beginDeleteMethod'
    parent: azure-arm-batchai.Jobs
    name: >-
      beginDeleteMethod(resourceGroupName, workspaceName, experimentName,
      jobName, options, optionalCallback)
    summary: Deletes a Job.
    fullName: >-
      azure-arm-batchai.Jobs.beginDeleteMethod(resourceGroupName, workspaceName,
      experimentName, jobName, options, optionalCallback)
    tags:
      - originalTitle: resolve
        title: resolve
        text: '{null} - The deserialized result object.'
        value: '{null} - The deserialized result object.'
      - originalTitle: reject
        title: reject
        text: |-
          {Error} - The error object.

          {function} optionalCallback(err, result, request, response)

                               {Error}  err        - The Error object if an error occurred, null otherwise.

                               {null} [result]   - The deserialized result object if an error did not occur.

                               {object} [request]  - The HTTP Request object if an error did not occur.

                               {stream} [response] - The HTTP Response stream if an error did not occur.
        value: |-
          {Error} - The error object.

          {function} optionalCallback(err, result, request, response)

                               {Error}  err        - The Error object if an error occurred, null otherwise.

                               {null} [result]   - The deserialized result object if an error did not occur.

                               {object} [request]  - The HTTP Request object if an error did not occur.

                               {stream} [response] - The HTTP Response stream if an error did not occur.
    type: Function
    syntax:
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |-
            Name of the resource group to which the
            resource belongs.
        - id: workspaceName
          type:
            - string
          description: >-
            The name of the workspace. Workspace names can

            only contain a combination of alphanumeric characters along with
            dash (-)

            and underscore (_). The name must be from 1 through 64 characters
            long.
        - id: experimentName
          type:
            - string
          description: >-
            The name of the experiment. Experiment names

            can only contain a combination of alphanumeric characters along with
            dash

            (-) and underscore (_). The name must be from 1 through 64
            characters long.
        - id: jobName
          type:
            - string
          description: >-
            The name of the job within the specified resource

            group. Job names can only contain a combination of alphanumeric
            characters

            along with dash (-) and underscore (_). The name must be from 1
            through 64

            characters long.
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
        - id: optionalCallback
          type:
            - function
          description: The optional callback.
          optional: true
      return:
        type:
          - function
          - Promise
        description: |-
          If a callback was passed as the last parameter
          then it returns the callback else returns a Promise.

          {Promise} A promise is returned
      content: >-
        function beginDeleteMethod(resourceGroupName, workspaceName,
        experimentName, jobName, options, optionalCallback)
    langs:
      - js
  - uid: 'azure-arm-batchai.Jobs#beginTerminateWithHttpOperationResponse'
    id: 'azure-arm-batchai.Jobs#beginTerminateWithHttpOperationResponse'
    parent: azure-arm-batchai.Jobs
    name: >-
      beginTerminateWithHttpOperationResponse(resourceGroupName, workspaceName,
      experimentName, jobName, options)
    summary: Terminates a job.
    fullName: >-
      azure-arm-batchai.Jobs.beginTerminateWithHttpOperationResponse(resourceGroupName,
      workspaceName, experimentName, jobName, options)
    tags:
      - originalTitle: resolve
        title: resolve
        text: '{HttpOperationResponse<null>} - The deserialized result object.'
        value: '{HttpOperationResponse<null>} - The deserialized result object.'
      - originalTitle: reject
        title: reject
        text: '{Error} - The error object.'
        value: '{Error} - The error object.'
    type: Function
    syntax:
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |-
            Name of the resource group to which the
            resource belongs.
        - id: workspaceName
          type:
            - string
          description: >-
            The name of the workspace. Workspace names can

            only contain a combination of alphanumeric characters along with
            dash (-)

            and underscore (_). The name must be from 1 through 64 characters
            long.
        - id: experimentName
          type:
            - string
          description: >-
            The name of the experiment. Experiment names

            can only contain a combination of alphanumeric characters along with
            dash

            (-) and underscore (_). The name must be from 1 through 64
            characters long.
        - id: jobName
          type:
            - string
          description: >-
            The name of the job within the specified resource

            group. Job names can only contain a combination of alphanumeric
            characters

            along with dash (-) and underscore (_). The name must be from 1
            through 64

            characters long.
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
      return:
        type:
          - Promise
        description: A promise is returned
      content: >-
        function beginTerminateWithHttpOperationResponse(resourceGroupName,
        workspaceName, experimentName, jobName, options)
    langs:
      - js
  - uid: 'azure-arm-batchai.Jobs#beginTerminate'
    id: 'azure-arm-batchai.Jobs#beginTerminate'
    parent: azure-arm-batchai.Jobs
    name: >-
      beginTerminate(resourceGroupName, workspaceName, experimentName, jobName,
      options, optionalCallback)
    summary: Terminates a job.
    fullName: >-
      azure-arm-batchai.Jobs.beginTerminate(resourceGroupName, workspaceName,
      experimentName, jobName, options, optionalCallback)
    tags:
      - originalTitle: resolve
        title: resolve
        text: '{null} - The deserialized result object.'
        value: '{null} - The deserialized result object.'
      - originalTitle: reject
        title: reject
        text: |-
          {Error} - The error object.

          {function} optionalCallback(err, result, request, response)

                               {Error}  err        - The Error object if an error occurred, null otherwise.

                               {null} [result]   - The deserialized result object if an error did not occur.

                               {object} [request]  - The HTTP Request object if an error did not occur.

                               {stream} [response] - The HTTP Response stream if an error did not occur.
        value: |-
          {Error} - The error object.

          {function} optionalCallback(err, result, request, response)

                               {Error}  err        - The Error object if an error occurred, null otherwise.

                               {null} [result]   - The deserialized result object if an error did not occur.

                               {object} [request]  - The HTTP Request object if an error did not occur.

                               {stream} [response] - The HTTP Response stream if an error did not occur.
    type: Function
    syntax:
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |-
            Name of the resource group to which the
            resource belongs.
        - id: workspaceName
          type:
            - string
          description: >-
            The name of the workspace. Workspace names can

            only contain a combination of alphanumeric characters along with
            dash (-)

            and underscore (_). The name must be from 1 through 64 characters
            long.
        - id: experimentName
          type:
            - string
          description: >-
            The name of the experiment. Experiment names

            can only contain a combination of alphanumeric characters along with
            dash

            (-) and underscore (_). The name must be from 1 through 64
            characters long.
        - id: jobName
          type:
            - string
          description: >-
            The name of the job within the specified resource

            group. Job names can only contain a combination of alphanumeric
            characters

            along with dash (-) and underscore (_). The name must be from 1
            through 64

            characters long.
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
        - id: optionalCallback
          type:
            - function
          description: The optional callback.
          optional: true
      return:
        type:
          - function
          - Promise
        description: |-
          If a callback was passed as the last parameter
          then it returns the callback else returns a Promise.

          {Promise} A promise is returned
      content: >-
        function beginTerminate(resourceGroupName, workspaceName,
        experimentName, jobName, options, optionalCallback)
    langs:
      - js
  - uid: 'azure-arm-batchai.Jobs#listByExperimentNextWithHttpOperationResponse'
    id: 'azure-arm-batchai.Jobs#listByExperimentNextWithHttpOperationResponse'
    parent: azure-arm-batchai.Jobs
    name: 'listByExperimentNextWithHttpOperationResponse(nextPageLink, options)'
    summary: Gets a list of Jobs within the specified Experiment.
    fullName: >-
      azure-arm-batchai.Jobs.listByExperimentNextWithHttpOperationResponse(nextPageLink,
      options)
    tags:
      - originalTitle: resolve
        title: resolve
        text: >-
          {HttpOperationResponse<JobListResult>} - The deserialized result
          object.
        value: >-
          {HttpOperationResponse<JobListResult>} - The deserialized result
          object.
      - originalTitle: reject
        title: reject
        text: '{Error} - The error object.'
        value: '{Error} - The error object.'
    type: Function
    syntax:
      parameters:
        - id: nextPageLink
          type:
            - string
          description: |-
            The NextLink from the previous successful call
            to List operation.
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
      return:
        type:
          - Promise
        description: A promise is returned
      content: >-
        function listByExperimentNextWithHttpOperationResponse(nextPageLink,
        options)
    langs:
      - js
  - uid: 'azure-arm-batchai.Jobs#listByExperimentNext'
    id: 'azure-arm-batchai.Jobs#listByExperimentNext'
    parent: azure-arm-batchai.Jobs
    name: 'listByExperimentNext(nextPageLink, options, optionalCallback)'
    summary: Gets a list of Jobs within the specified Experiment.
    fullName: >-
      azure-arm-batchai.Jobs.listByExperimentNext(nextPageLink, options,
      optionalCallback)
    tags:
      - originalTitle: resolve
        title: resolve
        text: '{JobListResult} - The deserialized result object.'
        value: '{JobListResult} - The deserialized result object.'
      - originalTitle: reject
        title: reject
        text: |-
          {Error} - The error object.

          {function} optionalCallback(err, result, request, response)

                               {Error}  err        - The Error object if an error occurred, null otherwise.

                               {object} [result]   - The deserialized result object if an error did not occur.
                               See {@link JobListResult} for more information.

                               {object} [request]  - The HTTP Request object if an error did not occur.

                               {stream} [response] - The HTTP Response stream if an error did not occur.
        value: |-
          {Error} - The error object.

          {function} optionalCallback(err, result, request, response)

                               {Error}  err        - The Error object if an error occurred, null otherwise.

                               {object} [result]   - The deserialized result object if an error did not occur.
                               See {@link JobListResult} for more information.

                               {object} [request]  - The HTTP Request object if an error did not occur.

                               {stream} [response] - The HTTP Response stream if an error did not occur.
    type: Function
    syntax:
      parameters:
        - id: nextPageLink
          type:
            - string
          description: |-
            The NextLink from the previous successful call
            to List operation.
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
        - id: optionalCallback
          type:
            - function
          description: The optional callback.
          optional: true
      return:
        type:
          - function
          - Promise
        description: |-
          If a callback was passed as the last parameter
          then it returns the callback else returns a Promise.

          {Promise} A promise is returned
      content: 'function listByExperimentNext(nextPageLink, options, optionalCallback)'
    langs:
      - js
  - uid: 'azure-arm-batchai.Jobs#listOutputFilesNextWithHttpOperationResponse'
    id: 'azure-arm-batchai.Jobs#listOutputFilesNextWithHttpOperationResponse'
    parent: azure-arm-batchai.Jobs
    name: 'listOutputFilesNextWithHttpOperationResponse(nextPageLink, options)'
    summary: |-
      List all directories and files inside the given directory of the Job's
      output directory (if the output directory is on Azure File Share or Azure
      Storage Container).
    fullName: >-
      azure-arm-batchai.Jobs.listOutputFilesNextWithHttpOperationResponse(nextPageLink,
      options)
    tags:
      - originalTitle: resolve
        title: resolve
        text: >-
          {HttpOperationResponse<FileListResult>} - The deserialized result
          object.
        value: >-
          {HttpOperationResponse<FileListResult>} - The deserialized result
          object.
      - originalTitle: reject
        title: reject
        text: '{Error} - The error object.'
        value: '{Error} - The error object.'
    type: Function
    syntax:
      parameters:
        - id: nextPageLink
          type:
            - string
          description: |-
            The NextLink from the previous successful call
            to List operation.
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
      return:
        type:
          - Promise
        description: A promise is returned
      content: >-
        function listOutputFilesNextWithHttpOperationResponse(nextPageLink,
        options)
    langs:
      - js
  - uid: 'azure-arm-batchai.Jobs#listOutputFilesNext'
    id: 'azure-arm-batchai.Jobs#listOutputFilesNext'
    parent: azure-arm-batchai.Jobs
    name: 'listOutputFilesNext(nextPageLink, options, optionalCallback)'
    summary: |-
      List all directories and files inside the given directory of the Job's
      output directory (if the output directory is on Azure File Share or Azure
      Storage Container).
    fullName: >-
      azure-arm-batchai.Jobs.listOutputFilesNext(nextPageLink, options,
      optionalCallback)
    tags:
      - originalTitle: resolve
        title: resolve
        text: '{FileListResult} - The deserialized result object.'
        value: '{FileListResult} - The deserialized result object.'
      - originalTitle: reject
        title: reject
        text: |-
          {Error} - The error object.

          {function} optionalCallback(err, result, request, response)

                               {Error}  err        - The Error object if an error occurred, null otherwise.

                               {object} [result]   - The deserialized result object if an error did not occur.
                               See {@link FileListResult} for more information.

                               {object} [request]  - The HTTP Request object if an error did not occur.

                               {stream} [response] - The HTTP Response stream if an error did not occur.
        value: |-
          {Error} - The error object.

          {function} optionalCallback(err, result, request, response)

                               {Error}  err        - The Error object if an error occurred, null otherwise.

                               {object} [result]   - The deserialized result object if an error did not occur.
                               See {@link FileListResult} for more information.

                               {object} [request]  - The HTTP Request object if an error did not occur.

                               {stream} [response] - The HTTP Response stream if an error did not occur.
    type: Function
    syntax:
      parameters:
        - id: nextPageLink
          type:
            - string
          description: |-
            The NextLink from the previous successful call
            to List operation.
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
        - id: optionalCallback
          type:
            - function
          description: The optional callback.
          optional: true
      return:
        type:
          - function
          - Promise
        description: |-
          If a callback was passed as the last parameter
          then it returns the callback else returns a Promise.

          {Promise} A promise is returned
      content: 'function listOutputFilesNext(nextPageLink, options, optionalCallback)'
    langs:
      - js
  - uid: >-
      azure-arm-batchai.Jobs#listRemoteLoginInformationNextWithHttpOperationResponse
    id: >-
      azure-arm-batchai.Jobs#listRemoteLoginInformationNextWithHttpOperationResponse
    parent: azure-arm-batchai.Jobs
    name: >-
      listRemoteLoginInformationNextWithHttpOperationResponse(nextPageLink,
      options)
    summary: >-
      Gets a list of currently existing nodes which were used for the Job

      execution. The returned information contains the node ID, its public IP
      and

      SSH port.
    fullName: >-
      azure-arm-batchai.Jobs.listRemoteLoginInformationNextWithHttpOperationResponse(nextPageLink,
      options)
    tags:
      - originalTitle: resolve
        title: resolve
        text: >-
          {HttpOperationResponse<RemoteLoginInformationListResult>} - The
          deserialized result object.
        value: >-
          {HttpOperationResponse<RemoteLoginInformationListResult>} - The
          deserialized result object.
      - originalTitle: reject
        title: reject
        text: '{Error} - The error object.'
        value: '{Error} - The error object.'
    type: Function
    syntax:
      parameters:
        - id: nextPageLink
          type:
            - string
          description: |-
            The NextLink from the previous successful call
            to List operation.
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
      return:
        type:
          - Promise
        description: A promise is returned
      content: >-
        function
        listRemoteLoginInformationNextWithHttpOperationResponse(nextPageLink,
        options)
    langs:
      - js
  - uid: 'azure-arm-batchai.Jobs#listRemoteLoginInformationNext'
    id: 'azure-arm-batchai.Jobs#listRemoteLoginInformationNext'
    parent: azure-arm-batchai.Jobs
    name: 'listRemoteLoginInformationNext(nextPageLink, options, optionalCallback)'
    summary: >-
      Gets a list of currently existing nodes which were used for the Job

      execution. The returned information contains the node ID, its public IP
      and

      SSH port.
    fullName: >-
      azure-arm-batchai.Jobs.listRemoteLoginInformationNext(nextPageLink,
      options, optionalCallback)
    tags:
      - originalTitle: resolve
        title: resolve
        text: '{RemoteLoginInformationListResult} - The deserialized result object.'
        value: '{RemoteLoginInformationListResult} - The deserialized result object.'
      - originalTitle: reject
        title: reject
        text: |-
          {Error} - The error object.

          {function} optionalCallback(err, result, request, response)

                               {Error}  err        - The Error object if an error occurred, null otherwise.

                               {object} [result]   - The deserialized result object if an error did not occur.
                               See {@link RemoteLoginInformationListResult} for more
                               information.

                               {object} [request]  - The HTTP Request object if an error did not occur.

                               {stream} [response] - The HTTP Response stream if an error did not occur.
        value: |-
          {Error} - The error object.

          {function} optionalCallback(err, result, request, response)

                               {Error}  err        - The Error object if an error occurred, null otherwise.

                               {object} [result]   - The deserialized result object if an error did not occur.
                               See {@link RemoteLoginInformationListResult} for more
                               information.

                               {object} [request]  - The HTTP Request object if an error did not occur.

                               {stream} [response] - The HTTP Response stream if an error did not occur.
    type: Function
    syntax:
      parameters:
        - id: nextPageLink
          type:
            - string
          description: |-
            The NextLink from the previous successful call
            to List operation.
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
        - id: optionalCallback
          type:
            - function
          description: The optional callback.
          optional: true
      return:
        type:
          - function
          - Promise
        description: |-
          If a callback was passed as the last parameter
          then it returns the callback else returns a Promise.

          {Promise} A promise is returned
      content: >-
        function listRemoteLoginInformationNext(nextPageLink, options,
        optionalCallback)
    langs:
      - js
