### YamlMime:UniversalReference
items:
  - uid: azure-cognitiveservices-spellcheck.SpellCheckAPIClient
    name: SpellCheckAPIClient
    fullName: SpellCheckAPIClient
    children:
      - azure-cognitiveservices-spellcheck.SpellCheckAPIClient.credentials
      - azure-cognitiveservices-spellcheck.SpellCheckAPIClient.constructor
      - azure-cognitiveservices-spellcheck.SpellCheckAPIClient.spellChecker
      - azure-cognitiveservices-spellcheck.SpellCheckAPIClient.spellChecker_2
      - azure-cognitiveservices-spellcheck.SpellCheckAPIClient.spellChecker_1
      - >-
        azure-cognitiveservices-spellcheck.SpellCheckAPIClient.spellCheckerWithHttpOperationResponse
    langs:
      - typeScript
    type: class
    summary: ''
    extends:
      name: ServiceClient
    package: azure-cognitiveservices-spellcheck
  - uid: azure-cognitiveservices-spellcheck.SpellCheckAPIClient.credentials
    name: credentials
    fullName: credentials
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'credentials: ServiceClientCredentials'
      return:
        type:
          - ServiceClientCredentials
    package: azure-cognitiveservices-spellcheck
  - uid: azure-cognitiveservices-spellcheck.SpellCheckAPIClient.constructor
    name: >-
      SpellCheckAPIClient(ServiceClientCredentials, string,
      ServiceClientOptions)
    children: []
    type: constructor
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        new SpellCheckAPIClient(credentials: ServiceClientCredentials, baseUri?:
        string, options?: ServiceClientOptions)
      parameters:
        - id: credentials
          type:
            - ServiceClientCredentials
          description: >
            Subscription credentials which uniquely identify client
            subscription.
        - id: baseUri
          type:
            - string
          description: ''
          optional: true
        - id: options
          type:
            - ServiceClientOptions
          description: ''
          optional: true
    package: azure-cognitiveservices-spellcheck
  - uid: azure-cognitiveservices-spellcheck.SpellCheckAPIClient.spellChecker
    name: 'spellChecker(string, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function spellChecker(text: string, options?: Object)'
      parameters:
        - id: text
          type:
            - string
          description: >
            The text string to check for spelling and grammar

            errors. The combined length of the text string, preContextText
            string, and

            postContextText string may not exceed 10,000 characters. You may
            specify

            this parameter in the query string of a GET request or in the body
            of a POST

            request. Because of the query string length limit, you'll typically
            use a

            POST request unless you're checking only short strings.
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<azure-cognitiveservices-spellcheck.SpellCheck>
    package: azure-cognitiveservices-spellcheck
  - uid: azure-cognitiveservices-spellcheck.SpellCheckAPIClient.spellChecker_2
    name: 'spellChecker(string, Object, ServiceCallback<SpellCheck>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function spellChecker(text: string, options: Object, callback:
        ServiceCallback<SpellCheck>)
      parameters:
        - id: text
          type:
            - string
          description: ''
        - id: options
          type:
            - Object
          description: ''
        - id: callback
          type:
            - ServiceCallback<azure-cognitiveservices-spellcheck.SpellCheck>
          description: ''
      return:
        type:
          - Promise<azure-cognitiveservices-spellcheck.SpellCheck>
    package: azure-cognitiveservices-spellcheck
  - uid: azure-cognitiveservices-spellcheck.SpellCheckAPIClient.spellChecker_1
    name: 'spellChecker(string, ServiceCallback<SpellCheck>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function spellChecker(text: string, callback:
        ServiceCallback<SpellCheck>)
      parameters:
        - id: text
          type:
            - string
          description: ''
        - id: callback
          type:
            - ServiceCallback<azure-cognitiveservices-spellcheck.SpellCheck>
          description: ''
      return:
        type:
          - Promise<azure-cognitiveservices-spellcheck.SpellCheck>
    package: azure-cognitiveservices-spellcheck
  - uid: >-
      azure-cognitiveservices-spellcheck.SpellCheckAPIClient.spellCheckerWithHttpOperationResponse
    name: 'spellCheckerWithHttpOperationResponse(string, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function spellCheckerWithHttpOperationResponse(text: string, options?:
        Object)
      parameters:
        - id: text
          type:
            - string
          description: >
            The text string to check for spelling and grammar

            errors. The combined length of the text string, preContextText
            string, and

            postContextText string may not exceed 10,000 characters. You may
            specify

            this parameter in the query string of a GET request or in the body
            of a POST

            request. Because of the query string length limit, you'll typically
            use a

            POST request unless you're checking only short strings.
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - >-
            Promise<HttpOperationResponse<azure-cognitiveservices-spellcheck.SpellCheck>>
    package: azure-cognitiveservices-spellcheck
references:
  - uid: Promise<azure-cognitiveservices-spellcheck.SpellCheck>
    name: SpellCheck>
    spec.typeScript:
      - name: Promise<
        fullName: Promise<
      - name: SpellCheck
        fullName: SpellCheck
        uid: azure-cognitiveservices-spellcheck.SpellCheck
      - name: '>'
        fullName: '>'
  - uid: ServiceCallback<azure-cognitiveservices-spellcheck.SpellCheck>
    name: SpellCheck>
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: SpellCheck
        fullName: SpellCheck
        uid: azure-cognitiveservices-spellcheck.SpellCheck
      - name: '>'
        fullName: '>'
  - uid: >-
      Promise<HttpOperationResponse<azure-cognitiveservices-spellcheck.SpellCheck>>
    name: SpellCheck>>
    spec.typeScript:
      - name: Promise<HttpOperationResponse<
        fullName: Promise<HttpOperationResponse<
      - name: SpellCheck
        fullName: SpellCheck
        uid: azure-cognitiveservices-spellcheck.SpellCheck
      - name: '>>'
        fullName: '>>'
