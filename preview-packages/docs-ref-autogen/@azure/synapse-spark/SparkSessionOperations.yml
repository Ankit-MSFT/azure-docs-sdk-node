### YamlMime:TSType
name: SparkSessionOperations
uid: '@azure/synapse-spark.SparkSessionOperations'
package: '@azure/synapse-spark'
summary: Interface representing a SparkSessionOperations.
fullName: SparkSessionOperations
remarks: ''
isPreview: false
isDeprecated: false
type: interface
methods:
  - name: >-
      cancelSparkSession(number,
      SparkSessionOperationsCancelSparkSessionOptionalParams)
    uid: '@azure/synapse-spark.SparkSessionOperations.cancelSparkSession'
    package: '@azure/synapse-spark'
    summary: Cancels a running spark session.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function cancelSparkSession(sessionId: number, options?:
        SparkSessionOperationsCancelSparkSessionOptionalParams)
      parameters:
        - id: sessionId
          type: number
          description: Identifier for the session.
        - id: options
          type: >-
            <xref
            uid="@azure/synapse-spark.SparkSessionOperationsCancelSparkSessionOptionalParams"
            />
          description: |
            The options parameters.
      return:
        type: Promise&lt;void&gt;
        description: ''
  - name: >-
      cancelSparkStatement(number, number,
      SparkSessionOperationsCancelSparkStatementOptionalParams)
    uid: '@azure/synapse-spark.SparkSessionOperations.cancelSparkStatement'
    package: '@azure/synapse-spark'
    summary: Kill a statement within a session.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function cancelSparkStatement(sessionId: number, statementId: number,
        options?: SparkSessionOperationsCancelSparkStatementOptionalParams)
      parameters:
        - id: sessionId
          type: number
          description: Identifier for the session.
        - id: statementId
          type: number
          description: Identifier for the statement.
        - id: options
          type: >-
            <xref
            uid="@azure/synapse-spark.SparkSessionOperationsCancelSparkStatementOptionalParams"
            />
          description: |
            The options parameters.
      return:
        type: >-
          Promise&lt;<xref
          uid="@azure/synapse-spark.SparkSessionOperationsCancelSparkStatementResponse"
          />&gt;
        description: ''
  - name: >-
      createSparkSession(SparkSessionOptions,
      SparkSessionOperationsCreateSparkSessionOptionalParams)
    uid: '@azure/synapse-spark.SparkSessionOperations.createSparkSession'
    package: '@azure/synapse-spark'
    summary: Create new spark session.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function createSparkSession(sparkSessionOptions: SparkSessionOptions,
        options?: SparkSessionOperationsCreateSparkSessionOptionalParams)
      parameters:
        - id: sparkSessionOptions
          type: <xref uid="@azure/synapse-spark.SparkSessionOptions" />
          description: Livy compatible batch job request payload.
        - id: options
          type: >-
            <xref
            uid="@azure/synapse-spark.SparkSessionOperationsCreateSparkSessionOptionalParams"
            />
          description: |
            The options parameters.
      return:
        type: >-
          Promise&lt;<xref
          uid="@azure/synapse-spark.SparkSessionOperationsCreateSparkSessionResponse"
          />&gt;
        description: ''
  - name: >-
      createSparkStatement(number, SparkStatementOptions,
      SparkSessionOperationsCreateSparkStatementOptionalParams)
    uid: '@azure/synapse-spark.SparkSessionOperations.createSparkStatement'
    package: '@azure/synapse-spark'
    summary: Create statement within a spark session.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function createSparkStatement(sessionId: number, sparkStatementOptions:
        SparkStatementOptions, options?:
        SparkSessionOperationsCreateSparkStatementOptionalParams)
      parameters:
        - id: sessionId
          type: number
          description: Identifier for the session.
        - id: sparkStatementOptions
          type: <xref uid="@azure/synapse-spark.SparkStatementOptions" />
          description: Livy compatible batch job request payload.
        - id: options
          type: >-
            <xref
            uid="@azure/synapse-spark.SparkSessionOperationsCreateSparkStatementOptionalParams"
            />
          description: |
            The options parameters.
      return:
        type: >-
          Promise&lt;<xref
          uid="@azure/synapse-spark.SparkSessionOperationsCreateSparkStatementResponse"
          />&gt;
        description: ''
  - name: >-
      getSparkSession(number,
      SparkSessionOperationsGetSparkSessionOptionalParams)
    uid: '@azure/synapse-spark.SparkSessionOperations.getSparkSession'
    package: '@azure/synapse-spark'
    summary: Gets a single spark session.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function getSparkSession(sessionId: number, options?:
        SparkSessionOperationsGetSparkSessionOptionalParams)
      parameters:
        - id: sessionId
          type: number
          description: Identifier for the session.
        - id: options
          type: >-
            <xref
            uid="@azure/synapse-spark.SparkSessionOperationsGetSparkSessionOptionalParams"
            />
          description: |
            The options parameters.
      return:
        type: >-
          Promise&lt;<xref
          uid="@azure/synapse-spark.SparkSessionOperationsGetSparkSessionResponse"
          />&gt;
        description: ''
  - name: getSparkSessions(SparkSessionOperationsGetSparkSessionsOptionalParams)
    uid: '@azure/synapse-spark.SparkSessionOperations.getSparkSessions'
    package: '@azure/synapse-spark'
    summary: List all spark sessions which are running under a particular spark pool.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function getSparkSessions(options?:
        SparkSessionOperationsGetSparkSessionsOptionalParams)
      parameters:
        - id: options
          type: >-
            <xref
            uid="@azure/synapse-spark.SparkSessionOperationsGetSparkSessionsOptionalParams"
            />
          description: |
            The options parameters.
      return:
        type: >-
          Promise&lt;<xref
          uid="@azure/synapse-spark.SparkSessionOperationsGetSparkSessionsResponse"
          />&gt;
        description: ''
  - name: >-
      getSparkStatement(number, number,
      SparkSessionOperationsGetSparkStatementOptionalParams)
    uid: '@azure/synapse-spark.SparkSessionOperations.getSparkStatement'
    package: '@azure/synapse-spark'
    summary: Gets a single statement within a spark session.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function getSparkStatement(sessionId: number, statementId: number,
        options?: SparkSessionOperationsGetSparkStatementOptionalParams)
      parameters:
        - id: sessionId
          type: number
          description: Identifier for the session.
        - id: statementId
          type: number
          description: Identifier for the statement.
        - id: options
          type: >-
            <xref
            uid="@azure/synapse-spark.SparkSessionOperationsGetSparkStatementOptionalParams"
            />
          description: |
            The options parameters.
      return:
        type: >-
          Promise&lt;<xref
          uid="@azure/synapse-spark.SparkSessionOperationsGetSparkStatementResponse"
          />&gt;
        description: ''
  - name: >-
      getSparkStatements(number,
      SparkSessionOperationsGetSparkStatementsOptionalParams)
    uid: '@azure/synapse-spark.SparkSessionOperations.getSparkStatements'
    package: '@azure/synapse-spark'
    summary: Gets a list of statements within a spark session.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function getSparkStatements(sessionId: number, options?:
        SparkSessionOperationsGetSparkStatementsOptionalParams)
      parameters:
        - id: sessionId
          type: number
          description: Identifier for the session.
        - id: options
          type: >-
            <xref
            uid="@azure/synapse-spark.SparkSessionOperationsGetSparkStatementsOptionalParams"
            />
          description: |
            The options parameters.
      return:
        type: >-
          Promise&lt;<xref
          uid="@azure/synapse-spark.SparkSessionOperationsGetSparkStatementsResponse"
          />&gt;
        description: ''
  - name: >-
      resetSparkSessionTimeout(number,
      SparkSessionOperationsResetSparkSessionTimeoutOptionalParams)
    uid: '@azure/synapse-spark.SparkSessionOperations.resetSparkSessionTimeout'
    package: '@azure/synapse-spark'
    summary: >-
      Sends a keep alive call to the current session to reset the session
      timeout.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function resetSparkSessionTimeout(sessionId: number, options?:
        SparkSessionOperationsResetSparkSessionTimeoutOptionalParams)
      parameters:
        - id: sessionId
          type: number
          description: Identifier for the session.
        - id: options
          type: >-
            <xref
            uid="@azure/synapse-spark.SparkSessionOperationsResetSparkSessionTimeoutOptionalParams"
            />
          description: |
            The options parameters.
      return:
        type: Promise&lt;void&gt;
        description: ''
