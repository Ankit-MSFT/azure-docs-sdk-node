### YamlMime:UniversalReference
items:
  - uid: '@azure/schema-registry.SchemaRegistry'
    name: SchemaRegistry
    fullName: SchemaRegistry
    children:
      - '@azure/schema-registry.SchemaRegistry.getSchemaById'
      - '@azure/schema-registry.SchemaRegistry.getSchemaId'
      - '@azure/schema-registry.SchemaRegistry.registerSchema'
    langs:
      - typeScript
    type: interface
    summary: |
      Represents a store of registered schemas.
      Implemented by SchemaRegistryClient to store the schemas using the Azure
      Schema Registry service.
    package: '@azure/schema-registry'
  - uid: '@azure/schema-registry.SchemaRegistry.getSchemaById'
    name: 'getSchemaById(string, GetSchemaByIdOptions)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Gets an existing schema by ID.
    syntax:
      content: 'function getSchemaById(id: string, options?: GetSchemaByIdOptions)'
      parameters:
        - id: id
          type:
            - string
          description: Unique schema ID.
        - id: options
          type:
            - '@azure/schema-registry.GetSchemaByIdOptions'
          description: ''
          optional: true
      return:
        type:
          - Promise<@azure/schema-registry.Schema>
        description: Schema with given ID.
    package: '@azure/schema-registry'
  - uid: '@azure/schema-registry.SchemaRegistry.getSchemaId'
    name: 'getSchemaId(SchemaDescription, GetSchemaIdOptions)'
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      Gets the ID of an existing schema with matching name, group, type, and
      content.
    syntax:
      content: >-
        function getSchemaId(schema: SchemaDescription, options?:
        GetSchemaIdOptions)
      parameters:
        - id: schema
          type:
            - '@azure/schema-registry.SchemaDescription'
          description: Schema to match.
        - id: options
          type:
            - '@azure/schema-registry.GetSchemaIdOptions'
          description: ''
          optional: true
      return:
        type:
          - Promise<@azure/schema-registry.SchemaId>
        description: Matched schema's ID.
    package: '@azure/schema-registry'
  - uid: '@azure/schema-registry.SchemaRegistry.registerSchema'
    name: 'registerSchema(SchemaDescription, RegisterSchemaOptions)'
    children: []
    type: method
    langs:
      - typeScript
    summary: >
      Registers a new schema and returns its ID.

      If schema of specified name does not exist in the specified group, a
      schema

      is created at version 1. If schema of specified name exists already in

      specified group, schema is created at latest version + 1.
    syntax:
      content: >-
        function registerSchema(schema: SchemaDescription, options?:
        RegisterSchemaOptions)
      parameters:
        - id: schema
          type:
            - '@azure/schema-registry.SchemaDescription'
          description: Schema to register.
        - id: options
          type:
            - '@azure/schema-registry.RegisterSchemaOptions'
          description: ''
          optional: true
      return:
        type:
          - Promise<@azure/schema-registry.SchemaId>
        description: Registered schema's ID.
    package: '@azure/schema-registry'
references:
  - uid: '@azure/schema-registry.GetSchemaByIdOptions'
    name: GetSchemaByIdOptions
    spec.typeScript:
      - name: GetSchemaByIdOptions
        fullName: GetSchemaByIdOptions
        uid: '@azure/schema-registry.GetSchemaByIdOptions'
  - uid: Promise<@azure/schema-registry.Schema>
    name: Schema>
    spec.typeScript:
      - name: Promise<
        fullName: Promise<
      - name: Schema
        fullName: Schema
        uid: '@azure/schema-registry.Schema'
      - name: '>'
        fullName: '>'
  - uid: '@azure/schema-registry.SchemaDescription'
    name: SchemaDescription
    spec.typeScript:
      - name: SchemaDescription
        fullName: SchemaDescription
        uid: '@azure/schema-registry.SchemaDescription'
  - uid: '@azure/schema-registry.GetSchemaIdOptions'
    name: GetSchemaIdOptions
    spec.typeScript:
      - name: GetSchemaIdOptions
        fullName: GetSchemaIdOptions
        uid: '@azure/schema-registry.GetSchemaIdOptions'
  - uid: Promise<@azure/schema-registry.SchemaId>
    name: SchemaId>
    spec.typeScript:
      - name: Promise<
        fullName: Promise<
      - name: SchemaId
        fullName: SchemaId
        uid: '@azure/schema-registry.SchemaId'
      - name: '>'
        fullName: '>'
  - uid: '@azure/schema-registry.RegisterSchemaOptions'
    name: RegisterSchemaOptions
    spec.typeScript:
      - name: RegisterSchemaOptions
        fullName: RegisterSchemaOptions
        uid: '@azure/schema-registry.RegisterSchemaOptions'
