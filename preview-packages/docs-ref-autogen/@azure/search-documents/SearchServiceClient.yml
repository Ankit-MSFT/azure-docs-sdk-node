### YamlMime:UniversalReference
items:
  - uid: '@azure/search-documents.SearchServiceClient'
    name: SearchServiceClient
    fullName: SearchServiceClient
    children:
      - '@azure/search-documents.SearchServiceClient.analyzeText'
      - '@azure/search-documents.SearchServiceClient.apiVersion'
      - '@azure/search-documents.SearchServiceClient.createDataSource'
      - '@azure/search-documents.SearchServiceClient.createIndex'
      - '@azure/search-documents.SearchServiceClient.createIndexer'
      - '@azure/search-documents.SearchServiceClient.createOrUpdateDataSource'
      - '@azure/search-documents.SearchServiceClient.createOrUpdateIndex'
      - '@azure/search-documents.SearchServiceClient.createOrUpdateIndexer'
      - '@azure/search-documents.SearchServiceClient.createOrUpdateSkillset'
      - '@azure/search-documents.SearchServiceClient.createOrUpdateSynonymMap'
      - '@azure/search-documents.SearchServiceClient.createSkillset'
      - '@azure/search-documents.SearchServiceClient.createSynonymMap'
      - '@azure/search-documents.SearchServiceClient.deleteDataSource'
      - '@azure/search-documents.SearchServiceClient.deleteIndex'
      - '@azure/search-documents.SearchServiceClient.deleteIndexer'
      - '@azure/search-documents.SearchServiceClient.deleteSkillset'
      - '@azure/search-documents.SearchServiceClient.deleteSynonymMap'
      - '@azure/search-documents.SearchServiceClient.endpoint'
      - '@azure/search-documents.SearchServiceClient.getDataSource'
      - '@azure/search-documents.SearchServiceClient.getIndex'
      - '@azure/search-documents.SearchServiceClient.getIndexer'
      - '@azure/search-documents.SearchServiceClient.getIndexerStatus'
      - '@azure/search-documents.SearchServiceClient.getIndexStatistics'
      - '@azure/search-documents.SearchServiceClient.getSearchIndexClient'
      - '@azure/search-documents.SearchServiceClient.getServiceStatistics'
      - '@azure/search-documents.SearchServiceClient.getSkillset'
      - '@azure/search-documents.SearchServiceClient.getSynonymMap'
      - '@azure/search-documents.SearchServiceClient.listDataSources'
      - '@azure/search-documents.SearchServiceClient.listIndexers'
      - '@azure/search-documents.SearchServiceClient.listIndexes'
      - '@azure/search-documents.SearchServiceClient.listSkillsets'
      - '@azure/search-documents.SearchServiceClient.listSynonymMaps'
      - '@azure/search-documents.SearchServiceClient.resetIndexer'
      - '@azure/search-documents.SearchServiceClient.runIndexer'
      - '@azure/search-documents.SearchServiceClient.constructor'
    langs:
      - typeScript
    type: class
    summary: |-
      Class to perform operations to manage
      (create, update, list/delete)
      indexes, skillssets, synonymmaps, etc.
    package: '@azure/search-documents'
  - uid: '@azure/search-documents.SearchServiceClient.analyzeText'
    name: 'analyzeText(string, AnalyzeTextOptions)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Calls an analyzer or tokenizer manually on provided text.
    syntax:
      content: 'function analyzeText(indexName: string, options: AnalyzeTextOptions)'
      parameters:
        - id: indexName
          type:
            - string
          description: The name of the index that contains the field to analyze
        - id: options
          type:
            - '@azure/search-documents.AnalyzeTextOptions'
          description: |
            Additional arguments
      return:
        type:
          - Promise<@azure/search-documents.AnalyzeResult>
        description: ''
    package: '@azure/search-documents'
  - uid: '@azure/search-documents.SearchServiceClient.apiVersion'
    name: apiVersion
    fullName: apiVersion
    children: []
    langs:
      - typeScript
    type: property
    summary: The API version to use when communicating with the service.
    syntax:
      content: 'apiVersion: string'
      return:
        type:
          - string
        description: ''
    package: '@azure/search-documents'
  - uid: '@azure/search-documents.SearchServiceClient.createDataSource'
    name: 'createDataSource(DataSource, CreateDataSourceOptions)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Creates a new dataSource in a search service.
    syntax:
      content: >-
        function createDataSource(dataSource: DataSource, options?:
        CreateDataSourceOptions)
      parameters:
        - id: dataSource
          type:
            - '@azure/search-documents.DataSource'
          description: The dataSource definition to create in a search service.
        - id: options
          type:
            - '@azure/search-documents.CreateDataSourceOptions'
          description: |
            Additional optional arguments.
          optional: true
      return:
        type:
          - Promise<@azure/search-documents.DataSource>
        description: ''
    package: '@azure/search-documents'
  - uid: '@azure/search-documents.SearchServiceClient.createIndex'
    name: 'createIndex(Index, CreateIndexOptions)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Creates a new index.
    syntax:
      content: 'function createIndex(index: Index, options?: CreateIndexOptions)'
      parameters:
        - id: index
          type:
            - '@azure/search-documents.Index'
          description: The information describing the index to be created.
        - id: options
          type:
            - '@azure/search-documents.CreateIndexOptions'
          description: |
            Additional optional arguments.
          optional: true
      return:
        type:
          - Promise<@azure/search-documents.Index>
        description: ''
    package: '@azure/search-documents'
  - uid: '@azure/search-documents.SearchServiceClient.createIndexer'
    name: 'createIndexer(Indexer, CreateIndexerOptions)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Creates a new indexer in a search service.
    syntax:
      content: 'function createIndexer(indexer: Indexer, options?: CreateIndexerOptions)'
      parameters:
        - id: indexer
          type:
            - '@azure/search-documents.Indexer'
          description: The indexer definition to create in a search service.
        - id: options
          type:
            - '@azure/search-documents.CreateIndexerOptions'
          description: |
            Additional optional arguments.
          optional: true
      return:
        type:
          - Promise<@azure/search-documents.Indexer>
        description: ''
    package: '@azure/search-documents'
  - uid: '@azure/search-documents.SearchServiceClient.createOrUpdateDataSource'
    name: 'createOrUpdateDataSource(DataSource, CreateorUpdateDataSourceOptions)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Creates a new datasource or modifies an existing one.
    syntax:
      content: >-
        function createOrUpdateDataSource(dataSource: DataSource, options?:
        CreateorUpdateDataSourceOptions)
      parameters:
        - id: dataSource
          type:
            - '@azure/search-documents.DataSource'
          description: The information describing the datasource to be created/updated.
        - id: options
          type:
            - '@azure/search-documents.CreateorUpdateDataSourceOptions'
          description: |
            Additional optional arguments.
          optional: true
      return:
        type:
          - Promise<@azure/search-documents.DataSource>
        description: ''
    package: '@azure/search-documents'
  - uid: '@azure/search-documents.SearchServiceClient.createOrUpdateIndex'
    name: 'createOrUpdateIndex(Index, CreateOrUpdateIndexOptions)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Creates a new index or modifies an existing one.
    syntax:
      content: >-
        function createOrUpdateIndex(index: Index, options?:
        CreateOrUpdateIndexOptions)
      parameters:
        - id: index
          type:
            - '@azure/search-documents.Index'
          description: The information describing the index to be created.
        - id: options
          type:
            - '@azure/search-documents.CreateOrUpdateIndexOptions'
          description: |
            Additional optional arguments.
          optional: true
      return:
        type:
          - Promise<@azure/search-documents.Index>
        description: ''
    package: '@azure/search-documents'
  - uid: '@azure/search-documents.SearchServiceClient.createOrUpdateIndexer'
    name: 'createOrUpdateIndexer(Indexer, CreateorUpdateIndexerOptions)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Creates a new indexer or modifies an existing one.
    syntax:
      content: >-
        function createOrUpdateIndexer(indexer: Indexer, options?:
        CreateorUpdateIndexerOptions)
      parameters:
        - id: indexer
          type:
            - '@azure/search-documents.Indexer'
          description: The information describing the indexer to be created/updated.
        - id: options
          type:
            - '@azure/search-documents.CreateorUpdateIndexerOptions'
          description: |
            Additional optional arguments.
          optional: true
      return:
        type:
          - Promise<@azure/search-documents.Indexer>
        description: ''
    package: '@azure/search-documents'
  - uid: '@azure/search-documents.SearchServiceClient.createOrUpdateSkillset'
    name: 'createOrUpdateSkillset(Skillset, CreateOrUpdateSkillsetOptions)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Creates a new Skillset or modifies an existing one.
    syntax:
      content: >-
        function createOrUpdateSkillset(skillset: Skillset, options?:
        CreateOrUpdateSkillsetOptions)
      parameters:
        - id: skillset
          type:
            - '@azure/search-documents.Skillset'
          description: The information describing the index to be created.
        - id: options
          type:
            - '@azure/search-documents.CreateOrUpdateSkillsetOptions'
          description: |
            Additional optional arguments.
          optional: true
      return:
        type:
          - Promise<@azure/search-documents.Skillset>
        description: ''
    package: '@azure/search-documents'
  - uid: '@azure/search-documents.SearchServiceClient.createOrUpdateSynonymMap'
    name: 'createOrUpdateSynonymMap(SynonymMap, CreateOrUpdateSynonymMapOptions)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Creates a new SynonymMap or modifies an existing one.
    syntax:
      content: >-
        function createOrUpdateSynonymMap(synonymMap: SynonymMap, options?:
        CreateOrUpdateSynonymMapOptions)
      parameters:
        - id: synonymMap
          type:
            - '@azure/search-documents.SynonymMap'
          description: The information describing the SynonymMap to be created.
        - id: options
          type:
            - '@azure/search-documents.CreateOrUpdateSynonymMapOptions'
          description: |
            Additional optional arguments.
          optional: true
      return:
        type:
          - Promise<@azure/search-documents.SynonymMap>
        description: ''
    package: '@azure/search-documents'
  - uid: '@azure/search-documents.SearchServiceClient.createSkillset'
    name: 'createSkillset(Skillset, CreateSkillsetOptions)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Creates a new skillset in a search service.
    syntax:
      content: >-
        function createSkillset(skillset: Skillset, options?:
        CreateSkillsetOptions)
      parameters:
        - id: skillset
          type:
            - '@azure/search-documents.Skillset'
          description: >-
            The skillset containing one or more skills to create in a search
            service.
        - id: options
          type:
            - '@azure/search-documents.CreateSkillsetOptions'
          description: |
            Additional optional arguments.
          optional: true
      return:
        type:
          - Promise<@azure/search-documents.Skillset>
        description: ''
    package: '@azure/search-documents'
  - uid: '@azure/search-documents.SearchServiceClient.createSynonymMap'
    name: 'createSynonymMap(SynonymMap, CreateSynonymMapOptions)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Creates a new SynonymMap in a search service.
    syntax:
      content: >-
        function createSynonymMap(synonymMap: SynonymMap, options?:
        CreateSynonymMapOptions)
      parameters:
        - id: synonymMap
          type:
            - '@azure/search-documents.SynonymMap'
          description: The synonymMap definition to create in a search service.
        - id: options
          type:
            - '@azure/search-documents.CreateSynonymMapOptions'
          description: |
            Additional optional arguments.
          optional: true
      return:
        type:
          - Promise<@azure/search-documents.SynonymMap>
        description: ''
    package: '@azure/search-documents'
  - uid: '@azure/search-documents.SearchServiceClient.deleteDataSource'
    name: 'deleteDataSource(string, DeleteDataSourceOptions)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Deletes an existing datasource.
    syntax:
      content: >-
        function deleteDataSource(dataSourceName: string, options?:
        DeleteDataSourceOptions)
      parameters:
        - id: dataSourceName
          type:
            - string
          description: The name of the datasource to delete.
        - id: options
          type:
            - '@azure/search-documents.DeleteDataSourceOptions'
          description: |
            Additional optional arguments.
          optional: true
      return:
        type:
          - Promise<void>
        description: ''
    package: '@azure/search-documents'
  - uid: '@azure/search-documents.SearchServiceClient.deleteIndex'
    name: 'deleteIndex(string, DeleteIndexOptions)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Deletes an existing index.
    syntax:
      content: 'function deleteIndex(indexName: string, options?: DeleteIndexOptions)'
      parameters:
        - id: indexName
          type:
            - string
          description: The name of the index to delete.
        - id: options
          type:
            - '@azure/search-documents.DeleteIndexOptions'
          description: |
            Additional optional arguments.
          optional: true
      return:
        type:
          - Promise<void>
        description: ''
    package: '@azure/search-documents'
  - uid: '@azure/search-documents.SearchServiceClient.deleteIndexer'
    name: 'deleteIndexer(string, DeleteIndexerOptions)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Deletes an existing indexer.
    syntax:
      content: >-
        function deleteIndexer(indexerName: string, options?:
        DeleteIndexerOptions)
      parameters:
        - id: indexerName
          type:
            - string
          description: The name of the indexer to delete.
        - id: options
          type:
            - '@azure/search-documents.DeleteIndexerOptions'
          description: |
            Additional optional arguments.
          optional: true
      return:
        type:
          - Promise<void>
        description: ''
    package: '@azure/search-documents'
  - uid: '@azure/search-documents.SearchServiceClient.deleteSkillset'
    name: 'deleteSkillset(string, DeleteSkillsetOptions)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Deletes an existing Skillset.
    syntax:
      content: >-
        function deleteSkillset(skillsetName: string, options?:
        DeleteSkillsetOptions)
      parameters:
        - id: skillsetName
          type:
            - string
          description: The name of the Skillset to delete.
        - id: options
          type:
            - '@azure/search-documents.DeleteSkillsetOptions'
          description: |
            Additional optional arguments.
          optional: true
      return:
        type:
          - Promise<void>
        description: ''
    package: '@azure/search-documents'
  - uid: '@azure/search-documents.SearchServiceClient.deleteSynonymMap'
    name: 'deleteSynonymMap(string, DeleteSynonymMapOptions)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Deletes an existing SynonymMap.
    syntax:
      content: >-
        function deleteSynonymMap(synonymMapName: string, options?:
        DeleteSynonymMapOptions)
      parameters:
        - id: synonymMapName
          type:
            - string
          description: The name of the synonymMap to delete.
        - id: options
          type:
            - '@azure/search-documents.DeleteSynonymMapOptions'
          description: |
            Additional optional arguments.
          optional: true
      return:
        type:
          - Promise<void>
        description: ''
    package: '@azure/search-documents'
  - uid: '@azure/search-documents.SearchServiceClient.endpoint'
    name: endpoint
    fullName: endpoint
    children: []
    langs:
      - typeScript
    type: property
    summary: The endpoint of the search service
    syntax:
      content: 'endpoint: string'
      return:
        type:
          - string
        description: ''
    package: '@azure/search-documents'
  - uid: '@azure/search-documents.SearchServiceClient.getDataSource'
    name: 'getDataSource(string, GetDataSourceOptions)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Retrieves information about a DataSource
    syntax:
      content: >-
        function getDataSource(dataSourceName: string, options?:
        GetDataSourceOptions)
      parameters:
        - id: dataSourceName
          type:
            - string
          description: The name of the DataSource
        - id: options
          type:
            - '@azure/search-documents.GetDataSourceOptions'
          description: |
            Additional optional arguments
          optional: true
      return:
        type:
          - Promise<@azure/search-documents.DataSource>
        description: ''
    package: '@azure/search-documents'
  - uid: '@azure/search-documents.SearchServiceClient.getIndex'
    name: 'getIndex(string, GetIndexOptions)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Retrieves information about an index.
    syntax:
      content: 'function getIndex(indexName: string, options?: GetIndexOptions)'
      parameters:
        - id: indexName
          type:
            - string
          description: The name of the index.
        - id: options
          type:
            - '@azure/search-documents.GetIndexOptions'
          description: |
            Additional optional arguments.
          optional: true
      return:
        type:
          - Promise<@azure/search-documents.Index>
        description: ''
    package: '@azure/search-documents'
  - uid: '@azure/search-documents.SearchServiceClient.getIndexer'
    name: 'getIndexer(string, GetIndexerOptions)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Retrieves information about an Indexer.
    syntax:
      content: 'function getIndexer(indexerName: string, options?: GetIndexerOptions)'
      parameters:
        - id: indexerName
          type:
            - string
          description: The name of the Indexer.
        - id: options
          type:
            - '@azure/search-documents.GetIndexerOptions'
          description: |
            Additional optional arguments.
          optional: true
      return:
        type:
          - Promise<@azure/search-documents.Indexer>
        description: ''
    package: '@azure/search-documents'
  - uid: '@azure/search-documents.SearchServiceClient.getIndexerStatus'
    name: 'getIndexerStatus(string, GetIndexerStatusOptions)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Returns the current status and execution history of an indexer.
    syntax:
      content: >-
        function getIndexerStatus(indexerName: string, options?:
        GetIndexerStatusOptions)
      parameters:
        - id: indexerName
          type:
            - string
          description: The name of the indexer.
        - id: options
          type:
            - '@azure/search-documents.GetIndexerStatusOptions'
          description: |
            Additional optional arguments.
          optional: true
      return:
        type:
          - Promise<@azure/search-documents.IndexerExecutionInfo>
        description: ''
    package: '@azure/search-documents'
  - uid: '@azure/search-documents.SearchServiceClient.getIndexStatistics'
    name: 'getIndexStatistics(string, GetIndexStatisticsOptions)'
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      Retrieves statistics about an index, such as the count of documents and
      the size

      of index storage.
    syntax:
      content: >-
        function getIndexStatistics(indexName: string, options?:
        GetIndexStatisticsOptions)
      parameters:
        - id: indexName
          type:
            - string
          description: The name of the index.
        - id: options
          type:
            - '@azure/search-documents.GetIndexStatisticsOptions'
          description: |
            Additional optional arguments.
          optional: true
      return:
        type:
          - Promise<@azure/search-documents.GetIndexStatisticsResult>
        description: ''
    package: '@azure/search-documents'
  - uid: '@azure/search-documents.SearchServiceClient.getSearchIndexClient'
    name: 'getSearchIndexClient(string, SearchIndexClientOptions)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Retrieves the SearchIndexClient corresponding to this SearchServiceClient
    syntax:
      content: >-
        function getSearchIndexClient<T>(indexName: string, options?:
        SearchIndexClientOptions)
      parameters:
        - id: indexName
          type:
            - string
          description: Name of the index
        - id: options
          type:
            - '@azure/search-documents.SearchIndexClientOptions'
          description: |
            SearchIndexClient Options
          optional: true
      return:
        type:
          - '@azure/search-documents.SearchIndexClient<T>'
        description: ''
    package: '@azure/search-documents'
  - uid: '@azure/search-documents.SearchServiceClient.getServiceStatistics'
    name: getServiceStatistics(GetServiceStatisticsOptions)
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      Retrieves statistics about the service, such as the count of documents,
      index, etc.
    syntax:
      content: 'function getServiceStatistics(options?: GetServiceStatisticsOptions)'
      parameters:
        - id: options
          type:
            - '@azure/search-documents.GetServiceStatisticsOptions'
          description: |
            Additional optional arguments.
          optional: true
      return:
        type:
          - Promise<@azure/search-documents.ServiceStatistics>
        description: ''
    package: '@azure/search-documents'
  - uid: '@azure/search-documents.SearchServiceClient.getSkillset'
    name: 'getSkillset(string, GetSkillSetOptions)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Retrieves information about an Skillset.
    syntax:
      content: 'function getSkillset(skillsetName: string, options?: GetSkillSetOptions)'
      parameters:
        - id: skillsetName
          type:
            - string
          description: ''
        - id: options
          type:
            - '@azure/search-documents.GetSkillSetOptions'
          description: |
            Additional optional arguments.
          optional: true
      return:
        type:
          - Promise<@azure/search-documents.Skillset>
        description: ''
    package: '@azure/search-documents'
  - uid: '@azure/search-documents.SearchServiceClient.getSynonymMap'
    name: 'getSynonymMap(string, GetSynonymMapsOptions)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Retrieves information about a SynonymMap.
    syntax:
      content: >-
        function getSynonymMap(synonymMapName: string, options?:
        GetSynonymMapsOptions)
      parameters:
        - id: synonymMapName
          type:
            - string
          description: ''
        - id: options
          type:
            - '@azure/search-documents.GetSynonymMapsOptions'
          description: |
            Additional optional arguments.
          optional: true
      return:
        type:
          - Promise<@azure/search-documents.SynonymMap>
        description: ''
    package: '@azure/search-documents'
  - uid: '@azure/search-documents.SearchServiceClient.listDataSources'
    name: listDataSources(ListDataSourcesOptions<Fields>)
    children: []
    type: method
    langs:
      - typeScript
    summary: Retrieves a list of existing data sources in the service.
    syntax:
      content: >-
        function listDataSources<Fields>(options?:
        ListDataSourcesOptions<Fields>)
      parameters:
        - id: options
          type:
            - '@azure/search-documents.ListDataSourcesOptions<Fields>'
          description: |
            Options to the list indexers operation.
          optional: true
      return:
        type:
          - 'Promise<Array<Pick<@azure/search-documents.DataSource, Fields>>>'
        description: ''
    package: '@azure/search-documents'
  - uid: '@azure/search-documents.SearchServiceClient.listIndexers'
    name: listIndexers(ListIndexersOptions<Fields>)
    children: []
    type: method
    langs:
      - typeScript
    summary: Retrieves a list of existing indexers in the service.
    syntax:
      content: 'function listIndexers<Fields>(options?: ListIndexersOptions<Fields>)'
      parameters:
        - id: options
          type:
            - '@azure/search-documents.ListIndexersOptions<Fields>'
          description: |
            Options to the list indexers operation.
          optional: true
      return:
        type:
          - 'Promise<Array<Pick<@azure/search-documents.Indexer, Fields>>>'
        description: ''
    package: '@azure/search-documents'
  - uid: '@azure/search-documents.SearchServiceClient.listIndexes'
    name: listIndexes(ListIndexesOptions<Fields>)
    children: []
    type: method
    langs:
      - typeScript
    summary: Retrieves a list of existing indexes in the service.
    syntax:
      content: 'function listIndexes<Fields>(options?: ListIndexesOptions<Fields>)'
      parameters:
        - id: options
          type:
            - '@azure/search-documents.ListIndexesOptions<Fields>'
          description: |
            Options to the list index operation.
          optional: true
      return:
        type:
          - 'Promise<Array<Pick<@azure/search-documents.Index, Fields>>>'
        description: ''
    package: '@azure/search-documents'
  - uid: '@azure/search-documents.SearchServiceClient.listSkillsets'
    name: listSkillsets(ListSkillsetsOptions)
    children: []
    type: method
    langs:
      - typeScript
    summary: Retrieves a list of existing Skillsets in the service.
    syntax:
      content: 'function listSkillsets(options?: ListSkillsetsOptions)'
      parameters:
        - id: options
          type:
            - '@azure/search-documents.ListSkillsetsOptions'
          description: |
            Options to the list Skillsets operation.
          optional: true
      return:
        type:
          - 'Promise<@azure/search-documents.Skillset[]>'
        description: ''
    package: '@azure/search-documents'
  - uid: '@azure/search-documents.SearchServiceClient.listSynonymMaps'
    name: listSynonymMaps(ListSynonymMapsOptions<Fields>)
    children: []
    type: method
    langs:
      - typeScript
    summary: Retrieves a list of existing SynonymMaps in the service.
    syntax:
      content: >-
        function listSynonymMaps<Fields>(options?:
        ListSynonymMapsOptions<Fields>)
      parameters:
        - id: options
          type:
            - '@azure/search-documents.ListSynonymMapsOptions<Fields>'
          description: |
            Options to the list SynonymMaps operation.
          optional: true
      return:
        type:
          - 'Promise<Array<Pick<@azure/search-documents.SynonymMap, Fields>>>'
        description: ''
    package: '@azure/search-documents'
  - uid: '@azure/search-documents.SearchServiceClient.resetIndexer'
    name: 'resetIndexer(string, ResetIndexerOptions)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Resets the change tracking state associated with an indexer.
    syntax:
      content: >-
        function resetIndexer(indexerName: string, options?:
        ResetIndexerOptions)
      parameters:
        - id: indexerName
          type:
            - string
          description: The name of the indexer to reset.
        - id: options
          type:
            - '@azure/search-documents.ResetIndexerOptions'
          description: |
            Additional optional arguments.
          optional: true
      return:
        type:
          - Promise<void>
        description: ''
    package: '@azure/search-documents'
  - uid: '@azure/search-documents.SearchServiceClient.runIndexer'
    name: 'runIndexer(string, RunIndexerOptions)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Runs an indexer on-demand.
    syntax:
      content: 'function runIndexer(indexerName: string, options?: RunIndexerOptions)'
      parameters:
        - id: indexerName
          type:
            - string
          description: The name of the indexer to run.
        - id: options
          type:
            - '@azure/search-documents.RunIndexerOptions'
          description: |
            Additional optional arguments.
          optional: true
      return:
        type:
          - Promise<void>
        description: ''
    package: '@azure/search-documents'
  - uid: '@azure/search-documents.SearchServiceClient.constructor'
    name: 'SearchServiceClient(string, KeyCredential, SearchServiceClientOptions)'
    children: []
    type: constructor
    langs:
      - typeScript
    summary: >-
      Creates an instance of SearchServiceClient.

      Example usage:

      ```ts

      const { SearchServiceClient, AzureKeyCredential } =
      require("@azure/search-documents");


      const client = new SearchServiceClient(
        "<endpoint>",
        new AzureKeyCredential("<Admin Key>");
      );

      ```
    syntax:
      content: >-
        new SearchServiceClient(endpoint: string, credential: KeyCredential,
        options?: SearchServiceClientOptions)
      parameters:
        - id: endpoint
          type:
            - string
          description: The endpoint of the search service
        - id: credential
          type:
            - KeyCredential
          description: Used to authenticate requests to the service.
        - id: options
          type:
            - '@azure/search-documents.SearchServiceClientOptions'
          description: ''
          optional: true
    package: '@azure/search-documents'
references:
  - uid: '@azure/search-documents.SearchServiceClientOptions'
    name: SearchServiceClientOptions
    spec.typeScript:
      - name: SearchServiceClientOptions
        fullName: SearchServiceClientOptions
        uid: '@azure/search-documents.SearchServiceClientOptions'
  - uid: '@azure/search-documents.AnalyzeTextOptions'
    name: AnalyzeTextOptions
    spec.typeScript:
      - name: AnalyzeTextOptions
        fullName: AnalyzeTextOptions
        uid: '@azure/search-documents.AnalyzeTextOptions'
  - uid: Promise<@azure/search-documents.AnalyzeResult>
    name: AnalyzeResult>
    spec.typeScript:
      - name: Promise<
        fullName: Promise<
      - name: AnalyzeResult
        fullName: AnalyzeResult
        uid: '@azure/search-documents.AnalyzeResult'
      - name: '>'
        fullName: '>'
  - uid: '@azure/search-documents.DataSource'
    name: DataSource
    spec.typeScript:
      - name: DataSource
        fullName: DataSource
        uid: '@azure/search-documents.DataSource'
  - uid: '@azure/search-documents.CreateDataSourceOptions'
    name: CreateDataSourceOptions
    spec.typeScript:
      - name: CreateDataSourceOptions
        fullName: CreateDataSourceOptions
        uid: '@azure/search-documents.CreateDataSourceOptions'
  - uid: Promise<@azure/search-documents.DataSource>
    name: DataSource>
    spec.typeScript:
      - name: Promise<
        fullName: Promise<
      - name: DataSource
        fullName: DataSource
        uid: '@azure/search-documents.DataSource'
      - name: '>'
        fullName: '>'
  - uid: '@azure/search-documents.Index'
    name: Index
    spec.typeScript:
      - name: Index
        fullName: Index
        uid: '@azure/search-documents.Index'
  - uid: '@azure/search-documents.CreateIndexOptions'
    name: CreateIndexOptions
    spec.typeScript:
      - name: CreateIndexOptions
        fullName: CreateIndexOptions
        uid: '@azure/search-documents.CreateIndexOptions'
  - uid: Promise<@azure/search-documents.Index>
    name: Index>
    spec.typeScript:
      - name: Promise<
        fullName: Promise<
      - name: Index
        fullName: Index
        uid: '@azure/search-documents.Index'
      - name: '>'
        fullName: '>'
  - uid: '@azure/search-documents.Indexer'
    name: Indexer
    spec.typeScript:
      - name: Indexer
        fullName: Indexer
        uid: '@azure/search-documents.Indexer'
  - uid: '@azure/search-documents.CreateIndexerOptions'
    name: CreateIndexerOptions
    spec.typeScript:
      - name: CreateIndexerOptions
        fullName: CreateIndexerOptions
        uid: '@azure/search-documents.CreateIndexerOptions'
  - uid: Promise<@azure/search-documents.Indexer>
    name: Indexer>
    spec.typeScript:
      - name: Promise<
        fullName: Promise<
      - name: Indexer
        fullName: Indexer
        uid: '@azure/search-documents.Indexer'
      - name: '>'
        fullName: '>'
  - uid: '@azure/search-documents.CreateorUpdateDataSourceOptions'
    name: CreateorUpdateDataSourceOptions
    spec.typeScript:
      - name: CreateorUpdateDataSourceOptions
        fullName: CreateorUpdateDataSourceOptions
        uid: '@azure/search-documents.CreateorUpdateDataSourceOptions'
  - uid: '@azure/search-documents.CreateOrUpdateIndexOptions'
    name: CreateOrUpdateIndexOptions
    spec.typeScript:
      - name: CreateOrUpdateIndexOptions
        fullName: CreateOrUpdateIndexOptions
        uid: '@azure/search-documents.CreateOrUpdateIndexOptions'
  - uid: '@azure/search-documents.CreateorUpdateIndexerOptions'
    name: CreateorUpdateIndexerOptions
    spec.typeScript:
      - name: CreateorUpdateIndexerOptions
        fullName: CreateorUpdateIndexerOptions
        uid: '@azure/search-documents.CreateorUpdateIndexerOptions'
  - uid: '@azure/search-documents.Skillset'
    name: Skillset
    spec.typeScript:
      - name: Skillset
        fullName: Skillset
        uid: '@azure/search-documents.Skillset'
  - uid: '@azure/search-documents.CreateOrUpdateSkillsetOptions'
    name: CreateOrUpdateSkillsetOptions
    spec.typeScript:
      - name: CreateOrUpdateSkillsetOptions
        fullName: CreateOrUpdateSkillsetOptions
        uid: '@azure/search-documents.CreateOrUpdateSkillsetOptions'
  - uid: Promise<@azure/search-documents.Skillset>
    name: Skillset>
    spec.typeScript:
      - name: Promise<
        fullName: Promise<
      - name: Skillset
        fullName: Skillset
        uid: '@azure/search-documents.Skillset'
      - name: '>'
        fullName: '>'
  - uid: '@azure/search-documents.SynonymMap'
    name: SynonymMap
    spec.typeScript:
      - name: SynonymMap
        fullName: SynonymMap
        uid: '@azure/search-documents.SynonymMap'
  - uid: '@azure/search-documents.CreateOrUpdateSynonymMapOptions'
    name: CreateOrUpdateSynonymMapOptions
    spec.typeScript:
      - name: CreateOrUpdateSynonymMapOptions
        fullName: CreateOrUpdateSynonymMapOptions
        uid: '@azure/search-documents.CreateOrUpdateSynonymMapOptions'
  - uid: Promise<@azure/search-documents.SynonymMap>
    name: SynonymMap>
    spec.typeScript:
      - name: Promise<
        fullName: Promise<
      - name: SynonymMap
        fullName: SynonymMap
        uid: '@azure/search-documents.SynonymMap'
      - name: '>'
        fullName: '>'
  - uid: '@azure/search-documents.CreateSkillsetOptions'
    name: CreateSkillsetOptions
    spec.typeScript:
      - name: CreateSkillsetOptions
        fullName: CreateSkillsetOptions
        uid: '@azure/search-documents.CreateSkillsetOptions'
  - uid: '@azure/search-documents.CreateSynonymMapOptions'
    name: CreateSynonymMapOptions
    spec.typeScript:
      - name: CreateSynonymMapOptions
        fullName: CreateSynonymMapOptions
        uid: '@azure/search-documents.CreateSynonymMapOptions'
  - uid: '@azure/search-documents.DeleteDataSourceOptions'
    name: DeleteDataSourceOptions
    spec.typeScript:
      - name: DeleteDataSourceOptions
        fullName: DeleteDataSourceOptions
        uid: '@azure/search-documents.DeleteDataSourceOptions'
  - uid: '@azure/search-documents.DeleteIndexOptions'
    name: DeleteIndexOptions
    spec.typeScript:
      - name: DeleteIndexOptions
        fullName: DeleteIndexOptions
        uid: '@azure/search-documents.DeleteIndexOptions'
  - uid: '@azure/search-documents.DeleteIndexerOptions'
    name: DeleteIndexerOptions
    spec.typeScript:
      - name: DeleteIndexerOptions
        fullName: DeleteIndexerOptions
        uid: '@azure/search-documents.DeleteIndexerOptions'
  - uid: '@azure/search-documents.DeleteSkillsetOptions'
    name: DeleteSkillsetOptions
    spec.typeScript:
      - name: DeleteSkillsetOptions
        fullName: DeleteSkillsetOptions
        uid: '@azure/search-documents.DeleteSkillsetOptions'
  - uid: '@azure/search-documents.DeleteSynonymMapOptions'
    name: DeleteSynonymMapOptions
    spec.typeScript:
      - name: DeleteSynonymMapOptions
        fullName: DeleteSynonymMapOptions
        uid: '@azure/search-documents.DeleteSynonymMapOptions'
  - uid: '@azure/search-documents.GetDataSourceOptions'
    name: GetDataSourceOptions
    spec.typeScript:
      - name: GetDataSourceOptions
        fullName: GetDataSourceOptions
        uid: '@azure/search-documents.GetDataSourceOptions'
  - uid: '@azure/search-documents.GetIndexOptions'
    name: GetIndexOptions
    spec.typeScript:
      - name: GetIndexOptions
        fullName: GetIndexOptions
        uid: '@azure/search-documents.GetIndexOptions'
  - uid: '@azure/search-documents.GetIndexStatisticsOptions'
    name: GetIndexStatisticsOptions
    spec.typeScript:
      - name: GetIndexStatisticsOptions
        fullName: GetIndexStatisticsOptions
        uid: '@azure/search-documents.GetIndexStatisticsOptions'
  - uid: Promise<@azure/search-documents.GetIndexStatisticsResult>
    name: GetIndexStatisticsResult>
    spec.typeScript:
      - name: Promise<
        fullName: Promise<
      - name: GetIndexStatisticsResult
        fullName: GetIndexStatisticsResult
        uid: '@azure/search-documents.GetIndexStatisticsResult'
      - name: '>'
        fullName: '>'
  - uid: '@azure/search-documents.GetIndexerOptions'
    name: GetIndexerOptions
    spec.typeScript:
      - name: GetIndexerOptions
        fullName: GetIndexerOptions
        uid: '@azure/search-documents.GetIndexerOptions'
  - uid: '@azure/search-documents.GetIndexerStatusOptions'
    name: GetIndexerStatusOptions
    spec.typeScript:
      - name: GetIndexerStatusOptions
        fullName: GetIndexerStatusOptions
        uid: '@azure/search-documents.GetIndexerStatusOptions'
  - uid: Promise<@azure/search-documents.IndexerExecutionInfo>
    name: IndexerExecutionInfo>
    spec.typeScript:
      - name: Promise<
        fullName: Promise<
      - name: IndexerExecutionInfo
        fullName: IndexerExecutionInfo
        uid: '@azure/search-documents.IndexerExecutionInfo'
      - name: '>'
        fullName: '>'
  - uid: '@azure/search-documents.SearchIndexClientOptions'
    name: SearchIndexClientOptions
    spec.typeScript:
      - name: SearchIndexClientOptions
        fullName: SearchIndexClientOptions
        uid: '@azure/search-documents.SearchIndexClientOptions'
  - uid: '@azure/search-documents.SearchIndexClient<T>'
    name: SearchIndexClient<T>
    spec.typeScript:
      - name: SearchIndexClient
        fullName: SearchIndexClient
        uid: '@azure/search-documents.SearchIndexClient'
      - name: <T>
        fullName: <T>
  - uid: '@azure/search-documents.GetServiceStatisticsOptions'
    name: GetServiceStatisticsOptions
    spec.typeScript:
      - name: GetServiceStatisticsOptions
        fullName: GetServiceStatisticsOptions
        uid: '@azure/search-documents.GetServiceStatisticsOptions'
  - uid: Promise<@azure/search-documents.ServiceStatistics>
    name: ServiceStatistics>
    spec.typeScript:
      - name: Promise<
        fullName: Promise<
      - name: ServiceStatistics
        fullName: ServiceStatistics
        uid: '@azure/search-documents.ServiceStatistics'
      - name: '>'
        fullName: '>'
  - uid: '@azure/search-documents.GetSkillSetOptions'
    name: GetSkillSetOptions
    spec.typeScript:
      - name: GetSkillSetOptions
        fullName: GetSkillSetOptions
        uid: '@azure/search-documents.GetSkillSetOptions'
  - uid: '@azure/search-documents.GetSynonymMapsOptions'
    name: GetSynonymMapsOptions
    spec.typeScript:
      - name: GetSynonymMapsOptions
        fullName: GetSynonymMapsOptions
        uid: '@azure/search-documents.GetSynonymMapsOptions'
  - uid: '@azure/search-documents.ListDataSourcesOptions<Fields>'
    name: ListDataSourcesOptions<Fields>
    spec.typeScript:
      - name: ListDataSourcesOptions
        fullName: ListDataSourcesOptions
        uid: '@azure/search-documents.ListDataSourcesOptions'
      - name: <Fields>
        fullName: <Fields>
  - uid: 'Promise<Array<Pick<@azure/search-documents.DataSource, Fields>>>'
    name: 'DataSource, Fields>>>'
    spec.typeScript:
      - name: Promise<Array<Pick<
        fullName: Promise<Array<Pick<
      - name: DataSource
        fullName: DataSource
        uid: '@azure/search-documents.DataSource'
      - name: ', Fields>>>'
        fullName: ', Fields>>>'
  - uid: '@azure/search-documents.ListIndexersOptions<Fields>'
    name: ListIndexersOptions<Fields>
    spec.typeScript:
      - name: ListIndexersOptions
        fullName: ListIndexersOptions
        uid: '@azure/search-documents.ListIndexersOptions'
      - name: <Fields>
        fullName: <Fields>
  - uid: 'Promise<Array<Pick<@azure/search-documents.Indexer, Fields>>>'
    name: 'Indexer, Fields>>>'
    spec.typeScript:
      - name: Promise<Array<Pick<
        fullName: Promise<Array<Pick<
      - name: Indexer
        fullName: Indexer
        uid: '@azure/search-documents.Indexer'
      - name: ', Fields>>>'
        fullName: ', Fields>>>'
  - uid: '@azure/search-documents.ListIndexesOptions<Fields>'
    name: ListIndexesOptions<Fields>
    spec.typeScript:
      - name: ListIndexesOptions
        fullName: ListIndexesOptions
        uid: '@azure/search-documents.ListIndexesOptions'
      - name: <Fields>
        fullName: <Fields>
  - uid: 'Promise<Array<Pick<@azure/search-documents.Index, Fields>>>'
    name: 'Index, Fields>>>'
    spec.typeScript:
      - name: Promise<Array<Pick<
        fullName: Promise<Array<Pick<
      - name: Index
        fullName: Index
        uid: '@azure/search-documents.Index'
      - name: ', Fields>>>'
        fullName: ', Fields>>>'
  - uid: '@azure/search-documents.ListSkillsetsOptions'
    name: ListSkillsetsOptions
    spec.typeScript:
      - name: ListSkillsetsOptions
        fullName: ListSkillsetsOptions
        uid: '@azure/search-documents.ListSkillsetsOptions'
  - uid: 'Promise<@azure/search-documents.Skillset[]>'
    name: 'Skillset[]>'
    spec.typeScript:
      - name: Promise<
        fullName: Promise<
      - name: Skillset
        fullName: Skillset
        uid: '@azure/search-documents.Skillset'
      - name: '[]>'
        fullName: '[]>'
  - uid: '@azure/search-documents.ListSynonymMapsOptions<Fields>'
    name: ListSynonymMapsOptions<Fields>
    spec.typeScript:
      - name: ListSynonymMapsOptions
        fullName: ListSynonymMapsOptions
        uid: '@azure/search-documents.ListSynonymMapsOptions'
      - name: <Fields>
        fullName: <Fields>
  - uid: 'Promise<Array<Pick<@azure/search-documents.SynonymMap, Fields>>>'
    name: 'SynonymMap, Fields>>>'
    spec.typeScript:
      - name: Promise<Array<Pick<
        fullName: Promise<Array<Pick<
      - name: SynonymMap
        fullName: SynonymMap
        uid: '@azure/search-documents.SynonymMap'
      - name: ', Fields>>>'
        fullName: ', Fields>>>'
  - uid: '@azure/search-documents.ResetIndexerOptions'
    name: ResetIndexerOptions
    spec.typeScript:
      - name: ResetIndexerOptions
        fullName: ResetIndexerOptions
        uid: '@azure/search-documents.ResetIndexerOptions'
  - uid: '@azure/search-documents.RunIndexerOptions'
    name: RunIndexerOptions
    spec.typeScript:
      - name: RunIndexerOptions
        fullName: RunIndexerOptions
        uid: '@azure/search-documents.RunIndexerOptions'
