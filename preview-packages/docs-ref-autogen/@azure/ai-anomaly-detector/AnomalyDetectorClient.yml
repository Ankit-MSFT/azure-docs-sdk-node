### YamlMime:TSType
name: AnomalyDetectorClient
uid: '@azure/ai-anomaly-detector.AnomalyDetectorClient'
package: '@azure/ai-anomaly-detector'
summary: Client class for interacting with Azure Anomaly Detector service.
fullName: AnomalyDetectorClient
remarks: ''
isPreview: false
isDeprecated: false
type: class
constructors:
  - name: >-
      AnomalyDetectorClient(string, TokenCredential | KeyCredential,
      AnomalyDetectorClientOptions)
    uid: '@azure/ai-anomaly-detector.AnomalyDetectorClient.constructor'
    package: '@azure/ai-anomaly-detector'
    summary: >-
      Creates an instance of AnomalyDetectorClient.

      Example usage:

      ```ts

      import { AnomalyDetectorClient, AzureKeyCredential } from
      "@azure/ai-anomaly-detector";


      const client = new AnomalyDetectorClient(
         "<service endpoint>",
         new AzureKeyCredential("<api key>")
      );

      ```
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        new AnomalyDetectorClient(endpointUrl: string, credential:
        TokenCredential | KeyCredential, options?: AnomalyDetectorClientOptions)
      parameters:
        - id: endpointUrl
          type: string
          description: Url to an Azure Anomaly Detector service endpoint
        - id: credential
          type: TokenCredential | KeyCredential
          description: Used to authenticate requests to the service.
        - id: options
          type: >-
            <xref uid="@azure/ai-anomaly-detector.AnomalyDetectorClientOptions"
            />
          description: |
            Used to configure the Form Recognizer client.
methods:
  - name: 'detectChangePoint(DetectChangePointRequest, DetectChangePointOptions)'
    uid: '@azure/ai-anomaly-detector.AnomalyDetectorClient.detectChangePoint'
    package: '@azure/ai-anomaly-detector'
    summary: Evaluate change point score of every series point
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function detectChangePoint(body: DetectChangePointRequest, options?:
        DetectChangePointOptions)
      parameters:
        - id: body
          type: <xref uid="@azure/ai-anomaly-detector.DetectChangePointRequest" />
          description: >-
            Time series points and granularity is needed. Advanced model
            parameters can also be set
                        in the request if needed.
        - id: options
          type: <xref uid="@azure/ai-anomaly-detector.DetectChangePointOptions" />
          description: |
            The options parameters.
      return:
        type: >-
          Promise&lt;<xref
          uid="@azure/ai-anomaly-detector.AnomalyDetectorClientDetectChangePointResponse"
          />&gt;
        description: ''
  - name: 'detectEntireSeries(DetectRequest, DetectEntireSeriesOptions)'
    uid: '@azure/ai-anomaly-detector.AnomalyDetectorClient.detectEntireSeries'
    package: '@azure/ai-anomaly-detector'
    summary: >-
      This operation generates a model using an entire series, each point is
      detected with the same model.

      With this method, points before and after a certain point are used to
      determine whether it is an

      anomaly. The entire detection can give user an overall status of the time
      series.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function detectEntireSeries(body: DetectRequest, options?:
        DetectEntireSeriesOptions)
      parameters:
        - id: body
          type: <xref uid="@azure/ai-anomaly-detector.DetectRequest" />
          description: >-
            Time series points and period if needed. Advanced model parameters
            can also be set in
                        the request.
        - id: options
          type: <xref uid="@azure/ai-anomaly-detector.DetectEntireSeriesOptions" />
          description: |
            The options parameters.
      return:
        type: >-
          Promise&lt;<xref
          uid="@azure/ai-anomaly-detector.AnomalyDetectorClientDetectEntireResponse"
          />&gt;
        description: ''
  - name: 'detectLastPoint(DetectRequest, DetectLastPointOptions)'
    uid: '@azure/ai-anomaly-detector.AnomalyDetectorClient.detectLastPoint'
    package: '@azure/ai-anomaly-detector'
    summary: >-
      This operation generates a model using points before the latest one. With
      this method, only

      historical points are used to determine whether the target point is an
      anomaly. The latest point

      detecting operation matches the scenario of real-time monitoring of
      business metrics.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function detectLastPoint(body: DetectRequest, options?:
        DetectLastPointOptions)
      parameters:
        - id: body
          type: <xref uid="@azure/ai-anomaly-detector.DetectRequest" />
          description: >-
            Time series points and period if needed. Advanced model parameters
            can also be set in
                        the request.
        - id: options
          type: <xref uid="@azure/ai-anomaly-detector.DetectLastPointOptions" />
          description: |
            The options parameters.
      return:
        type: >-
          Promise&lt;<xref
          uid="@azure/ai-anomaly-detector.AnomalyDetectorClientDetectLastPointResponse"
          />&gt;
        description: ''
