### YamlMime:UniversalReference
items:
  - uid: '@azure/storage-blob.ContainerGetPropertiesOptions'
    name: ContainerGetPropertiesOptions
    fullName: ContainerGetPropertiesOptions
    children:
      - '@azure/storage-blob.ContainerGetPropertiesOptions.abortSignal'
      - '@azure/storage-blob.ContainerGetPropertiesOptions.leaseAccessConditions'
    langs:
      - typeScript
    type: interface
    summary: Options to configure Container - Get Properties operation.
    package: '@azure/storage-blob'
  - uid: '@azure/storage-blob.ContainerGetPropertiesOptions.abortSignal'
    name: abortSignal
    fullName: abortSignal
    children: []
    langs:
      - typeScript
    type: property
    summary: |-
      Aborter instance to cancel request. It can be created with Aborter.none
      or Aborter.timeout(). Go to documents of <xref:Aborter> for more examples
      about request cancellation.
    optional: true
    syntax:
      content: 'abortSignal?: Aborter'
      return:
        type:
          - '@azure/storage-blob.Aborter'
    package: '@azure/storage-blob'
  - uid: '@azure/storage-blob.ContainerGetPropertiesOptions.leaseAccessConditions'
    name: leaseAccessConditions
    fullName: leaseAccessConditions
    children: []
    langs:
      - typeScript
    type: property
    summary: >-
      If specified, contains the lease id that must be matched and lease with
      this id

      must be active in order for the operation to succeed.
    optional: true
    syntax:
      content: 'leaseAccessConditions?: Models.LeaseAccessConditions'
      return:
        type:
          - Models.LeaseAccessConditions
    package: '@azure/storage-blob'
references:
  - uid: '@azure/storage-blob.Aborter'
    name: Aborter
    spec.typeScript:
      - name: Aborter
        fullName: Aborter
        uid: '@azure/storage-blob.Aborter'
