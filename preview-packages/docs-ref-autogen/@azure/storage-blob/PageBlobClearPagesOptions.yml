### YamlMime:UniversalReference
items:
  - uid: '@azure/storage-blob.PageBlobClearPagesOptions'
    name: PageBlobClearPagesOptions
    fullName: PageBlobClearPagesOptions
    children:
      - '@azure/storage-blob.PageBlobClearPagesOptions.abortSignal'
      - '@azure/storage-blob.PageBlobClearPagesOptions.accessConditions'
    langs:
      - typeScript
    type: interface
    summary: Options to configure Page Blob - Clear Pages operation.
    package: '@azure/storage-blob'
  - uid: '@azure/storage-blob.PageBlobClearPagesOptions.abortSignal'
    name: abortSignal
    fullName: abortSignal
    children: []
    langs:
      - typeScript
    type: property
    summary: |-
      Aborter instance to cancel request. It can be created with Aborter.none
      or Aborter.timeout(). Go to documents of <xref:Aborter> for more examples
      about request cancellation.
    optional: true
    syntax:
      content: 'abortSignal?: Aborter'
      return:
        type:
          - '@azure/storage-blob.Aborter'
    package: '@azure/storage-blob'
  - uid: '@azure/storage-blob.PageBlobClearPagesOptions.accessConditions'
    name: accessConditions
    fullName: accessConditions
    children: []
    langs:
      - typeScript
    type: property
    summary: Conditions to meet when clearing pages.
    optional: true
    syntax:
      content: 'accessConditions?: PageBlobAccessConditions'
      return:
        type:
          - '@azure/storage-blob.PageBlobAccessConditions'
    package: '@azure/storage-blob'
references:
  - uid: '@azure/storage-blob.Aborter'
    name: Aborter
    spec.typeScript:
      - name: Aborter
        fullName: Aborter
        uid: '@azure/storage-blob.Aborter'
  - uid: '@azure/storage-blob.PageBlobAccessConditions'
    name: PageBlobAccessConditions
    spec.typeScript:
      - name: PageBlobAccessConditions
        fullName: PageBlobAccessConditions
        uid: '@azure/storage-blob.PageBlobAccessConditions'
