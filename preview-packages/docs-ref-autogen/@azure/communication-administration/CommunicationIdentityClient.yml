### YamlMime:UniversalReference
items:
  - uid: '@azure/communication-administration.CommunicationIdentityClient'
    name: CommunicationIdentityClient
    fullName: CommunicationIdentityClient
    children:
      - >-
        @azure/communication-administration.CommunicationIdentityClient.constructor
      - >-
        @azure/communication-administration.CommunicationIdentityClient.constructor_1
      - >-
        @azure/communication-administration.CommunicationIdentityClient.createUser
      - >-
        @azure/communication-administration.CommunicationIdentityClient.deleteUser
      - >-
        @azure/communication-administration.CommunicationIdentityClient.issueToken
      - >-
        @azure/communication-administration.CommunicationIdentityClient.revokeTokens
    langs:
      - typeScript
    type: class
    summary: >-
      Client class for interacting with Azure Communication Services User Token
      Management.
    package: '@azure/communication-administration'
  - uid: >-
      @azure/communication-administration.CommunicationIdentityClient.constructor
    name: 'CommunicationIdentityClient(string, CommunicationIdentityOptions)'
    children: []
    type: constructor
    langs:
      - typeScript
    summary: Initializes a new instance of the CommunicationIdentity class.
    syntax:
      content: >-
        new CommunicationIdentityClient(connectionString: string, options?:
        CommunicationIdentityOptions)
      parameters:
        - id: connectionString
          type:
            - string
          description: >-
            Connection string to connect to an Azure Communication Service
            resource.
                                    Example: "endpoint=https://contoso.eastus.communications.azure.net/;accesskey=secret";
        - id: options
          type:
            - '@azure/communication-administration.CommunicationIdentityOptions'
          description: |
            Optional. Options to configure the HTTP pipeline.
          optional: true
    package: '@azure/communication-administration'
  - uid: >-
      @azure/communication-administration.CommunicationIdentityClient.constructor_1
    name: >-
      CommunicationIdentityClient(string, KeyCredential,
      CommunicationIdentityOptions)
    children: []
    type: constructor
    langs:
      - typeScript
    summary: >-
      Initializes a new instance of the CommunicationIdentity class using an
      Azure KeyCredential.
    syntax:
      content: >-
        new CommunicationIdentityClient(url: string, credential: KeyCredential,
        options?: CommunicationIdentityOptions)
      parameters:
        - id: url
          type:
            - string
          description: >-
            The endpoint of the service (ex:
            https://contoso.eastus.communications.azure.net).
        - id: credential
          type:
            - KeyCredential
          description: >-
            An object that is used to authenticate requests to the service. Use
            the AzureKeyCredential or `@azure/identity` to create a credential.
        - id: options
          type:
            - '@azure/communication-administration.CommunicationIdentityOptions'
          description: |
            Optional. Options to configure the HTTP pipeline.
          optional: true
    package: '@azure/communication-administration'
  - uid: '@azure/communication-administration.CommunicationIdentityClient.createUser'
    name: createUser(OperationOptions)
    children: []
    type: method
    langs:
      - typeScript
    summary: Creates a single user.
    syntax:
      content: 'function createUser(options?: OperationOptions)'
      parameters:
        - id: options
          type:
            - OperationOptions
          description: ''
          optional: true
      return:
        type:
          - Promise<@azure/communication-administration.CreateUserResponse>
        description: ''
    package: '@azure/communication-administration'
  - uid: '@azure/communication-administration.CommunicationIdentityClient.deleteUser'
    name: 'deleteUser(CommunicationUser, OperationOptions)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Triggers revocation event for user and deletes all its data.
    syntax:
      content: 'function deleteUser(user: CommunicationUser, options?: OperationOptions)'
      parameters:
        - id: user
          type:
            - CommunicationUser
          description: The user being deleted.
        - id: options
          type:
            - OperationOptions
          description: ''
          optional: true
      return:
        type:
          - Promise<@azure/communication-administration.VoidResponse>
        description: ''
    package: '@azure/communication-administration'
  - uid: '@azure/communication-administration.CommunicationIdentityClient.issueToken'
    name: 'issueToken(CommunicationUser, TokenScope[], OperationOptions)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Creates a scoped user token.
    syntax:
      content: >-
        function issueToken(user: CommunicationUser, scopes: TokenScope[],
        options?: OperationOptions)
      parameters:
        - id: user
          type:
            - CommunicationUser
          description: The user whose tokens are being revoked.
        - id: scopes
          type:
            - '@azure/communication-administration.TokenScope[]'
          description: Scopes to include in the token.
        - id: options
          type:
            - OperationOptions
          description: ''
          optional: true
      return:
        type:
          - Promise<@azure/communication-administration.IssueTokenResponse>
        description: ''
    package: '@azure/communication-administration'
  - uid: >-
      @azure/communication-administration.CommunicationIdentityClient.revokeTokens
    name: 'revokeTokens(CommunicationUser, Date, OperationOptions)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Revokes all data and tokens created for a user.
    syntax:
      content: >-
        function revokeTokens(user: CommunicationUser, tokensValidFrom?: Date,
        options?: OperationOptions)
      parameters:
        - id: user
          type:
            - CommunicationUser
          description: The user whose tokens are being revoked.
        - id: tokensValidFrom
          type:
            - Date
          description: Tokens issued before this time will be revoked.
          optional: true
        - id: options
          type:
            - OperationOptions
          description: ''
          optional: true
      return:
        type:
          - Promise<@azure/communication-administration.VoidResponse>
        description: ''
    package: '@azure/communication-administration'
references:
  - uid: '@azure/communication-administration.CommunicationIdentityOptions'
    name: CommunicationIdentityOptions
    spec.typeScript:
      - name: CommunicationIdentityOptions
        fullName: CommunicationIdentityOptions
        uid: '@azure/communication-administration.CommunicationIdentityOptions'
  - uid: Promise<@azure/communication-administration.CreateUserResponse>
    name: CreateUserResponse>
    spec.typeScript:
      - name: Promise<
        fullName: Promise<
      - name: CreateUserResponse
        fullName: CreateUserResponse
        uid: '@azure/communication-administration.CreateUserResponse'
      - name: '>'
        fullName: '>'
  - uid: Promise<@azure/communication-administration.VoidResponse>
    name: VoidResponse>
    spec.typeScript:
      - name: Promise<
        fullName: Promise<
      - name: VoidResponse
        fullName: VoidResponse
        uid: '@azure/communication-administration.VoidResponse'
      - name: '>'
        fullName: '>'
  - uid: '@azure/communication-administration.TokenScope[]'
    name: 'TokenScope[]'
    spec.typeScript:
      - name: TokenScope
        fullName: TokenScope
        uid: '@azure/communication-administration.TokenScope'
      - name: '[]'
        fullName: '[]'
  - uid: Promise<@azure/communication-administration.IssueTokenResponse>
    name: IssueTokenResponse>
    spec.typeScript:
      - name: Promise<
        fullName: Promise<
      - name: IssueTokenResponse
        fullName: IssueTokenResponse
        uid: '@azure/communication-administration.IssueTokenResponse'
      - name: '>'
        fullName: '>'
