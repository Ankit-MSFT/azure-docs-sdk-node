### YamlMime:UniversalReference
items:
  - uid: '@azure/abort-controller.AbortSignal'
    name: AbortSignal
    fullName: AbortSignal
    children:
      - '@azure/abort-controller.AbortSignal.aborted'
      - '@azure/abort-controller.AbortSignal.constructor'
      - '@azure/abort-controller.AbortSignal.addEventListener'
      - '@azure/abort-controller.AbortSignal.none'
      - '@azure/abort-controller.AbortSignal.onabort'
      - '@azure/abort-controller.AbortSignal.removeEventListener'
    langs:
      - typeScript
    type: class
    summary: >
      An aborter instance implements AbortSignal interface, can abort HTTP
      requests.

      - Call AbortSignal.none to create a new AbortSignal instance that cannot
      be cancelled.

      Use `AbortSignal.none` when you are required to pass a cancellation token
      but the operation

      cannot or will not ever be cancelled.
    package: '@azure/abort-controller'
  - uid: '@azure/abort-controller.AbortSignal.aborted'
    name: aborted
    fullName: aborted
    children: []
    langs:
      - typeScript
    type: property
    summary: Status of whether aborted or not.
    syntax:
      content: 'aborted: boolean'
      return:
        type:
          - boolean
    package: '@azure/abort-controller'
  - uid: '@azure/abort-controller.AbortSignal.constructor'
    name: AbortSignal()
    children: []
    type: constructor
    langs:
      - typeScript
    summary: ''
    syntax:
      content: new AbortSignal()
      parameters: []
    package: '@azure/abort-controller'
  - uid: '@azure/abort-controller.AbortSignal.addEventListener'
    name: 'addEventListener("abort", (this: AbortSignalLike, ev: any) => any)'
    children: []
    type: method
    langs:
      - typeScript
    summary: 'Added new "abort" event listener, only support "abort" event.'
    syntax:
      content: >-
        function addEventListener(_type: "abort", listener: (this:
        AbortSignalLike, ev: any) => any)
      parameters:
        - id: _type
          type:
            - '"abort"'
          description: Only support "abort" event
        - id: listener
          type:
            - '(this: AbortSignalLike, ev: any) => any'
          description: ''
    package: '@azure/abort-controller'
  - uid: '@azure/abort-controller.AbortSignal.none'
    name: none
    fullName: none
    children: []
    langs:
      - typeScript
    type: property
    summary: Creates a new AbortSignal instance that will never be aborted.
    syntax:
      content: 'static none: AbortSignal'
      return:
        type:
          - '@azure/abort-controller.AbortSignal'
    package: '@azure/abort-controller'
  - uid: '@azure/abort-controller.AbortSignal.onabort'
    name: onabort
    fullName: onabort
    children: []
    langs:
      - typeScript
    type: property
    summary: onabort event listener.
    optional: true
    syntax:
      content: 'onabort?: undefined | (ev?: Event) => any'
      return:
        type:
          - 'undefined | (ev?: Event) => any'
    package: '@azure/abort-controller'
  - uid: '@azure/abort-controller.AbortSignal.removeEventListener'
    name: 'removeEventListener("abort", (this: AbortSignalLike, ev: any) => any)'
    children: []
    type: method
    langs:
      - typeScript
    summary: 'Remove "abort" event listener, only support "abort" event.'
    syntax:
      content: >-
        function removeEventListener(_type: "abort", listener: (this:
        AbortSignalLike, ev: any) => any)
      parameters:
        - id: _type
          type:
            - '"abort"'
          description: Only support "abort" event
        - id: listener
          type:
            - '(this: AbortSignalLike, ev: any) => any'
          description: ''
    package: '@azure/abort-controller'
references:
  - uid: '@azure/abort-controller.AbortSignal'
    name: AbortSignal
    spec.typeScript:
      - name: AbortSignal
        fullName: AbortSignal
        uid: '@azure/abort-controller.AbortSignal'
