### YamlMime:UniversalReference
items:
  - uid: '@azure/communication-chat.ChatThreadClient'
    name: ChatThreadClient
    fullName: ChatThreadClient
    children:
      - '@azure/communication-chat.ChatThreadClient.addMembers'
      - '@azure/communication-chat.ChatThreadClient.constructor'
      - '@azure/communication-chat.ChatThreadClient.deleteMessage'
      - '@azure/communication-chat.ChatThreadClient.dispose'
      - '@azure/communication-chat.ChatThreadClient.getMessage'
      - '@azure/communication-chat.ChatThreadClient.listMembers'
      - '@azure/communication-chat.ChatThreadClient.listMessages'
      - '@azure/communication-chat.ChatThreadClient.listReadReceipts'
      - '@azure/communication-chat.ChatThreadClient.removeMember'
      - '@azure/communication-chat.ChatThreadClient.sendMessage'
      - '@azure/communication-chat.ChatThreadClient.sendReadReceipt'
      - '@azure/communication-chat.ChatThreadClient.sendTypingNotification'
      - '@azure/communication-chat.ChatThreadClient.threadId'
      - '@azure/communication-chat.ChatThreadClient.updateMessage'
      - '@azure/communication-chat.ChatThreadClient.updateThread'
    langs:
      - typeScript
    type: class
    summary: The client to do chat operations
    package: '@azure/communication-chat'
  - uid: '@azure/communication-chat.ChatThreadClient.addMembers'
    name: 'addMembers(AddMembersRequest, AddMembersOptions)'
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      Adds the details of thread members belonging to the thread identified by
      threadId.
    syntax:
      content: >-
        function addMembers(request: AddMembersRequest, options?:
        AddMembersOptions)
      parameters:
        - id: request
          type:
            - '@azure/communication-chat.AddMembersRequest'
          description: Thread members' details to add in the thread roster
        - id: options
          type:
            - '@azure/communication-chat.AddMembersOptions'
          description: |
            Operation options.
          optional: true
      return:
        type:
          - Promise<@azure/communication-chat.OperationResponse>
        description: ''
    package: '@azure/communication-chat'
  - uid: '@azure/communication-chat.ChatThreadClient.constructor'
    name: >-
      ChatThreadClient(string, string, CommunicationUserCredential,
      ChatThreadClientOptions)
    children: []
    type: constructor
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        new ChatThreadClient(threadId: string, url: string, credential:
        CommunicationUserCredential, options?: ChatThreadClientOptions)
      parameters:
        - id: threadId
          type:
            - string
          description: ''
        - id: url
          type:
            - string
          description: ''
        - id: credential
          type:
            - CommunicationUserCredential
          description: ''
        - id: options
          type:
            - '@azure/communication-chat.ChatThreadClientOptions'
          description: ''
          optional: true
    package: '@azure/communication-chat'
  - uid: '@azure/communication-chat.ChatThreadClient.deleteMessage'
    name: 'deleteMessage(string, DeleteMessageOptions)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Deletes a message identified by threadId and messageId
    syntax:
      content: >-
        function deleteMessage(messageId: string, options?:
        DeleteMessageOptions)
      parameters:
        - id: messageId
          type:
            - string
          description: The message id of the message.
        - id: options
          type:
            - '@azure/communication-chat.DeleteMessageOptions'
          description: |
            Operation options.
          optional: true
      return:
        type:
          - Promise<@azure/communication-chat.OperationResponse>
        description: ''
    package: '@azure/communication-chat'
  - uid: '@azure/communication-chat.ChatThreadClient.dispose'
    name: dispose()
    children: []
    type: method
    langs:
      - typeScript
    summary: Dispose method.
    syntax:
      content: function dispose()
      parameters: []
    package: '@azure/communication-chat'
  - uid: '@azure/communication-chat.ChatThreadClient.getMessage'
    name: 'getMessage(string, GetMessageOptions)'
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      Gets a chat message identified by messageId.
      Returns the specific message.\
    syntax:
      content: 'function getMessage(messageId: string, options?: GetMessageOptions)'
      parameters:
        - id: messageId
          type:
            - string
          description: The message id of the message.
        - id: options
          type:
            - '@azure/communication-chat.GetMessageOptions'
          description: |
            Operation options.
          optional: true
      return:
        type:
          - Promise<@azure/communication-chat.GetChatMessageResponse>
        description: ''
    package: '@azure/communication-chat'
  - uid: '@azure/communication-chat.ChatThreadClient.listMembers'
    name: listMembers(ListMembersOptions)
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      Gets the members of the thread identified by threadId.
      Returns the lists of the members.
    syntax:
      content: 'function listMembers(options?: ListMembersOptions)'
      parameters:
        - id: options
          type:
            - '@azure/communication-chat.ListMembersOptions'
          description: |
            Operation options.
          optional: true
      return:
        type:
          - >-
            PagedAsyncIterableIterator<@azure/communication-chat.ChatThreadMember>
        description: ''
    package: '@azure/communication-chat'
  - uid: '@azure/communication-chat.ChatThreadClient.listMessages'
    name: listMessages(ListMessagesOptions)
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      Gets a list of message from a thread identified by threadId.
      Returns the list of the messages.
    syntax:
      content: 'function listMessages(options?: ListMessagesOptions)'
      parameters:
        - id: options
          type:
            - '@azure/communication-chat.ListMessagesOptions'
          description: |
            Get messages options.
          optional: true
      return:
        type:
          - PagedAsyncIterableIterator<@azure/communication-chat.ChatMessage>
        description: ''
    package: '@azure/communication-chat'
  - uid: '@azure/communication-chat.ChatThreadClient.listReadReceipts'
    name: listReadReceipts(ListReadReceiptsOptions)
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      Gets a list of read receipt from a thread identified by threadId.
      Returns the list of the messages.
    syntax:
      content: 'function listReadReceipts(options?: ListReadReceiptsOptions)'
      parameters:
        - id: options
          type:
            - '@azure/communication-chat.ListReadReceiptsOptions'
          description: |
            Get messages options.
          optional: true
      return:
        type:
          - PagedAsyncIterableIterator<@azure/communication-chat.ReadReceipt>
        description: ''
    package: '@azure/communication-chat'
  - uid: '@azure/communication-chat.ChatThreadClient.removeMember'
    name: 'removeMember(CommunicationUser, RemoveMemberOptions)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Removes member from the thread identified by threadId.
    syntax:
      content: >-
        function removeMember(member: CommunicationUser, options?:
        RemoveMemberOptions)
      parameters:
        - id: member
          type:
            - CommunicationUser
          description: Thread member to remove from the thread roster
        - id: options
          type:
            - '@azure/communication-chat.RemoveMemberOptions'
          description: |
            Operation options.
          optional: true
      return:
        type:
          - Promise<@azure/communication-chat.OperationResponse>
        description: ''
    package: '@azure/communication-chat'
  - uid: '@azure/communication-chat.ChatThreadClient.sendMessage'
    name: 'sendMessage(SendMessageRequest, SendMessageOptions)'
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      Sends a chat message to a thread identified by threadId.
      Returns the id of the created message.
    syntax:
      content: >-
        function sendMessage(request: SendMessageRequest, options?:
        SendMessageOptions)
      parameters:
        - id: request
          type:
            - '@azure/communication-chat.SendMessageRequest'
          description: Request for sending a message.
        - id: options
          type:
            - '@azure/communication-chat.SendMessageOptions'
          description: |
            Operation options.
          optional: true
      return:
        type:
          - Promise<@azure/communication-chat.SendChatMessageResponse>
        description: ''
    package: '@azure/communication-chat'
  - uid: '@azure/communication-chat.ChatThreadClient.sendReadReceipt'
    name: 'sendReadReceipt(SendReadReceiptRequest, SendReadReceiptOptions)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Sends a read receipt to the thread identified by threadId.
    syntax:
      content: >-
        function sendReadReceipt(request: SendReadReceiptRequest, options?:
        SendReadReceiptOptions)
      parameters:
        - id: request
          type:
            - '@azure/communication-chat.SendReadReceiptRequest'
          description: Request for sending a read receipt
        - id: options
          type:
            - '@azure/communication-chat.SendReadReceiptOptions'
          description: |
            Operation options.
          optional: true
      return:
        type:
          - Promise<@azure/communication-chat.OperationResponse>
        description: ''
    package: '@azure/communication-chat'
  - uid: '@azure/communication-chat.ChatThreadClient.sendTypingNotification'
    name: sendTypingNotification(SendTypingNotificationOptions)
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      Sends a typing notification to the thread.

      Doesn't attempt to send if the time since last notification is smaller
      than the minimum typing interval
    syntax:
      content: 'function sendTypingNotification(options?: SendTypingNotificationOptions)'
      parameters:
        - id: options
          type:
            - '@azure/communication-chat.SendTypingNotificationOptions'
          description: Operation options
          optional: true
      return:
        type:
          - Promise<boolean>
        description: >-
          True if the typing message notification could be sent, otherwise
          false.
    package: '@azure/communication-chat'
  - uid: '@azure/communication-chat.ChatThreadClient.threadId'
    name: threadId
    fullName: threadId
    children: []
    langs:
      - typeScript
    type: property
    summary: Thread ID of the ChatThreadClient
    syntax:
      content: 'threadId: string'
      return:
        type:
          - string
        description: ''
    package: '@azure/communication-chat'
  - uid: '@azure/communication-chat.ChatThreadClient.updateMessage'
    name: 'updateMessage(string, UpdateMessageOptions)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Updates a message identified by threadId and messageId
    syntax:
      content: >-
        function updateMessage(messageId: string, options?:
        UpdateMessageOptions)
      parameters:
        - id: messageId
          type:
            - string
          description: The message id of the message.
        - id: options
          type:
            - '@azure/communication-chat.UpdateMessageOptions'
          description: |
            Operation options.
          optional: true
      return:
        type:
          - Promise<@azure/communication-chat.OperationResponse>
        description: ''
    package: '@azure/communication-chat'
  - uid: '@azure/communication-chat.ChatThreadClient.updateThread'
    name: updateThread(UpdateThreadOptions)
    children: []
    type: method
    langs:
      - typeScript
    summary: Updates a thread's properties.
    syntax:
      content: 'function updateThread(options?: UpdateThreadOptions)'
      parameters:
        - id: options
          type:
            - '@azure/communication-chat.UpdateThreadOptions'
          description: |
            Operation options.
          optional: true
      return:
        type:
          - Promise<@azure/communication-chat.OperationResponse>
        description: ''
    package: '@azure/communication-chat'
references:
  - uid: '@azure/communication-chat.ChatThreadClientOptions'
    name: ChatThreadClientOptions
    spec.typeScript:
      - name: ChatThreadClientOptions
        fullName: ChatThreadClientOptions
        uid: '@azure/communication-chat.ChatThreadClientOptions'
  - uid: '@azure/communication-chat.AddMembersRequest'
    name: AddMembersRequest
    spec.typeScript:
      - name: AddMembersRequest
        fullName: AddMembersRequest
        uid: '@azure/communication-chat.AddMembersRequest'
  - uid: '@azure/communication-chat.AddMembersOptions'
    name: AddMembersOptions
    spec.typeScript:
      - name: AddMembersOptions
        fullName: AddMembersOptions
        uid: '@azure/communication-chat.AddMembersOptions'
  - uid: Promise<@azure/communication-chat.OperationResponse>
    name: OperationResponse>
    spec.typeScript:
      - name: Promise<
        fullName: Promise<
      - name: OperationResponse
        fullName: OperationResponse
        uid: '@azure/communication-chat.OperationResponse'
      - name: '>'
        fullName: '>'
  - uid: '@azure/communication-chat.DeleteMessageOptions'
    name: DeleteMessageOptions
    spec.typeScript:
      - name: DeleteMessageOptions
        fullName: DeleteMessageOptions
        uid: '@azure/communication-chat.DeleteMessageOptions'
  - uid: '@azure/communication-chat.GetMessageOptions'
    name: GetMessageOptions
    spec.typeScript:
      - name: GetMessageOptions
        fullName: GetMessageOptions
        uid: '@azure/communication-chat.GetMessageOptions'
  - uid: Promise<@azure/communication-chat.GetChatMessageResponse>
    name: GetChatMessageResponse>
    spec.typeScript:
      - name: Promise<
        fullName: Promise<
      - name: GetChatMessageResponse
        fullName: GetChatMessageResponse
        uid: '@azure/communication-chat.GetChatMessageResponse'
      - name: '>'
        fullName: '>'
  - uid: '@azure/communication-chat.ListMembersOptions'
    name: ListMembersOptions
    spec.typeScript:
      - name: ListMembersOptions
        fullName: ListMembersOptions
        uid: '@azure/communication-chat.ListMembersOptions'
  - uid: PagedAsyncIterableIterator<@azure/communication-chat.ChatThreadMember>
    name: ChatThreadMember>
    spec.typeScript:
      - name: PagedAsyncIterableIterator<
        fullName: PagedAsyncIterableIterator<
      - name: ChatThreadMember
        fullName: ChatThreadMember
        uid: '@azure/communication-chat.ChatThreadMember'
      - name: '>'
        fullName: '>'
  - uid: '@azure/communication-chat.ListMessagesOptions'
    name: ListMessagesOptions
    spec.typeScript:
      - name: ListMessagesOptions
        fullName: ListMessagesOptions
        uid: '@azure/communication-chat.ListMessagesOptions'
  - uid: PagedAsyncIterableIterator<@azure/communication-chat.ChatMessage>
    name: ChatMessage>
    spec.typeScript:
      - name: PagedAsyncIterableIterator<
        fullName: PagedAsyncIterableIterator<
      - name: ChatMessage
        fullName: ChatMessage
        uid: '@azure/communication-chat.ChatMessage'
      - name: '>'
        fullName: '>'
  - uid: '@azure/communication-chat.ListReadReceiptsOptions'
    name: ListReadReceiptsOptions
    spec.typeScript:
      - name: ListReadReceiptsOptions
        fullName: ListReadReceiptsOptions
        uid: '@azure/communication-chat.ListReadReceiptsOptions'
  - uid: PagedAsyncIterableIterator<@azure/communication-chat.ReadReceipt>
    name: ReadReceipt>
    spec.typeScript:
      - name: PagedAsyncIterableIterator<
        fullName: PagedAsyncIterableIterator<
      - name: ReadReceipt
        fullName: ReadReceipt
        uid: '@azure/communication-chat.ReadReceipt'
      - name: '>'
        fullName: '>'
  - uid: '@azure/communication-chat.RemoveMemberOptions'
    name: RemoveMemberOptions
    spec.typeScript:
      - name: RemoveMemberOptions
        fullName: RemoveMemberOptions
        uid: '@azure/communication-chat.RemoveMemberOptions'
  - uid: '@azure/communication-chat.SendMessageRequest'
    name: SendMessageRequest
    spec.typeScript:
      - name: SendMessageRequest
        fullName: SendMessageRequest
        uid: '@azure/communication-chat.SendMessageRequest'
  - uid: '@azure/communication-chat.SendMessageOptions'
    name: SendMessageOptions
    spec.typeScript:
      - name: SendMessageOptions
        fullName: SendMessageOptions
        uid: '@azure/communication-chat.SendMessageOptions'
  - uid: Promise<@azure/communication-chat.SendChatMessageResponse>
    name: SendChatMessageResponse>
    spec.typeScript:
      - name: Promise<
        fullName: Promise<
      - name: SendChatMessageResponse
        fullName: SendChatMessageResponse
        uid: '@azure/communication-chat.SendChatMessageResponse'
      - name: '>'
        fullName: '>'
  - uid: '@azure/communication-chat.SendReadReceiptRequest'
    name: SendReadReceiptRequest
    spec.typeScript:
      - name: SendReadReceiptRequest
        fullName: SendReadReceiptRequest
        uid: '@azure/communication-chat.SendReadReceiptRequest'
  - uid: '@azure/communication-chat.SendReadReceiptOptions'
    name: SendReadReceiptOptions
    spec.typeScript:
      - name: SendReadReceiptOptions
        fullName: SendReadReceiptOptions
        uid: '@azure/communication-chat.SendReadReceiptOptions'
  - uid: '@azure/communication-chat.SendTypingNotificationOptions'
    name: SendTypingNotificationOptions
    spec.typeScript:
      - name: SendTypingNotificationOptions
        fullName: SendTypingNotificationOptions
        uid: '@azure/communication-chat.SendTypingNotificationOptions'
  - uid: '@azure/communication-chat.UpdateMessageOptions'
    name: UpdateMessageOptions
    spec.typeScript:
      - name: UpdateMessageOptions
        fullName: UpdateMessageOptions
        uid: '@azure/communication-chat.UpdateMessageOptions'
  - uid: '@azure/communication-chat.UpdateThreadOptions'
    name: UpdateThreadOptions
    spec.typeScript:
      - name: UpdateThreadOptions
        fullName: UpdateThreadOptions
        uid: '@azure/communication-chat.UpdateThreadOptions'
