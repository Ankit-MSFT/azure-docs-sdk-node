### YamlMime:UniversalReference
items:
  - uid: '@azure/communication-chat.CommunicationUserCredentialPolicy'
    name: CommunicationUserCredentialPolicy
    fullName: CommunicationUserCredentialPolicy
    children:
      - '@azure/communication-chat.CommunicationUserCredentialPolicy.constructor'
      - '@azure/communication-chat.CommunicationUserCredentialPolicy.log'
      - '@azure/communication-chat.CommunicationUserCredentialPolicy.sendRequest'
      - '@azure/communication-chat.CommunicationUserCredentialPolicy.shouldLog'
    langs:
      - typeScript
    type: class
    summary: >-
      Provides a RequestPolicy that can request a token from a
      CommunicationUserCredential

      implementation and then apply it to the Authorization header of a request.
    extends:
      name: BaseRequestPolicy
    package: '@azure/communication-chat'
  - uid: '@azure/communication-chat.CommunicationUserCredentialPolicy.constructor'
    name: >-
      CommunicationUserCredentialPolicy(RequestPolicy, RequestPolicyOptions,
      CommunicationUserCredential)
    children: []
    type: constructor
    langs:
      - typeScript
    summary: Creates a new CommunicationUserCredentialPolicy object.
    syntax:
      content: >-
        new CommunicationUserCredentialPolicy(nextPolicy: RequestPolicy,
        options: RequestPolicyOptions, credential: CommunicationUserCredential)
      parameters:
        - id: nextPolicy
          type:
            - RequestPolicy
          description: The next RequestPolicy in the request pipeline.
        - id: options
          type:
            - RequestPolicyOptions
          description: Options for this RequestPolicy.
        - id: credential
          type:
            - CommunicationUserCredential
          description: >-
            The CommunicationUserCredential implementation that can supply the
            user credential.
    package: '@azure/communication-chat'
  - uid: '@azure/communication-chat.CommunicationUserCredentialPolicy.log'
    name: 'log(HttpPipelineLogLevel, string)'
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      Attempt to log the provided message to the provided logger. If no logger
      was provided or if

      the log level does not meat the logger's threshold, then nothing will be
      logged.
    syntax:
      content: 'function log(logLevel: HttpPipelineLogLevel, message: string)'
      parameters:
        - id: logLevel
          type:
            - HttpPipelineLogLevel
          description: The log level of this log.
        - id: message
          type:
            - string
          description: |
            The message of this log.
    package: '@azure/communication-chat'
  - uid: '@azure/communication-chat.CommunicationUserCredentialPolicy.sendRequest'
    name: sendRequest(WebResourceLike)
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      Applies the user credential to the request through the Authorization
      header.
    syntax:
      content: 'function sendRequest(webResource: WebResourceLike)'
      parameters:
        - id: webResource
          type:
            - WebResourceLike
          description: |+

      return:
        type:
          - Promise<HttpOperationResponse>
        description: ''
    package: '@azure/communication-chat'
  - uid: '@azure/communication-chat.CommunicationUserCredentialPolicy.shouldLog'
    name: shouldLog(HttpPipelineLogLevel)
    children: []
    type: method
    langs:
      - typeScript
    summary: Get whether or not a log with the provided log level should be logged.
    syntax:
      content: 'function shouldLog(logLevel: HttpPipelineLogLevel)'
      parameters:
        - id: logLevel
          type:
            - HttpPipelineLogLevel
          description: The log level of the log that will be logged.
      return:
        type:
          - boolean
        description: Whether or not a log with the provided log level should be logged.
    package: '@azure/communication-chat'
