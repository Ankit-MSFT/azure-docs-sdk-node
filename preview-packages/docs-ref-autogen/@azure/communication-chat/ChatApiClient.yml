### YamlMime:UniversalReference
items:
  - uid: '@azure/communication-chat.ChatApiClient'
    name: ChatApiClient
    fullName: ChatApiClient
    children:
      - '@azure/communication-chat.ChatApiClient.addChatThreadMembers'
      - '@azure/communication-chat.ChatApiClient.apiVersion'
      - '@azure/communication-chat.ChatApiClient.constructor'
      - '@azure/communication-chat.ChatApiClient.createChatThread'
      - '@azure/communication-chat.ChatApiClient.deleteChatMessage'
      - '@azure/communication-chat.ChatApiClient.deleteChatThread'
      - '@azure/communication-chat.ChatApiClient.endpoint'
      - '@azure/communication-chat.ChatApiClient.getChatMessage'
      - '@azure/communication-chat.ChatApiClient.getChatThread'
      - '@azure/communication-chat.ChatApiClient.listChatMessages'
      - '@azure/communication-chat.ChatApiClient.listChatMessagesNext'
      - '@azure/communication-chat.ChatApiClient.listChatReadReceipts'
      - '@azure/communication-chat.ChatApiClient.listChatReadReceiptsNext'
      - '@azure/communication-chat.ChatApiClient.listChatThreadMembers'
      - '@azure/communication-chat.ChatApiClient.listChatThreadMembersNext'
      - '@azure/communication-chat.ChatApiClient.listChatThreads'
      - '@azure/communication-chat.ChatApiClient.listChatThreadsNext'
      - '@azure/communication-chat.ChatApiClient.removeChatThreadMember'
      - '@azure/communication-chat.ChatApiClient.sendChatMessage'
      - '@azure/communication-chat.ChatApiClient.sendChatReadReceipt'
      - '@azure/communication-chat.ChatApiClient.sendOperationRequest'
      - '@azure/communication-chat.ChatApiClient.sendRequest'
      - '@azure/communication-chat.ChatApiClient.sendTypingNotification'
      - '@azure/communication-chat.ChatApiClient.updateChatMessage'
      - '@azure/communication-chat.ChatApiClient.updateChatThread'
    langs:
      - typeScript
    type: class
    summary: ''
    extends:
      name: '@azure/communication-chat.ChatApiClientContext'
    package: '@azure/communication-chat'
  - uid: '@azure/communication-chat.ChatApiClient.addChatThreadMembers'
    name: >-
      addChatThreadMembers(string, AddChatThreadMembersRequest,
      OperationOptions)
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      Adds thread members to a thread. If members already exist, no change
      occurs.
    syntax:
      content: >-
        function addChatThreadMembers(chatThreadId: string, body:
        AddChatThreadMembersRequest, options?: OperationOptions)
      parameters:
        - id: chatThreadId
          type:
            - string
          description: Id of the thread to add members to.
        - id: body
          type:
            - '@azure/communication-chat.AddChatThreadMembersRequest'
          description: Thread members to be added to the thread.
        - id: options
          type:
            - OperationOptions
          description: |
            The options parameters.
          optional: true
      return:
        type:
          - Promise<RestResponse>
        description: ''
    package: '@azure/communication-chat'
  - uid: '@azure/communication-chat.ChatApiClient.apiVersion'
    name: apiVersion
    fullName: apiVersion
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'apiVersion: string'
      return:
        type:
          - string
        description: ''
    package: '@azure/communication-chat'
  - uid: '@azure/communication-chat.ChatApiClient.constructor'
    name: 'ChatApiClient(string, ChatApiClientOptionalParams)'
    children: []
    type: constructor
    langs:
      - typeScript
    summary: Initializes a new instance of the ChatApiClient class.
    syntax:
      content: >-
        new ChatApiClient(endpoint: string, options?:
        ChatApiClientOptionalParams)
      parameters:
        - id: endpoint
          type:
            - string
          description: The endpoint of the Azure Communication resource.
        - id: options
          type:
            - '@azure/communication-chat.ChatApiClientOptionalParams'
          description: |
            The parameter options
          optional: true
    package: '@azure/communication-chat'
  - uid: '@azure/communication-chat.ChatApiClient.createChatThread'
    name: 'createChatThread(CreateChatThreadRequest, OperationOptions)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Creates a chat thread.
    syntax:
      content: >-
        function createChatThread(body: CreateChatThreadRequest, options?:
        OperationOptions)
      parameters:
        - id: body
          type:
            - '@azure/communication-chat.CreateChatThreadRequest'
          description: Request payload for creating a chat thread.
        - id: options
          type:
            - OperationOptions
          description: |
            The options parameters.
          optional: true
      return:
        type:
          - >-
            Promise<@azure/communication-chat.ChatApiClientCreateChatThreadResponse>
        description: ''
    package: '@azure/communication-chat'
  - uid: '@azure/communication-chat.ChatApiClient.deleteChatMessage'
    name: 'deleteChatMessage(string, string, OperationOptions)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Deletes a message.
    syntax:
      content: >-
        function deleteChatMessage(chatThreadId: string, chatMessageId: string,
        options?: OperationOptions)
      parameters:
        - id: chatThreadId
          type:
            - string
          description: The thread id to which the message was sent.
        - id: chatMessageId
          type:
            - string
          description: The message id.
        - id: options
          type:
            - OperationOptions
          description: |
            The options parameters.
          optional: true
      return:
        type:
          - Promise<RestResponse>
        description: ''
    package: '@azure/communication-chat'
  - uid: '@azure/communication-chat.ChatApiClient.deleteChatThread'
    name: 'deleteChatThread(string, OperationOptions)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Deletes a thread.
    syntax:
      content: >-
        function deleteChatThread(chatThreadId: string, options?:
        OperationOptions)
      parameters:
        - id: chatThreadId
          type:
            - string
          description: Thread id to delete.
        - id: options
          type:
            - OperationOptions
          description: |
            The options parameters.
          optional: true
      return:
        type:
          - Promise<RestResponse>
        description: ''
    package: '@azure/communication-chat'
  - uid: '@azure/communication-chat.ChatApiClient.endpoint'
    name: endpoint
    fullName: endpoint
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'endpoint: string'
      return:
        type:
          - string
        description: ''
    package: '@azure/communication-chat'
  - uid: '@azure/communication-chat.ChatApiClient.getChatMessage'
    name: 'getChatMessage(string, string, OperationOptions)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Gets a message by id.
    syntax:
      content: >-
        function getChatMessage(chatThreadId: string, chatMessageId: string,
        options?: OperationOptions)
      parameters:
        - id: chatThreadId
          type:
            - string
          description: The thread id to which the message was sent.
        - id: chatMessageId
          type:
            - string
          description: The message id.
        - id: options
          type:
            - OperationOptions
          description: |
            The options parameters.
          optional: true
      return:
        type:
          - >-
            Promise<@azure/communication-chat.ChatApiClientGetChatMessageResponse>
        description: ''
    package: '@azure/communication-chat'
  - uid: '@azure/communication-chat.ChatApiClient.getChatThread'
    name: 'getChatThread(string, OperationOptions)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Gets a chat thread.
    syntax:
      content: 'function getChatThread(chatThreadId: string, options?: OperationOptions)'
      parameters:
        - id: chatThreadId
          type:
            - string
          description: Thread id to get.
        - id: options
          type:
            - OperationOptions
          description: |
            The options parameters.
          optional: true
      return:
        type:
          - >-
            Promise<@azure/communication-chat.ChatApiClientGetChatThreadResponse>
        description: ''
    package: '@azure/communication-chat'
  - uid: '@azure/communication-chat.ChatApiClient.listChatMessages'
    name: 'listChatMessages(string, ChatApiClientListChatMessagesOptionalParams)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Gets a list of messages from a thread.
    syntax:
      content: >-
        function listChatMessages(chatThreadId: string, options?:
        ChatApiClientListChatMessagesOptionalParams)
      parameters:
        - id: chatThreadId
          type:
            - string
          description: The thread id of the message.
        - id: options
          type:
            - >-
              @azure/communication-chat.ChatApiClientListChatMessagesOptionalParams
          description: |
            The options parameters.
          optional: true
      return:
        type:
          - >-
            Promise<@azure/communication-chat.ChatApiClientListChatMessagesResponse>
        description: ''
    package: '@azure/communication-chat'
  - uid: '@azure/communication-chat.ChatApiClient.listChatMessagesNext'
    name: >-
      listChatMessagesNext(string, string,
      ChatApiClientListChatMessagesNextOptionalParams)
    children: []
    type: method
    langs:
      - typeScript
    summary: ListChatMessagesNext
    syntax:
      content: >-
        function listChatMessagesNext(chatThreadId: string, nextLink: string,
        options?: ChatApiClientListChatMessagesNextOptionalParams)
      parameters:
        - id: chatThreadId
          type:
            - string
          description: The thread id of the message.
        - id: nextLink
          type:
            - string
          description: >-
            The nextLink from the previous successful call to the
            ListChatMessages method.
        - id: options
          type:
            - >-
              @azure/communication-chat.ChatApiClientListChatMessagesNextOptionalParams
          description: |
            The options parameters.
          optional: true
      return:
        type:
          - >-
            Promise<@azure/communication-chat.ChatApiClientListChatMessagesNextResponse>
        description: ''
    package: '@azure/communication-chat'
  - uid: '@azure/communication-chat.ChatApiClient.listChatReadReceipts'
    name: 'listChatReadReceipts(string, OperationOptions)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Gets read receipts for a thread.
    syntax:
      content: >-
        function listChatReadReceipts(chatThreadId: string, options?:
        OperationOptions)
      parameters:
        - id: chatThreadId
          type:
            - string
          description: Thread id to get the read receipts for.
        - id: options
          type:
            - OperationOptions
          description: |
            The options parameters.
          optional: true
      return:
        type:
          - >-
            Promise<@azure/communication-chat.ChatApiClientListChatReadReceiptsResponse>
        description: ''
    package: '@azure/communication-chat'
  - uid: '@azure/communication-chat.ChatApiClient.listChatReadReceiptsNext'
    name: 'listChatReadReceiptsNext(string, string, OperationOptions)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ListChatReadReceiptsNext
    syntax:
      content: >-
        function listChatReadReceiptsNext(chatThreadId: string, nextLink:
        string, options?: OperationOptions)
      parameters:
        - id: chatThreadId
          type:
            - string
          description: Thread id to get the read receipts for.
        - id: nextLink
          type:
            - string
          description: >-
            The nextLink from the previous successful call to the
            ListChatReadReceipts method.
        - id: options
          type:
            - OperationOptions
          description: |
            The options parameters.
          optional: true
      return:
        type:
          - >-
            Promise<@azure/communication-chat.ChatApiClientListChatReadReceiptsNextResponse>
        description: ''
    package: '@azure/communication-chat'
  - uid: '@azure/communication-chat.ChatApiClient.listChatThreadMembers'
    name: 'listChatThreadMembers(string, OperationOptions)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Gets the members of a thread.
    syntax:
      content: >-
        function listChatThreadMembers(chatThreadId: string, options?:
        OperationOptions)
      parameters:
        - id: chatThreadId
          type:
            - string
          description: Thread id to get members for.
        - id: options
          type:
            - OperationOptions
          description: |
            The options parameters.
          optional: true
      return:
        type:
          - >-
            Promise<@azure/communication-chat.ChatApiClientListChatThreadMembersResponse>
        description: ''
    package: '@azure/communication-chat'
  - uid: '@azure/communication-chat.ChatApiClient.listChatThreadMembersNext'
    name: 'listChatThreadMembersNext(string, string, OperationOptions)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ListChatThreadMembersNext
    syntax:
      content: >-
        function listChatThreadMembersNext(chatThreadId: string, nextLink:
        string, options?: OperationOptions)
      parameters:
        - id: chatThreadId
          type:
            - string
          description: Thread id to get members for.
        - id: nextLink
          type:
            - string
          description: >-
            The nextLink from the previous successful call to the
            ListChatThreadMembers method.
        - id: options
          type:
            - OperationOptions
          description: |
            The options parameters.
          optional: true
      return:
        type:
          - >-
            Promise<@azure/communication-chat.ChatApiClientListChatThreadMembersNextResponse>
        description: ''
    package: '@azure/communication-chat'
  - uid: '@azure/communication-chat.ChatApiClient.listChatThreads'
    name: listChatThreads(ChatApiClientListChatThreadsOptionalParams)
    children: []
    type: method
    langs:
      - typeScript
    summary: Gets the list of chat threads of a user.
    syntax:
      content: >-
        function listChatThreads(options?:
        ChatApiClientListChatThreadsOptionalParams)
      parameters:
        - id: options
          type:
            - >-
              @azure/communication-chat.ChatApiClientListChatThreadsOptionalParams
          description: |
            The options parameters.
          optional: true
      return:
        type:
          - >-
            Promise<@azure/communication-chat.ChatApiClientListChatThreadsResponse>
        description: ''
    package: '@azure/communication-chat'
  - uid: '@azure/communication-chat.ChatApiClient.listChatThreadsNext'
    name: >-
      listChatThreadsNext(string,
      ChatApiClientListChatThreadsNextOptionalParams)
    children: []
    type: method
    langs:
      - typeScript
    summary: ListChatThreadsNext
    syntax:
      content: >-
        function listChatThreadsNext(nextLink: string, options?:
        ChatApiClientListChatThreadsNextOptionalParams)
      parameters:
        - id: nextLink
          type:
            - string
          description: >-
            The nextLink from the previous successful call to the
            ListChatThreads method.
        - id: options
          type:
            - >-
              @azure/communication-chat.ChatApiClientListChatThreadsNextOptionalParams
          description: |
            The options parameters.
          optional: true
      return:
        type:
          - >-
            Promise<@azure/communication-chat.ChatApiClientListChatThreadsNextResponse>
        description: ''
    package: '@azure/communication-chat'
  - uid: '@azure/communication-chat.ChatApiClient.removeChatThreadMember'
    name: 'removeChatThreadMember(string, string, OperationOptions)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Remove a member from a thread.
    syntax:
      content: >-
        function removeChatThreadMember(chatThreadId: string, chatMemberId:
        string, options?: OperationOptions)
      parameters:
        - id: chatThreadId
          type:
            - string
          description: Thread id to remove the member from.
        - id: chatMemberId
          type:
            - string
          description: Id of the thread member to remove from the thread.
        - id: options
          type:
            - OperationOptions
          description: |
            The options parameters.
          optional: true
      return:
        type:
          - Promise<RestResponse>
        description: ''
    package: '@azure/communication-chat'
  - uid: '@azure/communication-chat.ChatApiClient.sendChatMessage'
    name: 'sendChatMessage(string, SendChatMessageRequest, OperationOptions)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Sends a message to a thread.
    syntax:
      content: >-
        function sendChatMessage(chatThreadId: string, body:
        SendChatMessageRequest, options?: OperationOptions)
      parameters:
        - id: chatThreadId
          type:
            - string
          description: The thread id to send the message to.
        - id: body
          type:
            - '@azure/communication-chat.SendChatMessageRequest'
          description: Details of the message to send.
        - id: options
          type:
            - OperationOptions
          description: |
            The options parameters.
          optional: true
      return:
        type:
          - >-
            Promise<@azure/communication-chat.ChatApiClientSendChatMessageResponse>
        description: ''
    package: '@azure/communication-chat'
  - uid: '@azure/communication-chat.ChatApiClient.sendChatReadReceipt'
    name: 'sendChatReadReceipt(string, SendReadReceiptRequest, OperationOptions)'
    children: []
    type: method
    langs:
      - typeScript
    summary: 'Sends a read receipt event to a thread, on behalf of a user.'
    syntax:
      content: >-
        function sendChatReadReceipt(chatThreadId: string, body:
        SendReadReceiptRequest, options?: OperationOptions)
      parameters:
        - id: chatThreadId
          type:
            - string
          description: Thread id to send the read receipt event to.
        - id: body
          type:
            - '@azure/communication-chat.SendReadReceiptRequest'
          description: Read receipt details.
        - id: options
          type:
            - OperationOptions
          description: |
            The options parameters.
          optional: true
      return:
        type:
          - Promise<RestResponse>
        description: ''
    package: '@azure/communication-chat'
  - uid: '@azure/communication-chat.ChatApiClient.sendOperationRequest'
    name: >-
      sendOperationRequest(OperationArguments, OperationSpec,
      ServiceCallback<any>)
    children: []
    type: method
    langs:
      - typeScript
    summary: Send an HTTP request that is populated using the provided OperationSpec.
    syntax:
      content: >-
        function sendOperationRequest(operationArguments: OperationArguments,
        operationSpec: OperationSpec, callback?: ServiceCallback<any>)
      parameters:
        - id: operationArguments
          type:
            - OperationArguments
          description: >-
            The arguments that the HTTP request's templated values will be
            populated from.
        - id: operationSpec
          type:
            - OperationSpec
          description: The OperationSpec to use to populate the httpRequest.
        - id: callback
          type:
            - ServiceCallback<any>
          description: |
            The callback to call when the response is received.
          optional: true
      return:
        type:
          - Promise<RestResponse>
        description: ''
    package: '@azure/communication-chat'
  - uid: '@azure/communication-chat.ChatApiClient.sendRequest'
    name: sendRequest(RequestPrepareOptions | WebResourceLike)
    children: []
    type: method
    langs:
      - typeScript
    summary: Send the provided httpRequest.
    syntax:
      content: 'function sendRequest(options: RequestPrepareOptions | WebResourceLike)'
      parameters:
        - id: options
          type:
            - RequestPrepareOptions | WebResourceLike
          description: ''
      return:
        type:
          - Promise<HttpOperationResponse>
        description: ''
    package: '@azure/communication-chat'
  - uid: '@azure/communication-chat.ChatApiClient.sendTypingNotification'
    name: 'sendTypingNotification(string, OperationOptions)'
    children: []
    type: method
    langs:
      - typeScript
    summary: 'Posts a typing event to a thread, on behalf of a user.'
    syntax:
      content: >-
        function sendTypingNotification(chatThreadId: string, options?:
        OperationOptions)
      parameters:
        - id: chatThreadId
          type:
            - string
          description: Id of the thread.
        - id: options
          type:
            - OperationOptions
          description: |
            The options parameters.
          optional: true
      return:
        type:
          - Promise<RestResponse>
        description: ''
    package: '@azure/communication-chat'
  - uid: '@azure/communication-chat.ChatApiClient.updateChatMessage'
    name: >-
      updateChatMessage(string, string, UpdateChatMessageRequest,
      OperationOptions)
    children: []
    type: method
    langs:
      - typeScript
    summary: Updates a message.
    syntax:
      content: >-
        function updateChatMessage(chatThreadId: string, chatMessageId: string,
        body: UpdateChatMessageRequest, options?: OperationOptions)
      parameters:
        - id: chatThreadId
          type:
            - string
          description: The thread id to which the message was sent.
        - id: chatMessageId
          type:
            - string
          description: The message id.
        - id: body
          type:
            - '@azure/communication-chat.UpdateChatMessageRequest'
          description: Details of the request to update the message.
        - id: options
          type:
            - OperationOptions
          description: |
            The options parameters.
          optional: true
      return:
        type:
          - Promise<RestResponse>
        description: ''
    package: '@azure/communication-chat'
  - uid: '@azure/communication-chat.ChatApiClient.updateChatThread'
    name: 'updateChatThread(string, UpdateChatThreadRequest, OperationOptions)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Updates a thread's properties.
    syntax:
      content: >-
        function updateChatThread(chatThreadId: string, body:
        UpdateChatThreadRequest, options?: OperationOptions)
      parameters:
        - id: chatThreadId
          type:
            - string
          description: The id of the thread to update.
        - id: body
          type:
            - '@azure/communication-chat.UpdateChatThreadRequest'
          description: Request payload for updating a chat thread.
        - id: options
          type:
            - OperationOptions
          description: |
            The options parameters.
          optional: true
      return:
        type:
          - Promise<RestResponse>
        description: ''
    package: '@azure/communication-chat'
references:
  - uid: '@azure/communication-chat.ChatApiClientContext'
    name: ChatApiClientContext
    spec.typeScript:
      - name: ChatApiClientContext
        fullName: ChatApiClientContext
        uid: '@azure/communication-chat.ChatApiClientContext'
  - uid: '@azure/communication-chat.ChatApiClientOptionalParams'
    name: ChatApiClientOptionalParams
    spec.typeScript:
      - name: ChatApiClientOptionalParams
        fullName: ChatApiClientOptionalParams
        uid: '@azure/communication-chat.ChatApiClientOptionalParams'
  - uid: '@azure/communication-chat.AddChatThreadMembersRequest'
    name: AddChatThreadMembersRequest
    spec.typeScript:
      - name: AddChatThreadMembersRequest
        fullName: AddChatThreadMembersRequest
        uid: '@azure/communication-chat.AddChatThreadMembersRequest'
  - uid: '@azure/communication-chat.CreateChatThreadRequest'
    name: CreateChatThreadRequest
    spec.typeScript:
      - name: CreateChatThreadRequest
        fullName: CreateChatThreadRequest
        uid: '@azure/communication-chat.CreateChatThreadRequest'
  - uid: Promise<@azure/communication-chat.ChatApiClientCreateChatThreadResponse>
    name: ChatApiClientCreateChatThreadResponse>
    spec.typeScript:
      - name: Promise<
        fullName: Promise<
      - name: ChatApiClientCreateChatThreadResponse
        fullName: ChatApiClientCreateChatThreadResponse
        uid: '@azure/communication-chat.ChatApiClientCreateChatThreadResponse'
      - name: '>'
        fullName: '>'
  - uid: Promise<@azure/communication-chat.ChatApiClientGetChatMessageResponse>
    name: ChatApiClientGetChatMessageResponse>
    spec.typeScript:
      - name: Promise<
        fullName: Promise<
      - name: ChatApiClientGetChatMessageResponse
        fullName: ChatApiClientGetChatMessageResponse
        uid: '@azure/communication-chat.ChatApiClientGetChatMessageResponse'
      - name: '>'
        fullName: '>'
  - uid: Promise<@azure/communication-chat.ChatApiClientGetChatThreadResponse>
    name: ChatApiClientGetChatThreadResponse>
    spec.typeScript:
      - name: Promise<
        fullName: Promise<
      - name: ChatApiClientGetChatThreadResponse
        fullName: ChatApiClientGetChatThreadResponse
        uid: '@azure/communication-chat.ChatApiClientGetChatThreadResponse'
      - name: '>'
        fullName: '>'
  - uid: '@azure/communication-chat.ChatApiClientListChatMessagesOptionalParams'
    name: ChatApiClientListChatMessagesOptionalParams
    spec.typeScript:
      - name: ChatApiClientListChatMessagesOptionalParams
        fullName: ChatApiClientListChatMessagesOptionalParams
        uid: '@azure/communication-chat.ChatApiClientListChatMessagesOptionalParams'
  - uid: Promise<@azure/communication-chat.ChatApiClientListChatMessagesResponse>
    name: ChatApiClientListChatMessagesResponse>
    spec.typeScript:
      - name: Promise<
        fullName: Promise<
      - name: ChatApiClientListChatMessagesResponse
        fullName: ChatApiClientListChatMessagesResponse
        uid: '@azure/communication-chat.ChatApiClientListChatMessagesResponse'
      - name: '>'
        fullName: '>'
  - uid: '@azure/communication-chat.ChatApiClientListChatMessagesNextOptionalParams'
    name: ChatApiClientListChatMessagesNextOptionalParams
    spec.typeScript:
      - name: ChatApiClientListChatMessagesNextOptionalParams
        fullName: ChatApiClientListChatMessagesNextOptionalParams
        uid: >-
          @azure/communication-chat.ChatApiClientListChatMessagesNextOptionalParams
  - uid: >-
      Promise<@azure/communication-chat.ChatApiClientListChatMessagesNextResponse>
    name: ChatApiClientListChatMessagesNextResponse>
    spec.typeScript:
      - name: Promise<
        fullName: Promise<
      - name: ChatApiClientListChatMessagesNextResponse
        fullName: ChatApiClientListChatMessagesNextResponse
        uid: '@azure/communication-chat.ChatApiClientListChatMessagesNextResponse'
      - name: '>'
        fullName: '>'
  - uid: >-
      Promise<@azure/communication-chat.ChatApiClientListChatReadReceiptsResponse>
    name: ChatApiClientListChatReadReceiptsResponse>
    spec.typeScript:
      - name: Promise<
        fullName: Promise<
      - name: ChatApiClientListChatReadReceiptsResponse
        fullName: ChatApiClientListChatReadReceiptsResponse
        uid: '@azure/communication-chat.ChatApiClientListChatReadReceiptsResponse'
      - name: '>'
        fullName: '>'
  - uid: >-
      Promise<@azure/communication-chat.ChatApiClientListChatReadReceiptsNextResponse>
    name: ChatApiClientListChatReadReceiptsNextResponse>
    spec.typeScript:
      - name: Promise<
        fullName: Promise<
      - name: ChatApiClientListChatReadReceiptsNextResponse
        fullName: ChatApiClientListChatReadReceiptsNextResponse
        uid: >-
          @azure/communication-chat.ChatApiClientListChatReadReceiptsNextResponse
      - name: '>'
        fullName: '>'
  - uid: >-
      Promise<@azure/communication-chat.ChatApiClientListChatThreadMembersResponse>
    name: ChatApiClientListChatThreadMembersResponse>
    spec.typeScript:
      - name: Promise<
        fullName: Promise<
      - name: ChatApiClientListChatThreadMembersResponse
        fullName: ChatApiClientListChatThreadMembersResponse
        uid: '@azure/communication-chat.ChatApiClientListChatThreadMembersResponse'
      - name: '>'
        fullName: '>'
  - uid: >-
      Promise<@azure/communication-chat.ChatApiClientListChatThreadMembersNextResponse>
    name: ChatApiClientListChatThreadMembersNextResponse>
    spec.typeScript:
      - name: Promise<
        fullName: Promise<
      - name: ChatApiClientListChatThreadMembersNextResponse
        fullName: ChatApiClientListChatThreadMembersNextResponse
        uid: >-
          @azure/communication-chat.ChatApiClientListChatThreadMembersNextResponse
      - name: '>'
        fullName: '>'
  - uid: '@azure/communication-chat.ChatApiClientListChatThreadsOptionalParams'
    name: ChatApiClientListChatThreadsOptionalParams
    spec.typeScript:
      - name: ChatApiClientListChatThreadsOptionalParams
        fullName: ChatApiClientListChatThreadsOptionalParams
        uid: '@azure/communication-chat.ChatApiClientListChatThreadsOptionalParams'
  - uid: Promise<@azure/communication-chat.ChatApiClientListChatThreadsResponse>
    name: ChatApiClientListChatThreadsResponse>
    spec.typeScript:
      - name: Promise<
        fullName: Promise<
      - name: ChatApiClientListChatThreadsResponse
        fullName: ChatApiClientListChatThreadsResponse
        uid: '@azure/communication-chat.ChatApiClientListChatThreadsResponse'
      - name: '>'
        fullName: '>'
  - uid: '@azure/communication-chat.ChatApiClientListChatThreadsNextOptionalParams'
    name: ChatApiClientListChatThreadsNextOptionalParams
    spec.typeScript:
      - name: ChatApiClientListChatThreadsNextOptionalParams
        fullName: ChatApiClientListChatThreadsNextOptionalParams
        uid: >-
          @azure/communication-chat.ChatApiClientListChatThreadsNextOptionalParams
  - uid: >-
      Promise<@azure/communication-chat.ChatApiClientListChatThreadsNextResponse>
    name: ChatApiClientListChatThreadsNextResponse>
    spec.typeScript:
      - name: Promise<
        fullName: Promise<
      - name: ChatApiClientListChatThreadsNextResponse
        fullName: ChatApiClientListChatThreadsNextResponse
        uid: '@azure/communication-chat.ChatApiClientListChatThreadsNextResponse'
      - name: '>'
        fullName: '>'
  - uid: '@azure/communication-chat.SendChatMessageRequest'
    name: SendChatMessageRequest
    spec.typeScript:
      - name: SendChatMessageRequest
        fullName: SendChatMessageRequest
        uid: '@azure/communication-chat.SendChatMessageRequest'
  - uid: Promise<@azure/communication-chat.ChatApiClientSendChatMessageResponse>
    name: ChatApiClientSendChatMessageResponse>
    spec.typeScript:
      - name: Promise<
        fullName: Promise<
      - name: ChatApiClientSendChatMessageResponse
        fullName: ChatApiClientSendChatMessageResponse
        uid: '@azure/communication-chat.ChatApiClientSendChatMessageResponse'
      - name: '>'
        fullName: '>'
  - uid: '@azure/communication-chat.SendReadReceiptRequest'
    name: SendReadReceiptRequest
    spec.typeScript:
      - name: SendReadReceiptRequest
        fullName: SendReadReceiptRequest
        uid: '@azure/communication-chat.SendReadReceiptRequest'
  - uid: '@azure/communication-chat.UpdateChatMessageRequest'
    name: UpdateChatMessageRequest
    spec.typeScript:
      - name: UpdateChatMessageRequest
        fullName: UpdateChatMessageRequest
        uid: '@azure/communication-chat.UpdateChatMessageRequest'
  - uid: '@azure/communication-chat.UpdateChatThreadRequest'
    name: UpdateChatThreadRequest
    spec.typeScript:
      - name: UpdateChatThreadRequest
        fullName: UpdateChatThreadRequest
        uid: '@azure/communication-chat.UpdateChatThreadRequest'
