### YamlMime:UniversalReference
items:
  - uid: '@azure/service-bus.CreateReceiverOptions'
    name: CreateReceiverOptions
    fullName: CreateReceiverOptions<ReceiveModeT>
    children:
      - '@azure/service-bus.CreateReceiverOptions.receiveMode'
      - '@azure/service-bus.CreateReceiverOptions.subQueue'
    langs:
      - typeScript
    type: interface
    summary: ''
    package: '@azure/service-bus'
  - uid: '@azure/service-bus.CreateReceiverOptions.receiveMode'
    name: receiveMode
    fullName: receiveMode
    children: []
    langs:
      - typeScript
    type: property
    summary: >+
      Represents the receive mode for the receiver.

      In receiveAndDelete mode, messages are deleted from Service Bus as they
      are received.


      In peekLock mode, the receiver has a lock on the message for the duration
      specified on the

      queue/subscription.


      Messages that are not settled within the lock duration will be redelivered
      as many times as

      the max delivery count set on the queue/subscription, after which they get
      sent to a separate

      dead letter queue.


      You can settle a message by calling complete(), abandon(), defer() or
      deadletter() methods on

      the message.


      More information about how peekLock and message settlement works here:

      https://docs.microsoft.com/azure/service-bus-messaging/message-transfers-locks-settlement#peeklock

    optional: true
    syntax:
      content: 'receiveMode?: ReceiveModeT'
      return:
        type:
          - ReceiveModeT
        description: ''
    package: '@azure/service-bus'
  - uid: '@azure/service-bus.CreateReceiverOptions.subQueue'
    name: subQueue
    fullName: subQueue
    children: []
    langs:
      - typeScript
    type: property
    summary: >-
      Represents the sub queue that is applicable for any queue or subscription.

      Valid values are "deadLetter" and "transferDeadLetter". To learn more
      about dead letter queues,

      see
      https://docs.microsoft.com/azure/service-bus-messaging/service-bus-dead-letter-queues
    optional: true
    syntax:
      content: 'subQueue?: SubQueue'
      return:
        type:
          - '@azure/service-bus.SubQueue'
        description: ''
    package: '@azure/service-bus'
references:
  - uid: '@azure/service-bus.SubQueue'
    name: SubQueue
    spec.typeScript:
      - name: SubQueue
        fullName: SubQueue
        uid: '@azure/service-bus.SubQueue'
