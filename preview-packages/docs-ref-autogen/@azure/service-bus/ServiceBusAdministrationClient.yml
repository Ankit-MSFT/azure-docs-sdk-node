### YamlMime:UniversalReference
items:
  - uid: '@azure/service-bus.ServiceBusAdministrationClient'
    name: ServiceBusAdministrationClient
    fullName: ServiceBusAdministrationClient
    children:
      - '@azure/service-bus.ServiceBusAdministrationClient.createQueue'
      - '@azure/service-bus.ServiceBusAdministrationClient.createRule'
      - '@azure/service-bus.ServiceBusAdministrationClient.createRule_1'
      - '@azure/service-bus.ServiceBusAdministrationClient.createSubscription'
      - '@azure/service-bus.ServiceBusAdministrationClient.createTopic'
      - '@azure/service-bus.ServiceBusAdministrationClient.deleteQueue'
      - '@azure/service-bus.ServiceBusAdministrationClient.deleteRule'
      - '@azure/service-bus.ServiceBusAdministrationClient.deleteSubscription'
      - '@azure/service-bus.ServiceBusAdministrationClient.deleteTopic'
      - '@azure/service-bus.ServiceBusAdministrationClient.getNamespaceProperties'
      - '@azure/service-bus.ServiceBusAdministrationClient.getQueue'
      - >-
        @azure/service-bus.ServiceBusAdministrationClient.getQueueRuntimeProperties
      - '@azure/service-bus.ServiceBusAdministrationClient.getRule'
      - '@azure/service-bus.ServiceBusAdministrationClient.getSubscription'
      - >-
        @azure/service-bus.ServiceBusAdministrationClient.getSubscriptionRuntimeProperties
      - '@azure/service-bus.ServiceBusAdministrationClient.getTopic'
      - >-
        @azure/service-bus.ServiceBusAdministrationClient.getTopicRuntimeProperties
      - '@azure/service-bus.ServiceBusAdministrationClient.listQueues'
      - >-
        @azure/service-bus.ServiceBusAdministrationClient.listQueuesRuntimeProperties
      - '@azure/service-bus.ServiceBusAdministrationClient.listRules'
      - '@azure/service-bus.ServiceBusAdministrationClient.listSubscriptions'
      - >-
        @azure/service-bus.ServiceBusAdministrationClient.listSubscriptionsRuntimeProperties
      - '@azure/service-bus.ServiceBusAdministrationClient.listTopics'
      - >-
        @azure/service-bus.ServiceBusAdministrationClient.listTopicsRuntimeProperties
      - '@azure/service-bus.ServiceBusAdministrationClient.queueExists'
      - '@azure/service-bus.ServiceBusAdministrationClient.ruleExists'
      - '@azure/service-bus.ServiceBusAdministrationClient.sendOperationRequest'
      - '@azure/service-bus.ServiceBusAdministrationClient.sendRequest'
      - '@azure/service-bus.ServiceBusAdministrationClient.constructor'
      - '@azure/service-bus.ServiceBusAdministrationClient.constructor_1'
      - '@azure/service-bus.ServiceBusAdministrationClient.subscriptionExists'
      - '@azure/service-bus.ServiceBusAdministrationClient.topicExists'
      - '@azure/service-bus.ServiceBusAdministrationClient.updateQueue'
      - '@azure/service-bus.ServiceBusAdministrationClient.updateRule'
      - '@azure/service-bus.ServiceBusAdministrationClient.updateSubscription'
      - '@azure/service-bus.ServiceBusAdministrationClient.updateTopic'
    langs:
      - typeScript
    type: class
    summary: >-
      All operations return promises that resolve to an object that has the
      relevant output.

      These objects also have a property called `_response` that you can use if
      you want to

      access the direct response from the service.
    extends:
      name: ServiceClient
    package: '@azure/service-bus'
  - uid: '@azure/service-bus.ServiceBusAdministrationClient.createQueue'
    name: 'createQueue(string, CreateQueueOptions)'
    children: []
    type: method
    langs:
      - typeScript
    summary: 'Creates a queue with given name, configured using the given options'
    syntax:
      content: 'function createQueue(queueName: string, options?: CreateQueueOptions)'
      parameters:
        - id: queueName
          type:
            - string
          description: ''
        - id: options
          type:
            - '@azure/service-bus.CreateQueueOptions'
          description: >-
            Options to configure the Queue being created(For example, you can
            configure a queue to support partitions or sessions)
             and the operation options that can be used to abort, trace and control other configurations on the HTTP request.

            Following are errors that can be expected from this operation
          optional: true
      return:
        type:
          - Promise<@azure/service-bus.QueueResponse>
        description: ''
    package: '@azure/service-bus'
  - uid: '@azure/service-bus.ServiceBusAdministrationClient.createRule'
    name: >-
      createRule(string, string, string, SqlRuleFilter | CorrelationRuleFilter,
      OperationOptions)
    children: []
    type: method
    langs:
      - typeScript
    summary: 'Creates a rule with given name, configured using the given options.'
    syntax:
      content: >-
        function createRule(topicName: string, subscriptionName: string,
        ruleName: string, ruleFilter: SqlRuleFilter | CorrelationRuleFilter,
        operationOptions?: OperationOptions)
      parameters:
        - id: topicName
          type:
            - string
          description: ''
        - id: subscriptionName
          type:
            - string
          description: ''
        - id: ruleName
          type:
            - string
          description: ''
        - id: ruleFilter
          type:
            - >-
              @azure/service-bus.SqlRuleFilter |
              @azure/service-bus.CorrelationRuleFilter
          description: Defines the filter expression that the rule evaluates.
        - id: operationOptions
          type:
            - OperationOptions
          description: >-
            The options that can be used to abort, trace and control other
            configurations on the HTTP request.


            Following are errors that can be expected from this operation
          optional: true
      return:
        type:
          - Promise<@azure/service-bus.RuleResponse>
        description: ''
    package: '@azure/service-bus'
  - uid: '@azure/service-bus.ServiceBusAdministrationClient.createRule_1'
    name: >-
      createRule(string, string, string, SqlRuleFilter | CorrelationRuleFilter,
      SqlRuleAction, OperationOptions)
    children: []
    type: method
    langs:
      - typeScript
    summary: 'Creates a rule with given name, configured using the given options.'
    syntax:
      content: >-
        function createRule(topicName: string, subscriptionName: string,
        ruleName: string, ruleFilter: SqlRuleFilter | CorrelationRuleFilter,
        ruleAction: SqlRuleAction, operationOptions?: OperationOptions)
      parameters:
        - id: topicName
          type:
            - string
          description: ''
        - id: subscriptionName
          type:
            - string
          description: ''
        - id: ruleName
          type:
            - string
          description: ''
        - id: ruleFilter
          type:
            - >-
              @azure/service-bus.SqlRuleFilter |
              @azure/service-bus.CorrelationRuleFilter
          description: Defines the filter expression that the rule evaluates.
        - id: ruleAction
          type:
            - '@azure/service-bus.SqlRuleAction'
          description: >-
            The SQL like expression that can be executed on the message should
            the associated filter apply.
        - id: operationOptions
          type:
            - OperationOptions
          description: >-
            The options that can be used to abort, trace and control other
            configurations on the HTTP request.


            Following are errors that can be expected from this operation
          optional: true
      return:
        type:
          - Promise<@azure/service-bus.RuleResponse>
        description: ''
    package: '@azure/service-bus'
  - uid: '@azure/service-bus.ServiceBusAdministrationClient.createSubscription'
    name: 'createSubscription(string, string, CreateSubscriptionOptions)'
    children: []
    type: method
    langs:
      - typeScript
    summary: 'Creates a subscription with given name, configured using the given options'
    syntax:
      content: >-
        function createSubscription(topicName: string, subscriptionName: string,
        options?: CreateSubscriptionOptions)
      parameters:
        - id: topicName
          type:
            - string
          description: ''
        - id: subscriptionName
          type:
            - string
          description: ''
        - id: options
          type:
            - '@azure/service-bus.CreateSubscriptionOptions'
          description: >-
            Options to configure the Subscription being created(For example, you
            can configure a Subscription to support partitions or sessions)

            and the operation options that can be used to abort, trace and
            control other configurations on the HTTP request.


            Following are errors that can be expected from this operation
          optional: true
      return:
        type:
          - Promise<@azure/service-bus.SubscriptionResponse>
        description: ''
    package: '@azure/service-bus'
  - uid: '@azure/service-bus.ServiceBusAdministrationClient.createTopic'
    name: 'createTopic(string, CreateTopicOptions)'
    children: []
    type: method
    langs:
      - typeScript
    summary: 'Creates a topic with given name, configured using the given options'
    syntax:
      content: 'function createTopic(topicName: string, options?: CreateTopicOptions)'
      parameters:
        - id: topicName
          type:
            - string
          description: ''
        - id: options
          type:
            - '@azure/service-bus.CreateTopicOptions'
          description: >-
            Options to configure the Topic being created(For example, you can
            configure a topic to support partitions)

            and the operation options that can be used to abort, trace and
            control other configurations on the HTTP request.


            Following are errors that can be expected from this operation
          optional: true
      return:
        type:
          - Promise<@azure/service-bus.TopicResponse>
        description: ''
    package: '@azure/service-bus'
  - uid: '@azure/service-bus.ServiceBusAdministrationClient.deleteQueue'
    name: 'deleteQueue(string, OperationOptions)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Deletes a queue.
    syntax:
      content: >-
        function deleteQueue(queueName: string, operationOptions?:
        OperationOptions)
      parameters:
        - id: queueName
          type:
            - string
          description: ''
        - id: operationOptions
          type:
            - OperationOptions
          description: >-
            The options that can be used to abort, trace and control other
            configurations on the HTTP request.


            Following are errors that can be expected from this operation
          optional: true
      return:
        type:
          - Promise<@azure/service-bus.Response>
        description: ''
    package: '@azure/service-bus'
  - uid: '@azure/service-bus.ServiceBusAdministrationClient.deleteRule'
    name: 'deleteRule(string, string, string, OperationOptions)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Deletes a rule.
    syntax:
      content: >-
        function deleteRule(topicName: string, subscriptionName: string,
        ruleName: string, operationOptions?: OperationOptions)
      parameters:
        - id: topicName
          type:
            - string
          description: ''
        - id: subscriptionName
          type:
            - string
          description: ''
        - id: ruleName
          type:
            - string
          description: ''
        - id: operationOptions
          type:
            - OperationOptions
          description: >-
            The options that can be used to abort, trace and control other
            configurations on the HTTP request.


            Following are errors that can be expected from this operation
          optional: true
      return:
        type:
          - Promise<@azure/service-bus.Response>
        description: ''
    package: '@azure/service-bus'
  - uid: '@azure/service-bus.ServiceBusAdministrationClient.deleteSubscription'
    name: 'deleteSubscription(string, string, OperationOptions)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Deletes a subscription.
    syntax:
      content: >-
        function deleteSubscription(topicName: string, subscriptionName: string,
        operationOptions?: OperationOptions)
      parameters:
        - id: topicName
          type:
            - string
          description: ''
        - id: subscriptionName
          type:
            - string
          description: ''
        - id: operationOptions
          type:
            - OperationOptions
          description: >-
            The options that can be used to abort, trace and control other
            configurations on the HTTP request.


            Following are errors that can be expected from this operation
          optional: true
      return:
        type:
          - Promise<@azure/service-bus.Response>
        description: ''
    package: '@azure/service-bus'
  - uid: '@azure/service-bus.ServiceBusAdministrationClient.deleteTopic'
    name: 'deleteTopic(string, OperationOptions)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Deletes a topic.
    syntax:
      content: >-
        function deleteTopic(topicName: string, operationOptions?:
        OperationOptions)
      parameters:
        - id: topicName
          type:
            - string
          description: ''
        - id: operationOptions
          type:
            - OperationOptions
          description: >-
            The options that can be used to abort, trace and control other
            configurations on the HTTP request.


            Following are errors that can be expected from this operation
          optional: true
      return:
        type:
          - Promise<@azure/service-bus.Response>
        description: ''
    package: '@azure/service-bus'
  - uid: '@azure/service-bus.ServiceBusAdministrationClient.getNamespaceProperties'
    name: getNamespaceProperties(OperationOptions)
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      Returns an object representing the metadata related to a service bus
      namespace.
    syntax:
      content: 'function getNamespaceProperties(operationOptions?: OperationOptions)'
      parameters:
        - id: operationOptions
          type:
            - OperationOptions
          description: >+
            The options that can be used to abort, trace and control other
            configurations on the HTTP request.

          optional: true
      return:
        type:
          - Promise<@azure/service-bus.NamespacePropertiesResponse>
        description: ''
    package: '@azure/service-bus'
  - uid: '@azure/service-bus.ServiceBusAdministrationClient.getQueue'
    name: 'getQueue(string, OperationOptions)'
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      Returns an object representing the Queue and its properties.

      If you want to get the Queue runtime info like message count details, use
      `getQueueRuntimeProperties` API.
    syntax:
      content: >-
        function getQueue(queueName: string, operationOptions?:
        OperationOptions)
      parameters:
        - id: queueName
          type:
            - string
          description: ''
        - id: operationOptions
          type:
            - OperationOptions
          description: >-
            The options that can be used to abort, trace and control other
            configurations on the HTTP request.


            Following are errors that can be expected from this operation
          optional: true
      return:
        type:
          - Promise<@azure/service-bus.QueueResponse>
        description: ''
    package: '@azure/service-bus'
  - uid: >-
      @azure/service-bus.ServiceBusAdministrationClient.getQueueRuntimeProperties
    name: 'getQueueRuntimeProperties(string, OperationOptions)'
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      Returns an object representing the Queue runtime info like message count
      details.
    syntax:
      content: >-
        function getQueueRuntimeProperties(queueName: string, operationOptions?:
        OperationOptions)
      parameters:
        - id: queueName
          type:
            - string
          description: ''
        - id: operationOptions
          type:
            - OperationOptions
          description: >-
            The options that can be used to abort, trace and control other
            configurations on the HTTP request.


            Following are errors that can be expected from this operation
          optional: true
      return:
        type:
          - Promise<@azure/service-bus.QueueRuntimePropertiesResponse>
        description: ''
    package: '@azure/service-bus'
  - uid: '@azure/service-bus.ServiceBusAdministrationClient.getRule'
    name: 'getRule(string, string, string, OperationOptions)'
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      Returns an object representing the Rule with the given name along with all
      its properties.
    syntax:
      content: >-
        function getRule(topicName: string, subscriptionName: string, ruleName:
        string, operationOptions?: OperationOptions)
      parameters:
        - id: topicName
          type:
            - string
          description: ''
        - id: subscriptionName
          type:
            - string
          description: ''
        - id: ruleName
          type:
            - string
          description: ''
        - id: operationOptions
          type:
            - OperationOptions
          description: >-
            The options that can be used to abort, trace and control other
            configurations on the HTTP request.


            Following are errors that can be expected from this operation
          optional: true
      return:
        type:
          - Promise<@azure/service-bus.RuleResponse>
        description: ''
    package: '@azure/service-bus'
  - uid: '@azure/service-bus.ServiceBusAdministrationClient.getSubscription'
    name: 'getSubscription(string, string, OperationOptions)'
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      Returns an object representing the Subscription and its properties.

      If you want to get the Subscription runtime info like message count
      details, use `getSubscriptionRuntimeProperties` API.
    syntax:
      content: >-
        function getSubscription(topicName: string, subscriptionName: string,
        operationOptions?: OperationOptions)
      parameters:
        - id: topicName
          type:
            - string
          description: ''
        - id: subscriptionName
          type:
            - string
          description: ''
        - id: operationOptions
          type:
            - OperationOptions
          description: >-
            The options that can be used to abort, trace and control other
            configurations on the HTTP request.


            Following are errors that can be expected from this operation
          optional: true
      return:
        type:
          - Promise<@azure/service-bus.SubscriptionResponse>
        description: ''
    package: '@azure/service-bus'
  - uid: >-
      @azure/service-bus.ServiceBusAdministrationClient.getSubscriptionRuntimeProperties
    name: 'getSubscriptionRuntimeProperties(string, string, OperationOptions)'
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      Returns an object representing the Subscription runtime info like message
      count details.
    syntax:
      content: >-
        function getSubscriptionRuntimeProperties(topicName: string,
        subscriptionName: string, operationOptions?: OperationOptions)
      parameters:
        - id: topicName
          type:
            - string
          description: ''
        - id: subscriptionName
          type:
            - string
          description: ''
        - id: operationOptions
          type:
            - OperationOptions
          description: >-
            The options that can be used to abort, trace and control other
            configurations on the HTTP request.


            Following are errors that can be expected from this operation
          optional: true
      return:
        type:
          - Promise<@azure/service-bus.SubscriptionRuntimePropertiesResponse>
        description: ''
    package: '@azure/service-bus'
  - uid: '@azure/service-bus.ServiceBusAdministrationClient.getTopic'
    name: 'getTopic(string, OperationOptions)'
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      Returns an object representing the Topic and its properties.

      If you want to get the Topic runtime info like subscription count details,
      use `getTopicRuntimeProperties` API.
    syntax:
      content: >-
        function getTopic(topicName: string, operationOptions?:
        OperationOptions)
      parameters:
        - id: topicName
          type:
            - string
          description: ''
        - id: operationOptions
          type:
            - OperationOptions
          description: >-
            The options that can be used to abort, trace and control other
            configurations on the HTTP request.


            Following are errors that can be expected from this operation
          optional: true
      return:
        type:
          - Promise<@azure/service-bus.TopicResponse>
        description: ''
    package: '@azure/service-bus'
  - uid: >-
      @azure/service-bus.ServiceBusAdministrationClient.getTopicRuntimeProperties
    name: 'getTopicRuntimeProperties(string, OperationOptions)'
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      Returns an object representing the Topic runtime info like subscription
      count.
    syntax:
      content: >-
        function getTopicRuntimeProperties(topicName: string, operationOptions?:
        OperationOptions)
      parameters:
        - id: topicName
          type:
            - string
          description: ''
        - id: operationOptions
          type:
            - OperationOptions
          description: >-
            The options that can be used to abort, trace and control other
            configurations on the HTTP request.


            Following are errors that can be expected from this operation
          optional: true
      return:
        type:
          - Promise<@azure/service-bus.TopicRuntimePropertiesResponse>
        description: ''
    package: '@azure/service-bus'
  - uid: '@azure/service-bus.ServiceBusAdministrationClient.listQueues'
    name: listQueues(OperationOptions)
    children: []
    type: method
    langs:
      - typeScript
    summary: |
      Returns an async iterable iterator to list all the queues.
      .byPage() returns an async iterable iterator to list the queues in pages.
    syntax:
      content: 'function listQueues(options?: OperationOptions)'
      parameters:
        - id: options
          type:
            - OperationOptions
          description: ''
          optional: true
      return:
        type:
          - >-
            PagedAsyncIterableIterator<@azure/service-bus.QueueProperties,
            @azure/service-bus.EntitiesResponse<@azure/service-bus.QueueProperties>>
        description: |-
          {PagedAsyncIterableIterator<
              QueueProperties,
              EntitiesResponse<QueueProperties>,
            >} An asyncIterableIterator that supports paging.
    package: '@azure/service-bus'
  - uid: >-
      @azure/service-bus.ServiceBusAdministrationClient.listQueuesRuntimeProperties
    name: listQueuesRuntimeProperties(OperationOptions)
    children: []
    type: method
    langs:
      - typeScript
    summary: >+
      Returns an async iterable iterator to list runtime info of the queues.

      .byPage() returns an async iterable iterator to list runtime info of the
      queues in pages.

    syntax:
      content: 'function listQueuesRuntimeProperties(options?: OperationOptions)'
      parameters:
        - id: options
          type:
            - OperationOptions
          description: ''
          optional: true
      return:
        type:
          - >-
            PagedAsyncIterableIterator<@azure/service-bus.QueueRuntimeProperties,
            @azure/service-bus.EntitiesResponse<@azure/service-bus.QueueRuntimeProperties>>
        description: |-
          {PagedAsyncIterableIterator<
              QueueRuntimeProperties,
              EntitiesResponse<QueueRuntimeProperties>,
            >} An asyncIterableIterator that supports paging.
    package: '@azure/service-bus'
  - uid: '@azure/service-bus.ServiceBusAdministrationClient.listRules'
    name: 'listRules(string, string, OperationOptions)'
    children: []
    type: method
    langs:
      - typeScript
    summary: |
      Returns an async iterable iterator to list all the rules
      under the specified subscription.
      .byPage() returns an async iterable iterator to list the rules in pages.
    syntax:
      content: >-
        function listRules(topicName: string, subscriptionName: string,
        options?: OperationOptions)
      parameters:
        - id: topicName
          type:
            - string
          description: ''
        - id: subscriptionName
          type:
            - string
          description: ''
        - id: options
          type:
            - OperationOptions
          description: ''
          optional: true
      return:
        type:
          - >-
            PagedAsyncIterableIterator<@azure/service-bus.RuleProperties,
            @azure/service-bus.EntitiesResponse<@azure/service-bus.RuleProperties>>
        description: An asyncIterableIterator that supports paging.
    package: '@azure/service-bus'
  - uid: '@azure/service-bus.ServiceBusAdministrationClient.listSubscriptions'
    name: 'listSubscriptions(string, OperationOptions)'
    children: []
    type: method
    langs:
      - typeScript
    summary: >
      Returns an async iterable iterator to list all the subscriptions

      under the specified topic.

      .byPage() returns an async iterable iterator to list the subscriptions in
      pages.
    syntax:
      content: >-
        function listSubscriptions(topicName: string, options?:
        OperationOptions)
      parameters:
        - id: topicName
          type:
            - string
          description: ''
        - id: options
          type:
            - OperationOptions
          description: ''
          optional: true
      return:
        type:
          - >-
            PagedAsyncIterableIterator<@azure/service-bus.SubscriptionProperties,
            @azure/service-bus.EntitiesResponse<@azure/service-bus.SubscriptionProperties>>
        description: |-
          {PagedAsyncIterableIterator<
              SubscriptionProperties,
              EntitiesResponse<SubscriptionProperties>
            >} An asyncIterableIterator that supports paging.
    package: '@azure/service-bus'
  - uid: >-
      @azure/service-bus.ServiceBusAdministrationClient.listSubscriptionsRuntimeProperties
    name: 'listSubscriptionsRuntimeProperties(string, OperationOptions)'
    children: []
    type: method
    langs:
      - typeScript
    summary: >
      Returns an async iterable iterator to list runtime info of the
      subscriptions

      under the specified topic.

      .byPage() returns an async iterable iterator to list runtime info of
      subscriptions in pages.
    syntax:
      content: >-
        function listSubscriptionsRuntimeProperties(topicName: string, options?:
        OperationOptions)
      parameters:
        - id: topicName
          type:
            - string
          description: ''
        - id: options
          type:
            - OperationOptions
          description: ''
          optional: true
      return:
        type:
          - >-
            PagedAsyncIterableIterator<@azure/service-bus.SubscriptionRuntimeProperties,
            @azure/service-bus.EntitiesResponse<@azure/service-bus.SubscriptionRuntimeProperties>>
        description: |-
          {PagedAsyncIterableIterator<
              SubscriptionRuntimeProperties,
              EntitiesResponse<SubscriptionRuntimeProperties>,

            >}  An asyncIterableIterator that supports paging.
    package: '@azure/service-bus'
  - uid: '@azure/service-bus.ServiceBusAdministrationClient.listTopics'
    name: listTopics(OperationOptions)
    children: []
    type: method
    langs:
      - typeScript
    summary: |+
      Returns an async iterable iterator to list all the topics.
      .byPage() returns an async iterable iterator to list the topics in pages.

    syntax:
      content: 'function listTopics(options?: OperationOptions)'
      parameters:
        - id: options
          type:
            - OperationOptions
          description: ''
          optional: true
      return:
        type:
          - >-
            PagedAsyncIterableIterator<@azure/service-bus.TopicProperties,
            @azure/service-bus.EntitiesResponse<@azure/service-bus.TopicProperties>>
        description: |-
          {PagedAsyncIterableIterator<
              TopicProperties,
              EntitiesResponse<TopicProperties>,
            >} An asyncIterableIterator that supports paging.
    package: '@azure/service-bus'
  - uid: >-
      @azure/service-bus.ServiceBusAdministrationClient.listTopicsRuntimeProperties
    name: listTopicsRuntimeProperties(OperationOptions)
    children: []
    type: method
    langs:
      - typeScript
    summary: >+
      Returns an async iterable iterator to list runtime info of the topics.

      .byPage() returns an async iterable iterator to list runtime info of the
      topics in pages.

    syntax:
      content: 'function listTopicsRuntimeProperties(options?: OperationOptions)'
      parameters:
        - id: options
          type:
            - OperationOptions
          description: ''
          optional: true
      return:
        type:
          - >-
            PagedAsyncIterableIterator<@azure/service-bus.TopicRuntimeProperties,
            @azure/service-bus.EntitiesResponse<@azure/service-bus.TopicRuntimeProperties>>
        description: |-
          {PagedAsyncIterableIterator<
              TopicRuntimeProperties,
              EntitiesResponse<TopicRuntimeProperties>,

            >} An asyncIterableIterator that supports paging.
    package: '@azure/service-bus'
  - uid: '@azure/service-bus.ServiceBusAdministrationClient.queueExists'
    name: 'queueExists(string, OperationOptions)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Checks whether a given queue exists or not.
    syntax:
      content: >-
        function queueExists(queueName: string, operationOptions?:
        OperationOptions)
      parameters:
        - id: queueName
          type:
            - string
          description: ''
        - id: operationOptions
          type:
            - OperationOptions
          description: >
            The options that can be used to abort, trace and control other
            configurations on the HTTP request.
          optional: true
      return:
        type:
          - Promise<boolean>
        description: ''
    package: '@azure/service-bus'
  - uid: '@azure/service-bus.ServiceBusAdministrationClient.ruleExists'
    name: 'ruleExists(string, string, string, OperationOptions)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Checks whether a given rule exists or not.
    syntax:
      content: >-
        function ruleExists(topicName: string, subscriptionName: string,
        ruleName: string, operationOptions?: OperationOptions)
      parameters:
        - id: topicName
          type:
            - string
          description: ''
        - id: subscriptionName
          type:
            - string
          description: ''
        - id: ruleName
          type:
            - string
          description: ''
        - id: operationOptions
          type:
            - OperationOptions
          description: ''
          optional: true
      return:
        type:
          - Promise<boolean>
        description: ''
    package: '@azure/service-bus'
  - uid: '@azure/service-bus.ServiceBusAdministrationClient.sendOperationRequest'
    name: >-
      sendOperationRequest(OperationArguments, OperationSpec,
      ServiceCallback<any>)
    children: []
    type: method
    langs:
      - typeScript
    summary: Send an HTTP request that is populated using the provided OperationSpec.
    syntax:
      content: >-
        function sendOperationRequest(operationArguments: OperationArguments,
        operationSpec: OperationSpec, callback?: ServiceCallback<any>)
      parameters:
        - id: operationArguments
          type:
            - OperationArguments
          description: >-
            The arguments that the HTTP request's templated values will be
            populated from.
        - id: operationSpec
          type:
            - OperationSpec
          description: The OperationSpec to use to populate the httpRequest.
        - id: callback
          type:
            - ServiceCallback<any>
          description: |
            The callback to call when the response is received.
          optional: true
      return:
        type:
          - Promise<RestResponse>
        description: ''
    package: '@azure/service-bus'
  - uid: '@azure/service-bus.ServiceBusAdministrationClient.sendRequest'
    name: sendRequest(RequestPrepareOptions | WebResourceLike)
    children: []
    type: method
    langs:
      - typeScript
    summary: Send the provided httpRequest.
    syntax:
      content: 'function sendRequest(options: RequestPrepareOptions | WebResourceLike)'
      parameters:
        - id: options
          type:
            - RequestPrepareOptions | WebResourceLike
          description: ''
      return:
        type:
          - Promise<HttpOperationResponse>
        description: ''
    package: '@azure/service-bus'
  - uid: '@azure/service-bus.ServiceBusAdministrationClient.constructor'
    name: 'ServiceBusAdministrationClient(string, PipelineOptions)'
    children: []
    type: constructor
    langs:
      - typeScript
    summary: Initializes a new instance of the ServiceBusAdministrationClient class.
    syntax:
      content: >-
        new ServiceBusAdministrationClient(connectionString: string, options?:
        PipelineOptions)
      parameters:
        - id: connectionString
          type:
            - string
          description: The connection string needed for the client to connect to Azure.
        - id: options
          type:
            - PipelineOptions
          description: |
            PipelineOptions
          optional: true
    package: '@azure/service-bus'
  - uid: '@azure/service-bus.ServiceBusAdministrationClient.constructor_1'
    name: 'ServiceBusAdministrationClient(string, TokenCredential, PipelineOptions)'
    children: []
    type: constructor
    langs:
      - typeScript
    summary: Initializes a new instance of the ServiceBusAdministrationClient class.
    syntax:
      content: >-
        new ServiceBusAdministrationClient(fullyQualifiedNamespace: string,
        credential: TokenCredential, options?: PipelineOptions)
      parameters:
        - id: fullyQualifiedNamespace
          type:
            - string
          description: |-
            The fully qualified namespace of your Service Bus instance which is
            likely to be similar to <yournamespace>.servicebus.windows.net.
        - id: credential
          type:
            - TokenCredential
          description: >-
            A credential object used by the client to get the token to
            authenticate the connection

            with the Azure Service Bus. See &commat;azure/identity for creating
            the credentials.

            If you're using your own implementation of the `TokenCredential`
            interface against AAD, then set the "scopes" for service-bus

            to be `["https://servicebus.azure.net//user_impersonation"]` to get
            the appropriate token.
        - id: options
          type:
            - PipelineOptions
          description: |
            PipelineOptions
          optional: true
    package: '@azure/service-bus'
  - uid: '@azure/service-bus.ServiceBusAdministrationClient.subscriptionExists'
    name: 'subscriptionExists(string, string, OperationOptions)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Checks whether a given subscription exists in the topic or not.
    syntax:
      content: >-
        function subscriptionExists(topicName: string, subscriptionName: string,
        operationOptions?: OperationOptions)
      parameters:
        - id: topicName
          type:
            - string
          description: ''
        - id: subscriptionName
          type:
            - string
          description: ''
        - id: operationOptions
          type:
            - OperationOptions
          description: >
            The options that can be used to abort, trace and control other
            configurations on the HTTP request.
          optional: true
      return:
        type:
          - Promise<boolean>
        description: ''
    package: '@azure/service-bus'
  - uid: '@azure/service-bus.ServiceBusAdministrationClient.topicExists'
    name: 'topicExists(string, OperationOptions)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Checks whether a given topic exists or not.
    syntax:
      content: >-
        function topicExists(topicName: string, operationOptions?:
        OperationOptions)
      parameters:
        - id: topicName
          type:
            - string
          description: ''
        - id: operationOptions
          type:
            - OperationOptions
          description: >
            The options that can be used to abort, trace and control other
            configurations on the HTTP request.
          optional: true
      return:
        type:
          - Promise<boolean>
        description: ''
    package: '@azure/service-bus'
  - uid: '@azure/service-bus.ServiceBusAdministrationClient.updateQueue'
    name: 'updateQueue(QueueProperties, OperationOptions)'
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      Updates the queue based on the queue properties provided.

      All queue properties must be set even though only a subset of them are
      actually updatable.

      Therefore, the suggested flow is to use `getQueue()` to get the complete
      set of queue properties,

      update as needed and then pass it to `updateQueue()`.

      See https://docs.microsoft.com/rest/api/servicebus/update-queue for more
      details.
    syntax:
      content: >-
        function updateQueue(queue: QueueProperties, operationOptions?:
        OperationOptions)
      parameters:
        - id: queue
          type:
            - '@azure/service-bus.QueueProperties'
          description: >-
            Object representing the properties of the queue.

            `requiresSession`, `requiresDuplicateDetection`,
            `enablePartitioning`, and `name` can't be updated after creating the
            queue.
        - id: operationOptions
          type:
            - OperationOptions
          description: >-
            The options that can be used to abort, trace and control other
            configurations on the HTTP request.


            Following are errors that can be expected from this operation
          optional: true
      return:
        type:
          - Promise<@azure/service-bus.QueueResponse>
        description: ''
    package: '@azure/service-bus'
  - uid: '@azure/service-bus.ServiceBusAdministrationClient.updateRule'
    name: 'updateRule(string, string, RuleProperties, OperationOptions)'
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      Updates properties on the Rule by the given name based on the given
      options.

      All rule properties must be set even if one of them is being updated.

      Therefore, the suggested flow is to use `getRule()` to get the complete
      set of rule properties,

      update as needed and then pass it to `updateRule()`.
    syntax:
      content: >-
        function updateRule(topicName: string, subscriptionName: string, rule:
        RuleProperties, operationOptions?: OperationOptions)
      parameters:
        - id: topicName
          type:
            - string
          description: ''
        - id: subscriptionName
          type:
            - string
          description: ''
        - id: rule
          type:
            - '@azure/service-bus.RuleProperties'
          description: >-
            Options to configure the Rule being updated.

            For example, you can configure the filter to apply on associated
            Topic/Subscription.
        - id: operationOptions
          type:
            - OperationOptions
          description: >-
            The options that can be used to abort, trace and control other
            configurations on the HTTP request.


            Following are errors that can be expected from this operation
          optional: true
      return:
        type:
          - Promise<@azure/service-bus.RuleResponse>
        description: ''
    package: '@azure/service-bus'
  - uid: '@azure/service-bus.ServiceBusAdministrationClient.updateSubscription'
    name: 'updateSubscription(SubscriptionProperties, OperationOptions)'
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      Updates the subscription based on the subscription properties provided.

      All subscription properties must be set even though only a subset of them
      are actually updatable.

      Therefore, the suggested flow is to use `getSubscription()` to get the
      complete set of subscription properties,

      update as needed and then pass it to `updateSubscription()`.
    syntax:
      content: >-
        function updateSubscription(subscription: SubscriptionProperties,
        operationOptions?: OperationOptions)
      parameters:
        - id: subscription
          type:
            - '@azure/service-bus.SubscriptionProperties'
          description: >-
            Object representing the properties of the subscription.

            `subscriptionName`, `topicName`, and `requiresSession` can't be
            updated after creating the subscription.
        - id: operationOptions
          type:
            - OperationOptions
          description: >-
            The options that can be used to abort, trace and control other
            configurations on the HTTP request.


            Following are errors that can be expected from this operation
          optional: true
      return:
        type:
          - Promise<@azure/service-bus.SubscriptionResponse>
        description: ''
    package: '@azure/service-bus'
  - uid: '@azure/service-bus.ServiceBusAdministrationClient.updateTopic'
    name: 'updateTopic(TopicProperties, OperationOptions)'
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      Updates the topic based on the topic properties provided.

      All topic properties must be set even though only a subset of them are
      actually updatable.

      Therefore, the suggested flow is to use `getTopic()` to get the complete
      set of topic properties,

      update as needed and then pass it to `updateTopic()`.

      See https://docs.microsoft.com/rest/api/servicebus/update-topic for more
      details.
    syntax:
      content: >-
        function updateTopic(topic: TopicProperties, operationOptions?:
        OperationOptions)
      parameters:
        - id: topic
          type:
            - '@azure/service-bus.TopicProperties'
          description: >-
            Object representing the properties of the topic.

            `requiresDuplicateDetection`, `enablePartitioning`, and `name` can't
            be updated after creating the topic.
        - id: operationOptions
          type:
            - OperationOptions
          description: >-
            The options that can be used to abort, trace and control other
            configurations on the HTTP request.


            Following are errors that can be expected from this operation
          optional: true
      return:
        type:
          - Promise<@azure/service-bus.TopicResponse>
        description: ''
    package: '@azure/service-bus'
references:
  - uid: '@azure/service-bus.CreateQueueOptions'
    name: CreateQueueOptions
    spec.typeScript:
      - name: CreateQueueOptions
        fullName: CreateQueueOptions
        uid: '@azure/service-bus.CreateQueueOptions'
  - uid: Promise<@azure/service-bus.QueueResponse>
    name: QueueResponse>
    spec.typeScript:
      - name: Promise<
        fullName: Promise<
      - name: QueueResponse
        fullName: QueueResponse
        uid: '@azure/service-bus.QueueResponse'
      - name: '>'
        fullName: '>'
  - uid: >-
      @azure/service-bus.SqlRuleFilter |
      @azure/service-bus.CorrelationRuleFilter
    name: CorrelationRuleFilter
    spec.typeScript:
      - name: SqlRuleFilter
        fullName: SqlRuleFilter
        uid: '@azure/service-bus.SqlRuleFilter'
      - name: ' | '
        fullName: ' | '
      - name: CorrelationRuleFilter
        fullName: CorrelationRuleFilter
        uid: '@azure/service-bus.CorrelationRuleFilter'
  - uid: Promise<@azure/service-bus.RuleResponse>
    name: RuleResponse>
    spec.typeScript:
      - name: Promise<
        fullName: Promise<
      - name: RuleResponse
        fullName: RuleResponse
        uid: '@azure/service-bus.RuleResponse'
      - name: '>'
        fullName: '>'
  - uid: '@azure/service-bus.SqlRuleAction'
    name: SqlRuleAction
    spec.typeScript:
      - name: SqlRuleAction
        fullName: SqlRuleAction
        uid: '@azure/service-bus.SqlRuleAction'
  - uid: '@azure/service-bus.CreateSubscriptionOptions'
    name: CreateSubscriptionOptions
    spec.typeScript:
      - name: CreateSubscriptionOptions
        fullName: CreateSubscriptionOptions
        uid: '@azure/service-bus.CreateSubscriptionOptions'
  - uid: Promise<@azure/service-bus.SubscriptionResponse>
    name: SubscriptionResponse>
    spec.typeScript:
      - name: Promise<
        fullName: Promise<
      - name: SubscriptionResponse
        fullName: SubscriptionResponse
        uid: '@azure/service-bus.SubscriptionResponse'
      - name: '>'
        fullName: '>'
  - uid: '@azure/service-bus.CreateTopicOptions'
    name: CreateTopicOptions
    spec.typeScript:
      - name: CreateTopicOptions
        fullName: CreateTopicOptions
        uid: '@azure/service-bus.CreateTopicOptions'
  - uid: Promise<@azure/service-bus.TopicResponse>
    name: TopicResponse>
    spec.typeScript:
      - name: Promise<
        fullName: Promise<
      - name: TopicResponse
        fullName: TopicResponse
        uid: '@azure/service-bus.TopicResponse'
      - name: '>'
        fullName: '>'
  - uid: Promise<@azure/service-bus.Response>
    name: Response>
    spec.typeScript:
      - name: Promise<
        fullName: Promise<
      - name: Response
        fullName: Response
        uid: '@azure/service-bus.Response'
      - name: '>'
        fullName: '>'
  - uid: Promise<@azure/service-bus.NamespacePropertiesResponse>
    name: NamespacePropertiesResponse>
    spec.typeScript:
      - name: Promise<
        fullName: Promise<
      - name: NamespacePropertiesResponse
        fullName: NamespacePropertiesResponse
        uid: '@azure/service-bus.NamespacePropertiesResponse'
      - name: '>'
        fullName: '>'
  - uid: Promise<@azure/service-bus.QueueRuntimePropertiesResponse>
    name: QueueRuntimePropertiesResponse>
    spec.typeScript:
      - name: Promise<
        fullName: Promise<
      - name: QueueRuntimePropertiesResponse
        fullName: QueueRuntimePropertiesResponse
        uid: '@azure/service-bus.QueueRuntimePropertiesResponse'
      - name: '>'
        fullName: '>'
  - uid: Promise<@azure/service-bus.SubscriptionRuntimePropertiesResponse>
    name: SubscriptionRuntimePropertiesResponse>
    spec.typeScript:
      - name: Promise<
        fullName: Promise<
      - name: SubscriptionRuntimePropertiesResponse
        fullName: SubscriptionRuntimePropertiesResponse
        uid: '@azure/service-bus.SubscriptionRuntimePropertiesResponse'
      - name: '>'
        fullName: '>'
  - uid: Promise<@azure/service-bus.TopicRuntimePropertiesResponse>
    name: TopicRuntimePropertiesResponse>
    spec.typeScript:
      - name: Promise<
        fullName: Promise<
      - name: TopicRuntimePropertiesResponse
        fullName: TopicRuntimePropertiesResponse
        uid: '@azure/service-bus.TopicRuntimePropertiesResponse'
      - name: '>'
        fullName: '>'
  - uid: >-
      PagedAsyncIterableIterator<@azure/service-bus.QueueProperties,
      @azure/service-bus.EntitiesResponse<@azure/service-bus.QueueProperties>>
    name: QueueProperties>>
    spec.typeScript:
      - name: PagedAsyncIterableIterator<
        fullName: PagedAsyncIterableIterator<
      - name: QueueProperties
        fullName: QueueProperties
        uid: '@azure/service-bus.QueueProperties'
      - name: ', '
        fullName: ', '
      - name: EntitiesResponse
        fullName: EntitiesResponse
        uid: '@azure/service-bus.EntitiesResponse'
      - name: <
        fullName: <
      - name: QueueProperties
        fullName: QueueProperties
        uid: '@azure/service-bus.QueueProperties'
      - name: '>>'
        fullName: '>>'
  - uid: >-
      PagedAsyncIterableIterator<@azure/service-bus.QueueRuntimeProperties,
      @azure/service-bus.EntitiesResponse<@azure/service-bus.QueueRuntimeProperties>>
    name: QueueRuntimeProperties>>
    spec.typeScript:
      - name: PagedAsyncIterableIterator<
        fullName: PagedAsyncIterableIterator<
      - name: QueueRuntimeProperties
        fullName: QueueRuntimeProperties
        uid: '@azure/service-bus.QueueRuntimeProperties'
      - name: ', '
        fullName: ', '
      - name: EntitiesResponse
        fullName: EntitiesResponse
        uid: '@azure/service-bus.EntitiesResponse'
      - name: <
        fullName: <
      - name: QueueRuntimeProperties
        fullName: QueueRuntimeProperties
        uid: '@azure/service-bus.QueueRuntimeProperties'
      - name: '>>'
        fullName: '>>'
  - uid: >-
      PagedAsyncIterableIterator<@azure/service-bus.RuleProperties,
      @azure/service-bus.EntitiesResponse<@azure/service-bus.RuleProperties>>
    name: RuleProperties>>
    spec.typeScript:
      - name: PagedAsyncIterableIterator<
        fullName: PagedAsyncIterableIterator<
      - name: RuleProperties
        fullName: RuleProperties
        uid: '@azure/service-bus.RuleProperties'
      - name: ', '
        fullName: ', '
      - name: EntitiesResponse
        fullName: EntitiesResponse
        uid: '@azure/service-bus.EntitiesResponse'
      - name: <
        fullName: <
      - name: RuleProperties
        fullName: RuleProperties
        uid: '@azure/service-bus.RuleProperties'
      - name: '>>'
        fullName: '>>'
  - uid: >-
      PagedAsyncIterableIterator<@azure/service-bus.SubscriptionProperties,
      @azure/service-bus.EntitiesResponse<@azure/service-bus.SubscriptionProperties>>
    name: SubscriptionProperties>>
    spec.typeScript:
      - name: PagedAsyncIterableIterator<
        fullName: PagedAsyncIterableIterator<
      - name: SubscriptionProperties
        fullName: SubscriptionProperties
        uid: '@azure/service-bus.SubscriptionProperties'
      - name: ', '
        fullName: ', '
      - name: EntitiesResponse
        fullName: EntitiesResponse
        uid: '@azure/service-bus.EntitiesResponse'
      - name: <
        fullName: <
      - name: SubscriptionProperties
        fullName: SubscriptionProperties
        uid: '@azure/service-bus.SubscriptionProperties'
      - name: '>>'
        fullName: '>>'
  - uid: >-
      PagedAsyncIterableIterator<@azure/service-bus.SubscriptionRuntimeProperties,
      @azure/service-bus.EntitiesResponse<@azure/service-bus.SubscriptionRuntimeProperties>>
    name: SubscriptionRuntimeProperties>>
    spec.typeScript:
      - name: PagedAsyncIterableIterator<
        fullName: PagedAsyncIterableIterator<
      - name: SubscriptionRuntimeProperties
        fullName: SubscriptionRuntimeProperties
        uid: '@azure/service-bus.SubscriptionRuntimeProperties'
      - name: ', '
        fullName: ', '
      - name: EntitiesResponse
        fullName: EntitiesResponse
        uid: '@azure/service-bus.EntitiesResponse'
      - name: <
        fullName: <
      - name: SubscriptionRuntimeProperties
        fullName: SubscriptionRuntimeProperties
        uid: '@azure/service-bus.SubscriptionRuntimeProperties'
      - name: '>>'
        fullName: '>>'
  - uid: >-
      PagedAsyncIterableIterator<@azure/service-bus.TopicProperties,
      @azure/service-bus.EntitiesResponse<@azure/service-bus.TopicProperties>>
    name: TopicProperties>>
    spec.typeScript:
      - name: PagedAsyncIterableIterator<
        fullName: PagedAsyncIterableIterator<
      - name: TopicProperties
        fullName: TopicProperties
        uid: '@azure/service-bus.TopicProperties'
      - name: ', '
        fullName: ', '
      - name: EntitiesResponse
        fullName: EntitiesResponse
        uid: '@azure/service-bus.EntitiesResponse'
      - name: <
        fullName: <
      - name: TopicProperties
        fullName: TopicProperties
        uid: '@azure/service-bus.TopicProperties'
      - name: '>>'
        fullName: '>>'
  - uid: >-
      PagedAsyncIterableIterator<@azure/service-bus.TopicRuntimeProperties,
      @azure/service-bus.EntitiesResponse<@azure/service-bus.TopicRuntimeProperties>>
    name: TopicRuntimeProperties>>
    spec.typeScript:
      - name: PagedAsyncIterableIterator<
        fullName: PagedAsyncIterableIterator<
      - name: TopicRuntimeProperties
        fullName: TopicRuntimeProperties
        uid: '@azure/service-bus.TopicRuntimeProperties'
      - name: ', '
        fullName: ', '
      - name: EntitiesResponse
        fullName: EntitiesResponse
        uid: '@azure/service-bus.EntitiesResponse'
      - name: <
        fullName: <
      - name: TopicRuntimeProperties
        fullName: TopicRuntimeProperties
        uid: '@azure/service-bus.TopicRuntimeProperties'
      - name: '>>'
        fullName: '>>'
  - uid: '@azure/service-bus.QueueProperties'
    name: QueueProperties
    spec.typeScript:
      - name: QueueProperties
        fullName: QueueProperties
        uid: '@azure/service-bus.QueueProperties'
  - uid: '@azure/service-bus.RuleProperties'
    name: RuleProperties
    spec.typeScript:
      - name: RuleProperties
        fullName: RuleProperties
        uid: '@azure/service-bus.RuleProperties'
  - uid: '@azure/service-bus.SubscriptionProperties'
    name: SubscriptionProperties
    spec.typeScript:
      - name: SubscriptionProperties
        fullName: SubscriptionProperties
        uid: '@azure/service-bus.SubscriptionProperties'
  - uid: '@azure/service-bus.TopicProperties'
    name: TopicProperties
    spec.typeScript:
      - name: TopicProperties
        fullName: TopicProperties
        uid: '@azure/service-bus.TopicProperties'
