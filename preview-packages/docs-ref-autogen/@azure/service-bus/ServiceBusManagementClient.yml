### YamlMime:UniversalReference
items:
  - uid: '@azure/service-bus.ServiceBusManagementClient'
    name: ServiceBusManagementClient
    fullName: ServiceBusManagementClient
    children:
      - '@azure/service-bus.ServiceBusManagementClient.createQueue_1'
      - '@azure/service-bus.ServiceBusManagementClient.createQueue'
      - '@azure/service-bus.ServiceBusManagementClient.createRule'
      - '@azure/service-bus.ServiceBusManagementClient.createSubscription'
      - '@azure/service-bus.ServiceBusManagementClient.createSubscription_1'
      - '@azure/service-bus.ServiceBusManagementClient.createTopic'
      - '@azure/service-bus.ServiceBusManagementClient.createTopic_1'
      - '@azure/service-bus.ServiceBusManagementClient.deleteQueue'
      - '@azure/service-bus.ServiceBusManagementClient.deleteRule'
      - '@azure/service-bus.ServiceBusManagementClient.deleteSubscription'
      - '@azure/service-bus.ServiceBusManagementClient.deleteTopic'
      - '@azure/service-bus.ServiceBusManagementClient.getNamespaceProperties'
      - '@azure/service-bus.ServiceBusManagementClient.getQueue'
      - '@azure/service-bus.ServiceBusManagementClient.getQueueRuntimeInfo'
      - '@azure/service-bus.ServiceBusManagementClient.getQueues'
      - '@azure/service-bus.ServiceBusManagementClient.getQueuesRuntimeInfo'
      - '@azure/service-bus.ServiceBusManagementClient.getRule'
      - '@azure/service-bus.ServiceBusManagementClient.getRules'
      - '@azure/service-bus.ServiceBusManagementClient.getSubscription'
      - '@azure/service-bus.ServiceBusManagementClient.getSubscriptionRuntimeInfo'
      - '@azure/service-bus.ServiceBusManagementClient.getSubscriptions'
      - >-
        @azure/service-bus.ServiceBusManagementClient.getSubscriptionsRuntimeInfo
      - '@azure/service-bus.ServiceBusManagementClient.getTopic'
      - '@azure/service-bus.ServiceBusManagementClient.getTopicRuntimeInfo'
      - '@azure/service-bus.ServiceBusManagementClient.getTopics'
      - '@azure/service-bus.ServiceBusManagementClient.getTopicsRuntimeInfo'
      - '@azure/service-bus.ServiceBusManagementClient.queueExists'
      - '@azure/service-bus.ServiceBusManagementClient.sendOperationRequest'
      - '@azure/service-bus.ServiceBusManagementClient.sendRequest'
      - '@azure/service-bus.ServiceBusManagementClient.constructor'
      - '@azure/service-bus.ServiceBusManagementClient.constructor_1'
      - '@azure/service-bus.ServiceBusManagementClient.subscriptionExists'
      - '@azure/service-bus.ServiceBusManagementClient.topicExists'
      - '@azure/service-bus.ServiceBusManagementClient.updateQueue'
      - '@azure/service-bus.ServiceBusManagementClient.updateRule'
      - '@azure/service-bus.ServiceBusManagementClient.updateSubscription'
      - '@azure/service-bus.ServiceBusManagementClient.updateTopic'
    langs:
      - typeScript
    type: class
    summary: >-
      All operations return promises that resolve to an object that has the
      relevant output.

      These objects also have a property called `_response` that you can use if
      you want to

      access the direct response from the service.
    extends:
      name: ServiceClient
    package: '@azure/service-bus'
  - uid: '@azure/service-bus.ServiceBusManagementClient.createQueue_1'
    name: createQueue(QueueDescription)
    children: []
    type: method
    langs:
      - typeScript
    summary: Creates a queue configured using the given options
    syntax:
      content: 'function createQueue(queue: QueueDescription)'
      parameters:
        - id: queue
          type:
            - '@azure/service-bus.QueueDescription'
          description: >-
            Options to configure the Queue being created.

            For example, you can configure a queue to support partitions or
            sessions.


            Following are errors that can be expected from this operation
      return:
        type:
          - Promise<@azure/service-bus.CreateQueueResponse>
        description: ''
    package: '@azure/service-bus'
  - uid: '@azure/service-bus.ServiceBusManagementClient.createQueue'
    name: createQueue(string)
    children: []
    type: method
    langs:
      - typeScript
    summary: 'Creates a queue with given name, configured using the given options'
    syntax:
      content: 'function createQueue(queueName: string)'
      parameters:
        - id: queueName
          type:
            - string
          description: |-


            Following are errors that can be expected from this operation
      return:
        type:
          - Promise<@azure/service-bus.CreateQueueResponse>
        description: ''
    package: '@azure/service-bus'
  - uid: '@azure/service-bus.ServiceBusManagementClient.createRule'
    name: 'createRule(string, string, RuleDescription)'
    children: []
    type: method
    langs:
      - typeScript
    summary: 'Creates a rule with given name, configured using the given options.'
    syntax:
      content: >-
        function createRule(topicName: string, subscriptionName: string, rule:
        RuleDescription)
      parameters:
        - id: topicName
          type:
            - string
          description: ''
        - id: subscriptionName
          type:
            - string
          description: ''
        - id: rule
          type:
            - '@azure/service-bus.RuleDescription'
          description: |-


            Following are errors that can be expected from this operation
      return:
        type:
          - Promise<@azure/service-bus.CreateRuleResponse>
        description: ''
    package: '@azure/service-bus'
  - uid: '@azure/service-bus.ServiceBusManagementClient.createSubscription'
    name: 'createSubscription(string, string)'
    children: []
    type: method
    langs:
      - typeScript
    summary: 'Creates a subscription with given name, configured using the given options'
    syntax:
      content: 'function createSubscription(topicName: string, subscriptionName: string)'
      parameters:
        - id: topicName
          type:
            - string
          description: ''
        - id: subscriptionName
          type:
            - string
          description: |-


            Following are errors that can be expected from this operation
      return:
        type:
          - Promise<@azure/service-bus.CreateSubscriptionResponse>
        description: ''
    package: '@azure/service-bus'
  - uid: '@azure/service-bus.ServiceBusManagementClient.createSubscription_1'
    name: createSubscription(SubscriptionDescription)
    children: []
    type: method
    langs:
      - typeScript
    summary: 'Creates a subscription with given name, configured using the given options'
    syntax:
      content: 'function createSubscription(subscription: SubscriptionDescription)'
      parameters:
        - id: subscription
          type:
            - '@azure/service-bus.SubscriptionDescription'
          description: >-
            Options to configure the Subscription being created.

            For example, you can configure a Subscription to support partitions
            or sessions.


            Following are errors that can be expected from this operation
      return:
        type:
          - Promise<@azure/service-bus.CreateSubscriptionResponse>
        description: ''
    package: '@azure/service-bus'
  - uid: '@azure/service-bus.ServiceBusManagementClient.createTopic'
    name: createTopic(string)
    children: []
    type: method
    langs:
      - typeScript
    summary: 'Creates a topic with given name, configured using the given options'
    syntax:
      content: 'function createTopic(topicName: string)'
      parameters:
        - id: topicName
          type:
            - string
          description: |-


            Following are errors that can be expected from this operation
      return:
        type:
          - Promise<@azure/service-bus.CreateTopicResponse>
        description: ''
    package: '@azure/service-bus'
  - uid: '@azure/service-bus.ServiceBusManagementClient.createTopic_1'
    name: createTopic(TopicDescription)
    children: []
    type: method
    langs:
      - typeScript
    summary: 'Creates a topic with given name, configured using the given options'
    syntax:
      content: 'function createTopic(topic: TopicDescription)'
      parameters:
        - id: topic
          type:
            - '@azure/service-bus.TopicDescription'
          description: >-
            Options to configure the Topic being created.

            For example, you can configure a topic to support partitions or
            sessions.


            Following are errors that can be expected from this operation
      return:
        type:
          - Promise<@azure/service-bus.CreateTopicResponse>
        description: ''
    package: '@azure/service-bus'
  - uid: '@azure/service-bus.ServiceBusManagementClient.deleteQueue'
    name: deleteQueue(string)
    children: []
    type: method
    langs:
      - typeScript
    summary: Deletes a queue.
    syntax:
      content: 'function deleteQueue(queueName: string)'
      parameters:
        - id: queueName
          type:
            - string
          description: |-


            Following are errors that can be expected from this operation
      return:
        type:
          - Promise<@azure/service-bus.DeleteQueueResponse>
        description: ''
    package: '@azure/service-bus'
  - uid: '@azure/service-bus.ServiceBusManagementClient.deleteRule'
    name: 'deleteRule(string, string, string)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Deletes a rule.
    syntax:
      content: >-
        function deleteRule(topicName: string, subscriptionName: string,
        ruleName: string)
      parameters:
        - id: topicName
          type:
            - string
          description: ''
        - id: subscriptionName
          type:
            - string
          description: ''
        - id: ruleName
          type:
            - string
          description: |-


            Following are errors that can be expected from this operation
      return:
        type:
          - Promise<@azure/service-bus.DeleteRuleResponse>
        description: ''
    package: '@azure/service-bus'
  - uid: '@azure/service-bus.ServiceBusManagementClient.deleteSubscription'
    name: 'deleteSubscription(string, string)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Deletes a subscription.
    syntax:
      content: 'function deleteSubscription(topicName: string, subscriptionName: string)'
      parameters:
        - id: topicName
          type:
            - string
          description: ''
        - id: subscriptionName
          type:
            - string
          description: |-


            Following are errors that can be expected from this operation
      return:
        type:
          - Promise<@azure/service-bus.DeleteSubscriptionResponse>
        description: ''
    package: '@azure/service-bus'
  - uid: '@azure/service-bus.ServiceBusManagementClient.deleteTopic'
    name: deleteTopic(string)
    children: []
    type: method
    langs:
      - typeScript
    summary: Deletes a topic.
    syntax:
      content: 'function deleteTopic(topicName: string)'
      parameters:
        - id: topicName
          type:
            - string
          description: |-


            Following are errors that can be expected from this operation
      return:
        type:
          - Promise<@azure/service-bus.DeleteTopicResponse>
        description: ''
    package: '@azure/service-bus'
  - uid: '@azure/service-bus.ServiceBusManagementClient.getNamespaceProperties'
    name: getNamespaceProperties()
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      Returns an object representing the metadata related to a service bus
      namespace.
    syntax:
      content: function getNamespaceProperties()
      parameters: []
      return:
        type:
          - Promise<@azure/service-bus.GetNamespaceResponse>
        description: ''
    package: '@azure/service-bus'
  - uid: '@azure/service-bus.ServiceBusManagementClient.getQueue'
    name: getQueue(string)
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      Returns an object representing the Queue and its properties.

      If you want to get the Queue runtime info like message count details, use
      `getQueueRuntimeInfo` API.
    syntax:
      content: 'function getQueue(queueName: string)'
      parameters:
        - id: queueName
          type:
            - string
          description: |-


            Following are errors that can be expected from this operation
      return:
        type:
          - Promise<@azure/service-bus.GetQueueResponse>
        description: ''
    package: '@azure/service-bus'
  - uid: '@azure/service-bus.ServiceBusManagementClient.getQueueRuntimeInfo'
    name: getQueueRuntimeInfo(string)
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      Returns an object representing the Queue runtime info like message count
      details.
    syntax:
      content: 'function getQueueRuntimeInfo(queueName: string)'
      parameters:
        - id: queueName
          type:
            - string
          description: |-


            Following are errors that can be expected from this operation
      return:
        type:
          - Promise<@azure/service-bus.GetQueueRuntimeInfoResponse>
        description: ''
    package: '@azure/service-bus'
  - uid: '@azure/service-bus.ServiceBusManagementClient.getQueues'
    name: getQueues(ListRequestOptions)
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      Returns a list of objects, each representing a Queue along with its
      properties.

      If you want to get the runtime info of the queues like message count, use
      `getQueuesRuntimeInfo` API instead.
    syntax:
      content: 'function getQueues(listRequestOptions?: ListRequestOptions)'
      parameters:
        - id: listRequestOptions
          type:
            - '@azure/service-bus.ListRequestOptions'
          description: |-


            Following are errors that can be expected from this operation
          optional: true
      return:
        type:
          - Promise<@azure/service-bus.GetQueuesResponse>
        description: ''
    package: '@azure/service-bus'
  - uid: '@azure/service-bus.ServiceBusManagementClient.getQueuesRuntimeInfo'
    name: getQueuesRuntimeInfo(ListRequestOptions)
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      Returns a list of objects, each representing a Queue's runtime info like
      message count details.
    syntax:
      content: 'function getQueuesRuntimeInfo(listRequestOptions?: ListRequestOptions)'
      parameters:
        - id: listRequestOptions
          type:
            - '@azure/service-bus.ListRequestOptions'
          description: |-


            Following are errors that can be expected from this operation
          optional: true
      return:
        type:
          - Promise<@azure/service-bus.GetQueuesRuntimeInfoResponse>
        description: ''
    package: '@azure/service-bus'
  - uid: '@azure/service-bus.ServiceBusManagementClient.getRule'
    name: 'getRule(string, string, string)'
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      Returns an object representing the Rule with the given name along with all
      its properties.
    syntax:
      content: >-
        function getRule(topicName: string, subscriptioName: string, ruleName:
        string)
      parameters:
        - id: topicName
          type:
            - string
          description: ''
        - id: subscriptioName
          type:
            - string
          description: ''
        - id: ruleName
          type:
            - string
          description: |-


            Following are errors that can be expected from this operation
      return:
        type:
          - Promise<@azure/service-bus.GetRuleResponse>
        description: ''
    package: '@azure/service-bus'
  - uid: '@azure/service-bus.ServiceBusManagementClient.getRules'
    name: 'getRules(string, string, ListRequestOptions)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Lists existing rules.
    syntax:
      content: >-
        function getRules(topicName: string, subscriptionName: string,
        listRequestOptions?: ListRequestOptions)
      parameters:
        - id: topicName
          type:
            - string
          description: ''
        - id: subscriptionName
          type:
            - string
          description: ''
        - id: listRequestOptions
          type:
            - '@azure/service-bus.ListRequestOptions'
          description: |-


            Following are errors that can be expected from this operation
          optional: true
      return:
        type:
          - Promise<@azure/service-bus.GetRulesResponse>
        description: ''
    package: '@azure/service-bus'
  - uid: '@azure/service-bus.ServiceBusManagementClient.getSubscription'
    name: 'getSubscription(string, string)'
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      Returns an object representing the Subscription and its properties.

      If you want to get the Subscription runtime info like message count
      details, use `getSubscriptionRuntimeInfo` API.
    syntax:
      content: 'function getSubscription(topicName: string, subscriptionName: string)'
      parameters:
        - id: topicName
          type:
            - string
          description: ''
        - id: subscriptionName
          type:
            - string
          description: |-


            Following are errors that can be expected from this operation
      return:
        type:
          - Promise<@azure/service-bus.GetSubscriptionResponse>
        description: ''
    package: '@azure/service-bus'
  - uid: '@azure/service-bus.ServiceBusManagementClient.getSubscriptionRuntimeInfo'
    name: 'getSubscriptionRuntimeInfo(string, string)'
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      Returns an object representing the Subscription runtime info like message
      count details.
    syntax:
      content: >-
        function getSubscriptionRuntimeInfo(topicName: string, subscriptionName:
        string)
      parameters:
        - id: topicName
          type:
            - string
          description: ''
        - id: subscriptionName
          type:
            - string
          description: |-


            Following are errors that can be expected from this operation
      return:
        type:
          - Promise<@azure/service-bus.GetSubscriptionRuntimeInfoResponse>
        description: ''
    package: '@azure/service-bus'
  - uid: '@azure/service-bus.ServiceBusManagementClient.getSubscriptions'
    name: 'getSubscriptions(string, ListRequestOptions)'
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      Returns a list of objects, each representing a Subscription along with its
      properties.

      If you want to get the runtime info of the subscriptions like message
      count, use `getSubscriptionsRuntimeInfo` API instead.
    syntax:
      content: >-
        function getSubscriptions(topicName: string, listRequestOptions?:
        ListRequestOptions)
      parameters:
        - id: topicName
          type:
            - string
          description: ''
        - id: listRequestOptions
          type:
            - '@azure/service-bus.ListRequestOptions'
          description: |-


            Following are errors that can be expected from this operation
          optional: true
      return:
        type:
          - Promise<@azure/service-bus.GetSubscriptionsResponse>
        description: ''
    package: '@azure/service-bus'
  - uid: '@azure/service-bus.ServiceBusManagementClient.getSubscriptionsRuntimeInfo'
    name: 'getSubscriptionsRuntimeInfo(string, ListRequestOptions)'
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      Returns a list of objects, each representing a Subscription's runtime info
      like message count details.
    syntax:
      content: >-
        function getSubscriptionsRuntimeInfo(topicName: string,
        listRequestOptions?: ListRequestOptions)
      parameters:
        - id: topicName
          type:
            - string
          description: ''
        - id: listRequestOptions
          type:
            - '@azure/service-bus.ListRequestOptions'
          description: |-


            Following are errors that can be expected from this operation
          optional: true
      return:
        type:
          - Promise<@azure/service-bus.GetSubscriptionsRuntimeInfoResponse>
        description: ''
    package: '@azure/service-bus'
  - uid: '@azure/service-bus.ServiceBusManagementClient.getTopic'
    name: getTopic(string)
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      Returns an object representing the Topic and its properties.

      If you want to get the Topic runtime info like subscription count details,
      use `getTopicRuntimeInfo` API.
    syntax:
      content: 'function getTopic(topicName: string)'
      parameters:
        - id: topicName
          type:
            - string
          description: |-


            Following are errors that can be expected from this operation
      return:
        type:
          - Promise<@azure/service-bus.GetTopicResponse>
        description: ''
    package: '@azure/service-bus'
  - uid: '@azure/service-bus.ServiceBusManagementClient.getTopicRuntimeInfo'
    name: getTopicRuntimeInfo(string)
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      Returns an object representing the Topic runtime info like subscription
      count.
    syntax:
      content: 'function getTopicRuntimeInfo(topicName: string)'
      parameters:
        - id: topicName
          type:
            - string
          description: |-


            Following are errors that can be expected from this operation
      return:
        type:
          - Promise<@azure/service-bus.GetTopicRuntimeInfoResponse>
        description: ''
    package: '@azure/service-bus'
  - uid: '@azure/service-bus.ServiceBusManagementClient.getTopics'
    name: getTopics(ListRequestOptions)
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      Returns a list of objects, each representing a Topic along with its
      properties.

      If you want to get the runtime info of the topics like subscription count,
      use `getTopicsRuntimeInfo` API instead.
    syntax:
      content: 'function getTopics(listRequestOptions?: ListRequestOptions)'
      parameters:
        - id: listRequestOptions
          type:
            - '@azure/service-bus.ListRequestOptions'
          description: |-


            Following are errors that can be expected from this operation
          optional: true
      return:
        type:
          - Promise<@azure/service-bus.GetTopicsResponse>
        description: ''
    package: '@azure/service-bus'
  - uid: '@azure/service-bus.ServiceBusManagementClient.getTopicsRuntimeInfo'
    name: getTopicsRuntimeInfo(ListRequestOptions)
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      Returns a list of objects, each representing a Topic's runtime info like
      subscription count.
    syntax:
      content: 'function getTopicsRuntimeInfo(listRequestOptions?: ListRequestOptions)'
      parameters:
        - id: listRequestOptions
          type:
            - '@azure/service-bus.ListRequestOptions'
          description: |-


            Following are errors that can be expected from this operation
          optional: true
      return:
        type:
          - Promise<@azure/service-bus.GetTopicsRuntimeInfoResponse>
        description: ''
    package: '@azure/service-bus'
  - uid: '@azure/service-bus.ServiceBusManagementClient.queueExists'
    name: queueExists(string)
    children: []
    type: method
    langs:
      - typeScript
    summary: Checks whether a given queue exists or not.
    syntax:
      content: 'function queueExists(queueName: string)'
      parameters:
        - id: queueName
          type:
            - string
          description: |+

      return:
        type:
          - Promise<boolean>
        description: ''
    package: '@azure/service-bus'
  - uid: '@azure/service-bus.ServiceBusManagementClient.sendOperationRequest'
    name: >-
      sendOperationRequest(OperationArguments, OperationSpec,
      ServiceCallback<any>)
    children: []
    type: method
    langs:
      - typeScript
    summary: Send an HTTP request that is populated using the provided OperationSpec.
    syntax:
      content: >-
        function sendOperationRequest(operationArguments: OperationArguments,
        operationSpec: OperationSpec, callback?: ServiceCallback<any>)
      parameters:
        - id: operationArguments
          type:
            - OperationArguments
          description: >-
            The arguments that the HTTP request's templated values will be
            populated from.
        - id: operationSpec
          type:
            - OperationSpec
          description: The OperationSpec to use to populate the httpRequest.
        - id: callback
          type:
            - ServiceCallback<any>
          description: |
            The callback to call when the response is received.
          optional: true
      return:
        type:
          - Promise<RestResponse>
        description: ''
    package: '@azure/service-bus'
  - uid: '@azure/service-bus.ServiceBusManagementClient.sendRequest'
    name: sendRequest(RequestPrepareOptions | WebResourceLike)
    children: []
    type: method
    langs:
      - typeScript
    summary: Send the provided httpRequest.
    syntax:
      content: 'function sendRequest(options: RequestPrepareOptions | WebResourceLike)'
      parameters:
        - id: options
          type:
            - RequestPrepareOptions | WebResourceLike
          description: ''
      return:
        type:
          - Promise<HttpOperationResponse>
        description: ''
    package: '@azure/service-bus'
  - uid: '@azure/service-bus.ServiceBusManagementClient.constructor'
    name: 'ServiceBusManagementClient(string, ServiceBusManagementClientOptions)'
    children: []
    type: constructor
    langs:
      - typeScript
    summary: Initializes a new instance of the ServiceBusManagementClient class.
    syntax:
      content: >-
        new ServiceBusManagementClient(connectionString: string, options?:
        ServiceBusManagementClientOptions)
      parameters:
        - id: connectionString
          type:
            - string
          description: The connection string needed for the client to connect to Azure.
        - id: options
          type:
            - '@azure/service-bus.ServiceBusManagementClientOptions'
          description: |
            ServiceBusManagementClientOptions
          optional: true
    package: '@azure/service-bus'
  - uid: '@azure/service-bus.ServiceBusManagementClient.constructor_1'
    name: >-
      ServiceBusManagementClient(string, TokenCredential,
      ServiceBusManagementClientOptions)
    children: []
    type: constructor
    langs:
      - typeScript
    summary: Initializes a new instance of the ServiceBusManagementClient class.
    syntax:
      content: >-
        new ServiceBusManagementClient(fullyQualifiedNamespace: string,
        credential: TokenCredential, options?:
        ServiceBusManagementClientOptions)
      parameters:
        - id: fullyQualifiedNamespace
          type:
            - string
          description: |-
            The fully qualified namespace of your Service Bus instance which is
            likely to be similar to <yournamespace>.servicebus.windows.net.
        - id: credential
          type:
            - TokenCredential
          description: >-
            A credential object used by the client to get the token to
            authenticate the connection

            with the Azure Service Bus. See &commat;azure/identity for creating
            the credentials.

            If you're using your own implementation of the `TokenCredential`
            interface against AAD, then set the "scopes" for service-bus

            to be `["https://servicebus.azure.net//user_impersonation"]` to get
            the appropriate token.
        - id: options
          type:
            - '@azure/service-bus.ServiceBusManagementClientOptions'
          description: |
            ServiceBusManagementClientOptions
          optional: true
    package: '@azure/service-bus'
  - uid: '@azure/service-bus.ServiceBusManagementClient.subscriptionExists'
    name: 'subscriptionExists(string, string)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Checks whether a given subscription exists in the topic or not.
    syntax:
      content: 'function subscriptionExists(topicName: string, subscriptionName: string)'
      parameters:
        - id: topicName
          type:
            - string
          description: ''
        - id: subscriptionName
          type:
            - string
          description: |+


      return:
        type:
          - Promise<boolean>
        description: ''
    package: '@azure/service-bus'
  - uid: '@azure/service-bus.ServiceBusManagementClient.topicExists'
    name: topicExists(string)
    children: []
    type: method
    langs:
      - typeScript
    summary: Checks whether a given topic exists or not.
    syntax:
      content: 'function topicExists(topicName: string)'
      parameters:
        - id: topicName
          type:
            - string
          description: |+

      return:
        type:
          - Promise<boolean>
        description: ''
    package: '@azure/service-bus'
  - uid: '@azure/service-bus.ServiceBusManagementClient.updateQueue'
    name: updateQueue(QueueDescription)
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      Updates properties on the Queue by the given name based on the given
      options
    syntax:
      content: 'function updateQueue(queue: QueueDescription)'
      parameters:
        - id: queue
          type:
            - '@azure/service-bus.QueueDescription'
          description: >-
            Options to configure the Queue being updated.

            For example, you can configure a queue to support partitions or
            sessions.


            Following are errors that can be expected from this operation
      return:
        type:
          - Promise<@azure/service-bus.UpdateQueueResponse>
        description: ''
    package: '@azure/service-bus'
  - uid: '@azure/service-bus.ServiceBusManagementClient.updateRule'
    name: 'updateRule(string, string, RuleDescription)'
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      Updates properties on the Rule by the given name based on the given
      options.
    syntax:
      content: >-
        function updateRule(topicName: string, subscriptionName: string, rule:
        RuleDescription)
      parameters:
        - id: topicName
          type:
            - string
          description: ''
        - id: subscriptionName
          type:
            - string
          description: ''
        - id: rule
          type:
            - '@azure/service-bus.RuleDescription'
          description: ''
      return:
        type:
          - Promise<@azure/service-bus.UpdateRuleResponse>
        description: ''
    package: '@azure/service-bus'
  - uid: '@azure/service-bus.ServiceBusManagementClient.updateSubscription'
    name: updateSubscription(SubscriptionDescription)
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      Updates properties on the Subscription by the given name based on the
      given options
    syntax:
      content: 'function updateSubscription(subscription: SubscriptionDescription)'
      parameters:
        - id: subscription
          type:
            - '@azure/service-bus.SubscriptionDescription'
          description: >-
            Options to configure the Subscription being updated.

            For example, you can configure a Subscription to support partitions
            or sessions.


            Following are errors that can be expected from this operation
      return:
        type:
          - Promise<@azure/service-bus.UpdateSubscriptionResponse>
        description: ''
    package: '@azure/service-bus'
  - uid: '@azure/service-bus.ServiceBusManagementClient.updateTopic'
    name: updateTopic(TopicDescription)
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      Updates properties on the Topic by the given name based on the given
      options
    syntax:
      content: 'function updateTopic(topic: TopicDescription)'
      parameters:
        - id: topic
          type:
            - '@azure/service-bus.TopicDescription'
          description: >-
            Options to configure the Topic being updated.

            For example, you can configure a topic to support partitions or
            sessions.


            Following are errors that can be expected from this operation
      return:
        type:
          - Promise<@azure/service-bus.UpdateTopicResponse>
        description: ''
    package: '@azure/service-bus'
references:
  - uid: '@azure/service-bus.ServiceBusManagementClientOptions'
    name: ServiceBusManagementClientOptions
    spec.typeScript:
      - name: ServiceBusManagementClientOptions
        fullName: ServiceBusManagementClientOptions
        uid: '@azure/service-bus.ServiceBusManagementClientOptions'
  - uid: Promise<@azure/service-bus.CreateQueueResponse>
    name: CreateQueueResponse>
    spec.typeScript:
      - name: Promise<
        fullName: Promise<
      - name: CreateQueueResponse
        fullName: CreateQueueResponse
        uid: '@azure/service-bus.CreateQueueResponse'
      - name: '>'
        fullName: '>'
  - uid: '@azure/service-bus.QueueDescription'
    name: QueueDescription
    spec.typeScript:
      - name: QueueDescription
        fullName: QueueDescription
        uid: '@azure/service-bus.QueueDescription'
  - uid: '@azure/service-bus.RuleDescription'
    name: RuleDescription
    spec.typeScript:
      - name: RuleDescription
        fullName: RuleDescription
        uid: '@azure/service-bus.RuleDescription'
  - uid: Promise<@azure/service-bus.CreateRuleResponse>
    name: CreateRuleResponse>
    spec.typeScript:
      - name: Promise<
        fullName: Promise<
      - name: CreateRuleResponse
        fullName: CreateRuleResponse
        uid: '@azure/service-bus.CreateRuleResponse'
      - name: '>'
        fullName: '>'
  - uid: Promise<@azure/service-bus.CreateSubscriptionResponse>
    name: CreateSubscriptionResponse>
    spec.typeScript:
      - name: Promise<
        fullName: Promise<
      - name: CreateSubscriptionResponse
        fullName: CreateSubscriptionResponse
        uid: '@azure/service-bus.CreateSubscriptionResponse'
      - name: '>'
        fullName: '>'
  - uid: '@azure/service-bus.SubscriptionDescription'
    name: SubscriptionDescription
    spec.typeScript:
      - name: SubscriptionDescription
        fullName: SubscriptionDescription
        uid: '@azure/service-bus.SubscriptionDescription'
  - uid: Promise<@azure/service-bus.CreateTopicResponse>
    name: CreateTopicResponse>
    spec.typeScript:
      - name: Promise<
        fullName: Promise<
      - name: CreateTopicResponse
        fullName: CreateTopicResponse
        uid: '@azure/service-bus.CreateTopicResponse'
      - name: '>'
        fullName: '>'
  - uid: '@azure/service-bus.TopicDescription'
    name: TopicDescription
    spec.typeScript:
      - name: TopicDescription
        fullName: TopicDescription
        uid: '@azure/service-bus.TopicDescription'
  - uid: Promise<@azure/service-bus.DeleteQueueResponse>
    name: DeleteQueueResponse>
    spec.typeScript:
      - name: Promise<
        fullName: Promise<
      - name: DeleteQueueResponse
        fullName: DeleteQueueResponse
        uid: '@azure/service-bus.DeleteQueueResponse'
      - name: '>'
        fullName: '>'
  - uid: Promise<@azure/service-bus.DeleteRuleResponse>
    name: DeleteRuleResponse>
    spec.typeScript:
      - name: Promise<
        fullName: Promise<
      - name: DeleteRuleResponse
        fullName: DeleteRuleResponse
        uid: '@azure/service-bus.DeleteRuleResponse'
      - name: '>'
        fullName: '>'
  - uid: Promise<@azure/service-bus.DeleteSubscriptionResponse>
    name: DeleteSubscriptionResponse>
    spec.typeScript:
      - name: Promise<
        fullName: Promise<
      - name: DeleteSubscriptionResponse
        fullName: DeleteSubscriptionResponse
        uid: '@azure/service-bus.DeleteSubscriptionResponse'
      - name: '>'
        fullName: '>'
  - uid: Promise<@azure/service-bus.DeleteTopicResponse>
    name: DeleteTopicResponse>
    spec.typeScript:
      - name: Promise<
        fullName: Promise<
      - name: DeleteTopicResponse
        fullName: DeleteTopicResponse
        uid: '@azure/service-bus.DeleteTopicResponse'
      - name: '>'
        fullName: '>'
  - uid: Promise<@azure/service-bus.GetNamespaceResponse>
    name: GetNamespaceResponse>
    spec.typeScript:
      - name: Promise<
        fullName: Promise<
      - name: GetNamespaceResponse
        fullName: GetNamespaceResponse
        uid: '@azure/service-bus.GetNamespaceResponse'
      - name: '>'
        fullName: '>'
  - uid: Promise<@azure/service-bus.GetQueueResponse>
    name: GetQueueResponse>
    spec.typeScript:
      - name: Promise<
        fullName: Promise<
      - name: GetQueueResponse
        fullName: GetQueueResponse
        uid: '@azure/service-bus.GetQueueResponse'
      - name: '>'
        fullName: '>'
  - uid: Promise<@azure/service-bus.GetQueueRuntimeInfoResponse>
    name: GetQueueRuntimeInfoResponse>
    spec.typeScript:
      - name: Promise<
        fullName: Promise<
      - name: GetQueueRuntimeInfoResponse
        fullName: GetQueueRuntimeInfoResponse
        uid: '@azure/service-bus.GetQueueRuntimeInfoResponse'
      - name: '>'
        fullName: '>'
  - uid: '@azure/service-bus.ListRequestOptions'
    name: ListRequestOptions
    spec.typeScript:
      - name: ListRequestOptions
        fullName: ListRequestOptions
        uid: '@azure/service-bus.ListRequestOptions'
  - uid: Promise<@azure/service-bus.GetQueuesResponse>
    name: GetQueuesResponse>
    spec.typeScript:
      - name: Promise<
        fullName: Promise<
      - name: GetQueuesResponse
        fullName: GetQueuesResponse
        uid: '@azure/service-bus.GetQueuesResponse'
      - name: '>'
        fullName: '>'
  - uid: Promise<@azure/service-bus.GetQueuesRuntimeInfoResponse>
    name: GetQueuesRuntimeInfoResponse>
    spec.typeScript:
      - name: Promise<
        fullName: Promise<
      - name: GetQueuesRuntimeInfoResponse
        fullName: GetQueuesRuntimeInfoResponse
        uid: '@azure/service-bus.GetQueuesRuntimeInfoResponse'
      - name: '>'
        fullName: '>'
  - uid: Promise<@azure/service-bus.GetRuleResponse>
    name: GetRuleResponse>
    spec.typeScript:
      - name: Promise<
        fullName: Promise<
      - name: GetRuleResponse
        fullName: GetRuleResponse
        uid: '@azure/service-bus.GetRuleResponse'
      - name: '>'
        fullName: '>'
  - uid: Promise<@azure/service-bus.GetRulesResponse>
    name: GetRulesResponse>
    spec.typeScript:
      - name: Promise<
        fullName: Promise<
      - name: GetRulesResponse
        fullName: GetRulesResponse
        uid: '@azure/service-bus.GetRulesResponse'
      - name: '>'
        fullName: '>'
  - uid: Promise<@azure/service-bus.GetSubscriptionResponse>
    name: GetSubscriptionResponse>
    spec.typeScript:
      - name: Promise<
        fullName: Promise<
      - name: GetSubscriptionResponse
        fullName: GetSubscriptionResponse
        uid: '@azure/service-bus.GetSubscriptionResponse'
      - name: '>'
        fullName: '>'
  - uid: Promise<@azure/service-bus.GetSubscriptionRuntimeInfoResponse>
    name: GetSubscriptionRuntimeInfoResponse>
    spec.typeScript:
      - name: Promise<
        fullName: Promise<
      - name: GetSubscriptionRuntimeInfoResponse
        fullName: GetSubscriptionRuntimeInfoResponse
        uid: '@azure/service-bus.GetSubscriptionRuntimeInfoResponse'
      - name: '>'
        fullName: '>'
  - uid: Promise<@azure/service-bus.GetSubscriptionsResponse>
    name: GetSubscriptionsResponse>
    spec.typeScript:
      - name: Promise<
        fullName: Promise<
      - name: GetSubscriptionsResponse
        fullName: GetSubscriptionsResponse
        uid: '@azure/service-bus.GetSubscriptionsResponse'
      - name: '>'
        fullName: '>'
  - uid: Promise<@azure/service-bus.GetSubscriptionsRuntimeInfoResponse>
    name: GetSubscriptionsRuntimeInfoResponse>
    spec.typeScript:
      - name: Promise<
        fullName: Promise<
      - name: GetSubscriptionsRuntimeInfoResponse
        fullName: GetSubscriptionsRuntimeInfoResponse
        uid: '@azure/service-bus.GetSubscriptionsRuntimeInfoResponse'
      - name: '>'
        fullName: '>'
  - uid: Promise<@azure/service-bus.GetTopicResponse>
    name: GetTopicResponse>
    spec.typeScript:
      - name: Promise<
        fullName: Promise<
      - name: GetTopicResponse
        fullName: GetTopicResponse
        uid: '@azure/service-bus.GetTopicResponse'
      - name: '>'
        fullName: '>'
  - uid: Promise<@azure/service-bus.GetTopicRuntimeInfoResponse>
    name: GetTopicRuntimeInfoResponse>
    spec.typeScript:
      - name: Promise<
        fullName: Promise<
      - name: GetTopicRuntimeInfoResponse
        fullName: GetTopicRuntimeInfoResponse
        uid: '@azure/service-bus.GetTopicRuntimeInfoResponse'
      - name: '>'
        fullName: '>'
  - uid: Promise<@azure/service-bus.GetTopicsResponse>
    name: GetTopicsResponse>
    spec.typeScript:
      - name: Promise<
        fullName: Promise<
      - name: GetTopicsResponse
        fullName: GetTopicsResponse
        uid: '@azure/service-bus.GetTopicsResponse'
      - name: '>'
        fullName: '>'
  - uid: Promise<@azure/service-bus.GetTopicsRuntimeInfoResponse>
    name: GetTopicsRuntimeInfoResponse>
    spec.typeScript:
      - name: Promise<
        fullName: Promise<
      - name: GetTopicsRuntimeInfoResponse
        fullName: GetTopicsRuntimeInfoResponse
        uid: '@azure/service-bus.GetTopicsRuntimeInfoResponse'
      - name: '>'
        fullName: '>'
  - uid: Promise<@azure/service-bus.UpdateQueueResponse>
    name: UpdateQueueResponse>
    spec.typeScript:
      - name: Promise<
        fullName: Promise<
      - name: UpdateQueueResponse
        fullName: UpdateQueueResponse
        uid: '@azure/service-bus.UpdateQueueResponse'
      - name: '>'
        fullName: '>'
  - uid: Promise<@azure/service-bus.UpdateRuleResponse>
    name: UpdateRuleResponse>
    spec.typeScript:
      - name: Promise<
        fullName: Promise<
      - name: UpdateRuleResponse
        fullName: UpdateRuleResponse
        uid: '@azure/service-bus.UpdateRuleResponse'
      - name: '>'
        fullName: '>'
  - uid: Promise<@azure/service-bus.UpdateSubscriptionResponse>
    name: UpdateSubscriptionResponse>
    spec.typeScript:
      - name: Promise<
        fullName: Promise<
      - name: UpdateSubscriptionResponse
        fullName: UpdateSubscriptionResponse
        uid: '@azure/service-bus.UpdateSubscriptionResponse'
      - name: '>'
        fullName: '>'
  - uid: Promise<@azure/service-bus.UpdateTopicResponse>
    name: UpdateTopicResponse>
    spec.typeScript:
      - name: Promise<
        fullName: Promise<
      - name: UpdateTopicResponse
        fullName: UpdateTopicResponse
        uid: '@azure/service-bus.UpdateTopicResponse'
      - name: '>'
        fullName: '>'
