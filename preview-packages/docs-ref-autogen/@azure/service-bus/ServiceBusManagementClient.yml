### YamlMime:TSType
name: ServiceBusManagementClient
uid: '@azure/service-bus.ServiceBusManagementClient'
package: '@azure/service-bus'
summary: >-
  All operations return promises that resolve to an object that has the relevant
  output.

  These objects also have a property called `_response` that you can use if you
  want to

  access the direct response from the service.
fullName: ServiceBusManagementClient
isPreview: false
isDeprecated: false
type: class
constructors:
  - name: 'ServiceBusManagementClient(string, ServiceBusManagementClientOptions)'
    uid: '@azure/service-bus.ServiceBusManagementClient.constructor'
    package: '@azure/service-bus'
    summary: Initializes a new instance of the ServiceBusManagementClient class.
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        new ServiceBusManagementClient(connectionString: string, options?:
        ServiceBusManagementClientOptions)
      parameters:
        - id: connectionString
          type: string
          description: The connection string needed for the client to connect to Azure.
        - id: options
          type: <xref uid="@azure/service-bus.ServiceBusManagementClientOptions" />
          description: |
            ServiceBusManagementClientOptions
  - name: >-
      ServiceBusManagementClient(string, TokenCredential,
      ServiceBusManagementClientOptions)
    uid: '@azure/service-bus.ServiceBusManagementClient.constructor_1'
    package: '@azure/service-bus'
    summary: Initializes a new instance of the ServiceBusManagementClient class.
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        new ServiceBusManagementClient(fullyQualifiedNamespace: string,
        credential: TokenCredential, options?:
        ServiceBusManagementClientOptions)
      parameters:
        - id: fullyQualifiedNamespace
          type: string
          description: |-
            The fully qualified namespace of your Service Bus instance which is
            likely to be similar to <yournamespace>.servicebus.windows.net.
        - id: credential
          type: TokenCredential
          description: >-
            A credential object used by the client to get the token to
            authenticate the connection

            with the Azure Service Bus. See &commat;azure/identity for creating
            the credentials.

            If you're using your own implementation of the `TokenCredential`
            interface against AAD, then set the "scopes" for service-bus

            to be `["https://servicebus.azure.net//user_impersonation"]` to get
            the appropriate token.
        - id: options
          type: <xref uid="@azure/service-bus.ServiceBusManagementClientOptions" />
          description: |
            ServiceBusManagementClientOptions
methods:
  - name: 'createQueue(string, CreateQueueOptions)'
    uid: '@azure/service-bus.ServiceBusManagementClient.createQueue'
    package: '@azure/service-bus'
    summary: 'Creates a queue with given name, configured using the given options'
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'function createQueue(queueName: string, options?: CreateQueueOptions)'
      parameters:
        - id: queueName
          type: string
          description: ''
        - id: options
          type: <xref uid="@azure/service-bus.CreateQueueOptions" />
          description: >-
            Options to configure the Queue being created(For example, you can
            configure a queue to support partitions or sessions)
             and the operation options that can be used to abort, trace and control other configurations on the HTTP request.

            Following are errors that can be expected from this operation
      return:
        type: Promise&lt;<xref uid="@azure/service-bus.QueueResponse" />&gt;
        description: ''
  - name: >-
      createRule(string, string, string, SqlRuleFilter | CorrelationRuleFilter,
      OperationOptions)
    uid: '@azure/service-bus.ServiceBusManagementClient.createRule'
    package: '@azure/service-bus'
    summary: 'Creates a rule with given name, configured using the given options.'
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function createRule(topicName: string, subscriptionName: string,
        ruleName: string, ruleFilter: SqlRuleFilter | CorrelationRuleFilter,
        operationOptions?: OperationOptions)
      parameters:
        - id: topicName
          type: string
          description: ''
        - id: subscriptionName
          type: string
          description: ''
        - id: ruleName
          type: string
          description: ''
        - id: ruleFilter
          type: >-
            <xref uid="@azure/service-bus.SqlRuleFilter" /> | <xref
            uid="@azure/service-bus.CorrelationRuleFilter" />
          description: Defines the filter expression that the rule evaluates.
        - id: operationOptions
          type: OperationOptions
          description: >-
            The options that can be used to abort, trace and control other
            configurations on the HTTP request.


            Following are errors that can be expected from this operation
      return:
        type: Promise&lt;<xref uid="@azure/service-bus.RuleResponse" />&gt;
        description: ''
  - name: >-
      createRule(string, string, string, SqlRuleFilter | CorrelationRuleFilter,
      SqlRuleAction, OperationOptions)
    uid: '@azure/service-bus.ServiceBusManagementClient.createRule_1'
    package: '@azure/service-bus'
    summary: 'Creates a rule with given name, configured using the given options.'
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function createRule(topicName: string, subscriptionName: string,
        ruleName: string, ruleFilter: SqlRuleFilter | CorrelationRuleFilter,
        ruleAction: SqlRuleAction, operationOptions?: OperationOptions)
      parameters:
        - id: topicName
          type: string
          description: ''
        - id: subscriptionName
          type: string
          description: ''
        - id: ruleName
          type: string
          description: ''
        - id: ruleFilter
          type: >-
            <xref uid="@azure/service-bus.SqlRuleFilter" /> | <xref
            uid="@azure/service-bus.CorrelationRuleFilter" />
          description: Defines the filter expression that the rule evaluates.
        - id: ruleAction
          type: <xref uid="@azure/service-bus.SqlRuleAction" />
          description: >-
            The SQL like expression that can be executed on the message should
            the associated filter apply.
        - id: operationOptions
          type: OperationOptions
          description: >-
            The options that can be used to abort, trace and control other
            configurations on the HTTP request.


            Following are errors that can be expected from this operation
      return:
        type: Promise&lt;<xref uid="@azure/service-bus.RuleResponse" />&gt;
        description: ''
  - name: 'createSubscription(string, string, CreateSubscriptionOptions)'
    uid: '@azure/service-bus.ServiceBusManagementClient.createSubscription'
    package: '@azure/service-bus'
    summary: 'Creates a subscription with given name, configured using the given options'
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function createSubscription(topicName: string, subscriptionName: string,
        options?: CreateSubscriptionOptions)
      parameters:
        - id: topicName
          type: string
          description: ''
        - id: subscriptionName
          type: string
          description: ''
        - id: options
          type: <xref uid="@azure/service-bus.CreateSubscriptionOptions" />
          description: >-
            Options to configure the Subscription being created(For example, you
            can configure a Subscription to support partitions or sessions)

            and the operation options that can be used to abort, trace and
            control other configurations on the HTTP request.


            Following are errors that can be expected from this operation
      return:
        type: Promise&lt;<xref uid="@azure/service-bus.SubscriptionResponse" />&gt;
        description: ''
  - name: 'createTopic(string, CreateTopicOptions)'
    uid: '@azure/service-bus.ServiceBusManagementClient.createTopic'
    package: '@azure/service-bus'
    summary: 'Creates a topic with given name, configured using the given options'
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'function createTopic(topicName: string, options?: CreateTopicOptions)'
      parameters:
        - id: topicName
          type: string
          description: ''
        - id: options
          type: <xref uid="@azure/service-bus.CreateTopicOptions" />
          description: >-
            Options to configure the Topic being created(For example, you can
            configure a topic to support partitions)

            and the operation options that can be used to abort, trace and
            control other configurations on the HTTP request.


            Following are errors that can be expected from this operation
      return:
        type: Promise&lt;<xref uid="@azure/service-bus.TopicResponse" />&gt;
        description: ''
  - name: 'deleteQueue(string, OperationOptions)'
    uid: '@azure/service-bus.ServiceBusManagementClient.deleteQueue'
    package: '@azure/service-bus'
    summary: Deletes a queue.
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function deleteQueue(queueName: string, operationOptions?:
        OperationOptions)
      parameters:
        - id: queueName
          type: string
          description: ''
        - id: operationOptions
          type: OperationOptions
          description: >-
            The options that can be used to abort, trace and control other
            configurations on the HTTP request.


            Following are errors that can be expected from this operation
      return:
        type: Promise&lt;<xref uid="@azure/service-bus.Response" />&gt;
        description: ''
  - name: 'deleteRule(string, string, string, OperationOptions)'
    uid: '@azure/service-bus.ServiceBusManagementClient.deleteRule'
    package: '@azure/service-bus'
    summary: Deletes a rule.
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function deleteRule(topicName: string, subscriptionName: string,
        ruleName: string, operationOptions?: OperationOptions)
      parameters:
        - id: topicName
          type: string
          description: ''
        - id: subscriptionName
          type: string
          description: ''
        - id: ruleName
          type: string
          description: ''
        - id: operationOptions
          type: OperationOptions
          description: >-
            The options that can be used to abort, trace and control other
            configurations on the HTTP request.


            Following are errors that can be expected from this operation
      return:
        type: Promise&lt;<xref uid="@azure/service-bus.Response" />&gt;
        description: ''
  - name: 'deleteSubscription(string, string, OperationOptions)'
    uid: '@azure/service-bus.ServiceBusManagementClient.deleteSubscription'
    package: '@azure/service-bus'
    summary: Deletes a subscription.
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function deleteSubscription(topicName: string, subscriptionName: string,
        operationOptions?: OperationOptions)
      parameters:
        - id: topicName
          type: string
          description: ''
        - id: subscriptionName
          type: string
          description: ''
        - id: operationOptions
          type: OperationOptions
          description: >-
            The options that can be used to abort, trace and control other
            configurations on the HTTP request.


            Following are errors that can be expected from this operation
      return:
        type: Promise&lt;<xref uid="@azure/service-bus.Response" />&gt;
        description: ''
  - name: 'deleteTopic(string, OperationOptions)'
    uid: '@azure/service-bus.ServiceBusManagementClient.deleteTopic'
    package: '@azure/service-bus'
    summary: Deletes a topic.
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function deleteTopic(topicName: string, operationOptions?:
        OperationOptions)
      parameters:
        - id: topicName
          type: string
          description: ''
        - id: operationOptions
          type: OperationOptions
          description: >-
            The options that can be used to abort, trace and control other
            configurations on the HTTP request.


            Following are errors that can be expected from this operation
      return:
        type: Promise&lt;<xref uid="@azure/service-bus.Response" />&gt;
        description: ''
  - name: getNamespaceProperties(OperationOptions)
    uid: '@azure/service-bus.ServiceBusManagementClient.getNamespaceProperties'
    package: '@azure/service-bus'
    summary: >-
      Returns an object representing the metadata related to a service bus
      namespace.
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'function getNamespaceProperties(operationOptions?: OperationOptions)'
      parameters:
        - id: operationOptions
          type: OperationOptions
          description: >+
            The options that can be used to abort, trace and control other
            configurations on the HTTP request.

      return:
        type: >-
          Promise&lt;<xref uid="@azure/service-bus.NamespacePropertiesResponse"
          />&gt;
        description: ''
  - name: 'getQueue(string, OperationOptions)'
    uid: '@azure/service-bus.ServiceBusManagementClient.getQueue'
    package: '@azure/service-bus'
    summary: >-
      Returns an object representing the Queue and its properties.

      If you want to get the Queue runtime info like message count details, use
      `getQueueRuntimeProperties` API.
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function getQueue(queueName: string, operationOptions?:
        OperationOptions)
      parameters:
        - id: queueName
          type: string
          description: ''
        - id: operationOptions
          type: OperationOptions
          description: >-
            The options that can be used to abort, trace and control other
            configurations on the HTTP request.


            Following are errors that can be expected from this operation
      return:
        type: Promise&lt;<xref uid="@azure/service-bus.QueueResponse" />&gt;
        description: ''
  - name: 'getQueueRuntimeProperties(string, OperationOptions)'
    uid: '@azure/service-bus.ServiceBusManagementClient.getQueueRuntimeProperties'
    package: '@azure/service-bus'
    summary: >-
      Returns an object representing the Queue runtime info like message count
      details.
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function getQueueRuntimeProperties(queueName: string, operationOptions?:
        OperationOptions)
      parameters:
        - id: queueName
          type: string
          description: ''
        - id: operationOptions
          type: OperationOptions
          description: >-
            The options that can be used to abort, trace and control other
            configurations on the HTTP request.


            Following are errors that can be expected from this operation
      return:
        type: >-
          Promise&lt;<xref
          uid="@azure/service-bus.QueueRuntimePropertiesResponse" />&gt;
        description: ''
  - name: 'getRule(string, string, string, OperationOptions)'
    uid: '@azure/service-bus.ServiceBusManagementClient.getRule'
    package: '@azure/service-bus'
    summary: >-
      Returns an object representing the Rule with the given name along with all
      its properties.
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function getRule(topicName: string, subscriptionName: string, ruleName:
        string, operationOptions?: OperationOptions)
      parameters:
        - id: topicName
          type: string
          description: ''
        - id: subscriptionName
          type: string
          description: ''
        - id: ruleName
          type: string
          description: ''
        - id: operationOptions
          type: OperationOptions
          description: >-
            The options that can be used to abort, trace and control other
            configurations on the HTTP request.


            Following are errors that can be expected from this operation
      return:
        type: Promise&lt;<xref uid="@azure/service-bus.RuleResponse" />&gt;
        description: ''
  - name: 'getSubscription(string, string, OperationOptions)'
    uid: '@azure/service-bus.ServiceBusManagementClient.getSubscription'
    package: '@azure/service-bus'
    summary: >-
      Returns an object representing the Subscription and its properties.

      If you want to get the Subscription runtime info like message count
      details, use `getSubscriptionRuntimeProperties` API.
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function getSubscription(topicName: string, subscriptionName: string,
        operationOptions?: OperationOptions)
      parameters:
        - id: topicName
          type: string
          description: ''
        - id: subscriptionName
          type: string
          description: ''
        - id: operationOptions
          type: OperationOptions
          description: >-
            The options that can be used to abort, trace and control other
            configurations on the HTTP request.


            Following are errors that can be expected from this operation
      return:
        type: Promise&lt;<xref uid="@azure/service-bus.SubscriptionResponse" />&gt;
        description: ''
  - name: 'getSubscriptionRuntimeProperties(string, string, OperationOptions)'
    uid: >-
      @azure/service-bus.ServiceBusManagementClient.getSubscriptionRuntimeProperties
    package: '@azure/service-bus'
    summary: >-
      Returns an object representing the Subscription runtime info like message
      count details.
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function getSubscriptionRuntimeProperties(topicName: string,
        subscriptionName: string, operationOptions?: OperationOptions)
      parameters:
        - id: topicName
          type: string
          description: ''
        - id: subscriptionName
          type: string
          description: ''
        - id: operationOptions
          type: OperationOptions
          description: >-
            The options that can be used to abort, trace and control other
            configurations on the HTTP request.


            Following are errors that can be expected from this operation
      return:
        type: >-
          Promise&lt;<xref
          uid="@azure/service-bus.SubscriptionRuntimePropertiesResponse" />&gt;
        description: ''
  - name: 'getTopic(string, OperationOptions)'
    uid: '@azure/service-bus.ServiceBusManagementClient.getTopic'
    package: '@azure/service-bus'
    summary: >-
      Returns an object representing the Topic and its properties.

      If you want to get the Topic runtime info like subscription count details,
      use `getTopicRuntimeProperties` API.
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function getTopic(topicName: string, operationOptions?:
        OperationOptions)
      parameters:
        - id: topicName
          type: string
          description: ''
        - id: operationOptions
          type: OperationOptions
          description: >-
            The options that can be used to abort, trace and control other
            configurations on the HTTP request.


            Following are errors that can be expected from this operation
      return:
        type: Promise&lt;<xref uid="@azure/service-bus.TopicResponse" />&gt;
        description: ''
  - name: 'getTopicRuntimeProperties(string, OperationOptions)'
    uid: '@azure/service-bus.ServiceBusManagementClient.getTopicRuntimeProperties'
    package: '@azure/service-bus'
    summary: >-
      Returns an object representing the Topic runtime info like subscription
      count.
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function getTopicRuntimeProperties(topicName: string, operationOptions?:
        OperationOptions)
      parameters:
        - id: topicName
          type: string
          description: ''
        - id: operationOptions
          type: OperationOptions
          description: >-
            The options that can be used to abort, trace and control other
            configurations on the HTTP request.


            Following are errors that can be expected from this operation
      return:
        type: >-
          Promise&lt;<xref
          uid="@azure/service-bus.TopicRuntimePropertiesResponse" />&gt;
        description: ''
  - name: listQueues(OperationOptions)
    uid: '@azure/service-bus.ServiceBusManagementClient.listQueues'
    package: '@azure/service-bus'
    summary: |
      Returns an async iterable iterator to list all the queues.
      .byPage() returns an async iterable iterator to list the queues in pages.
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'function listQueues(options?: OperationOptions)'
      parameters:
        - id: options
          type: OperationOptions
          description: ''
      return:
        type: >-
          PagedAsyncIterableIterator&lt;<xref
          uid="@azure/service-bus.QueueProperties" />, <xref
          uid="@azure/service-bus.EntitiesResponse" />&lt;<xref
          uid="@azure/service-bus.QueueProperties" />&gt;&gt;
        description: |-
          {PagedAsyncIterableIterator<
              QueueProperties,
              EntitiesResponse<QueueProperties>,
            >} An asyncIterableIterator that supports paging.
  - name: listQueuesRuntimeProperties(OperationOptions)
    uid: '@azure/service-bus.ServiceBusManagementClient.listQueuesRuntimeProperties'
    package: '@azure/service-bus'
    summary: >+
      Returns an async iterable iterator to list runtime info of the queues.

      .byPage() returns an async iterable iterator to list runtime info of the
      queues in pages.

    isPreview: false
    isDeprecated: false
    syntax:
      content: 'function listQueuesRuntimeProperties(options?: OperationOptions)'
      parameters:
        - id: options
          type: OperationOptions
          description: ''
      return:
        type: >-
          PagedAsyncIterableIterator&lt;<xref
          uid="@azure/service-bus.QueueRuntimeProperties" />, <xref
          uid="@azure/service-bus.EntitiesResponse" />&lt;<xref
          uid="@azure/service-bus.QueueRuntimeProperties" />&gt;&gt;
        description: |-
          {PagedAsyncIterableIterator<
              QueueRuntimeProperties,
              EntitiesResponse<QueueRuntimeProperties>,
            >} An asyncIterableIterator that supports paging.
  - name: 'listRules(string, string, OperationOptions)'
    uid: '@azure/service-bus.ServiceBusManagementClient.listRules'
    package: '@azure/service-bus'
    summary: |
      Returns an async iterable iterator to list all the rules
      under the specified subscription.
      .byPage() returns an async iterable iterator to list the rules in pages.
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listRules(topicName: string, subscriptionName: string,
        options?: OperationOptions)
      parameters:
        - id: topicName
          type: string
          description: ''
        - id: subscriptionName
          type: string
          description: ''
        - id: options
          type: OperationOptions
          description: ''
      return:
        type: >-
          PagedAsyncIterableIterator&lt;<xref
          uid="@azure/service-bus.RuleProperties" />, <xref
          uid="@azure/service-bus.EntitiesResponse" />&lt;<xref
          uid="@azure/service-bus.RuleProperties" />&gt;&gt;
        description: An asyncIterableIterator that supports paging.
  - name: 'listSubscriptions(string, OperationOptions)'
    uid: '@azure/service-bus.ServiceBusManagementClient.listSubscriptions'
    package: '@azure/service-bus'
    summary: >
      Returns an async iterable iterator to list all the subscriptions

      under the specified topic.

      .byPage() returns an async iterable iterator to list the subscriptions in
      pages.
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listSubscriptions(topicName: string, options?:
        OperationOptions)
      parameters:
        - id: topicName
          type: string
          description: ''
        - id: options
          type: OperationOptions
          description: ''
      return:
        type: >-
          PagedAsyncIterableIterator&lt;<xref
          uid="@azure/service-bus.SubscriptionProperties" />, <xref
          uid="@azure/service-bus.EntitiesResponse" />&lt;<xref
          uid="@azure/service-bus.SubscriptionProperties" />&gt;&gt;
        description: |-
          {PagedAsyncIterableIterator<
              SubscriptionProperties,
              EntitiesResponse<SubscriptionProperties>
            >} An asyncIterableIterator that supports paging.
  - name: 'listSubscriptionsRuntimeProperties(string, OperationOptions)'
    uid: >-
      @azure/service-bus.ServiceBusManagementClient.listSubscriptionsRuntimeProperties
    package: '@azure/service-bus'
    summary: >
      Returns an async iterable iterator to list runtime info of the
      subscriptions

      under the specified topic.

      .byPage() returns an async iterable iterator to list runtime info of
      subscriptions in pages.
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listSubscriptionsRuntimeProperties(topicName: string, options?:
        OperationOptions)
      parameters:
        - id: topicName
          type: string
          description: ''
        - id: options
          type: OperationOptions
          description: ''
      return:
        type: >-
          PagedAsyncIterableIterator&lt;<xref
          uid="@azure/service-bus.SubscriptionRuntimeProperties" />, <xref
          uid="@azure/service-bus.EntitiesResponse" />&lt;<xref
          uid="@azure/service-bus.SubscriptionRuntimeProperties" />&gt;&gt;
        description: |-
          {PagedAsyncIterableIterator<
              SubscriptionRuntimeProperties,
              EntitiesResponse<SubscriptionRuntimeProperties>,

            >}  An asyncIterableIterator that supports paging.
  - name: listTopics(OperationOptions)
    uid: '@azure/service-bus.ServiceBusManagementClient.listTopics'
    package: '@azure/service-bus'
    summary: |+
      Returns an async iterable iterator to list all the topics.
      .byPage() returns an async iterable iterator to list the topics in pages.

    isPreview: false
    isDeprecated: false
    syntax:
      content: 'function listTopics(options?: OperationOptions)'
      parameters:
        - id: options
          type: OperationOptions
          description: ''
      return:
        type: >-
          PagedAsyncIterableIterator&lt;<xref
          uid="@azure/service-bus.TopicProperties" />, <xref
          uid="@azure/service-bus.EntitiesResponse" />&lt;<xref
          uid="@azure/service-bus.TopicProperties" />&gt;&gt;
        description: |-
          {PagedAsyncIterableIterator<
              TopicProperties,
              EntitiesResponse<TopicProperties>,
            >} An asyncIterableIterator that supports paging.
  - name: listTopicsRuntimeProperties(OperationOptions)
    uid: '@azure/service-bus.ServiceBusManagementClient.listTopicsRuntimeProperties'
    package: '@azure/service-bus'
    summary: >+
      Returns an async iterable iterator to list runtime info of the topics.

      .byPage() returns an async iterable iterator to list runtime info of the
      topics in pages.

    isPreview: false
    isDeprecated: false
    syntax:
      content: 'function listTopicsRuntimeProperties(options?: OperationOptions)'
      parameters:
        - id: options
          type: OperationOptions
          description: ''
      return:
        type: >-
          PagedAsyncIterableIterator&lt;<xref
          uid="@azure/service-bus.TopicRuntimeProperties" />, <xref
          uid="@azure/service-bus.EntitiesResponse" />&lt;<xref
          uid="@azure/service-bus.TopicRuntimeProperties" />&gt;&gt;
        description: |-
          {PagedAsyncIterableIterator<
              TopicRuntimeProperties,
              EntitiesResponse<TopicRuntimeProperties>,

            >} An asyncIterableIterator that supports paging.
  - name: 'queueExists(string, OperationOptions)'
    uid: '@azure/service-bus.ServiceBusManagementClient.queueExists'
    package: '@azure/service-bus'
    summary: Checks whether a given queue exists or not.
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function queueExists(queueName: string, operationOptions?:
        OperationOptions)
      parameters:
        - id: queueName
          type: string
          description: ''
        - id: operationOptions
          type: OperationOptions
          description: >
            The options that can be used to abort, trace and control other
            configurations on the HTTP request.
      return:
        type: Promise&lt;boolean&gt;
        description: ''
  - name: >-
      sendOperationRequest(OperationArguments, OperationSpec,
      ServiceCallback<any>)
    uid: '@azure/service-bus.ServiceBusManagementClient.sendOperationRequest'
    package: '@azure/service-bus'
    summary: Send an HTTP request that is populated using the provided OperationSpec.
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function sendOperationRequest(operationArguments: OperationArguments,
        operationSpec: OperationSpec, callback?: ServiceCallback<any>)
      parameters:
        - id: operationArguments
          type: OperationArguments
          description: >-
            The arguments that the HTTP request's templated values will be
            populated from.
        - id: operationSpec
          type: OperationSpec
          description: The OperationSpec to use to populate the httpRequest.
        - id: callback
          type: ServiceCallback&lt;any&gt;
          description: |
            The callback to call when the response is received.
      return:
        type: Promise&lt;RestResponse&gt;
        description: ''
  - name: sendRequest(RequestPrepareOptions | WebResourceLike)
    uid: '@azure/service-bus.ServiceBusManagementClient.sendRequest'
    package: '@azure/service-bus'
    summary: Send the provided httpRequest.
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'function sendRequest(options: RequestPrepareOptions | WebResourceLike)'
      parameters:
        - id: options
          type: RequestPrepareOptions | WebResourceLike
          description: ''
      return:
        type: Promise&lt;HttpOperationResponse&gt;
        description: ''
  - name: 'subscriptionExists(string, string, OperationOptions)'
    uid: '@azure/service-bus.ServiceBusManagementClient.subscriptionExists'
    package: '@azure/service-bus'
    summary: Checks whether a given subscription exists in the topic or not.
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function subscriptionExists(topicName: string, subscriptionName: string,
        operationOptions?: OperationOptions)
      parameters:
        - id: topicName
          type: string
          description: ''
        - id: subscriptionName
          type: string
          description: ''
        - id: operationOptions
          type: OperationOptions
          description: >+
            The options that can be used to abort, trace and control other
            configurations on the HTTP request.

      return:
        type: Promise&lt;boolean&gt;
        description: ''
  - name: 'topicExists(string, OperationOptions)'
    uid: '@azure/service-bus.ServiceBusManagementClient.topicExists'
    package: '@azure/service-bus'
    summary: Checks whether a given topic exists or not.
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function topicExists(topicName: string, operationOptions?:
        OperationOptions)
      parameters:
        - id: topicName
          type: string
          description: ''
        - id: operationOptions
          type: OperationOptions
          description: >
            The options that can be used to abort, trace and control other
            configurations on the HTTP request.
      return:
        type: Promise&lt;boolean&gt;
        description: ''
  - name: 'updateQueue(QueueProperties, OperationOptions)'
    uid: '@azure/service-bus.ServiceBusManagementClient.updateQueue'
    package: '@azure/service-bus'
    summary: >-
      Updates the queue based on the queue properties provided.

      All queue properties must be set even though only a subset of them are
      actually updatable.

      Therefore, the suggested flow is to use `getQueue()` to get the complete
      set of queue properties,

      update as needed and then pass it to `updateQueue()`.

      See https://docs.microsoft.com/en-us/rest/api/servicebus/update-queue for
      more details.
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function updateQueue(queue: QueueProperties, operationOptions?:
        OperationOptions)
      parameters:
        - id: queue
          type: <xref uid="@azure/service-bus.QueueProperties" />
          description: >-
            Object representing the properties of the queue.

            `requiresSession`, `requiresDuplicateDetection`,
            `enablePartitioning`, and `name` can't be updated after creating the
            queue.
        - id: operationOptions
          type: OperationOptions
          description: >-
            The options that can be used to abort, trace and control other
            configurations on the HTTP request.


            Following are errors that can be expected from this operation
      return:
        type: Promise&lt;<xref uid="@azure/service-bus.QueueResponse" />&gt;
        description: ''
  - name: 'updateRule(string, string, RuleProperties, OperationOptions)'
    uid: '@azure/service-bus.ServiceBusManagementClient.updateRule'
    package: '@azure/service-bus'
    summary: >-
      Updates properties on the Rule by the given name based on the given
      options.

      All rule properties must be set even if one of them is being updated.

      Therefore, the suggested flow is to use `getRule()` to get the complete
      set of rule properties,

      update as needed and then pass it to `updateRule()`.
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function updateRule(topicName: string, subscriptionName: string, rule:
        RuleProperties, operationOptions?: OperationOptions)
      parameters:
        - id: topicName
          type: string
          description: ''
        - id: subscriptionName
          type: string
          description: ''
        - id: rule
          type: <xref uid="@azure/service-bus.RuleProperties" />
          description: >-
            Options to configure the Rule being updated.

            For example, you can configure the filter to apply on associated
            Topic/Subscription.
        - id: operationOptions
          type: OperationOptions
          description: >-
            The options that can be used to abort, trace and control other
            configurations on the HTTP request.


            Following are errors that can be expected from this operation
      return:
        type: Promise&lt;<xref uid="@azure/service-bus.RuleResponse" />&gt;
        description: ''
  - name: 'updateSubscription(SubscriptionProperties, OperationOptions)'
    uid: '@azure/service-bus.ServiceBusManagementClient.updateSubscription'
    package: '@azure/service-bus'
    summary: >-
      Updates the subscription based on the subscription properties provided.

      All subscription properties must be set even though only a subset of them
      are actually updatable.

      Therefore, the suggested flow is to use `getSubscription()` to get the
      complete set of subscription properties,

      update as needed and then pass it to `updateSubscription()`.
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function updateSubscription(subscription: SubscriptionProperties,
        operationOptions?: OperationOptions)
      parameters:
        - id: subscription
          type: <xref uid="@azure/service-bus.SubscriptionProperties" />
          description: >-
            Object representing the properties of the subscription.

            `subscriptionName`, `topicName`, and `requiresSession` can't be
            updated after creating the subscription.
        - id: operationOptions
          type: OperationOptions
          description: >-
            The options that can be used to abort, trace and control other
            configurations on the HTTP request.


            Following are errors that can be expected from this operation
      return:
        type: Promise&lt;<xref uid="@azure/service-bus.SubscriptionResponse" />&gt;
        description: ''
  - name: 'updateTopic(TopicProperties, OperationOptions)'
    uid: '@azure/service-bus.ServiceBusManagementClient.updateTopic'
    package: '@azure/service-bus'
    summary: >-
      Updates the topic based on the topic properties provided.

      All topic properties must be set even though only a subset of them are
      actually updatable.

      Therefore, the suggested flow is to use `getTopic()` to get the complete
      set of topic properties,

      update as needed and then pass it to `updateTopic()`.

      See https://docs.microsoft.com/en-us/rest/api/servicebus/update-topic for
      more details.
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function updateTopic(topic: TopicProperties, operationOptions?:
        OperationOptions)
      parameters:
        - id: topic
          type: <xref uid="@azure/service-bus.TopicProperties" />
          description: >-
            Object representing the properties of the topic.

            `requiresDuplicateDetection`, `enablePartitioning`, and `name` can't
            be updated after creating the topic.
        - id: operationOptions
          type: OperationOptions
          description: >-
            The options that can be used to abort, trace and control other
            configurations on the HTTP request.


            Following are errors that can be expected from this operation
      return:
        type: Promise&lt;<xref uid="@azure/service-bus.TopicResponse" />&gt;
        description: ''
extends: ServiceClient
