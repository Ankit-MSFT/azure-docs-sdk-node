### YamlMime:UniversalReference
items:
  - uid: '@azure/eventgrid.EventGridConsumer'
    name: EventGridConsumer
    fullName: EventGridConsumer
    children:
      - '@azure/eventgrid.EventGridConsumer.customDeserializers'
      - '@azure/eventgrid.EventGridConsumer.deserializeCloudEvents_1'
      - '@azure/eventgrid.EventGridConsumer.deserializeCloudEvents'
      - '@azure/eventgrid.EventGridConsumer.deserializeEventGridEvents_1'
      - '@azure/eventgrid.EventGridConsumer.deserializeEventGridEvents'
      - '@azure/eventgrid.EventGridConsumer.constructor'
    langs:
      - typeScript
    type: class
    summary: >
      EventGridConsumer is used to aid in processing events delivered by
      EventGrid. It can deserialize a JSON encoded payload

      of either a single event or batch of events as well as be used to convert
      the result of `JSON.parse` into an

      `EventGridEvent` or `CloudEvent` like object.

      Unlike normal JSON deseralization, EventGridConsumer does some additional
      conversions:


      - The consumer parses the event time property into a `Date` object, for
      ease of use.

      - When deserializing an event in the CloudEvent schema, if the event
      contains binary data, it is base64 decoded
        and returned as an instance of the `Uint8Array` type.
      - The `data` payload from system events is converted to match the
      interfaces this library defines.


      When constructing an `EventGridConsumer`, a map of event types to custom
      deserializers may be provided. When

      deserializing, if a custom deserializer has been registered for a given
      event type, it will be called with the

      data object. The object this deserializer returns will replace the
      existing data object.
    package: '@azure/eventgrid'
  - uid: '@azure/eventgrid.EventGridConsumer.customDeserializers'
    name: customDeserializers
    fullName: customDeserializers
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'customDeserializers: Record<string, CustomEventDataDeserializer>'
      return:
        type:
          - 'Record<string, @azure/eventgrid.CustomEventDataDeserializer>'
        description: ''
    package: '@azure/eventgrid'
  - uid: '@azure/eventgrid.EventGridConsumer.deserializeCloudEvents_1'
    name: deserializeCloudEvents(object)
    children: []
    type: method
    langs:
      - typeScript
    summary: Deserializes events encoded in the Cloud Events 1.0 schema.
    syntax:
      content: 'function deserializeCloudEvents(encodedEvents: object)'
      parameters:
        - id: encodedEvents
          type:
            - object
          description: >
            an object representing a single event, encoded in the Cloud Events
            1.0 schema.
      return:
        type:
          - 'Promise<@azure/eventgrid.CloudEvent<unknown>[]>'
        description: ''
    package: '@azure/eventgrid'
  - uid: '@azure/eventgrid.EventGridConsumer.deserializeCloudEvents'
    name: deserializeCloudEvents(string)
    children: []
    type: method
    langs:
      - typeScript
    summary: Deserializes events encoded in the Cloud Events 1.0 schema.
    syntax:
      content: 'function deserializeCloudEvents(encodedEvents: string)'
      parameters:
        - id: encodedEvents
          type:
            - string
          description: >
            the JSON encoded representation of either a single event or an array
            of

            events, encoded in the Cloud Events 1.0 Schema.
      return:
        type:
          - 'Promise<@azure/eventgrid.CloudEvent<unknown>[]>'
        description: ''
    package: '@azure/eventgrid'
  - uid: '@azure/eventgrid.EventGridConsumer.deserializeEventGridEvents_1'
    name: deserializeEventGridEvents(object)
    children: []
    type: method
    langs:
      - typeScript
    summary: Deserializes events encoded in the Event Grid schema.
    syntax:
      content: 'function deserializeEventGridEvents(encodedEvents: object)'
      parameters:
        - id: encodedEvents
          type:
            - object
          description: >
            an object representing a single event, encoded in the Event Grid
            schema.
      return:
        type:
          - 'Promise<@azure/eventgrid.EventGridEvent<unknown>[]>'
        description: ''
    package: '@azure/eventgrid'
  - uid: '@azure/eventgrid.EventGridConsumer.deserializeEventGridEvents'
    name: deserializeEventGridEvents(string)
    children: []
    type: method
    langs:
      - typeScript
    summary: Deserializes events encoded in the Event Grid schema.
    syntax:
      content: 'function deserializeEventGridEvents(encodedEvents: string)'
      parameters:
        - id: encodedEvents
          type:
            - string
          description: >
            the JSON encoded representation of either a single event or an array
            of

            events, encoded in the Event Grid Schema.
      return:
        type:
          - 'Promise<@azure/eventgrid.EventGridEvent<unknown>[]>'
        description: ''
    package: '@azure/eventgrid'
  - uid: '@azure/eventgrid.EventGridConsumer.constructor'
    name: EventGridConsumer(EventGridConsumerOptions)
    children: []
    type: constructor
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'new EventGridConsumer(options?: EventGridConsumerOptions)'
      parameters:
        - id: options
          type:
            - '@azure/eventgrid.EventGridConsumerOptions'
          description: ''
          optional: true
    package: '@azure/eventgrid'
references:
  - uid: '@azure/eventgrid.EventGridConsumerOptions'
    name: EventGridConsumerOptions
    spec.typeScript:
      - name: EventGridConsumerOptions
        fullName: EventGridConsumerOptions
        uid: '@azure/eventgrid.EventGridConsumerOptions'
  - uid: 'Record<string, @azure/eventgrid.CustomEventDataDeserializer>'
    name: CustomEventDataDeserializer>
    spec.typeScript:
      - name: 'Record<string, '
        fullName: 'Record<string, '
      - name: CustomEventDataDeserializer
        fullName: CustomEventDataDeserializer
        uid: '@azure/eventgrid.CustomEventDataDeserializer'
      - name: '>'
        fullName: '>'
  - uid: 'Promise<@azure/eventgrid.CloudEvent<unknown>[]>'
    name: 'CloudEvent<unknown>[]>'
    spec.typeScript:
      - name: Promise<
        fullName: Promise<
      - name: CloudEvent
        fullName: CloudEvent
        uid: '@azure/eventgrid.CloudEvent'
      - name: '<unknown>[]>'
        fullName: '<unknown>[]>'
  - uid: 'Promise<@azure/eventgrid.EventGridEvent<unknown>[]>'
    name: 'EventGridEvent<unknown>[]>'
    spec.typeScript:
      - name: Promise<
        fullName: Promise<
      - name: EventGridEvent
        fullName: EventGridEvent
        uid: '@azure/eventgrid.EventGridEvent'
      - name: '<unknown>[]>'
        fullName: '<unknown>[]>'
