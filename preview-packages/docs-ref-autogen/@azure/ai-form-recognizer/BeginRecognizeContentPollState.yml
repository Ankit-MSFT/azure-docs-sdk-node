### YamlMime:UniversalReference
items:
  - uid: '@azure/ai-form-recognizer.BeginRecognizeContentPollState'
    name: BeginRecognizeContentPollState
    fullName: BeginRecognizeContentPollState
    children:
      - '@azure/ai-form-recognizer.BeginRecognizeContentPollState.analyzeOptions'
      - '@azure/ai-form-recognizer.BeginRecognizeContentPollState.client'
      - '@azure/ai-form-recognizer.BeginRecognizeContentPollState.contentType'
      - '@azure/ai-form-recognizer.BeginRecognizeContentPollState.error'
      - '@azure/ai-form-recognizer.BeginRecognizeContentPollState.isCancelled'
      - '@azure/ai-form-recognizer.BeginRecognizeContentPollState.isCompleted'
      - '@azure/ai-form-recognizer.BeginRecognizeContentPollState.isStarted'
      - '@azure/ai-form-recognizer.BeginRecognizeContentPollState.result'
      - '@azure/ai-form-recognizer.BeginRecognizeContentPollState.resultId'
      - '@azure/ai-form-recognizer.BeginRecognizeContentPollState.source'
      - '@azure/ai-form-recognizer.BeginRecognizeContentPollState.status'
    langs:
      - typeScript
    type: interface
    summary: ''
    extends:
      name: PollOperationState<@azure/ai-form-recognizer.FormPageArray>
    package: '@azure/ai-form-recognizer'
  - uid: '@azure/ai-form-recognizer.BeginRecognizeContentPollState.analyzeOptions'
    name: analyzeOptions
    fullName: analyzeOptions
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    optional: true
    syntax:
      content: 'analyzeOptions?: RecognizeContentOptions'
      return:
        type:
          - '@azure/ai-form-recognizer.RecognizeContentOptions'
        description: ''
    package: '@azure/ai-form-recognizer'
  - uid: '@azure/ai-form-recognizer.BeginRecognizeContentPollState.client'
    name: client
    fullName: client
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'client: RecognizeContentPollerClient'
      return:
        type:
          - '@azure/ai-form-recognizer.RecognizeContentPollerClient'
        description: ''
    package: '@azure/ai-form-recognizer'
  - uid: '@azure/ai-form-recognizer.BeginRecognizeContentPollState.contentType'
    name: contentType
    fullName: contentType
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    optional: true
    syntax:
      content: 'contentType?: FormContentType'
      return:
        type:
          - '@azure/ai-form-recognizer.FormContentType'
        description: ''
    package: '@azure/ai-form-recognizer'
  - uid: '@azure/ai-form-recognizer.BeginRecognizeContentPollState.error'
    name: error
    fullName: error
    children: []
    langs:
      - typeScript
    type: property
    summary: Will exist if the operation encountered any error.
    optional: true
    syntax:
      content: 'error?: Error'
      return:
        type:
          - Error
        description: ''
    package: '@azure/ai-form-recognizer'
  - uid: '@azure/ai-form-recognizer.BeginRecognizeContentPollState.isCancelled'
    name: isCancelled
    fullName: isCancelled
    children: []
    langs:
      - typeScript
    type: property
    summary: True if the operation has been cancelled.
    optional: true
    syntax:
      content: 'isCancelled?: boolean'
      return:
        type:
          - boolean
        description: ''
    package: '@azure/ai-form-recognizer'
  - uid: '@azure/ai-form-recognizer.BeginRecognizeContentPollState.isCompleted'
    name: isCompleted
    fullName: isCompleted
    children: []
    langs:
      - typeScript
    type: property
    summary: True if the operation has been completed.
    optional: true
    syntax:
      content: 'isCompleted?: boolean'
      return:
        type:
          - boolean
        description: ''
    package: '@azure/ai-form-recognizer'
  - uid: '@azure/ai-form-recognizer.BeginRecognizeContentPollState.isStarted'
    name: isStarted
    fullName: isStarted
    children: []
    langs:
      - typeScript
    type: property
    summary: True if the operation has started.
    optional: true
    syntax:
      content: 'isStarted?: boolean'
      return:
        type:
          - boolean
        description: ''
    package: '@azure/ai-form-recognizer'
  - uid: '@azure/ai-form-recognizer.BeginRecognizeContentPollState.result'
    name: result
    fullName: result
    children: []
    langs:
      - typeScript
    type: property
    summary: Will exist if the operation concluded in a result of an expected type.
    optional: true
    syntax:
      content: 'result?: FormPageArray'
      return:
        type:
          - '@azure/ai-form-recognizer.FormPageArray'
        description: ''
    package: '@azure/ai-form-recognizer'
  - uid: '@azure/ai-form-recognizer.BeginRecognizeContentPollState.resultId'
    name: resultId
    fullName: resultId
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    optional: true
    syntax:
      content: 'resultId?: string'
      return:
        type:
          - string
        description: ''
    package: '@azure/ai-form-recognizer'
  - uid: '@azure/ai-form-recognizer.BeginRecognizeContentPollState.source'
    name: source
    fullName: source
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    optional: true
    syntax:
      content: 'source?: FormRecognizerRequestBody | string'
      return:
        type:
          - '@azure/ai-form-recognizer.FormRecognizerRequestBody | string'
        description: ''
    package: '@azure/ai-form-recognizer'
  - uid: '@azure/ai-form-recognizer.BeginRecognizeContentPollState.status'
    name: status
    fullName: status
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'status: OperationStatus'
      return:
        type:
          - '@azure/ai-form-recognizer.OperationStatus'
        description: ''
    package: '@azure/ai-form-recognizer'
references:
  - uid: PollOperationState<@azure/ai-form-recognizer.FormPageArray>
    name: FormPageArray>
    spec.typeScript:
      - name: PollOperationState<
        fullName: PollOperationState<
      - name: FormPageArray
        fullName: FormPageArray
        uid: '@azure/ai-form-recognizer.FormPageArray'
      - name: '>'
        fullName: '>'
  - uid: '@azure/ai-form-recognizer.RecognizeContentOptions'
    name: RecognizeContentOptions
    spec.typeScript:
      - name: RecognizeContentOptions
        fullName: RecognizeContentOptions
        uid: '@azure/ai-form-recognizer.RecognizeContentOptions'
  - uid: '@azure/ai-form-recognizer.RecognizeContentPollerClient'
    name: RecognizeContentPollerClient
    spec.typeScript:
      - name: RecognizeContentPollerClient
        fullName: RecognizeContentPollerClient
        uid: '@azure/ai-form-recognizer.RecognizeContentPollerClient'
  - uid: '@azure/ai-form-recognizer.FormContentType'
    name: FormContentType
    spec.typeScript:
      - name: FormContentType
        fullName: FormContentType
        uid: '@azure/ai-form-recognizer.FormContentType'
  - uid: '@azure/ai-form-recognizer.FormPageArray'
    name: FormPageArray
    spec.typeScript:
      - name: FormPageArray
        fullName: FormPageArray
        uid: '@azure/ai-form-recognizer.FormPageArray'
  - uid: '@azure/ai-form-recognizer.FormRecognizerRequestBody | string'
    name: FormRecognizerRequestBody | string
    spec.typeScript:
      - name: FormRecognizerRequestBody
        fullName: FormRecognizerRequestBody
        uid: '@azure/ai-form-recognizer.FormRecognizerRequestBody'
      - name: ' | string'
        fullName: ' | string'
  - uid: '@azure/ai-form-recognizer.OperationStatus'
    name: OperationStatus
    spec.typeScript:
      - name: OperationStatus
        fullName: OperationStatus
        uid: '@azure/ai-form-recognizer.OperationStatus'
