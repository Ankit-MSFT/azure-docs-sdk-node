### YamlMime:UniversalReference
items:
  - uid: '@azure/keyvault-keys.KeyVaultClientSetStorageAccountOptionalParams'
    name: KeyVaultClientSetStorageAccountOptionalParams
    fullName: KeyVaultClientSetStorageAccountOptionalParams
    children:
      - >-
        @azure/keyvault-keys.KeyVaultClientSetStorageAccountOptionalParams.abortSignal
      - >-
        @azure/keyvault-keys.KeyVaultClientSetStorageAccountOptionalParams.customHeaders
      - >-
        @azure/keyvault-keys.KeyVaultClientSetStorageAccountOptionalParams.onDownloadProgress
      - >-
        @azure/keyvault-keys.KeyVaultClientSetStorageAccountOptionalParams.onUploadProgress
      - >-
        @azure/keyvault-keys.KeyVaultClientSetStorageAccountOptionalParams.regenerationPeriod
      - >-
        @azure/keyvault-keys.KeyVaultClientSetStorageAccountOptionalParams.spanOptions
      - >-
        @azure/keyvault-keys.KeyVaultClientSetStorageAccountOptionalParams.storageAccountAttributes
      - '@azure/keyvault-keys.KeyVaultClientSetStorageAccountOptionalParams.tags'
      - >-
        @azure/keyvault-keys.KeyVaultClientSetStorageAccountOptionalParams.timeout
    langs:
      - typeScript
    type: interface
    summary: Optional Parameters.
    extends:
      name: RequestOptionsBase
    package: '@azure/keyvault-keys'
  - uid: >-
      @azure/keyvault-keys.KeyVaultClientSetStorageAccountOptionalParams.abortSignal
    name: abortSignal
    fullName: abortSignal
    children: []
    langs:
      - typeScript
    type: property
    summary: The signal which can be used to abort requests.
    optional: true
    syntax:
      content: 'abortSignal?: AbortSignalLike'
      return:
        type:
          - AbortSignalLike
    package: '@azure/keyvault-keys'
  - uid: >-
      @azure/keyvault-keys.KeyVaultClientSetStorageAccountOptionalParams.customHeaders
    name: customHeaders
    fullName: customHeaders
    children: []
    langs:
      - typeScript
    type: property
    summary: |-
      {object} [customHeaders] User defined custom request headers that
      will be applied before the request is sent.
    optional: true
    syntax:
      content: 'customHeaders?: undefined | [key: string]: string'
      return:
        type:
          - 'undefined | [key: string]: string'
    package: '@azure/keyvault-keys'
  - uid: >-
      @azure/keyvault-keys.KeyVaultClientSetStorageAccountOptionalParams.onDownloadProgress
    name: onDownloadProgress
    fullName: onDownloadProgress
    children: []
    langs:
      - typeScript
    type: property
    summary: Callback which fires upon download progress.
    optional: true
    syntax:
      content: >-
        onDownloadProgress?: undefined | (progress: TransferProgressEvent) =>
        void
      return:
        type:
          - 'undefined | (progress: TransferProgressEvent) => void'
    package: '@azure/keyvault-keys'
  - uid: >-
      @azure/keyvault-keys.KeyVaultClientSetStorageAccountOptionalParams.onUploadProgress
    name: onUploadProgress
    fullName: onUploadProgress
    children: []
    langs:
      - typeScript
    type: property
    summary: Callback which fires upon upload progress.
    optional: true
    syntax:
      content: 'onUploadProgress?: undefined | (progress: TransferProgressEvent) => void'
      return:
        type:
          - 'undefined | (progress: TransferProgressEvent) => void'
    package: '@azure/keyvault-keys'
  - uid: >-
      @azure/keyvault-keys.KeyVaultClientSetStorageAccountOptionalParams.regenerationPeriod
    name: regenerationPeriod
    fullName: regenerationPeriod
    children: []
    langs:
      - typeScript
    type: property
    summary: The key regeneration time duration specified in ISO-8601 format.
    optional: true
    syntax:
      content: 'regenerationPeriod?: undefined | string'
      return:
        type:
          - undefined | string
    package: '@azure/keyvault-keys'
  - uid: >-
      @azure/keyvault-keys.KeyVaultClientSetStorageAccountOptionalParams.spanOptions
    name: spanOptions
    fullName: spanOptions
    children: []
    langs:
      - typeScript
    type: property
    summary: Options used to create a span when tracing is enabled.
    optional: true
    syntax:
      content: 'spanOptions?: any'
      return:
        type:
          - any
    package: '@azure/keyvault-keys'
  - uid: >-
      @azure/keyvault-keys.KeyVaultClientSetStorageAccountOptionalParams.storageAccountAttributes
    name: storageAccountAttributes
    fullName: storageAccountAttributes
    children: []
    langs:
      - typeScript
    type: property
    summary: The attributes of the storage account.
    optional: true
    syntax:
      content: 'storageAccountAttributes?: StorageAccountAttributes'
      return:
        type:
          - '@azure/keyvault-keys.StorageAccountAttributes'
    package: '@azure/keyvault-keys'
  - uid: '@azure/keyvault-keys.KeyVaultClientSetStorageAccountOptionalParams.tags'
    name: tags
    fullName: tags
    children: []
    langs:
      - typeScript
    type: property
    summary: Application specific metadata in the form of key-value pairs.
    optional: true
    syntax:
      content: 'tags?: undefined | [key: string]: string'
      return:
        type:
          - 'undefined | [key: string]: string'
    package: '@azure/keyvault-keys'
  - uid: '@azure/keyvault-keys.KeyVaultClientSetStorageAccountOptionalParams.timeout'
    name: timeout
    fullName: timeout
    children: []
    langs:
      - typeScript
    type: property
    summary: >-
      The number of milliseconds a request can take before automatically being
      terminated.
    optional: true
    syntax:
      content: 'timeout?: undefined | number'
      return:
        type:
          - undefined | number
    package: '@azure/keyvault-keys'
references:
  - uid: '@azure/keyvault-keys.StorageAccountAttributes'
    name: StorageAccountAttributes
    spec.typeScript:
      - name: StorageAccountAttributes
        fullName: StorageAccountAttributes
        uid: '@azure/keyvault-keys.StorageAccountAttributes'
