### YamlMime:UniversalReference
items:
  - uid: '@azure/keyvault-keys.DeletedSecretBundle'
    name: DeletedSecretBundle
    fullName: DeletedSecretBundle
    children:
      - '@azure/keyvault-keys.DeletedSecretBundle.attributes'
      - '@azure/keyvault-keys.DeletedSecretBundle.contentType'
      - '@azure/keyvault-keys.DeletedSecretBundle.deletedDate'
      - '@azure/keyvault-keys.DeletedSecretBundle.id'
      - '@azure/keyvault-keys.DeletedSecretBundle.kid'
      - '@azure/keyvault-keys.DeletedSecretBundle.managed'
      - '@azure/keyvault-keys.DeletedSecretBundle.recoveryId'
      - '@azure/keyvault-keys.DeletedSecretBundle.scheduledPurgeDate'
      - '@azure/keyvault-keys.DeletedSecretBundle.tags'
      - '@azure/keyvault-keys.DeletedSecretBundle.value'
    langs:
      - typeScript
    type: interface
    summary: >-
      A Deleted Secret consisting of its previous id, attributes and its tags,
      as well as information

      on when it will be purged.
    extends:
      name: '@azure/keyvault-keys.SecretBundle'
    package: '@azure/keyvault-keys'
  - uid: '@azure/keyvault-keys.DeletedSecretBundle.attributes'
    name: attributes
    fullName: attributes
    children: []
    langs:
      - typeScript
    type: property
    summary: The secret management attributes.
    optional: true
    syntax:
      content: 'attributes?: SecretAttributes'
      return:
        type:
          - '@azure/keyvault-keys.SecretAttributes'
    package: '@azure/keyvault-keys'
  - uid: '@azure/keyvault-keys.DeletedSecretBundle.contentType'
    name: contentType
    fullName: contentType
    children: []
    langs:
      - typeScript
    type: property
    summary: The content type of the secret.
    optional: true
    syntax:
      content: 'contentType?: undefined | string'
      return:
        type:
          - undefined | string
    package: '@azure/keyvault-keys'
  - uid: '@azure/keyvault-keys.DeletedSecretBundle.deletedDate'
    name: deletedDate
    fullName: deletedDate
    children: []
    langs:
      - typeScript
    type: property
    summary: >-
      The time when the secret was deleted, in UTC

      **NOTE: This property will not be serialized. It can only be populated by
      the server.**
    optional: true
    syntax:
      content: 'deletedDate?: Date'
      return:
        type:
          - Date
    package: '@azure/keyvault-keys'
  - uid: '@azure/keyvault-keys.DeletedSecretBundle.id'
    name: id
    fullName: id
    children: []
    langs:
      - typeScript
    type: property
    summary: The secret id.
    optional: true
    syntax:
      content: 'id?: undefined | string'
      return:
        type:
          - undefined | string
    package: '@azure/keyvault-keys'
  - uid: '@azure/keyvault-keys.DeletedSecretBundle.kid'
    name: kid
    fullName: kid
    children: []
    langs:
      - typeScript
    type: property
    summary: >-
      If this is a secret backing a KV certificate, then this field specifies
      the corresponding key

      backing the KV certificate.

      **NOTE: This property will not be serialized. It can only be populated by
      the server.**
    optional: true
    syntax:
      content: 'kid?: undefined | string'
      return:
        type:
          - undefined | string
    package: '@azure/keyvault-keys'
  - uid: '@azure/keyvault-keys.DeletedSecretBundle.managed'
    name: managed
    fullName: managed
    children: []
    langs:
      - typeScript
    type: property
    summary: >-
      True if the secret's lifetime is managed by key vault. If this is a secret
      backing a

      certificate, then managed will be true.

      **NOTE: This property will not be serialized. It can only be populated by
      the server.**
    optional: true
    syntax:
      content: 'managed?: undefined | false | true'
      return:
        type:
          - undefined | false | true
    package: '@azure/keyvault-keys'
  - uid: '@azure/keyvault-keys.DeletedSecretBundle.recoveryId'
    name: recoveryId
    fullName: recoveryId
    children: []
    langs:
      - typeScript
    type: property
    summary: >-
      The url of the recovery object, used to identify and recover the deleted
      secret.
    optional: true
    syntax:
      content: 'recoveryId?: undefined | string'
      return:
        type:
          - undefined | string
    package: '@azure/keyvault-keys'
  - uid: '@azure/keyvault-keys.DeletedSecretBundle.scheduledPurgeDate'
    name: scheduledPurgeDate
    fullName: scheduledPurgeDate
    children: []
    langs:
      - typeScript
    type: property
    summary: >-
      The time when the secret is scheduled to be purged, in UTC

      **NOTE: This property will not be serialized. It can only be populated by
      the server.**
    optional: true
    syntax:
      content: 'scheduledPurgeDate?: Date'
      return:
        type:
          - Date
    package: '@azure/keyvault-keys'
  - uid: '@azure/keyvault-keys.DeletedSecretBundle.tags'
    name: tags
    fullName: tags
    children: []
    langs:
      - typeScript
    type: property
    summary: Application specific metadata in the form of key-value pairs.
    optional: true
    syntax:
      content: 'tags?: undefined | [key: string]: string'
      return:
        type:
          - 'undefined | [key: string]: string'
    package: '@azure/keyvault-keys'
  - uid: '@azure/keyvault-keys.DeletedSecretBundle.value'
    name: value
    fullName: value
    children: []
    langs:
      - typeScript
    type: property
    summary: The secret value.
    optional: true
    syntax:
      content: 'value?: undefined | string'
      return:
        type:
          - undefined | string
    package: '@azure/keyvault-keys'
references:
  - uid: '@azure/keyvault-keys.SecretBundle'
    name: SecretBundle
    spec.typeScript:
      - name: SecretBundle
        fullName: SecretBundle
        uid: '@azure/keyvault-keys.SecretBundle'
  - uid: '@azure/keyvault-keys.SecretAttributes'
    name: SecretAttributes
    spec.typeScript:
      - name: SecretAttributes
        fullName: SecretAttributes
        uid: '@azure/keyvault-keys.SecretAttributes'
