### YamlMime:UniversalReference
items:
  - uid: '@azure/keyvault-keys.Key'
    name: Key
    fullName: Key
    children:
      - '@azure/keyvault-keys.Key.created'
      - '@azure/keyvault-keys.Key.enabled'
      - '@azure/keyvault-keys.Key.expires'
      - '@azure/keyvault-keys.Key.id'
      - '@azure/keyvault-keys.Key.keyMaterial'
      - '@azure/keyvault-keys.Key.name'
      - '@azure/keyvault-keys.Key.notBefore'
      - '@azure/keyvault-keys.Key.recoveryLevel'
      - '@azure/keyvault-keys.Key.tags'
      - '@azure/keyvault-keys.Key.updated'
      - '@azure/keyvault-keys.Key.vaultUrl'
      - '@azure/keyvault-keys.Key.version'
    langs:
      - typeScript
    type: interface
    summary: ''
    extends:
      name: '@azure/keyvault-keys.KeyAttributes'
    package: '@azure/keyvault-keys'
  - uid: '@azure/keyvault-keys.Key.created'
    name: created
    fullName: created
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    optional: true
    syntax:
      content: 'created?: Date'
      return:
        type:
          - Date
    package: '@azure/keyvault-keys'
  - uid: '@azure/keyvault-keys.Key.enabled'
    name: enabled
    fullName: enabled
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    optional: true
    syntax:
      content: 'enabled?: undefined | false | true'
      return:
        type:
          - undefined | false | true
    package: '@azure/keyvault-keys'
  - uid: '@azure/keyvault-keys.Key.expires'
    name: expires
    fullName: expires
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    optional: true
    syntax:
      content: 'expires?: Date'
      return:
        type:
          - Date
    package: '@azure/keyvault-keys'
  - uid: '@azure/keyvault-keys.Key.id'
    name: id
    fullName: id
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    optional: true
    syntax:
      content: 'id?: undefined | string'
      return:
        type:
          - undefined | string
    package: '@azure/keyvault-keys'
  - uid: '@azure/keyvault-keys.Key.keyMaterial'
    name: keyMaterial
    fullName: keyMaterial
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    optional: true
    syntax:
      content: 'keyMaterial?: JsonWebKey'
      return:
        type:
          - '@azure/keyvault-keys.JsonWebKey'
    package: '@azure/keyvault-keys'
  - uid: '@azure/keyvault-keys.Key.name'
    name: name
    fullName: name
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'name: string'
      return:
        type:
          - string
    package: '@azure/keyvault-keys'
  - uid: '@azure/keyvault-keys.Key.notBefore'
    name: notBefore
    fullName: notBefore
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    optional: true
    syntax:
      content: 'notBefore?: Date'
      return:
        type:
          - Date
    package: '@azure/keyvault-keys'
  - uid: '@azure/keyvault-keys.Key.recoveryLevel'
    name: recoveryLevel
    fullName: recoveryLevel
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    optional: true
    syntax:
      content: 'recoveryLevel?: DeletionRecoveryLevel'
      return:
        type:
          - '@azure/keyvault-keys.DeletionRecoveryLevel'
    package: '@azure/keyvault-keys'
  - uid: '@azure/keyvault-keys.Key.tags'
    name: tags
    fullName: tags
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    optional: true
    syntax:
      content: 'tags?: undefined | [key: string]: string'
      return:
        type:
          - 'undefined | [key: string]: string'
    package: '@azure/keyvault-keys'
  - uid: '@azure/keyvault-keys.Key.updated'
    name: updated
    fullName: updated
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    optional: true
    syntax:
      content: 'updated?: Date'
      return:
        type:
          - Date
    package: '@azure/keyvault-keys'
  - uid: '@azure/keyvault-keys.Key.vaultUrl'
    name: vaultUrl
    fullName: vaultUrl
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'vaultUrl: string'
      return:
        type:
          - string
    package: '@azure/keyvault-keys'
  - uid: '@azure/keyvault-keys.Key.version'
    name: version
    fullName: version
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    optional: true
    syntax:
      content: 'version?: undefined | string'
      return:
        type:
          - undefined | string
    package: '@azure/keyvault-keys'
references:
  - uid: '@azure/keyvault-keys.KeyAttributes'
    name: KeyAttributes
    spec.typeScript:
      - name: KeyAttributes
        fullName: KeyAttributes
        uid: '@azure/keyvault-keys.KeyAttributes'
  - uid: '@azure/keyvault-keys.JsonWebKey'
    name: JsonWebKey
    spec.typeScript:
      - name: JsonWebKey
        fullName: JsonWebKey
        uid: '@azure/keyvault-keys.JsonWebKey'
  - uid: '@azure/keyvault-keys.DeletionRecoveryLevel'
    name: DeletionRecoveryLevel
    spec.typeScript:
      - name: DeletionRecoveryLevel
        fullName: DeletionRecoveryLevel
        uid: '@azure/keyvault-keys.DeletionRecoveryLevel'
