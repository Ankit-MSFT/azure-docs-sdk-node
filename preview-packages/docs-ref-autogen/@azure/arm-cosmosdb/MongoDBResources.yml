### YamlMime:TSType
name: MongoDBResources
uid: '@azure/arm-cosmosdb.MongoDBResources'
package: '@azure/arm-cosmosdb'
summary: Interface representing a MongoDBResources.
fullName: MongoDBResources
remarks: ''
isPreview: false
isDeprecated: false
type: interface
methods:
  - name: >-
      beginCreateUpdateMongoDBCollection(string, string, string, string,
      MongoDBCollectionCreateUpdateParameters,
      MongoDBResourcesCreateUpdateMongoDBCollectionOptionalParams)
    uid: '@azure/arm-cosmosdb.MongoDBResources.beginCreateUpdateMongoDBCollection'
    package: '@azure/arm-cosmosdb'
    summary: Create or update an Azure Cosmos DB MongoDB Collection
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function beginCreateUpdateMongoDBCollection(resourceGroupName: string,
        accountName: string, databaseName: string, collectionName: string,
        createUpdateMongoDBCollectionParameters:
        MongoDBCollectionCreateUpdateParameters, options?:
        MongoDBResourcesCreateUpdateMongoDBCollectionOptionalParams)
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group. The name is case insensitive.
        - id: accountName
          type: string
          description: Cosmos DB database account name.
        - id: databaseName
          type: string
          description: Cosmos DB database name.
        - id: collectionName
          type: string
          description: Cosmos DB collection name.
        - id: createUpdateMongoDBCollectionParameters
          type: >-
            <xref
            uid="@azure/arm-cosmosdb.MongoDBCollectionCreateUpdateParameters" />
          description: |-
            The parameters to provide for the current MongoDB
                                                           Collection.
        - id: options
          type: >-
            <xref
            uid="@azure/arm-cosmosdb.MongoDBResourcesCreateUpdateMongoDBCollectionOptionalParams"
            />
          description: |
            The options parameters.
      return:
        type: >-
          Promise&lt;PollerLike&lt;PollOperationState&lt;<xref
          uid="@azure/arm-cosmosdb.MongoDBResourcesCreateUpdateMongoDBCollectionResponse"
          />&gt;, <xref
          uid="@azure/arm-cosmosdb.MongoDBResourcesCreateUpdateMongoDBCollectionResponse"
          />&gt;&gt;
        description: ''
  - name: >-
      beginCreateUpdateMongoDBCollectionAndWait(string, string, string, string,
      MongoDBCollectionCreateUpdateParameters,
      MongoDBResourcesCreateUpdateMongoDBCollectionOptionalParams)
    uid: >-
      @azure/arm-cosmosdb.MongoDBResources.beginCreateUpdateMongoDBCollectionAndWait
    package: '@azure/arm-cosmosdb'
    summary: Create or update an Azure Cosmos DB MongoDB Collection
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function beginCreateUpdateMongoDBCollectionAndWait(resourceGroupName:
        string, accountName: string, databaseName: string, collectionName:
        string, createUpdateMongoDBCollectionParameters:
        MongoDBCollectionCreateUpdateParameters, options?:
        MongoDBResourcesCreateUpdateMongoDBCollectionOptionalParams)
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group. The name is case insensitive.
        - id: accountName
          type: string
          description: Cosmos DB database account name.
        - id: databaseName
          type: string
          description: Cosmos DB database name.
        - id: collectionName
          type: string
          description: Cosmos DB collection name.
        - id: createUpdateMongoDBCollectionParameters
          type: >-
            <xref
            uid="@azure/arm-cosmosdb.MongoDBCollectionCreateUpdateParameters" />
          description: |-
            The parameters to provide for the current MongoDB
                                                           Collection.
        - id: options
          type: >-
            <xref
            uid="@azure/arm-cosmosdb.MongoDBResourcesCreateUpdateMongoDBCollectionOptionalParams"
            />
          description: |
            The options parameters.
      return:
        type: >-
          Promise&lt;<xref
          uid="@azure/arm-cosmosdb.MongoDBResourcesCreateUpdateMongoDBCollectionResponse"
          />&gt;
        description: ''
  - name: >-
      beginCreateUpdateMongoDBDatabase(string, string, string,
      MongoDBDatabaseCreateUpdateParameters,
      MongoDBResourcesCreateUpdateMongoDBDatabaseOptionalParams)
    uid: '@azure/arm-cosmosdb.MongoDBResources.beginCreateUpdateMongoDBDatabase'
    package: '@azure/arm-cosmosdb'
    summary: Create or updates Azure Cosmos DB MongoDB database
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function beginCreateUpdateMongoDBDatabase(resourceGroupName: string,
        accountName: string, databaseName: string,
        createUpdateMongoDBDatabaseParameters:
        MongoDBDatabaseCreateUpdateParameters, options?:
        MongoDBResourcesCreateUpdateMongoDBDatabaseOptionalParams)
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group. The name is case insensitive.
        - id: accountName
          type: string
          description: Cosmos DB database account name.
        - id: databaseName
          type: string
          description: Cosmos DB database name.
        - id: createUpdateMongoDBDatabaseParameters
          type: >-
            <xref
            uid="@azure/arm-cosmosdb.MongoDBDatabaseCreateUpdateParameters" />
          description: |-
            The parameters to provide for the current MongoDB
                                                         database.
        - id: options
          type: >-
            <xref
            uid="@azure/arm-cosmosdb.MongoDBResourcesCreateUpdateMongoDBDatabaseOptionalParams"
            />
          description: |
            The options parameters.
      return:
        type: >-
          Promise&lt;PollerLike&lt;PollOperationState&lt;<xref
          uid="@azure/arm-cosmosdb.MongoDBResourcesCreateUpdateMongoDBDatabaseResponse"
          />&gt;, <xref
          uid="@azure/arm-cosmosdb.MongoDBResourcesCreateUpdateMongoDBDatabaseResponse"
          />&gt;&gt;
        description: ''
  - name: >-
      beginCreateUpdateMongoDBDatabaseAndWait(string, string, string,
      MongoDBDatabaseCreateUpdateParameters,
      MongoDBResourcesCreateUpdateMongoDBDatabaseOptionalParams)
    uid: >-
      @azure/arm-cosmosdb.MongoDBResources.beginCreateUpdateMongoDBDatabaseAndWait
    package: '@azure/arm-cosmosdb'
    summary: Create or updates Azure Cosmos DB MongoDB database
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function beginCreateUpdateMongoDBDatabaseAndWait(resourceGroupName:
        string, accountName: string, databaseName: string,
        createUpdateMongoDBDatabaseParameters:
        MongoDBDatabaseCreateUpdateParameters, options?:
        MongoDBResourcesCreateUpdateMongoDBDatabaseOptionalParams)
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group. The name is case insensitive.
        - id: accountName
          type: string
          description: Cosmos DB database account name.
        - id: databaseName
          type: string
          description: Cosmos DB database name.
        - id: createUpdateMongoDBDatabaseParameters
          type: >-
            <xref
            uid="@azure/arm-cosmosdb.MongoDBDatabaseCreateUpdateParameters" />
          description: |-
            The parameters to provide for the current MongoDB
                                                         database.
        - id: options
          type: >-
            <xref
            uid="@azure/arm-cosmosdb.MongoDBResourcesCreateUpdateMongoDBDatabaseOptionalParams"
            />
          description: |
            The options parameters.
      return:
        type: >-
          Promise&lt;<xref
          uid="@azure/arm-cosmosdb.MongoDBResourcesCreateUpdateMongoDBDatabaseResponse"
          />&gt;
        description: ''
  - name: >-
      beginDeleteMongoDBCollection(string, string, string, string,
      MongoDBResourcesDeleteMongoDBCollectionOptionalParams)
    uid: '@azure/arm-cosmosdb.MongoDBResources.beginDeleteMongoDBCollection'
    package: '@azure/arm-cosmosdb'
    summary: Deletes an existing Azure Cosmos DB MongoDB Collection.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function beginDeleteMongoDBCollection(resourceGroupName: string,
        accountName: string, databaseName: string, collectionName: string,
        options?: MongoDBResourcesDeleteMongoDBCollectionOptionalParams)
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group. The name is case insensitive.
        - id: accountName
          type: string
          description: Cosmos DB database account name.
        - id: databaseName
          type: string
          description: Cosmos DB database name.
        - id: collectionName
          type: string
          description: Cosmos DB collection name.
        - id: options
          type: >-
            <xref
            uid="@azure/arm-cosmosdb.MongoDBResourcesDeleteMongoDBCollectionOptionalParams"
            />
          description: |
            The options parameters.
      return:
        type: 'Promise&lt;PollerLike&lt;PollOperationState&lt;void&gt;, void&gt;&gt;'
        description: ''
  - name: >-
      beginDeleteMongoDBCollectionAndWait(string, string, string, string,
      MongoDBResourcesDeleteMongoDBCollectionOptionalParams)
    uid: '@azure/arm-cosmosdb.MongoDBResources.beginDeleteMongoDBCollectionAndWait'
    package: '@azure/arm-cosmosdb'
    summary: Deletes an existing Azure Cosmos DB MongoDB Collection.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function beginDeleteMongoDBCollectionAndWait(resourceGroupName: string,
        accountName: string, databaseName: string, collectionName: string,
        options?: MongoDBResourcesDeleteMongoDBCollectionOptionalParams)
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group. The name is case insensitive.
        - id: accountName
          type: string
          description: Cosmos DB database account name.
        - id: databaseName
          type: string
          description: Cosmos DB database name.
        - id: collectionName
          type: string
          description: Cosmos DB collection name.
        - id: options
          type: >-
            <xref
            uid="@azure/arm-cosmosdb.MongoDBResourcesDeleteMongoDBCollectionOptionalParams"
            />
          description: |
            The options parameters.
      return:
        type: Promise&lt;void&gt;
        description: ''
  - name: >-
      beginDeleteMongoDBDatabase(string, string, string,
      MongoDBResourcesDeleteMongoDBDatabaseOptionalParams)
    uid: '@azure/arm-cosmosdb.MongoDBResources.beginDeleteMongoDBDatabase'
    package: '@azure/arm-cosmosdb'
    summary: Deletes an existing Azure Cosmos DB MongoDB database.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function beginDeleteMongoDBDatabase(resourceGroupName: string,
        accountName: string, databaseName: string, options?:
        MongoDBResourcesDeleteMongoDBDatabaseOptionalParams)
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group. The name is case insensitive.
        - id: accountName
          type: string
          description: Cosmos DB database account name.
        - id: databaseName
          type: string
          description: Cosmos DB database name.
        - id: options
          type: >-
            <xref
            uid="@azure/arm-cosmosdb.MongoDBResourcesDeleteMongoDBDatabaseOptionalParams"
            />
          description: |
            The options parameters.
      return:
        type: 'Promise&lt;PollerLike&lt;PollOperationState&lt;void&gt;, void&gt;&gt;'
        description: ''
  - name: >-
      beginDeleteMongoDBDatabaseAndWait(string, string, string,
      MongoDBResourcesDeleteMongoDBDatabaseOptionalParams)
    uid: '@azure/arm-cosmosdb.MongoDBResources.beginDeleteMongoDBDatabaseAndWait'
    package: '@azure/arm-cosmosdb'
    summary: Deletes an existing Azure Cosmos DB MongoDB database.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function beginDeleteMongoDBDatabaseAndWait(resourceGroupName: string,
        accountName: string, databaseName: string, options?:
        MongoDBResourcesDeleteMongoDBDatabaseOptionalParams)
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group. The name is case insensitive.
        - id: accountName
          type: string
          description: Cosmos DB database account name.
        - id: databaseName
          type: string
          description: Cosmos DB database name.
        - id: options
          type: >-
            <xref
            uid="@azure/arm-cosmosdb.MongoDBResourcesDeleteMongoDBDatabaseOptionalParams"
            />
          description: |
            The options parameters.
      return:
        type: Promise&lt;void&gt;
        description: ''
  - name: >-
      beginMigrateMongoDBCollectionToAutoscale(string, string, string, string,
      MongoDBResourcesMigrateMongoDBCollectionToAutoscaleOptionalParams)
    uid: >-
      @azure/arm-cosmosdb.MongoDBResources.beginMigrateMongoDBCollectionToAutoscale
    package: '@azure/arm-cosmosdb'
    summary: >-
      Migrate an Azure Cosmos DB MongoDB collection from manual throughput to
      autoscale
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function beginMigrateMongoDBCollectionToAutoscale(resourceGroupName:
        string, accountName: string, databaseName: string, collectionName:
        string, options?:
        MongoDBResourcesMigrateMongoDBCollectionToAutoscaleOptionalParams)
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group. The name is case insensitive.
        - id: accountName
          type: string
          description: Cosmos DB database account name.
        - id: databaseName
          type: string
          description: Cosmos DB database name.
        - id: collectionName
          type: string
          description: Cosmos DB collection name.
        - id: options
          type: >-
            <xref
            uid="@azure/arm-cosmosdb.MongoDBResourcesMigrateMongoDBCollectionToAutoscaleOptionalParams"
            />
          description: |
            The options parameters.
      return:
        type: >-
          Promise&lt;PollerLike&lt;PollOperationState&lt;<xref
          uid="@azure/arm-cosmosdb.MongoDBResourcesMigrateMongoDBCollectionToAutoscaleResponse"
          />&gt;, <xref
          uid="@azure/arm-cosmosdb.MongoDBResourcesMigrateMongoDBCollectionToAutoscaleResponse"
          />&gt;&gt;
        description: ''
  - name: >-
      beginMigrateMongoDBCollectionToAutoscaleAndWait(string, string, string,
      string, MongoDBResourcesMigrateMongoDBCollectionToAutoscaleOptionalParams)
    uid: >-
      @azure/arm-cosmosdb.MongoDBResources.beginMigrateMongoDBCollectionToAutoscaleAndWait
    package: '@azure/arm-cosmosdb'
    summary: >-
      Migrate an Azure Cosmos DB MongoDB collection from manual throughput to
      autoscale
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function
        beginMigrateMongoDBCollectionToAutoscaleAndWait(resourceGroupName:
        string, accountName: string, databaseName: string, collectionName:
        string, options?:
        MongoDBResourcesMigrateMongoDBCollectionToAutoscaleOptionalParams)
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group. The name is case insensitive.
        - id: accountName
          type: string
          description: Cosmos DB database account name.
        - id: databaseName
          type: string
          description: Cosmos DB database name.
        - id: collectionName
          type: string
          description: Cosmos DB collection name.
        - id: options
          type: >-
            <xref
            uid="@azure/arm-cosmosdb.MongoDBResourcesMigrateMongoDBCollectionToAutoscaleOptionalParams"
            />
          description: |
            The options parameters.
      return:
        type: >-
          Promise&lt;<xref
          uid="@azure/arm-cosmosdb.MongoDBResourcesMigrateMongoDBCollectionToAutoscaleResponse"
          />&gt;
        description: ''
  - name: >-
      beginMigrateMongoDBCollectionToManualThroughput(string, string, string,
      string,
      MongoDBResourcesMigrateMongoDBCollectionToManualThroughputOptionalParams)
    uid: >-
      @azure/arm-cosmosdb.MongoDBResources.beginMigrateMongoDBCollectionToManualThroughput
    package: '@azure/arm-cosmosdb'
    summary: >-
      Migrate an Azure Cosmos DB MongoDB collection from autoscale to manual
      throughput
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function
        beginMigrateMongoDBCollectionToManualThroughput(resourceGroupName:
        string, accountName: string, databaseName: string, collectionName:
        string, options?:
        MongoDBResourcesMigrateMongoDBCollectionToManualThroughputOptionalParams)
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group. The name is case insensitive.
        - id: accountName
          type: string
          description: Cosmos DB database account name.
        - id: databaseName
          type: string
          description: Cosmos DB database name.
        - id: collectionName
          type: string
          description: Cosmos DB collection name.
        - id: options
          type: >-
            <xref
            uid="@azure/arm-cosmosdb.MongoDBResourcesMigrateMongoDBCollectionToManualThroughputOptionalParams"
            />
          description: |
            The options parameters.
      return:
        type: >-
          Promise&lt;PollerLike&lt;PollOperationState&lt;<xref
          uid="@azure/arm-cosmosdb.MongoDBResourcesMigrateMongoDBCollectionToManualThroughputResponse"
          />&gt;, <xref
          uid="@azure/arm-cosmosdb.MongoDBResourcesMigrateMongoDBCollectionToManualThroughputResponse"
          />&gt;&gt;
        description: ''
  - name: >-
      beginMigrateMongoDBCollectionToManualThroughputAndWait(string, string,
      string, string,
      MongoDBResourcesMigrateMongoDBCollectionToManualThroughputOptionalParams)
    uid: >-
      @azure/arm-cosmosdb.MongoDBResources.beginMigrateMongoDBCollectionToManualThroughputAndWait
    package: '@azure/arm-cosmosdb'
    summary: >-
      Migrate an Azure Cosmos DB MongoDB collection from autoscale to manual
      throughput
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function
        beginMigrateMongoDBCollectionToManualThroughputAndWait(resourceGroupName:
        string, accountName: string, databaseName: string, collectionName:
        string, options?:
        MongoDBResourcesMigrateMongoDBCollectionToManualThroughputOptionalParams)
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group. The name is case insensitive.
        - id: accountName
          type: string
          description: Cosmos DB database account name.
        - id: databaseName
          type: string
          description: Cosmos DB database name.
        - id: collectionName
          type: string
          description: Cosmos DB collection name.
        - id: options
          type: >-
            <xref
            uid="@azure/arm-cosmosdb.MongoDBResourcesMigrateMongoDBCollectionToManualThroughputOptionalParams"
            />
          description: |
            The options parameters.
      return:
        type: >-
          Promise&lt;<xref
          uid="@azure/arm-cosmosdb.MongoDBResourcesMigrateMongoDBCollectionToManualThroughputResponse"
          />&gt;
        description: ''
  - name: >-
      beginMigrateMongoDBDatabaseToAutoscale(string, string, string,
      MongoDBResourcesMigrateMongoDBDatabaseToAutoscaleOptionalParams)
    uid: >-
      @azure/arm-cosmosdb.MongoDBResources.beginMigrateMongoDBDatabaseToAutoscale
    package: '@azure/arm-cosmosdb'
    summary: >-
      Migrate an Azure Cosmos DB MongoDB database from manual throughput to
      autoscale
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function beginMigrateMongoDBDatabaseToAutoscale(resourceGroupName:
        string, accountName: string, databaseName: string, options?:
        MongoDBResourcesMigrateMongoDBDatabaseToAutoscaleOptionalParams)
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group. The name is case insensitive.
        - id: accountName
          type: string
          description: Cosmos DB database account name.
        - id: databaseName
          type: string
          description: Cosmos DB database name.
        - id: options
          type: >-
            <xref
            uid="@azure/arm-cosmosdb.MongoDBResourcesMigrateMongoDBDatabaseToAutoscaleOptionalParams"
            />
          description: |
            The options parameters.
      return:
        type: >-
          Promise&lt;PollerLike&lt;PollOperationState&lt;<xref
          uid="@azure/arm-cosmosdb.MongoDBResourcesMigrateMongoDBDatabaseToAutoscaleResponse"
          />&gt;, <xref
          uid="@azure/arm-cosmosdb.MongoDBResourcesMigrateMongoDBDatabaseToAutoscaleResponse"
          />&gt;&gt;
        description: ''
  - name: >-
      beginMigrateMongoDBDatabaseToAutoscaleAndWait(string, string, string,
      MongoDBResourcesMigrateMongoDBDatabaseToAutoscaleOptionalParams)
    uid: >-
      @azure/arm-cosmosdb.MongoDBResources.beginMigrateMongoDBDatabaseToAutoscaleAndWait
    package: '@azure/arm-cosmosdb'
    summary: >-
      Migrate an Azure Cosmos DB MongoDB database from manual throughput to
      autoscale
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function
        beginMigrateMongoDBDatabaseToAutoscaleAndWait(resourceGroupName: string,
        accountName: string, databaseName: string, options?:
        MongoDBResourcesMigrateMongoDBDatabaseToAutoscaleOptionalParams)
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group. The name is case insensitive.
        - id: accountName
          type: string
          description: Cosmos DB database account name.
        - id: databaseName
          type: string
          description: Cosmos DB database name.
        - id: options
          type: >-
            <xref
            uid="@azure/arm-cosmosdb.MongoDBResourcesMigrateMongoDBDatabaseToAutoscaleOptionalParams"
            />
          description: |
            The options parameters.
      return:
        type: >-
          Promise&lt;<xref
          uid="@azure/arm-cosmosdb.MongoDBResourcesMigrateMongoDBDatabaseToAutoscaleResponse"
          />&gt;
        description: ''
  - name: >-
      beginMigrateMongoDBDatabaseToManualThroughput(string, string, string,
      MongoDBResourcesMigrateMongoDBDatabaseToManualThroughputOptionalParams)
    uid: >-
      @azure/arm-cosmosdb.MongoDBResources.beginMigrateMongoDBDatabaseToManualThroughput
    package: '@azure/arm-cosmosdb'
    summary: >-
      Migrate an Azure Cosmos DB MongoDB database from autoscale to manual
      throughput
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function
        beginMigrateMongoDBDatabaseToManualThroughput(resourceGroupName: string,
        accountName: string, databaseName: string, options?:
        MongoDBResourcesMigrateMongoDBDatabaseToManualThroughputOptionalParams)
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group. The name is case insensitive.
        - id: accountName
          type: string
          description: Cosmos DB database account name.
        - id: databaseName
          type: string
          description: Cosmos DB database name.
        - id: options
          type: >-
            <xref
            uid="@azure/arm-cosmosdb.MongoDBResourcesMigrateMongoDBDatabaseToManualThroughputOptionalParams"
            />
          description: |
            The options parameters.
      return:
        type: >-
          Promise&lt;PollerLike&lt;PollOperationState&lt;<xref
          uid="@azure/arm-cosmosdb.MongoDBResourcesMigrateMongoDBDatabaseToManualThroughputResponse"
          />&gt;, <xref
          uid="@azure/arm-cosmosdb.MongoDBResourcesMigrateMongoDBDatabaseToManualThroughputResponse"
          />&gt;&gt;
        description: ''
  - name: >-
      beginMigrateMongoDBDatabaseToManualThroughputAndWait(string, string,
      string,
      MongoDBResourcesMigrateMongoDBDatabaseToManualThroughputOptionalParams)
    uid: >-
      @azure/arm-cosmosdb.MongoDBResources.beginMigrateMongoDBDatabaseToManualThroughputAndWait
    package: '@azure/arm-cosmosdb'
    summary: >-
      Migrate an Azure Cosmos DB MongoDB database from autoscale to manual
      throughput
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function
        beginMigrateMongoDBDatabaseToManualThroughputAndWait(resourceGroupName:
        string, accountName: string, databaseName: string, options?:
        MongoDBResourcesMigrateMongoDBDatabaseToManualThroughputOptionalParams)
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group. The name is case insensitive.
        - id: accountName
          type: string
          description: Cosmos DB database account name.
        - id: databaseName
          type: string
          description: Cosmos DB database name.
        - id: options
          type: >-
            <xref
            uid="@azure/arm-cosmosdb.MongoDBResourcesMigrateMongoDBDatabaseToManualThroughputOptionalParams"
            />
          description: |
            The options parameters.
      return:
        type: >-
          Promise&lt;<xref
          uid="@azure/arm-cosmosdb.MongoDBResourcesMigrateMongoDBDatabaseToManualThroughputResponse"
          />&gt;
        description: ''
  - name: >-
      beginRetrieveContinuousBackupInformation(string, string, string, string,
      ContinuousBackupRestoreLocation,
      MongoDBResourcesRetrieveContinuousBackupInformationOptionalParams)
    uid: >-
      @azure/arm-cosmosdb.MongoDBResources.beginRetrieveContinuousBackupInformation
    package: '@azure/arm-cosmosdb'
    summary: Retrieves continuous backup information for a Mongodb collection.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function beginRetrieveContinuousBackupInformation(resourceGroupName:
        string, accountName: string, databaseName: string, collectionName:
        string, location: ContinuousBackupRestoreLocation, options?:
        MongoDBResourcesRetrieveContinuousBackupInformationOptionalParams)
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group. The name is case insensitive.
        - id: accountName
          type: string
          description: Cosmos DB database account name.
        - id: databaseName
          type: string
          description: Cosmos DB database name.
        - id: collectionName
          type: string
          description: Cosmos DB collection name.
        - id: location
          type: <xref uid="@azure/arm-cosmosdb.ContinuousBackupRestoreLocation" />
          description: The name of the continuous backup restore location.
        - id: options
          type: >-
            <xref
            uid="@azure/arm-cosmosdb.MongoDBResourcesRetrieveContinuousBackupInformationOptionalParams"
            />
          description: |
            The options parameters.
      return:
        type: >-
          Promise&lt;PollerLike&lt;PollOperationState&lt;<xref
          uid="@azure/arm-cosmosdb.MongoDBResourcesRetrieveContinuousBackupInformationResponse"
          />&gt;, <xref
          uid="@azure/arm-cosmosdb.MongoDBResourcesRetrieveContinuousBackupInformationResponse"
          />&gt;&gt;
        description: ''
  - name: >-
      beginRetrieveContinuousBackupInformationAndWait(string, string, string,
      string, ContinuousBackupRestoreLocation,
      MongoDBResourcesRetrieveContinuousBackupInformationOptionalParams)
    uid: >-
      @azure/arm-cosmosdb.MongoDBResources.beginRetrieveContinuousBackupInformationAndWait
    package: '@azure/arm-cosmosdb'
    summary: Retrieves continuous backup information for a Mongodb collection.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function
        beginRetrieveContinuousBackupInformationAndWait(resourceGroupName:
        string, accountName: string, databaseName: string, collectionName:
        string, location: ContinuousBackupRestoreLocation, options?:
        MongoDBResourcesRetrieveContinuousBackupInformationOptionalParams)
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group. The name is case insensitive.
        - id: accountName
          type: string
          description: Cosmos DB database account name.
        - id: databaseName
          type: string
          description: Cosmos DB database name.
        - id: collectionName
          type: string
          description: Cosmos DB collection name.
        - id: location
          type: <xref uid="@azure/arm-cosmosdb.ContinuousBackupRestoreLocation" />
          description: The name of the continuous backup restore location.
        - id: options
          type: >-
            <xref
            uid="@azure/arm-cosmosdb.MongoDBResourcesRetrieveContinuousBackupInformationOptionalParams"
            />
          description: |
            The options parameters.
      return:
        type: >-
          Promise&lt;<xref
          uid="@azure/arm-cosmosdb.MongoDBResourcesRetrieveContinuousBackupInformationResponse"
          />&gt;
        description: ''
  - name: >-
      beginUpdateMongoDBCollectionThroughput(string, string, string, string,
      ThroughputSettingsUpdateParameters,
      MongoDBResourcesUpdateMongoDBCollectionThroughputOptionalParams)
    uid: >-
      @azure/arm-cosmosdb.MongoDBResources.beginUpdateMongoDBCollectionThroughput
    package: '@azure/arm-cosmosdb'
    summary: Update the RUs per second of an Azure Cosmos DB MongoDB collection
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function beginUpdateMongoDBCollectionThroughput(resourceGroupName:
        string, accountName: string, databaseName: string, collectionName:
        string, updateThroughputParameters: ThroughputSettingsUpdateParameters,
        options?:
        MongoDBResourcesUpdateMongoDBCollectionThroughputOptionalParams)
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group. The name is case insensitive.
        - id: accountName
          type: string
          description: Cosmos DB database account name.
        - id: databaseName
          type: string
          description: Cosmos DB database name.
        - id: collectionName
          type: string
          description: Cosmos DB collection name.
        - id: updateThroughputParameters
          type: >-
            <xref uid="@azure/arm-cosmosdb.ThroughputSettingsUpdateParameters"
            />
          description: |-
            The RUs per second of the parameters to provide for the current
                                              MongoDB collection.
        - id: options
          type: >-
            <xref
            uid="@azure/arm-cosmosdb.MongoDBResourcesUpdateMongoDBCollectionThroughputOptionalParams"
            />
          description: |
            The options parameters.
      return:
        type: >-
          Promise&lt;PollerLike&lt;PollOperationState&lt;<xref
          uid="@azure/arm-cosmosdb.MongoDBResourcesUpdateMongoDBCollectionThroughputResponse"
          />&gt;, <xref
          uid="@azure/arm-cosmosdb.MongoDBResourcesUpdateMongoDBCollectionThroughputResponse"
          />&gt;&gt;
        description: ''
  - name: >-
      beginUpdateMongoDBCollectionThroughputAndWait(string, string, string,
      string, ThroughputSettingsUpdateParameters,
      MongoDBResourcesUpdateMongoDBCollectionThroughputOptionalParams)
    uid: >-
      @azure/arm-cosmosdb.MongoDBResources.beginUpdateMongoDBCollectionThroughputAndWait
    package: '@azure/arm-cosmosdb'
    summary: Update the RUs per second of an Azure Cosmos DB MongoDB collection
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function
        beginUpdateMongoDBCollectionThroughputAndWait(resourceGroupName: string,
        accountName: string, databaseName: string, collectionName: string,
        updateThroughputParameters: ThroughputSettingsUpdateParameters,
        options?:
        MongoDBResourcesUpdateMongoDBCollectionThroughputOptionalParams)
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group. The name is case insensitive.
        - id: accountName
          type: string
          description: Cosmos DB database account name.
        - id: databaseName
          type: string
          description: Cosmos DB database name.
        - id: collectionName
          type: string
          description: Cosmos DB collection name.
        - id: updateThroughputParameters
          type: >-
            <xref uid="@azure/arm-cosmosdb.ThroughputSettingsUpdateParameters"
            />
          description: |-
            The RUs per second of the parameters to provide for the current
                                              MongoDB collection.
        - id: options
          type: >-
            <xref
            uid="@azure/arm-cosmosdb.MongoDBResourcesUpdateMongoDBCollectionThroughputOptionalParams"
            />
          description: |
            The options parameters.
      return:
        type: >-
          Promise&lt;<xref
          uid="@azure/arm-cosmosdb.MongoDBResourcesUpdateMongoDBCollectionThroughputResponse"
          />&gt;
        description: ''
  - name: >-
      beginUpdateMongoDBDatabaseThroughput(string, string, string,
      ThroughputSettingsUpdateParameters,
      MongoDBResourcesUpdateMongoDBDatabaseThroughputOptionalParams)
    uid: '@azure/arm-cosmosdb.MongoDBResources.beginUpdateMongoDBDatabaseThroughput'
    package: '@azure/arm-cosmosdb'
    summary: Update RUs per second of the an Azure Cosmos DB MongoDB database
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function beginUpdateMongoDBDatabaseThroughput(resourceGroupName: string,
        accountName: string, databaseName: string, updateThroughputParameters:
        ThroughputSettingsUpdateParameters, options?:
        MongoDBResourcesUpdateMongoDBDatabaseThroughputOptionalParams)
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group. The name is case insensitive.
        - id: accountName
          type: string
          description: Cosmos DB database account name.
        - id: databaseName
          type: string
          description: Cosmos DB database name.
        - id: updateThroughputParameters
          type: >-
            <xref uid="@azure/arm-cosmosdb.ThroughputSettingsUpdateParameters"
            />
          description: |-
            The RUs per second of the parameters to provide for the current
                                              MongoDB database.
        - id: options
          type: >-
            <xref
            uid="@azure/arm-cosmosdb.MongoDBResourcesUpdateMongoDBDatabaseThroughputOptionalParams"
            />
          description: |
            The options parameters.
      return:
        type: >-
          Promise&lt;PollerLike&lt;PollOperationState&lt;<xref
          uid="@azure/arm-cosmosdb.MongoDBResourcesUpdateMongoDBDatabaseThroughputResponse"
          />&gt;, <xref
          uid="@azure/arm-cosmosdb.MongoDBResourcesUpdateMongoDBDatabaseThroughputResponse"
          />&gt;&gt;
        description: ''
  - name: >-
      beginUpdateMongoDBDatabaseThroughputAndWait(string, string, string,
      ThroughputSettingsUpdateParameters,
      MongoDBResourcesUpdateMongoDBDatabaseThroughputOptionalParams)
    uid: >-
      @azure/arm-cosmosdb.MongoDBResources.beginUpdateMongoDBDatabaseThroughputAndWait
    package: '@azure/arm-cosmosdb'
    summary: Update RUs per second of the an Azure Cosmos DB MongoDB database
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function beginUpdateMongoDBDatabaseThroughputAndWait(resourceGroupName:
        string, accountName: string, databaseName: string,
        updateThroughputParameters: ThroughputSettingsUpdateParameters,
        options?: MongoDBResourcesUpdateMongoDBDatabaseThroughputOptionalParams)
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group. The name is case insensitive.
        - id: accountName
          type: string
          description: Cosmos DB database account name.
        - id: databaseName
          type: string
          description: Cosmos DB database name.
        - id: updateThroughputParameters
          type: >-
            <xref uid="@azure/arm-cosmosdb.ThroughputSettingsUpdateParameters"
            />
          description: |-
            The RUs per second of the parameters to provide for the current
                                              MongoDB database.
        - id: options
          type: >-
            <xref
            uid="@azure/arm-cosmosdb.MongoDBResourcesUpdateMongoDBDatabaseThroughputOptionalParams"
            />
          description: |
            The options parameters.
      return:
        type: >-
          Promise&lt;<xref
          uid="@azure/arm-cosmosdb.MongoDBResourcesUpdateMongoDBDatabaseThroughputResponse"
          />&gt;
        description: ''
  - name: >-
      getMongoDBCollection(string, string, string, string,
      MongoDBResourcesGetMongoDBCollectionOptionalParams)
    uid: '@azure/arm-cosmosdb.MongoDBResources.getMongoDBCollection'
    package: '@azure/arm-cosmosdb'
    summary: >-
      Gets the MongoDB collection under an existing Azure Cosmos DB database
      account.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function getMongoDBCollection(resourceGroupName: string, accountName:
        string, databaseName: string, collectionName: string, options?:
        MongoDBResourcesGetMongoDBCollectionOptionalParams)
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group. The name is case insensitive.
        - id: accountName
          type: string
          description: Cosmos DB database account name.
        - id: databaseName
          type: string
          description: Cosmos DB database name.
        - id: collectionName
          type: string
          description: Cosmos DB collection name.
        - id: options
          type: >-
            <xref
            uid="@azure/arm-cosmosdb.MongoDBResourcesGetMongoDBCollectionOptionalParams"
            />
          description: |
            The options parameters.
      return:
        type: >-
          Promise&lt;<xref
          uid="@azure/arm-cosmosdb.MongoDBResourcesGetMongoDBCollectionResponse"
          />&gt;
        description: ''
  - name: >-
      getMongoDBCollectionThroughput(string, string, string, string,
      MongoDBResourcesGetMongoDBCollectionThroughputOptionalParams)
    uid: '@azure/arm-cosmosdb.MongoDBResources.getMongoDBCollectionThroughput'
    package: '@azure/arm-cosmosdb'
    summary: >-
      Gets the RUs per second of the MongoDB collection under an existing Azure
      Cosmos DB database account

      with the provided name.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function getMongoDBCollectionThroughput(resourceGroupName: string,
        accountName: string, databaseName: string, collectionName: string,
        options?: MongoDBResourcesGetMongoDBCollectionThroughputOptionalParams)
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group. The name is case insensitive.
        - id: accountName
          type: string
          description: Cosmos DB database account name.
        - id: databaseName
          type: string
          description: Cosmos DB database name.
        - id: collectionName
          type: string
          description: Cosmos DB collection name.
        - id: options
          type: >-
            <xref
            uid="@azure/arm-cosmosdb.MongoDBResourcesGetMongoDBCollectionThroughputOptionalParams"
            />
          description: |
            The options parameters.
      return:
        type: >-
          Promise&lt;<xref
          uid="@azure/arm-cosmosdb.MongoDBResourcesGetMongoDBCollectionThroughputResponse"
          />&gt;
        description: ''
  - name: >-
      getMongoDBDatabase(string, string, string,
      MongoDBResourcesGetMongoDBDatabaseOptionalParams)
    uid: '@azure/arm-cosmosdb.MongoDBResources.getMongoDBDatabase'
    package: '@azure/arm-cosmosdb'
    summary: >-
      Gets the MongoDB databases under an existing Azure Cosmos DB database
      account with the provided

      name.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function getMongoDBDatabase(resourceGroupName: string, accountName:
        string, databaseName: string, options?:
        MongoDBResourcesGetMongoDBDatabaseOptionalParams)
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group. The name is case insensitive.
        - id: accountName
          type: string
          description: Cosmos DB database account name.
        - id: databaseName
          type: string
          description: Cosmos DB database name.
        - id: options
          type: >-
            <xref
            uid="@azure/arm-cosmosdb.MongoDBResourcesGetMongoDBDatabaseOptionalParams"
            />
          description: |
            The options parameters.
      return:
        type: >-
          Promise&lt;<xref
          uid="@azure/arm-cosmosdb.MongoDBResourcesGetMongoDBDatabaseResponse"
          />&gt;
        description: ''
  - name: >-
      getMongoDBDatabaseThroughput(string, string, string,
      MongoDBResourcesGetMongoDBDatabaseThroughputOptionalParams)
    uid: '@azure/arm-cosmosdb.MongoDBResources.getMongoDBDatabaseThroughput'
    package: '@azure/arm-cosmosdb'
    summary: >-
      Gets the RUs per second of the MongoDB database under an existing Azure
      Cosmos DB database account

      with the provided name.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function getMongoDBDatabaseThroughput(resourceGroupName: string,
        accountName: string, databaseName: string, options?:
        MongoDBResourcesGetMongoDBDatabaseThroughputOptionalParams)
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group. The name is case insensitive.
        - id: accountName
          type: string
          description: Cosmos DB database account name.
        - id: databaseName
          type: string
          description: Cosmos DB database name.
        - id: options
          type: >-
            <xref
            uid="@azure/arm-cosmosdb.MongoDBResourcesGetMongoDBDatabaseThroughputOptionalParams"
            />
          description: |
            The options parameters.
      return:
        type: >-
          Promise&lt;<xref
          uid="@azure/arm-cosmosdb.MongoDBResourcesGetMongoDBDatabaseThroughputResponse"
          />&gt;
        description: ''
  - name: >-
      listMongoDBCollections(string, string, string,
      MongoDBResourcesListMongoDBCollectionsOptionalParams)
    uid: '@azure/arm-cosmosdb.MongoDBResources.listMongoDBCollections'
    package: '@azure/arm-cosmosdb'
    summary: >-
      Lists the MongoDB collection under an existing Azure Cosmos DB database
      account.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listMongoDBCollections(resourceGroupName: string, accountName:
        string, databaseName: string, options?:
        MongoDBResourcesListMongoDBCollectionsOptionalParams)
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group. The name is case insensitive.
        - id: accountName
          type: string
          description: Cosmos DB database account name.
        - id: databaseName
          type: string
          description: Cosmos DB database name.
        - id: options
          type: >-
            <xref
            uid="@azure/arm-cosmosdb.MongoDBResourcesListMongoDBCollectionsOptionalParams"
            />
          description: |
            The options parameters.
      return:
        type: >-
          PagedAsyncIterableIterator&lt;<xref
          uid="@azure/arm-cosmosdb.MongoDBCollectionGetResults" />&gt;
        description: ''
  - name: >-
      listMongoDBDatabases(string, string,
      MongoDBResourcesListMongoDBDatabasesOptionalParams)
    uid: '@azure/arm-cosmosdb.MongoDBResources.listMongoDBDatabases'
    package: '@azure/arm-cosmosdb'
    summary: >-
      Lists the MongoDB databases under an existing Azure Cosmos DB database
      account.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listMongoDBDatabases(resourceGroupName: string, accountName:
        string, options?: MongoDBResourcesListMongoDBDatabasesOptionalParams)
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group. The name is case insensitive.
        - id: accountName
          type: string
          description: Cosmos DB database account name.
        - id: options
          type: >-
            <xref
            uid="@azure/arm-cosmosdb.MongoDBResourcesListMongoDBDatabasesOptionalParams"
            />
          description: |
            The options parameters.
      return:
        type: >-
          PagedAsyncIterableIterator&lt;<xref
          uid="@azure/arm-cosmosdb.MongoDBDatabaseGetResults" />&gt;
        description: ''
