### YamlMime:UniversalReference
items:
  - uid: '@azure/data-tables.TableServiceClient'
    name: TableServiceClient
    fullName: TableServiceClient
    children:
      - '@azure/data-tables.TableServiceClient.createTable'
      - '@azure/data-tables.TableServiceClient.deleteTable'
      - '@azure/data-tables.TableServiceClient.fromConnectionString'
      - '@azure/data-tables.TableServiceClient.getAccessPolicy'
      - '@azure/data-tables.TableServiceClient.getProperties'
      - '@azure/data-tables.TableServiceClient.getStatistics'
      - '@azure/data-tables.TableServiceClient.listTables'
      - '@azure/data-tables.TableServiceClient.setAccessPolicy'
      - '@azure/data-tables.TableServiceClient.setProperties'
      - '@azure/data-tables.TableServiceClient.constructor_1'
      - '@azure/data-tables.TableServiceClient.constructor'
    langs:
      - typeScript
    type: class
    summary: >-
      A TableServiceClient represents a Client to the Azure Tables service
      allowing you

      to perform operations on the tables and the entities.
    package: '@azure/data-tables'
  - uid: '@azure/data-tables.TableServiceClient.createTable'
    name: 'createTable(string, CreateTableOptions)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Creates a new table under the given account.
    syntax:
      content: 'function createTable(tableName: string, options?: CreateTableOptions)'
      parameters:
        - id: tableName
          type:
            - string
          description: The name of the table.
        - id: options
          type:
            - '@azure/data-tables.CreateTableOptions'
          description: |
            The options parameters.
          optional: true
      return:
        type:
          - Promise<@azure/data-tables.CreateTableItemResponse>
        description: ''
    package: '@azure/data-tables'
  - uid: '@azure/data-tables.TableServiceClient.deleteTable'
    name: 'deleteTable(string, DeleteTableOptions)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Operation permanently deletes the specified table.
    syntax:
      content: 'function deleteTable(tableName: string, options?: DeleteTableOptions)'
      parameters:
        - id: tableName
          type:
            - string
          description: The name of the table.
        - id: options
          type:
            - '@azure/data-tables.DeleteTableOptions'
          description: |
            The options parameters.
          optional: true
      return:
        type:
          - Promise<@azure/data-tables.DeleteTableResponse>
        description: ''
    package: '@azure/data-tables'
  - uid: '@azure/data-tables.TableServiceClient.fromConnectionString'
    name: 'fromConnectionString(string, TableServiceClientOptions)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Creates an instance of TableServiceClient from connection string.
    syntax:
      content: >-
        static function fromConnectionString(connectionString: string, options?:
        TableServiceClientOptions)
      parameters:
        - id: connectionString
          type:
            - string
          description: >-
            Account connection string or a SAS connection string of an Azure
            storage account.
                                             [ Note - Account connection string can only be used in NODE.JS runtime. ]
                                             Account connection string example -
                                             `DefaultEndpointsProtocol=https;AccountName=myaccount;AccountKey=accountKey;EndpointSuffix=core.windows.net`
                                             SAS connection string example -
                                             `BlobEndpoint=https://myaccount.table.core.windows.net/;QueueEndpoint=https://myaccount.queue.core.windows.net/;FileEndpoint=https://myaccount.file.core.windows.net/;TableEndpoint=https://myaccount.table.core.windows.net/;SharedAccessSignature=sasString`
        - id: options
          type:
            - '@azure/data-tables.TableServiceClientOptions'
          description: ''
          optional: true
      return:
        type:
          - '@azure/data-tables.TableServiceClient'
        description: A new TableServiceClient from the given connection string.
    package: '@azure/data-tables'
  - uid: '@azure/data-tables.TableServiceClient.getAccessPolicy'
    name: 'getAccessPolicy(string, GetAccessPolicyOptions)'
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      Retrieves details about any stored access policies specified on the table
      that may be used with

      Shared Access Signatures.
    syntax:
      content: >-
        function getAccessPolicy(tableName: string, options?:
        GetAccessPolicyOptions)
      parameters:
        - id: tableName
          type:
            - string
          description: The name of the table.
        - id: options
          type:
            - '@azure/data-tables.GetAccessPolicyOptions'
          description: |
            The options parameters.
          optional: true
      return:
        type:
          - Promise<@azure/data-tables.GetAccessPolicyResponse>
        description: ''
    package: '@azure/data-tables'
  - uid: '@azure/data-tables.TableServiceClient.getProperties'
    name: getProperties(GetPropertiesOptions)
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      Gets the properties of an account's Table service, including properties
      for Analytics and CORS

      (Cross-Origin Resource Sharing) rules.
    syntax:
      content: 'function getProperties(options?: GetPropertiesOptions)'
      parameters:
        - id: options
          type:
            - '@azure/data-tables.GetPropertiesOptions'
          description: |
            The options parameters.
          optional: true
      return:
        type:
          - Promise<@azure/data-tables.GetPropertiesResponse>
        description: ''
    package: '@azure/data-tables'
  - uid: '@azure/data-tables.TableServiceClient.getStatistics'
    name: getStatistics(GetStatisticsOptions)
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      Retrieves statistics related to replication for the Table service. It is
      only available on the

      secondary location endpoint when read-access geo-redundant replication is
      enabled for the account.
    syntax:
      content: 'function getStatistics(options?: GetStatisticsOptions)'
      parameters:
        - id: options
          type:
            - '@azure/data-tables.GetStatisticsOptions'
          description: |
            The options parameters.
          optional: true
      return:
        type:
          - Promise<@azure/data-tables.GetStatisticsResponse>
        description: ''
    package: '@azure/data-tables'
  - uid: '@azure/data-tables.TableServiceClient.listTables'
    name: listTables(ListTableItemsOptions)
    children: []
    type: method
    langs:
      - typeScript
    summary: Queries tables under the given account.
    syntax:
      content: 'function listTables(options?: ListTableItemsOptions)'
      parameters:
        - id: options
          type:
            - '@azure/data-tables.ListTableItemsOptions'
          description: |
            The options parameters.
          optional: true
      return:
        type:
          - >-
            PagedAsyncIterableIterator<@azure/data-tables.TableResponseProperties,
            @azure/data-tables.ListTableItemsResponse>
        description: ''
    package: '@azure/data-tables'
  - uid: '@azure/data-tables.TableServiceClient.setAccessPolicy'
    name: 'setAccessPolicy(string, SetAccessPolicyOptions)'
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      Sets stored access policies for the table that may be used with Shared
      Access Signatures.
    syntax:
      content: >-
        function setAccessPolicy(tableName: string, options?:
        SetAccessPolicyOptions)
      parameters:
        - id: tableName
          type:
            - string
          description: The name of the table.
        - id: options
          type:
            - '@azure/data-tables.SetAccessPolicyOptions'
          description: |
            The options parameters.
          optional: true
      return:
        type:
          - Promise<@azure/data-tables.SetAccessPolicyResponse>
        description: ''
    package: '@azure/data-tables'
  - uid: '@azure/data-tables.TableServiceClient.setProperties'
    name: 'setProperties(ServiceProperties, SetPropertiesOptions)'
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      Sets properties for an account's Table service endpoint, including
      properties for Analytics and CORS

      (Cross-Origin Resource Sharing) rules.
    syntax:
      content: >-
        function setProperties(properties: ServiceProperties, options?:
        SetPropertiesOptions)
      parameters:
        - id: properties
          type:
            - '@azure/data-tables.ServiceProperties'
          description: The Table Service properties.
        - id: options
          type:
            - '@azure/data-tables.SetPropertiesOptions'
          description: |
            The options parameters.
          optional: true
      return:
        type:
          - Promise<@azure/data-tables.SetPropertiesResponse>
        description: ''
    package: '@azure/data-tables'
  - uid: '@azure/data-tables.TableServiceClient.constructor_1'
    name: 'TableServiceClient(string, TableServiceClientOptions)'
    children: []
    type: constructor
    langs:
      - typeScript
    summary: Creates a new instance of the TableServiceClient class.
    syntax:
      content: 'new TableServiceClient(url: string, options?: TableServiceClientOptions)'
      parameters:
        - id: url
          type:
            - string
          description: >-
            The URL of the service account that is the target of the desired
            operation., such as
                                "https://myaccount.table.core.windows.net". You can append a SAS,
                                such as "https://myaccount.table.core.windows.net?sasString".
        - id: options
          type:
            - '@azure/data-tables.TableServiceClientOptions'
          description: >
            Optional. Options to configure the HTTP pipeline.


            Example using an account name/key:


            ```js

            const account = "<storage account name>"

            const sharedKeyCredential = new TablesSharedKeyCredential(account,
            "<account key>");


            const tableServiceClient = new TableServiceClient(
              `https://${account}.table.core.windows.net`,
              sharedKeyCredential
            );

            ```
          optional: true
    package: '@azure/data-tables'
  - uid: '@azure/data-tables.TableServiceClient.constructor'
    name: >-
      TableServiceClient(string, TablesSharedKeyCredential,
      TableServiceClientOptions)
    children: []
    type: constructor
    langs:
      - typeScript
    summary: Creates a new instance of the TableServiceClient class.
    syntax:
      content: >-
        new TableServiceClient(url: string, credential:
        TablesSharedKeyCredential, options?: TableServiceClientOptions)
      parameters:
        - id: url
          type:
            - string
          description: >-
            The URL of the service account that is the target of the desired
            operation., such as
                                "https://myaccount.table.core.windows.net". You can append a SAS,
                                such as "https://myaccount.table.core.windows.net?sasString".
        - id: credential
          type:
            - '@azure/data-tables.TablesSharedKeyCredential'
          description: >-
            TablesSharedKeyCredential used to authenticate requests. Only
            Supported for Browsers
        - id: options
          type:
            - '@azure/data-tables.TableServiceClientOptions'
          description: >
            Optional. Options to configure the HTTP pipeline.


            Example using an account name/key:


            ```js

            const account = "<storage account name>"

            const sharedKeyCredential = new TablesSharedKeyCredential(account,
            "<account key>");


            const tableServiceClient = new TableServiceClient(
              `https://${account}.table.core.windows.net`,
              sharedKeyCredential
            );

            ```
          optional: true
    package: '@azure/data-tables'
references:
  - uid: '@azure/data-tables.TablesSharedKeyCredential'
    name: TablesSharedKeyCredential
    spec.typeScript:
      - name: TablesSharedKeyCredential
        fullName: TablesSharedKeyCredential
        uid: '@azure/data-tables.TablesSharedKeyCredential'
  - uid: '@azure/data-tables.TableServiceClientOptions'
    name: TableServiceClientOptions
    spec.typeScript:
      - name: TableServiceClientOptions
        fullName: TableServiceClientOptions
        uid: '@azure/data-tables.TableServiceClientOptions'
  - uid: '@azure/data-tables.CreateTableOptions'
    name: CreateTableOptions
    spec.typeScript:
      - name: CreateTableOptions
        fullName: CreateTableOptions
        uid: '@azure/data-tables.CreateTableOptions'
  - uid: Promise<@azure/data-tables.CreateTableItemResponse>
    name: CreateTableItemResponse>
    spec.typeScript:
      - name: Promise<
        fullName: Promise<
      - name: CreateTableItemResponse
        fullName: CreateTableItemResponse
        uid: '@azure/data-tables.CreateTableItemResponse'
      - name: '>'
        fullName: '>'
  - uid: '@azure/data-tables.DeleteTableOptions'
    name: DeleteTableOptions
    spec.typeScript:
      - name: DeleteTableOptions
        fullName: DeleteTableOptions
        uid: '@azure/data-tables.DeleteTableOptions'
  - uid: Promise<@azure/data-tables.DeleteTableResponse>
    name: DeleteTableResponse>
    spec.typeScript:
      - name: Promise<
        fullName: Promise<
      - name: DeleteTableResponse
        fullName: DeleteTableResponse
        uid: '@azure/data-tables.DeleteTableResponse'
      - name: '>'
        fullName: '>'
  - uid: '@azure/data-tables.GetAccessPolicyOptions'
    name: GetAccessPolicyOptions
    spec.typeScript:
      - name: GetAccessPolicyOptions
        fullName: GetAccessPolicyOptions
        uid: '@azure/data-tables.GetAccessPolicyOptions'
  - uid: Promise<@azure/data-tables.GetAccessPolicyResponse>
    name: GetAccessPolicyResponse>
    spec.typeScript:
      - name: Promise<
        fullName: Promise<
      - name: GetAccessPolicyResponse
        fullName: GetAccessPolicyResponse
        uid: '@azure/data-tables.GetAccessPolicyResponse'
      - name: '>'
        fullName: '>'
  - uid: '@azure/data-tables.GetPropertiesOptions'
    name: GetPropertiesOptions
    spec.typeScript:
      - name: GetPropertiesOptions
        fullName: GetPropertiesOptions
        uid: '@azure/data-tables.GetPropertiesOptions'
  - uid: Promise<@azure/data-tables.GetPropertiesResponse>
    name: GetPropertiesResponse>
    spec.typeScript:
      - name: Promise<
        fullName: Promise<
      - name: GetPropertiesResponse
        fullName: GetPropertiesResponse
        uid: '@azure/data-tables.GetPropertiesResponse'
      - name: '>'
        fullName: '>'
  - uid: '@azure/data-tables.GetStatisticsOptions'
    name: GetStatisticsOptions
    spec.typeScript:
      - name: GetStatisticsOptions
        fullName: GetStatisticsOptions
        uid: '@azure/data-tables.GetStatisticsOptions'
  - uid: Promise<@azure/data-tables.GetStatisticsResponse>
    name: GetStatisticsResponse>
    spec.typeScript:
      - name: Promise<
        fullName: Promise<
      - name: GetStatisticsResponse
        fullName: GetStatisticsResponse
        uid: '@azure/data-tables.GetStatisticsResponse'
      - name: '>'
        fullName: '>'
  - uid: '@azure/data-tables.ListTableItemsOptions'
    name: ListTableItemsOptions
    spec.typeScript:
      - name: ListTableItemsOptions
        fullName: ListTableItemsOptions
        uid: '@azure/data-tables.ListTableItemsOptions'
  - uid: >-
      PagedAsyncIterableIterator<@azure/data-tables.TableResponseProperties,
      @azure/data-tables.ListTableItemsResponse>
    name: ListTableItemsResponse>
    spec.typeScript:
      - name: PagedAsyncIterableIterator<
        fullName: PagedAsyncIterableIterator<
      - name: TableResponseProperties
        fullName: TableResponseProperties
        uid: '@azure/data-tables.TableResponseProperties'
      - name: ', '
        fullName: ', '
      - name: ListTableItemsResponse
        fullName: ListTableItemsResponse
        uid: '@azure/data-tables.ListTableItemsResponse'
      - name: '>'
        fullName: '>'
  - uid: '@azure/data-tables.SetAccessPolicyOptions'
    name: SetAccessPolicyOptions
    spec.typeScript:
      - name: SetAccessPolicyOptions
        fullName: SetAccessPolicyOptions
        uid: '@azure/data-tables.SetAccessPolicyOptions'
  - uid: Promise<@azure/data-tables.SetAccessPolicyResponse>
    name: SetAccessPolicyResponse>
    spec.typeScript:
      - name: Promise<
        fullName: Promise<
      - name: SetAccessPolicyResponse
        fullName: SetAccessPolicyResponse
        uid: '@azure/data-tables.SetAccessPolicyResponse'
      - name: '>'
        fullName: '>'
  - uid: '@azure/data-tables.ServiceProperties'
    name: ServiceProperties
    spec.typeScript:
      - name: ServiceProperties
        fullName: ServiceProperties
        uid: '@azure/data-tables.ServiceProperties'
  - uid: '@azure/data-tables.SetPropertiesOptions'
    name: SetPropertiesOptions
    spec.typeScript:
      - name: SetPropertiesOptions
        fullName: SetPropertiesOptions
        uid: '@azure/data-tables.SetPropertiesOptions'
  - uid: Promise<@azure/data-tables.SetPropertiesResponse>
    name: SetPropertiesResponse>
    spec.typeScript:
      - name: Promise<
        fullName: Promise<
      - name: SetPropertiesResponse
        fullName: SetPropertiesResponse
        uid: '@azure/data-tables.SetPropertiesResponse'
      - name: '>'
        fullName: '>'
  - uid: '@azure/data-tables.TableServiceClient'
    name: TableServiceClient
    spec.typeScript:
      - name: TableServiceClient
        fullName: TableServiceClient
        uid: '@azure/data-tables.TableServiceClient'
