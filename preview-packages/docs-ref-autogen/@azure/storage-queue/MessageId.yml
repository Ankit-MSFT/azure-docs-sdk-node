### YamlMime:UniversalReference
items:
  - uid: '@azure/storage-queue.MessageId'
    name: MessageId
    fullName: MessageId
    children:
      - '@azure/storage-queue.MessageId.deleteMethod'
      - '@azure/storage-queue.MessageId.deleteMethod_1'
      - '@azure/storage-queue.MessageId.deleteMethod_3'
      - '@azure/storage-queue.MessageId.deleteMethod_2'
      - '@azure/storage-queue.MessageId.constructor'
      - '@azure/storage-queue.MessageId.update'
      - '@azure/storage-queue.MessageId.update_1'
      - '@azure/storage-queue.MessageId.update_3'
      - '@azure/storage-queue.MessageId.update_2'
    langs:
      - typeScript
    type: class
    summary: Class representing a MessageId.
    package: '@azure/storage-queue'
  - uid: '@azure/storage-queue.MessageId.deleteMethod'
    name: deleteMethod(string)
    children: []
    type: method
    langs:
      - typeScript
    summary: The Delete operation deletes the specified message.
    syntax:
      content: 'function deleteMethod(popReceipt: string)'
      parameters:
        - id: popReceipt
          type:
            - string
          description: |
            Required. Specifies the valid pop receipt value returned from an
            earlier call to the Get Messages or Update Message operation.
      return:
        type:
          - Promise<Models.MessageIdDeleteResponse>
    package: '@azure/storage-queue'
  - uid: '@azure/storage-queue.MessageId.deleteMethod_1'
    name: 'deleteMethod(string, MessageIdDeleteMethodOptionalParams)'
    children: []
    type: method
    langs:
      - typeScript
    summary: The Delete operation deletes the specified message.
    syntax:
      content: >-
        function deleteMethod(popReceipt: string, options:
        MessageIdDeleteMethodOptionalParams)
      parameters:
        - id: popReceipt
          type:
            - string
          description: ''
        - id: options
          type:
            - '@azure/storage-queue.MessageIdDeleteMethodOptionalParams'
          description: ''
      return:
        type:
          - Promise<Models.MessageIdDeleteResponse>
    package: '@azure/storage-queue'
  - uid: '@azure/storage-queue.MessageId.deleteMethod_3'
    name: >-
      deleteMethod(string, MessageIdDeleteMethodOptionalParams,
      ServiceCallback<void>)
    children: []
    type: method
    langs:
      - typeScript
    summary: The Delete operation deletes the specified message.
    syntax:
      content: >-
        function deleteMethod(popReceipt: string, options:
        MessageIdDeleteMethodOptionalParams, callback: ServiceCallback<void>)
      parameters:
        - id: popReceipt
          type:
            - string
          description: ''
        - id: options
          type:
            - '@azure/storage-queue.MessageIdDeleteMethodOptionalParams'
          description: ''
        - id: callback
          type:
            - ServiceCallback<void>
          description: ''
      return:
        type:
          - Promise<Models.MessageIdDeleteResponse>
    package: '@azure/storage-queue'
  - uid: '@azure/storage-queue.MessageId.deleteMethod_2'
    name: 'deleteMethod(string, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: The Delete operation deletes the specified message.
    syntax:
      content: >-
        function deleteMethod(popReceipt: string, callback:
        ServiceCallback<void>)
      parameters:
        - id: popReceipt
          type:
            - string
          description: ''
        - id: callback
          type:
            - ServiceCallback<void>
          description: ''
      return:
        type:
          - Promise<Models.MessageIdDeleteResponse>
    package: '@azure/storage-queue'
  - uid: '@azure/storage-queue.MessageId.constructor'
    name: MessageId(StorageClientContext)
    children: []
    type: constructor
    langs:
      - typeScript
    summary: Create a MessageId.
    syntax:
      content: 'new MessageId(client: StorageClientContext)'
      parameters:
        - id: client
          type:
            - '@azure/storage-queue.StorageClientContext'
          description: |
            Reference to the service client.
    package: '@azure/storage-queue'
  - uid: '@azure/storage-queue.MessageId.update'
    name: 'update(QueueMessage, string, number)'
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      The Update operation was introduced with version 2011-08-18 of the Queue
      service API. The Update

      Message operation updates the visibility timeout of a message. You can
      also use this operation

      to update the contents of a message. A message must be in a format that
      can be included in an

      XML request with UTF-8 encoding, and the encoded message can be up to 64KB
      in size.
    syntax:
      content: >-
        function update(queueMessage: QueueMessage, popReceipt: string,
        visibilitytimeout: number)
      parameters:
        - id: queueMessage
          type:
            - '@azure/storage-queue.QueueMessage'
          description: |
            A Message object which can be stored in a Queue
        - id: popReceipt
          type:
            - string
          description: |
            Required. Specifies the valid pop receipt value returned from an
            earlier call to the Get Messages or Update Message operation.
        - id: visibilitytimeout
          type:
            - number
          description: >
            Optional. Specifies the new visibility timeout value, in

            seconds, relative to server time. The default value is 30 seconds. A
            specified value must be

            larger than or equal to 1 second, and cannot be larger than 7 days,
            or larger than 2 hours on

            REST protocol versions prior to version 2011-08-18. The visibility
            timeout of a message can be

            set to a value later than the expiry time.
      return:
        type:
          - Promise<Models.MessageIdUpdateResponse>
    package: '@azure/storage-queue'
  - uid: '@azure/storage-queue.MessageId.update_1'
    name: 'update(QueueMessage, string, number, MessageIdUpdateOptionalParams)'
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      The Update operation was introduced with version 2011-08-18 of the Queue
      service API. The Update

      Message operation updates the visibility timeout of a message. You can
      also use this operation

      to update the contents of a message. A message must be in a format that
      can be included in an

      XML request with UTF-8 encoding, and the encoded message can be up to 64KB
      in size.
    syntax:
      content: >-
        function update(queueMessage: QueueMessage, popReceipt: string,
        visibilitytimeout: number, options: MessageIdUpdateOptionalParams)
      parameters:
        - id: queueMessage
          type:
            - '@azure/storage-queue.QueueMessage'
          description: ''
        - id: popReceipt
          type:
            - string
          description: ''
        - id: visibilitytimeout
          type:
            - number
          description: ''
        - id: options
          type:
            - '@azure/storage-queue.MessageIdUpdateOptionalParams'
          description: ''
      return:
        type:
          - Promise<Models.MessageIdUpdateResponse>
    package: '@azure/storage-queue'
  - uid: '@azure/storage-queue.MessageId.update_3'
    name: >-
      update(QueueMessage, string, number, MessageIdUpdateOptionalParams,
      ServiceCallback<void>)
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      The Update operation was introduced with version 2011-08-18 of the Queue
      service API. The Update

      Message operation updates the visibility timeout of a message. You can
      also use this operation

      to update the contents of a message. A message must be in a format that
      can be included in an

      XML request with UTF-8 encoding, and the encoded message can be up to 64KB
      in size.
    syntax:
      content: >-
        function update(queueMessage: QueueMessage, popReceipt: string,
        visibilitytimeout: number, options: MessageIdUpdateOptionalParams,
        callback: ServiceCallback<void>)
      parameters:
        - id: queueMessage
          type:
            - '@azure/storage-queue.QueueMessage'
          description: ''
        - id: popReceipt
          type:
            - string
          description: ''
        - id: visibilitytimeout
          type:
            - number
          description: ''
        - id: options
          type:
            - '@azure/storage-queue.MessageIdUpdateOptionalParams'
          description: ''
        - id: callback
          type:
            - ServiceCallback<void>
          description: ''
      return:
        type:
          - Promise<Models.MessageIdUpdateResponse>
    package: '@azure/storage-queue'
  - uid: '@azure/storage-queue.MessageId.update_2'
    name: 'update(QueueMessage, string, number, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      The Update operation was introduced with version 2011-08-18 of the Queue
      service API. The Update

      Message operation updates the visibility timeout of a message. You can
      also use this operation

      to update the contents of a message. A message must be in a format that
      can be included in an

      XML request with UTF-8 encoding, and the encoded message can be up to 64KB
      in size.
    syntax:
      content: >-
        function update(queueMessage: QueueMessage, popReceipt: string,
        visibilitytimeout: number, callback: ServiceCallback<void>)
      parameters:
        - id: queueMessage
          type:
            - '@azure/storage-queue.QueueMessage'
          description: ''
        - id: popReceipt
          type:
            - string
          description: ''
        - id: visibilitytimeout
          type:
            - number
          description: ''
        - id: callback
          type:
            - ServiceCallback<void>
          description: ''
      return:
        type:
          - Promise<Models.MessageIdUpdateResponse>
    package: '@azure/storage-queue'
references:
  - uid: '@azure/storage-queue.StorageClientContext'
    name: StorageClientContext
    spec.typeScript:
      - name: StorageClientContext
        fullName: StorageClientContext
        uid: '@azure/storage-queue.StorageClientContext'
  - uid: '@azure/storage-queue.MessageIdDeleteMethodOptionalParams'
    name: MessageIdDeleteMethodOptionalParams
    spec.typeScript:
      - name: MessageIdDeleteMethodOptionalParams
        fullName: MessageIdDeleteMethodOptionalParams
        uid: '@azure/storage-queue.MessageIdDeleteMethodOptionalParams'
  - uid: '@azure/storage-queue.QueueMessage'
    name: QueueMessage
    spec.typeScript:
      - name: QueueMessage
        fullName: QueueMessage
        uid: '@azure/storage-queue.QueueMessage'
  - uid: '@azure/storage-queue.MessageIdUpdateOptionalParams'
    name: MessageIdUpdateOptionalParams
    spec.typeScript:
      - name: MessageIdUpdateOptionalParams
        fullName: MessageIdUpdateOptionalParams
        uid: '@azure/storage-queue.MessageIdUpdateOptionalParams'
