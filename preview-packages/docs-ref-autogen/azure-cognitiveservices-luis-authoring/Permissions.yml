### YamlMime:UniversalReference
items:
  - uid: azure-cognitiveservices-luis-authoring.Permissions
    name: Permissions
    fullName: Permissions
    children:
      - azure-cognitiveservices-luis-authoring.Permissions.add
      - azure-cognitiveservices-luis-authoring.Permissions.add_2
      - azure-cognitiveservices-luis-authoring.Permissions.add_1
      - >-
        azure-cognitiveservices-luis-authoring.Permissions.addWithHttpOperationResponse
      - azure-cognitiveservices-luis-authoring.Permissions.deleteMethod
      - azure-cognitiveservices-luis-authoring.Permissions.deleteMethod_2
      - azure-cognitiveservices-luis-authoring.Permissions.deleteMethod_1
      - >-
        azure-cognitiveservices-luis-authoring.Permissions.deleteMethodWithHttpOperationResponse
      - azure-cognitiveservices-luis-authoring.Permissions.list
      - azure-cognitiveservices-luis-authoring.Permissions.list_2
      - azure-cognitiveservices-luis-authoring.Permissions.list_1
      - >-
        azure-cognitiveservices-luis-authoring.Permissions.listWithHttpOperationResponse
      - azure-cognitiveservices-luis-authoring.Permissions.update
      - azure-cognitiveservices-luis-authoring.Permissions.update_2
      - azure-cognitiveservices-luis-authoring.Permissions.update_1
      - >-
        azure-cognitiveservices-luis-authoring.Permissions.updateWithHttpOperationResponse
    langs:
      - typeScript
    type: interface
    summary: ''
    package: azure-cognitiveservices-luis-authoring
  - uid: azure-cognitiveservices-luis-authoring.Permissions.add
    name: 'add(string, UserCollaborator, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      Adds a user to the allowed list of users to access this LUIS application.
      Users are added using their email address.
    syntax:
      content: >-
        function add(appId: string, userToAdd: UserCollaborator, options?:
        Object)
      parameters:
        - id: appId
          type:
            - string
          description: |
            The application ID.
        - id: userToAdd
          type:
            - azure-cognitiveservices-luis-authoring.UserCollaborator
          description: |
            A model containing the user's email address.
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<azure-cognitiveservices-luis-authoring.OperationStatus>
    package: azure-cognitiveservices-luis-authoring
  - uid: azure-cognitiveservices-luis-authoring.Permissions.add_2
    name: 'add(string, UserCollaborator, Object, ServiceCallback<OperationStatus>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      Adds a user to the allowed list of users to access this LUIS application.
      Users are added using their email address.
    syntax:
      content: >-
        function add(appId: string, userToAdd: UserCollaborator, options:
        Object, callback: ServiceCallback<OperationStatus>)
      parameters:
        - id: appId
          type:
            - string
          description: ''
        - id: userToAdd
          type:
            - azure-cognitiveservices-luis-authoring.UserCollaborator
          description: ''
        - id: options
          type:
            - Object
          description: ''
        - id: callback
          type:
            - >-
              ServiceCallback<azure-cognitiveservices-luis-authoring.OperationStatus>
          description: ''
      return:
        type:
          - Promise<azure-cognitiveservices-luis-authoring.OperationStatus>
    package: azure-cognitiveservices-luis-authoring
  - uid: azure-cognitiveservices-luis-authoring.Permissions.add_1
    name: 'add(string, UserCollaborator, ServiceCallback<OperationStatus>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      Adds a user to the allowed list of users to access this LUIS application.
      Users are added using their email address.
    syntax:
      content: >-
        function add(appId: string, userToAdd: UserCollaborator, callback:
        ServiceCallback<OperationStatus>)
      parameters:
        - id: appId
          type:
            - string
          description: ''
        - id: userToAdd
          type:
            - azure-cognitiveservices-luis-authoring.UserCollaborator
          description: ''
        - id: callback
          type:
            - >-
              ServiceCallback<azure-cognitiveservices-luis-authoring.OperationStatus>
          description: ''
      return:
        type:
          - Promise<azure-cognitiveservices-luis-authoring.OperationStatus>
    package: azure-cognitiveservices-luis-authoring
  - uid: >-
      azure-cognitiveservices-luis-authoring.Permissions.addWithHttpOperationResponse
    name: 'addWithHttpOperationResponse(string, UserCollaborator, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      Adds a user to the allowed list of users to access this LUIS application.
      Users are added using their email address.
    syntax:
      content: >-
        function addWithHttpOperationResponse(appId: string, userToAdd:
        UserCollaborator, options?: Object)
      parameters:
        - id: appId
          type:
            - string
          description: |
            The application ID.
        - id: userToAdd
          type:
            - azure-cognitiveservices-luis-authoring.UserCollaborator
          description: |
            A model containing the user's email address.
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - >-
            Promise<HttpOperationResponse<azure-cognitiveservices-luis-authoring.OperationStatus>>
    package: azure-cognitiveservices-luis-authoring
  - uid: azure-cognitiveservices-luis-authoring.Permissions.deleteMethod
    name: 'deleteMethod(string, UserCollaborator, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      Removes a user from the allowed list of users to access this LUIS
      application. Users are removed using their email address.
    syntax:
      content: >-
        function deleteMethod(appId: string, userToDelete: UserCollaborator,
        options?: Object)
      parameters:
        - id: appId
          type:
            - string
          description: |
            The application ID.
        - id: userToDelete
          type:
            - azure-cognitiveservices-luis-authoring.UserCollaborator
          description: |
            A model containing the user's email address.
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<azure-cognitiveservices-luis-authoring.OperationStatus>
    package: azure-cognitiveservices-luis-authoring
  - uid: azure-cognitiveservices-luis-authoring.Permissions.deleteMethod_2
    name: >-
      deleteMethod(string, UserCollaborator, Object,
      ServiceCallback<OperationStatus>)
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      Removes a user from the allowed list of users to access this LUIS
      application. Users are removed using their email address.
    syntax:
      content: >-
        function deleteMethod(appId: string, userToDelete: UserCollaborator,
        options: Object, callback: ServiceCallback<OperationStatus>)
      parameters:
        - id: appId
          type:
            - string
          description: ''
        - id: userToDelete
          type:
            - azure-cognitiveservices-luis-authoring.UserCollaborator
          description: ''
        - id: options
          type:
            - Object
          description: ''
        - id: callback
          type:
            - >-
              ServiceCallback<azure-cognitiveservices-luis-authoring.OperationStatus>
          description: ''
      return:
        type:
          - Promise<azure-cognitiveservices-luis-authoring.OperationStatus>
    package: azure-cognitiveservices-luis-authoring
  - uid: azure-cognitiveservices-luis-authoring.Permissions.deleteMethod_1
    name: 'deleteMethod(string, UserCollaborator, ServiceCallback<OperationStatus>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      Removes a user from the allowed list of users to access this LUIS
      application. Users are removed using their email address.
    syntax:
      content: >-
        function deleteMethod(appId: string, userToDelete: UserCollaborator,
        callback: ServiceCallback<OperationStatus>)
      parameters:
        - id: appId
          type:
            - string
          description: ''
        - id: userToDelete
          type:
            - azure-cognitiveservices-luis-authoring.UserCollaborator
          description: ''
        - id: callback
          type:
            - >-
              ServiceCallback<azure-cognitiveservices-luis-authoring.OperationStatus>
          description: ''
      return:
        type:
          - Promise<azure-cognitiveservices-luis-authoring.OperationStatus>
    package: azure-cognitiveservices-luis-authoring
  - uid: >-
      azure-cognitiveservices-luis-authoring.Permissions.deleteMethodWithHttpOperationResponse
    name: 'deleteMethodWithHttpOperationResponse(string, UserCollaborator, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      Removes a user from the allowed list of users to access this LUIS
      application. Users are removed using their email address.
    syntax:
      content: >-
        function deleteMethodWithHttpOperationResponse(appId: string,
        userToDelete: UserCollaborator, options?: Object)
      parameters:
        - id: appId
          type:
            - string
          description: |
            The application ID.
        - id: userToDelete
          type:
            - azure-cognitiveservices-luis-authoring.UserCollaborator
          description: |
            A model containing the user's email address.
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - >-
            Promise<HttpOperationResponse<azure-cognitiveservices-luis-authoring.OperationStatus>>
    package: azure-cognitiveservices-luis-authoring
  - uid: azure-cognitiveservices-luis-authoring.Permissions.list
    name: 'list(string, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      Gets the list of user emails that have permissions to access your
      application.
    syntax:
      content: 'function list(appId: string, options?: Object)'
      parameters:
        - id: appId
          type:
            - string
          description: |
            The application ID.
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<azure-cognitiveservices-luis-authoring.UserAccessList>
    package: azure-cognitiveservices-luis-authoring
  - uid: azure-cognitiveservices-luis-authoring.Permissions.list_2
    name: 'list(string, Object, ServiceCallback<UserAccessList>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      Gets the list of user emails that have permissions to access your
      application.
    syntax:
      content: >-
        function list(appId: string, options: Object, callback:
        ServiceCallback<UserAccessList>)
      parameters:
        - id: appId
          type:
            - string
          description: ''
        - id: options
          type:
            - Object
          description: ''
        - id: callback
          type:
            - >-
              ServiceCallback<azure-cognitiveservices-luis-authoring.UserAccessList>
          description: ''
      return:
        type:
          - Promise<azure-cognitiveservices-luis-authoring.UserAccessList>
    package: azure-cognitiveservices-luis-authoring
  - uid: azure-cognitiveservices-luis-authoring.Permissions.list_1
    name: 'list(string, ServiceCallback<UserAccessList>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      Gets the list of user emails that have permissions to access your
      application.
    syntax:
      content: 'function list(appId: string, callback: ServiceCallback<UserAccessList>)'
      parameters:
        - id: appId
          type:
            - string
          description: ''
        - id: callback
          type:
            - >-
              ServiceCallback<azure-cognitiveservices-luis-authoring.UserAccessList>
          description: ''
      return:
        type:
          - Promise<azure-cognitiveservices-luis-authoring.UserAccessList>
    package: azure-cognitiveservices-luis-authoring
  - uid: >-
      azure-cognitiveservices-luis-authoring.Permissions.listWithHttpOperationResponse
    name: 'listWithHttpOperationResponse(string, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      Gets the list of user emails that have permissions to access your
      application.
    syntax:
      content: 'function listWithHttpOperationResponse(appId: string, options?: Object)'
      parameters:
        - id: appId
          type:
            - string
          description: |
            The application ID.
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - >-
            Promise<HttpOperationResponse<azure-cognitiveservices-luis-authoring.UserAccessList>>
    package: azure-cognitiveservices-luis-authoring
  - uid: azure-cognitiveservices-luis-authoring.Permissions.update
    name: 'update(string, CollaboratorsArray, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      Replaces the current users access list with the one sent in the body. If
      an

      empty list is sent, all access to other users will be removed.
    syntax:
      content: >-
        function update(appId: string, collaborators: CollaboratorsArray,
        options?: Object)
      parameters:
        - id: appId
          type:
            - string
          description: |
            The application ID.
        - id: collaborators
          type:
            - azure-cognitiveservices-luis-authoring.CollaboratorsArray
          description: |
            A model containing a list of user's email
            addresses.
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<azure-cognitiveservices-luis-authoring.OperationStatus>
    package: azure-cognitiveservices-luis-authoring
  - uid: azure-cognitiveservices-luis-authoring.Permissions.update_2
    name: >-
      update(string, CollaboratorsArray, Object,
      ServiceCallback<OperationStatus>)
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      Replaces the current users access list with the one sent in the body. If
      an

      empty list is sent, all access to other users will be removed.
    syntax:
      content: >-
        function update(appId: string, collaborators: CollaboratorsArray,
        options: Object, callback: ServiceCallback<OperationStatus>)
      parameters:
        - id: appId
          type:
            - string
          description: ''
        - id: collaborators
          type:
            - azure-cognitiveservices-luis-authoring.CollaboratorsArray
          description: ''
        - id: options
          type:
            - Object
          description: ''
        - id: callback
          type:
            - >-
              ServiceCallback<azure-cognitiveservices-luis-authoring.OperationStatus>
          description: ''
      return:
        type:
          - Promise<azure-cognitiveservices-luis-authoring.OperationStatus>
    package: azure-cognitiveservices-luis-authoring
  - uid: azure-cognitiveservices-luis-authoring.Permissions.update_1
    name: 'update(string, CollaboratorsArray, ServiceCallback<OperationStatus>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      Replaces the current users access list with the one sent in the body. If
      an

      empty list is sent, all access to other users will be removed.
    syntax:
      content: >-
        function update(appId: string, collaborators: CollaboratorsArray,
        callback: ServiceCallback<OperationStatus>)
      parameters:
        - id: appId
          type:
            - string
          description: ''
        - id: collaborators
          type:
            - azure-cognitiveservices-luis-authoring.CollaboratorsArray
          description: ''
        - id: callback
          type:
            - >-
              ServiceCallback<azure-cognitiveservices-luis-authoring.OperationStatus>
          description: ''
      return:
        type:
          - Promise<azure-cognitiveservices-luis-authoring.OperationStatus>
    package: azure-cognitiveservices-luis-authoring
  - uid: >-
      azure-cognitiveservices-luis-authoring.Permissions.updateWithHttpOperationResponse
    name: 'updateWithHttpOperationResponse(string, CollaboratorsArray, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      Replaces the current users access list with the one sent in the body. If
      an

      empty list is sent, all access to other users will be removed.
    syntax:
      content: >-
        function updateWithHttpOperationResponse(appId: string, collaborators:
        CollaboratorsArray, options?: Object)
      parameters:
        - id: appId
          type:
            - string
          description: |
            The application ID.
        - id: collaborators
          type:
            - azure-cognitiveservices-luis-authoring.CollaboratorsArray
          description: |
            A model containing a list of user's email
            addresses.
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - >-
            Promise<HttpOperationResponse<azure-cognitiveservices-luis-authoring.OperationStatus>>
    package: azure-cognitiveservices-luis-authoring
references:
  - uid: azure-cognitiveservices-luis-authoring.UserCollaborator
    name: UserCollaborator
    spec.typeScript:
      - name: UserCollaborator
        fullName: UserCollaborator
        uid: azure-cognitiveservices-luis-authoring.UserCollaborator
  - uid: Promise<azure-cognitiveservices-luis-authoring.OperationStatus>
    name: OperationStatus>
    spec.typeScript:
      - name: Promise<
        fullName: Promise<
      - name: OperationStatus
        fullName: OperationStatus
        uid: azure-cognitiveservices-luis-authoring.OperationStatus
      - name: '>'
        fullName: '>'
  - uid: ServiceCallback<azure-cognitiveservices-luis-authoring.OperationStatus>
    name: OperationStatus>
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: OperationStatus
        fullName: OperationStatus
        uid: azure-cognitiveservices-luis-authoring.OperationStatus
      - name: '>'
        fullName: '>'
  - uid: >-
      Promise<HttpOperationResponse<azure-cognitiveservices-luis-authoring.OperationStatus>>
    name: OperationStatus>>
    spec.typeScript:
      - name: Promise<HttpOperationResponse<
        fullName: Promise<HttpOperationResponse<
      - name: OperationStatus
        fullName: OperationStatus
        uid: azure-cognitiveservices-luis-authoring.OperationStatus
      - name: '>>'
        fullName: '>>'
  - uid: Promise<azure-cognitiveservices-luis-authoring.UserAccessList>
    name: UserAccessList>
    spec.typeScript:
      - name: Promise<
        fullName: Promise<
      - name: UserAccessList
        fullName: UserAccessList
        uid: azure-cognitiveservices-luis-authoring.UserAccessList
      - name: '>'
        fullName: '>'
  - uid: ServiceCallback<azure-cognitiveservices-luis-authoring.UserAccessList>
    name: UserAccessList>
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: UserAccessList
        fullName: UserAccessList
        uid: azure-cognitiveservices-luis-authoring.UserAccessList
      - name: '>'
        fullName: '>'
  - uid: >-
      Promise<HttpOperationResponse<azure-cognitiveservices-luis-authoring.UserAccessList>>
    name: UserAccessList>>
    spec.typeScript:
      - name: Promise<HttpOperationResponse<
        fullName: Promise<HttpOperationResponse<
      - name: UserAccessList
        fullName: UserAccessList
        uid: azure-cognitiveservices-luis-authoring.UserAccessList
      - name: '>>'
        fullName: '>>'
  - uid: azure-cognitiveservices-luis-authoring.CollaboratorsArray
    name: CollaboratorsArray
    spec.typeScript:
      - name: CollaboratorsArray
        fullName: CollaboratorsArray
        uid: azure-cognitiveservices-luis-authoring.CollaboratorsArray
