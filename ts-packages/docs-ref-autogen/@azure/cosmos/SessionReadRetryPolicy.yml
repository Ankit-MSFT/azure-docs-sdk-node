### YamlMime:UniversalReference
items:
  - uid: '@azure/cosmos.SessionReadRetryPolicy'
    name: SessionReadRetryPolicy
    fullName: SessionReadRetryPolicy
    children:
      - '@azure/cosmos.SessionReadRetryPolicy.currentRetryAttemptCount'
      - '@azure/cosmos.SessionReadRetryPolicy.maxRetryAttemptCount'
      - '@azure/cosmos.SessionReadRetryPolicy.NOT_FOUND_STATUS_CODE'
      - >-
        @azure/cosmos.SessionReadRetryPolicy.READ_SESSION_NOT_AVAILABLE_SUB_STATUS_CODE
      - '@azure/cosmos.SessionReadRetryPolicy.retryAfterInMilliseconds'
      - '@azure/cosmos.SessionReadRetryPolicy.retryAfterInMilliseconds'
      - '@azure/cosmos.SessionReadRetryPolicy.constructor'
      - '@azure/cosmos.SessionReadRetryPolicy.shouldRetry'
    langs:
      - typeScript
    type: class
    summary: This class implements the retry policy for session consistent reads.
    package: '@azure/cosmos'
  - uid: '@azure/cosmos.SessionReadRetryPolicy.currentRetryAttemptCount'
    name: currentRetryAttemptCount
    fullName: currentRetryAttemptCount
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'public currentRetryAttemptCount: number = 0'
      return:
        type:
          - number
    package: '@azure/cosmos'
  - uid: '@azure/cosmos.SessionReadRetryPolicy.maxRetryAttemptCount'
    name: maxRetryAttemptCount
    fullName: maxRetryAttemptCount
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'public static maxRetryAttemptCount: 1 = 1'
      return:
        type:
          - '1'
    package: '@azure/cosmos'
  - uid: '@azure/cosmos.SessionReadRetryPolicy.NOT_FOUND_STATUS_CODE'
    name: NOT_FOUND_STATUS_CODE
    fullName: NOT_FOUND_STATUS_CODE
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'public static NOT_FOUND_STATUS_CODE: number = StatusCodes.NotFound'
      return:
        type:
          - number
    package: '@azure/cosmos'
  - uid: >-
      @azure/cosmos.SessionReadRetryPolicy.READ_SESSION_NOT_AVAILABLE_SUB_STATUS_CODE
    name: READ_SESSION_NOT_AVAILABLE_SUB_STATUS_CODE
    fullName: READ_SESSION_NOT_AVAILABLE_SUB_STATUS_CODE
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: >-
        public static READ_SESSION_NOT_AVAILABLE_SUB_STATUS_CODE: number =
        SubStatusCodes.PartitionKeyRangeGone
      return:
        type:
          - number
    package: '@azure/cosmos'
  - uid: '@azure/cosmos.SessionReadRetryPolicy.retryAfterInMilliseconds'
    name: retryAfterInMilliseconds
    fullName: retryAfterInMilliseconds
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: >-
        public retryAfterInMilliseconds: number =
        SessionReadRetryPolicy.retryAfterInMilliseconds
      return:
        type:
          - number
    package: '@azure/cosmos'
  - uid: '@azure/cosmos.SessionReadRetryPolicy.retryAfterInMilliseconds'
    name: retryAfterInMilliseconds
    fullName: retryAfterInMilliseconds
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'public static retryAfterInMilliseconds: 0 = 0'
      return:
        type:
          - '0'
    package: '@azure/cosmos'
  - uid: '@azure/cosmos.SessionReadRetryPolicy.constructor'
    name: SessionReadRetryPolicy
    children: []
    type: constructor
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        new SessionReadRetryPolicy(globalEndpointManager: GlobalEndpointManager,
        request: any)
      parameters:
        - id: globalEndpointManager
          type:
            - '@azure/cosmos.GlobalEndpointManager'
          description: The GlobalEndpointManager instance.
        - id: request
          type:
            - any
          description: ''
    package: '@azure/cosmos'
  - uid: '@azure/cosmos.SessionReadRetryPolicy.shouldRetry'
    name: shouldRetry
    children: []
    type: method
    langs:
      - typeScript
    summary: Determines whether the request should be retried or not.
    syntax:
      content: 'function shouldRetry(err: ErrorResponse)'
      parameters:
        - id: err
          type:
            - '@azure/cosmos.ErrorResponse'
          description: Error returned by the request.
      return:
        type:
          - Promise<boolean | function>
    package: '@azure/cosmos'
references:
  - uid: '@azure/cosmos.GlobalEndpointManager'
    spec.typeScript:
      - name: GlobalEndpointManager
        fullName: GlobalEndpointManager
        uid: '@azure/cosmos.GlobalEndpointManager'
  - uid: '@azure/cosmos.ErrorResponse'
    spec.typeScript:
      - name: ErrorResponse
        fullName: ErrorResponse
        uid: '@azure/cosmos.ErrorResponse'
