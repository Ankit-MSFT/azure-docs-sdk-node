### YamlMime:UniversalReference
items:
  - uid: '@azure/cosmos.PartitionKeyRangeCache'
    name: PartitionKeyRangeCache
    fullName: PartitionKeyRangeCache
    children:
      - '@azure/cosmos.PartitionKeyRangeCache.getOverlappingRanges'
      - '@azure/cosmos.PartitionKeyRangeCache.onCollectionRoutingMap'
      - '@azure/cosmos.PartitionKeyRangeCache.constructor'
    langs:
      - typeScript
    type: class
    summary: ''
    package: '@azure/cosmos'
  - uid: '@azure/cosmos.PartitionKeyRangeCache.getOverlappingRanges'
    name: getOverlappingRanges
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      Given the query ranges and a collection, invokes the callback on the list
      of overlapping partition key ranges
    syntax:
      content: >-
        function getOverlappingRanges(collectionLink: string, queryRanges:
        QueryRange)
      parameters:
        - id: collectionLink
          type:
            - string
          description: ''
        - id: queryRanges
          type:
            - '@azure/cosmos.QueryRange'
          description: ''
      return:
        type:
          - 'Promise<any[]>'
    package: '@azure/cosmos'
  - uid: '@azure/cosmos.PartitionKeyRangeCache.onCollectionRoutingMap'
    name: onCollectionRoutingMap
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      Finds or Instantiates the requested Collection Routing Map and invokes
      callback
    syntax:
      content: 'function onCollectionRoutingMap(collectionLink: string)'
      parameters:
        - id: collectionLink
          type:
            - string
          description: Requested collectionLink
      return:
        type:
          - Promise<@azure/cosmos.InMemoryCollectionRoutingMap>
    package: '@azure/cosmos'
  - uid: '@azure/cosmos.PartitionKeyRangeCache.constructor'
    name: PartitionKeyRangeCache
    children: []
    type: constructor
    langs:
      - typeScript
    summary: >-
      Represents a PartitionKeyRangeCache.

      PartitionKeyRangeCache provides list of effective partition key ranges for
      a collection.

      This implementation loads and caches the collection routing map per
      collection on demand.
    syntax:
      content: 'new PartitionKeyRangeCache(documentclient: any)'
      parameters:
        - id: documentclient
          type:
            - any
          description: The documentclient object.
    package: '@azure/cosmos'
references:
  - uid: '@azure/cosmos.QueryRange'
    spec.typeScript:
      - name: QueryRange
        fullName: QueryRange
        uid: '@azure/cosmos.QueryRange'
  - uid: Promise<@azure/cosmos.InMemoryCollectionRoutingMap>
    spec.typeScript:
      - name: Promise<
        fullName: Promise<
      - name: InMemoryCollectionRoutingMap
        fullName: InMemoryCollectionRoutingMap
        uid: '@azure/cosmos.InMemoryCollectionRoutingMap'
      - name: '>'
        fullName: '>'
