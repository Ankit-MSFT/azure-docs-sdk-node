### YamlMime:UniversalReference
items:
  - uid: '@azure/cosmos.DefaultQueryExecutionContext'
    name: DefaultQueryExecutionContext
    fullName: DefaultQueryExecutionContext
    children:
      - '@azure/cosmos.DefaultQueryExecutionContext.continuation'
      - '@azure/cosmos.DefaultQueryExecutionContext.current'
      - '@azure/cosmos.DefaultQueryExecutionContext.constructor'
      - '@azure/cosmos.DefaultQueryExecutionContext.fetchMore'
      - '@azure/cosmos.DefaultQueryExecutionContext.hasMoreResults'
      - '@azure/cosmos.DefaultQueryExecutionContext.nextItem'
    langs:
      - typeScript
    type: class
    summary: ''
    package: '@azure/cosmos'
  - uid: '@azure/cosmos.DefaultQueryExecutionContext.continuation'
    name: continuation
    fullName: continuation
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'public continuation: any'
      return:
        type:
          - any
  - uid: '@azure/cosmos.DefaultQueryExecutionContext.current'
    name: current
    children: []
    type: method
    langs:
      - typeScript
    summary: Retrieve the current element on the execution context.
    syntax:
      content: function current()
      parameters: []
      return:
        type:
          - Promise<@azure/cosmos.Response<any>>
  - uid: '@azure/cosmos.DefaultQueryExecutionContext.constructor'
    name: DefaultQueryExecutionContext
    children: []
    type: constructor
    langs:
      - typeScript
    summary: >-
      Provides the basic Query Execution Context.

      This wraps the internal logic query execution using provided fetch
      functions
    syntax:
      content: >-
        new DefaultQueryExecutionContext(documentclient: DocumentClient, query:
        string | SqlQuerySpec, options: any, fetchFunctions:
        FetchFunctionCallback | FetchFunctionCallback[])
      parameters:
        - id: documentclient
          type:
            - '@azure/cosmos.DocumentClient'
          description: The service endpoint to use to create the client.
        - id: query
          type:
            - string | @azure/cosmos.SqlQuerySpec
          description: A SQL query.
        - id: options
          type:
            - any
          description: ''
        - id: fetchFunctions
          type:
            - >-
              @azure/cosmos.FetchFunctionCallback |
              @azure/cosmos.FetchFunctionCallback[]
          description: |-
            A function to retrieve each page of data.
                                     An array of functions may be used to query more than one partition.
  - uid: '@azure/cosmos.DefaultQueryExecutionContext.fetchMore'
    name: fetchMore
    children: []
    type: method
    langs:
      - typeScript
    summary: Fetches the next batch of the feed and pass them as an array to a callback
    syntax:
      content: function fetchMore()
      parameters: []
      return:
        type:
          - Promise<@azure/cosmos.Response<any>>
  - uid: '@azure/cosmos.DefaultQueryExecutionContext.hasMoreResults'
    name: hasMoreResults
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      Determine if there are still remaining resources to processs based on

      the value of the continuation token or the elements remaining on the
      current batch in the execution context.
    syntax:
      content: function hasMoreResults()
      parameters: []
      return:
        type:
          - boolean
  - uid: '@azure/cosmos.DefaultQueryExecutionContext.nextItem'
    name: nextItem
    children: []
    type: method
    langs:
      - typeScript
    summary: Execute a provided callback on the next element in the execution context.
    syntax:
      content: function nextItem()
      parameters: []
      return:
        type:
          - Promise<@azure/cosmos.Response<any>>
references:
  - uid: '@azure/cosmos.DocumentClient'
    spec.typeScript:
      - name: DocumentClient
        fullName: DocumentClient
        uid: '@azure/cosmos.DocumentClient'
  - uid: string | @azure/cosmos.SqlQuerySpec
    spec.typeScript:
      - name: 'string | '
        fullName: 'string | '
      - name: SqlQuerySpec
        fullName: SqlQuerySpec
        uid: '@azure/cosmos.SqlQuerySpec'
  - uid: >-
      @azure/cosmos.FetchFunctionCallback |
      @azure/cosmos.FetchFunctionCallback[]
    spec.typeScript:
      - name: FetchFunctionCallback
        fullName: FetchFunctionCallback
        uid: '@azure/cosmos.FetchFunctionCallback'
      - name: ' | '
        fullName: ' | '
      - name: FetchFunctionCallback
        fullName: FetchFunctionCallback
        uid: '@azure/cosmos.FetchFunctionCallback'
      - name: '[]'
        fullName: '[]'
  - uid: Promise<@azure/cosmos.Response<any>>
    spec.typeScript:
      - name: Promise<
        fullName: Promise<
      - name: Response
        fullName: Response
        uid: '@azure/cosmos.Response'
      - name: <any>>
        fullName: <any>>
