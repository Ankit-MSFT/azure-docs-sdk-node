### YamlMime:UniversalReference
items:
  - uid: '@azure/cosmos.TestData'
    name: TestData
    fullName: TestData
    children:
      - '@azure/cosmos.TestData.docs'
      - '@azure/cosmos.TestData.field'
      - '@azure/cosmos.TestData.numberOfDocsWithSamePartitionKey'
      - '@azure/cosmos.TestData.numberOfDocuments'
      - '@azure/cosmos.TestData.numberOfDocumentsWithNumbericId'
      - '@azure/cosmos.TestData.partitionKey'
      - '@azure/cosmos.TestData.sum'
      - '@azure/cosmos.TestData.constructor'
      - '@azure/cosmos.TestData.uniquePartitionKey'
    langs:
      - typeScript
    type: class
    summary: ''
    package: '@azure/cosmos'
  - uid: '@azure/cosmos.TestData.docs'
    name: docs
    fullName: docs
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'public docs: any[]'
      return:
        type:
          - 'any[]'
    package: '@azure/cosmos'
  - uid: '@azure/cosmos.TestData.field'
    name: field
    fullName: field
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'public field: string'
      return:
        type:
          - string
    package: '@azure/cosmos'
  - uid: '@azure/cosmos.TestData.numberOfDocsWithSamePartitionKey'
    name: numberOfDocsWithSamePartitionKey
    fullName: numberOfDocsWithSamePartitionKey
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'public numberOfDocsWithSamePartitionKey: number'
      return:
        type:
          - number
    package: '@azure/cosmos'
  - uid: '@azure/cosmos.TestData.numberOfDocuments'
    name: numberOfDocuments
    fullName: numberOfDocuments
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'public numberOfDocuments: number'
      return:
        type:
          - number
    package: '@azure/cosmos'
  - uid: '@azure/cosmos.TestData.numberOfDocumentsWithNumbericId'
    name: numberOfDocumentsWithNumbericId
    fullName: numberOfDocumentsWithNumbericId
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'public numberOfDocumentsWithNumbericId: number'
      return:
        type:
          - number
    package: '@azure/cosmos'
  - uid: '@azure/cosmos.TestData.partitionKey'
    name: partitionKey
    fullName: partitionKey
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'public partitionKey: string'
      return:
        type:
          - string
    package: '@azure/cosmos'
  - uid: '@azure/cosmos.TestData.sum'
    name: sum
    fullName: sum
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'public sum: number'
      return:
        type:
          - number
    package: '@azure/cosmos'
  - uid: '@azure/cosmos.TestData.constructor'
    name: TestData
    children: []
    type: constructor
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'new TestData(partitionKey: string, uniquePartitionKey: string)'
      parameters:
        - id: partitionKey
          type:
            - string
          description: ''
        - id: uniquePartitionKey
          type:
            - string
          description: ''
    package: '@azure/cosmos'
  - uid: '@azure/cosmos.TestData.uniquePartitionKey'
    name: uniquePartitionKey
    fullName: uniquePartitionKey
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'public uniquePartitionKey: string'
      return:
        type:
          - string
    package: '@azure/cosmos'
