### YamlMime:UniversalReference
items:
  - uid: '@azure/cosmos.Range'
    name: Range
    fullName: Range
    children:
      - '@azure/cosmos.Range.contains'
      - '@azure/cosmos.Range.high'
      - '@azure/cosmos.Range.intersect'
      - '@azure/cosmos.Range.isRange'
      - '@azure/cosmos.Range.low'
      - '@azure/cosmos.Range.constructor'
      - '@azure/cosmos.Range.toString'
    langs:
      - typeScript
    type: class
    summary: ''
    package: '@azure/cosmos'
  - uid: '@azure/cosmos.Range.contains'
    name: contains
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function contains(other: Point | Range, compareFunction?:
        CompareFunction)
      parameters:
        - id: other
          type:
            - '@azure/cosmos.Point | @azure/cosmos.Range'
          description: ''
        - id: compareFunction
          type:
            - '@azure/cosmos.CompareFunction'
          description: ''
          optional: true
      return:
        type:
          - boolean
    package: '@azure/cosmos'
  - uid: '@azure/cosmos.Range.high'
    name: high
    fullName: high
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'public high: Point'
      return:
        type:
          - '@azure/cosmos.Point'
    package: '@azure/cosmos'
  - uid: '@azure/cosmos.Range.intersect'
    name: intersect
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function intersect(range: Range, compareFunction?: CompareFunction)'
      parameters:
        - id: range
          type:
            - '@azure/cosmos.Range'
          description: ''
        - id: compareFunction
          type:
            - '@azure/cosmos.CompareFunction'
          description: ''
          optional: true
      return:
        type:
          - boolean
    package: '@azure/cosmos'
  - uid: '@azure/cosmos.Range.isRange'
    name: isRange
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'static function isRange(pointOrRange: Point | Range)'
      parameters:
        - id: pointOrRange
          type:
            - '@azure/cosmos.Point | @azure/cosmos.Range'
          description: ''
      return:
        type:
          - boolean
    package: '@azure/cosmos'
  - uid: '@azure/cosmos.Range.low'
    name: low
    fullName: low
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'public low: Point'
      return:
        type:
          - '@azure/cosmos.Point'
    package: '@azure/cosmos'
  - uid: '@azure/cosmos.Range.constructor'
    name: Range
    children: []
    type: constructor
    langs:
      - typeScript
    summary: >-
      Represents a range object used by the RangePartitionResolver in the Azure
      Cosmos DB database service.
    syntax:
      content: 'new Range(options?: any)'
      parameters:
        - id: options
          type:
            - any
          description: The Range constructor options.
          optional: true
    package: '@azure/cosmos'
  - uid: '@azure/cosmos.Range.toString'
    name: toString
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: function toString()
      parameters: []
      return:
        type:
          - string
    package: '@azure/cosmos'
references:
  - uid: '@azure/cosmos.Point'
    spec.typeScript:
      - name: Point
        fullName: Point
        uid: '@azure/cosmos.Point'
  - uid: '@azure/cosmos.Point | @azure/cosmos.Range'
    spec.typeScript:
      - name: Point
        fullName: Point
        uid: '@azure/cosmos.Point'
      - name: ' | '
        fullName: ' | '
      - name: Range
        fullName: Range
        uid: '@azure/cosmos.Range'
  - uid: '@azure/cosmos.CompareFunction'
    spec.typeScript:
      - name: CompareFunction
        fullName: CompareFunction
        uid: '@azure/cosmos.CompareFunction'
  - uid: '@azure/cosmos.Range'
    spec.typeScript:
      - name: Range
        fullName: Range
        uid: '@azure/cosmos.Range'
