### YamlMime:UniversalReference
items:
  - uid: '@azure/cosmos.DocumentClientBase'
    name: DocumentClientBase
    fullName: DocumentClientBase
    children:
      - '@azure/cosmos.DocumentClientBase.connectionPolicy'
      - '@azure/cosmos.DocumentClientBase.consistencyLevel'
      - '@azure/cosmos.DocumentClientBase.defaultHeaders'
      - '@azure/cosmos.DocumentClientBase.defaultUrlParams'
      - '@azure/cosmos.DocumentClientBase.delete'
      - '@azure/cosmos.DocumentClientBase.constructor'
      - '@azure/cosmos.DocumentClientBase.get'
      - '@azure/cosmos.DocumentClientBase.getDatabaseAccount'
      - '@azure/cosmos.DocumentClientBase.head'
      - '@azure/cosmos.DocumentClientBase.masterKey'
      - '@azure/cosmos.DocumentClientBase.partitionKeyDefinitionCache'
      - '@azure/cosmos.DocumentClientBase.partitionResolvers'
      - '@azure/cosmos.DocumentClientBase.post'
      - '@azure/cosmos.DocumentClientBase.put'
      - '@azure/cosmos.DocumentClientBase.queryCompatibilityMode'
      - '@azure/cosmos.DocumentClientBase.requestAgent'
      - '@azure/cosmos.DocumentClientBase.resourceTokens'
      - '@azure/cosmos.DocumentClientBase.sessionContainer'
      - '@azure/cosmos.DocumentClientBase.tokenProvider'
      - '@azure/cosmos.DocumentClientBase.urlConnection'
      - '@azure/cosmos.DocumentClientBase.validateOptionsAndCallback'
    langs:
      - typeScript
    type: class
    summary: ''
    package: '@azure/cosmos'
  - uid: '@azure/cosmos.DocumentClientBase.connectionPolicy'
    name: connectionPolicy
    fullName: connectionPolicy
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'public connectionPolicy: ConnectionPolicy'
      return:
        type:
          - '@azure/cosmos.ConnectionPolicy'
  - uid: '@azure/cosmos.DocumentClientBase.consistencyLevel'
    name: consistencyLevel
    fullName: consistencyLevel
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'public consistencyLevel: ConsistencyLevel'
      return:
        type:
          - '@azure/cosmos.ConsistencyLevel'
  - uid: '@azure/cosmos.DocumentClientBase.defaultHeaders'
    name: defaultHeaders
    fullName: defaultHeaders
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'public defaultHeaders: IHeaders'
      return:
        type:
          - '@azure/cosmos.IHeaders'
  - uid: '@azure/cosmos.DocumentClientBase.defaultUrlParams'
    name: defaultUrlParams
    fullName: defaultUrlParams
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'public defaultUrlParams: string'
      return:
        type:
          - string
  - uid: '@azure/cosmos.DocumentClientBase.delete'
    name: delete
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function delete(urlString: string, request: any, headers: IHeaders)'
      parameters:
        - id: urlString
          type:
            - string
          description: ''
        - id: request
          type:
            - any
          description: ''
        - id: headers
          type:
            - '@azure/cosmos.IHeaders'
          description: ''
      return:
        type:
          - Promise<@azure/cosmos.Response<any>>
  - uid: '@azure/cosmos.DocumentClientBase.constructor'
    name: DocumentClientBase
    children: []
    type: constructor
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        new DocumentClientBase(urlConnection: string, auth: any,
        connectionPolicy: ConnectionPolicy, consistencyLevel: ConsistencyLevel)
      parameters:
        - id: urlConnection
          type:
            - string
          description: ''
        - id: auth
          type:
            - any
          description: ''
        - id: connectionPolicy
          type:
            - '@azure/cosmos.ConnectionPolicy'
          description: ''
        - id: consistencyLevel
          type:
            - '@azure/cosmos.ConsistencyLevel'
          description: ''
  - uid: '@azure/cosmos.DocumentClientBase.get'
    name: get
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function get(urlString: string, request: any, headers: IHeaders)'
      parameters:
        - id: urlString
          type:
            - string
          description: ''
        - id: request
          type:
            - any
          description: ''
        - id: headers
          type:
            - '@azure/cosmos.IHeaders'
          description: ''
      return:
        type:
          - Promise<@azure/cosmos.Response<any>>
  - uid: '@azure/cosmos.DocumentClientBase.getDatabaseAccount'
    name: getDatabaseAccount
    children: []
    type: method
    langs:
      - typeScript
    summary: Gets the Database account information.
    syntax:
      content: >-
        function getDatabaseAccount(options?: RequestOptions, callback?:
        ResponseCallback<DatabaseAccount>)
      parameters:
        - id: options
          type:
            - '@azure/cosmos.RequestOptions'
          description: ''
          optional: true
        - id: callback
          type:
            - '@azure/cosmos.ResponseCallback<@azure/cosmos.DatabaseAccount>'
          description: |
            The callback for the request. The second parameter of the \
            callback will be of type <xref:DatabaseAccount>.
          optional: true
      return:
        type:
          - Promise<@azure/cosmos.Response<@azure/cosmos.DatabaseAccount>>
  - uid: '@azure/cosmos.DocumentClientBase.head'
    name: head
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function head(urlString: string, request: any, headers: IHeaders)'
      parameters:
        - id: urlString
          type:
            - string
          description: ''
        - id: request
          type:
            - any
          description: ''
        - id: headers
          type:
            - '@azure/cosmos.IHeaders'
          description: ''
      return:
        type:
          - Promise<@azure/cosmos.Response<any>>
  - uid: '@azure/cosmos.DocumentClientBase.masterKey'
    name: masterKey
    fullName: masterKey
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'public masterKey: string'
      return:
        type:
          - string
  - uid: '@azure/cosmos.DocumentClientBase.partitionKeyDefinitionCache'
    name: partitionKeyDefinitionCache
    fullName: partitionKeyDefinitionCache
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'public partitionKeyDefinitionCache: any'
      return:
        type:
          - any
  - uid: '@azure/cosmos.DocumentClientBase.partitionResolvers'
    name: partitionResolvers
    fullName: partitionResolvers
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'public partitionResolvers: any'
      return:
        type:
          - any
  - uid: '@azure/cosmos.DocumentClientBase.post'
    name: post
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function post(urlString: string, request: any, body: any, headers:
        IHeaders)
      parameters:
        - id: urlString
          type:
            - string
          description: ''
        - id: request
          type:
            - any
          description: ''
        - id: body
          type:
            - any
          description: ''
        - id: headers
          type:
            - '@azure/cosmos.IHeaders'
          description: ''
      return:
        type:
          - Promise<@azure/cosmos.Response<any>>
  - uid: '@azure/cosmos.DocumentClientBase.put'
    name: put
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function put(urlString: string, request: any, body: any, headers:
        IHeaders)
      parameters:
        - id: urlString
          type:
            - string
          description: ''
        - id: request
          type:
            - any
          description: ''
        - id: body
          type:
            - any
          description: ''
        - id: headers
          type:
            - '@azure/cosmos.IHeaders'
          description: ''
      return:
        type:
          - Promise<@azure/cosmos.Response<any>>
  - uid: '@azure/cosmos.DocumentClientBase.queryCompatibilityMode'
    name: queryCompatibilityMode
    fullName: queryCompatibilityMode
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'public queryCompatibilityMode: QueryCompatibilityMode'
      return:
        type:
          - '@azure/cosmos.QueryCompatibilityMode'
  - uid: '@azure/cosmos.DocumentClientBase.requestAgent'
    name: requestAgent
    fullName: requestAgent
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'public requestAgent: Agent'
      return:
        type:
          - Agent
  - uid: '@azure/cosmos.DocumentClientBase.resourceTokens'
    name: resourceTokens
    fullName: resourceTokens
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'public resourceTokens: function'
      return:
        type:
          - function
  - uid: '@azure/cosmos.DocumentClientBase.sessionContainer'
    name: sessionContainer
    fullName: sessionContainer
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'public sessionContainer: SessionContainer'
      return:
        type:
          - '@azure/cosmos.SessionContainer'
  - uid: '@azure/cosmos.DocumentClientBase.tokenProvider'
    name: tokenProvider
    fullName: tokenProvider
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'public tokenProvider: any'
      return:
        type:
          - any
  - uid: '@azure/cosmos.DocumentClientBase.urlConnection'
    name: urlConnection
    fullName: urlConnection
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'public urlConnection: string'
      return:
        type:
          - string
  - uid: '@azure/cosmos.DocumentClientBase.validateOptionsAndCallback'
    name: validateOptionsAndCallback
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function validateOptionsAndCallback(optionsIn: any, callbackIn: any)'
      parameters:
        - id: optionsIn
          type:
            - any
          description: ''
        - id: callbackIn
          type:
            - any
          description: ''
      return:
        type:
          - function
references:
  - uid: '@azure/cosmos.ConnectionPolicy'
    spec.typeScript:
      - name: ConnectionPolicy
        fullName: ConnectionPolicy
        uid: '@azure/cosmos.ConnectionPolicy'
  - uid: '@azure/cosmos.ConsistencyLevel'
    spec.typeScript:
      - name: ConsistencyLevel
        fullName: ConsistencyLevel
        uid: '@azure/cosmos.ConsistencyLevel'
  - uid: '@azure/cosmos.IHeaders'
    spec.typeScript:
      - name: IHeaders
        fullName: IHeaders
        uid: '@azure/cosmos.IHeaders'
  - uid: '@azure/cosmos.QueryCompatibilityMode'
    spec.typeScript:
      - name: QueryCompatibilityMode
        fullName: QueryCompatibilityMode
        uid: '@azure/cosmos.QueryCompatibilityMode'
  - uid: '@azure/cosmos.SessionContainer'
    spec.typeScript:
      - name: SessionContainer
        fullName: SessionContainer
        uid: '@azure/cosmos.SessionContainer'
  - uid: Promise<@azure/cosmos.Response<any>>
    spec.typeScript:
      - name: Promise<
        fullName: Promise<
      - name: Response
        fullName: Response
        uid: '@azure/cosmos.Response'
      - name: <any>>
        fullName: <any>>
  - uid: '@azure/cosmos.RequestOptions'
    spec.typeScript:
      - name: RequestOptions
        fullName: RequestOptions
        uid: '@azure/cosmos.RequestOptions'
  - uid: '@azure/cosmos.ResponseCallback<@azure/cosmos.DatabaseAccount>'
    spec.typeScript:
      - name: ResponseCallback
        fullName: ResponseCallback
        uid: '@azure/cosmos.ResponseCallback'
      - name: <
        fullName: <
      - name: DatabaseAccount
        fullName: DatabaseAccount
        uid: '@azure/cosmos.DatabaseAccount'
      - name: '>'
        fullName: '>'
  - uid: Promise<@azure/cosmos.Response<@azure/cosmos.DatabaseAccount>>
    spec.typeScript:
      - name: Promise<
        fullName: Promise<
      - name: Response
        fullName: Response
        uid: '@azure/cosmos.Response'
      - name: <
        fullName: <
      - name: DatabaseAccount
        fullName: DatabaseAccount
        uid: '@azure/cosmos.DatabaseAccount'
      - name: '>>'
        fullName: '>>'
