### YamlMime:UniversalReference
items:
  - uid: '@azure/cosmos.TopEndpointComponent'
    name: TopEndpointComponent
    fullName: TopEndpointComponent
    children:
      - '@azure/cosmos.TopEndpointComponent.current'
      - '@azure/cosmos.TopEndpointComponent.hasMoreResults'
      - '@azure/cosmos.TopEndpointComponent.nextItem'
      - '@azure/cosmos.TopEndpointComponent.constructor'
    langs:
      - typeScript
    type: class
    summary: ''
    package: '@azure/cosmos'
  - uid: '@azure/cosmos.TopEndpointComponent.current'
    name: current
    children: []
    type: method
    langs:
      - typeScript
    summary: Retrieve the current element on the TopEndpointComponent.
    syntax:
      content: function current()
      parameters: []
      return:
        type:
          - Promise<@azure/cosmos.Response<any>>
    package: '@azure/cosmos'
  - uid: '@azure/cosmos.TopEndpointComponent.hasMoreResults'
    name: hasMoreResults
    children: []
    type: method
    langs:
      - typeScript
    summary: Determine if there are still remaining resources to processs.
    syntax:
      content: function hasMoreResults()
      parameters: []
      return:
        type:
          - boolean
    package: '@azure/cosmos'
  - uid: '@azure/cosmos.TopEndpointComponent.nextItem'
    name: nextItem
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      Execute a provided function on the next element in the
      TopEndpointComponent.
    syntax:
      content: function nextItem()
      parameters: []
      return:
        type:
          - Promise<@azure/cosmos.Response<any>>
    package: '@azure/cosmos'
  - uid: '@azure/cosmos.TopEndpointComponent.constructor'
    name: TopEndpointComponent
    children: []
    type: constructor
    langs:
      - typeScript
    summary: >-
      Represents an endpoint in handling top query. It only returns as many
      results as top arg specified.
    syntax:
      content: >-
        new TopEndpointComponent(executionContext: IExecutionContext, topCount:
        number)
      parameters:
        - id: executionContext
          type:
            - '@azure/cosmos.IExecutionContext'
          description: Underlying Execution Context
        - id: topCount
          type:
            - number
          description: ''
    package: '@azure/cosmos'
references:
  - uid: '@azure/cosmos.IExecutionContext'
    spec.typeScript:
      - name: IExecutionContext
        fullName: IExecutionContext
        uid: '@azure/cosmos.IExecutionContext'
  - uid: Promise<@azure/cosmos.Response<any>>
    spec.typeScript:
      - name: Promise<
        fullName: Promise<
      - name: Response
        fullName: Response
        uid: '@azure/cosmos.Response'
      - name: <any>>
        fullName: <any>>
