### YamlMime:UniversalReference
items:
  - uid: '@azure/cosmos.ParallelQueryExecutionContextBase'
    name: ParallelQueryExecutionContextBase
    fullName: ParallelQueryExecutionContextBase
    children:
      - '@azure/cosmos.ParallelQueryExecutionContextBase.current'
      - >-
        @azure/cosmos.ParallelQueryExecutionContextBase.getPartitionKeyRangesForContinuation
      - '@azure/cosmos.ParallelQueryExecutionContextBase.hasMoreResults'
      - '@azure/cosmos.ParallelQueryExecutionContextBase.nextItem'
      - '@azure/cosmos.ParallelQueryExecutionContextBase.constructor'
    langs:
      - typeScript
    type: class
    summary: ''
    package: '@azure/cosmos'
  - uid: '@azure/cosmos.ParallelQueryExecutionContextBase.current'
    name: current
    children: []
    type: method
    langs:
      - typeScript
    summary: Retrieve the current element on the ParallelQueryExecutionContextBase.
    syntax:
      content: function current()
      parameters: []
      return:
        type:
          - Promise<@azure/cosmos.Response<any>>
  - uid: >-
      @azure/cosmos.ParallelQueryExecutionContextBase.getPartitionKeyRangesForContinuation
    name: getPartitionKeyRangesForContinuation
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function
        getPartitionKeyRangesForContinuation(suppliedCompositeContinuationToken:
        any, partitionKeyRanges: any)
      parameters:
        - id: suppliedCompositeContinuationToken
          type:
            - any
          description: ''
        - id: partitionKeyRanges
          type:
            - any
          description: ''
      return:
        type:
          - any
  - uid: '@azure/cosmos.ParallelQueryExecutionContextBase.hasMoreResults'
    name: hasMoreResults
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      Determine if there are still remaining resources to processs based on the
      value of the continuation \

      token or the elements remaining on the current batch in the QueryIterator.
    syntax:
      content: function hasMoreResults()
      parameters: []
      return:
        type:
          - boolean
  - uid: '@azure/cosmos.ParallelQueryExecutionContextBase.nextItem'
    name: nextItem
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      Execute a provided function on the next element in the
      ParallelQueryExecutionContextBase.
    syntax:
      content: function nextItem()
      parameters: []
      return:
        type:
          - Promise<@azure/cosmos.Response<any>>
  - uid: '@azure/cosmos.ParallelQueryExecutionContextBase.constructor'
    name: ParallelQueryExecutionContextBase
    children: []
    type: constructor
    langs:
      - typeScript
    summary: >
      Provides the ParallelQueryExecutionContextBase.

      This is the base class that ParallelQueryExecutionContext and
      OrderByQueryExecutionContext will derive from.

      When handling a parallelized query, it instantiates one instance of

      DocumentProcuder per target partition key range and aggregates the result
      of each.
    syntax:
      content: >-
        new ParallelQueryExecutionContextBase(documentclient: DocumentClient,
        collectionLink: string, query: any, options: any,
        partitionedQueryExecutionInfo: PartitionedQueryExecutionContextInfo)
      parameters:
        - id: documentclient
          type:
            - '@azure/cosmos.DocumentClient'
          description: The service endpoint to use to create the client.
        - id: collectionLink
          type:
            - string
          description: The Collection Link
        - id: query
          type:
            - any
          description: ''
        - id: options
          type:
            - any
          description: ''
        - id: partitionedQueryExecutionInfo
          type:
            - '@azure/cosmos.PartitionedQueryExecutionContextInfo'
          description: PartitionedQueryExecutionInfo
references:
  - uid: '@azure/cosmos.DocumentClient'
    spec.typeScript:
      - name: DocumentClient
        fullName: DocumentClient
        uid: '@azure/cosmos.DocumentClient'
  - uid: '@azure/cosmos.PartitionedQueryExecutionContextInfo'
    spec.typeScript:
      - name: PartitionedQueryExecutionContextInfo
        fullName: PartitionedQueryExecutionContextInfo
        uid: '@azure/cosmos.PartitionedQueryExecutionContextInfo'
  - uid: Promise<@azure/cosmos.Response<any>>
    spec.typeScript:
      - name: Promise<
        fullName: Promise<
      - name: Response
        fullName: Response
        uid: '@azure/cosmos.Response'
      - name: <any>>
        fullName: <any>>
