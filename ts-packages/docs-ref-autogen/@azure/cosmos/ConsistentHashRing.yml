### YamlMime:UniversalReference
items:
  - uid: '@azure/cosmos.ConsistentHashRing'
    name: ConsistentHashRing
    fullName: ConsistentHashRing
    children:
      - '@azure/cosmos.ConsistentHashRing.constructor'
      - '@azure/cosmos.ConsistentHashRing.getNode'
      - '@azure/cosmos.ConsistentHashRing.partitions'
    langs:
      - typeScript
    type: class
    summary: ''
    package: '@azure/cosmos'
  - uid: '@azure/cosmos.ConsistentHashRing.constructor'
    name: ConsistentHashRing
    children: []
    type: constructor
    langs:
      - typeScript
    summary: Initializes a new instance of the ConsistentHashRing
    syntax:
      content: 'new ConsistentHashRing(nodes: string[], options?: any)'
      parameters:
        - id: nodes
          type:
            - 'string[]'
          description: Array of collection links
        - id: options
          type:
            - any
          description: Options to initialize the ConsistentHashRing
          optional: true
    package: '@azure/cosmos'
  - uid: '@azure/cosmos.ConsistentHashRing.getNode'
    name: getNode
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getNode(key: Key)'
      parameters:
        - id: key
          type:
            - '@azure/cosmos.Key'
          description: ''
      return:
        type:
          - any
    package: '@azure/cosmos'
  - uid: '@azure/cosmos.ConsistentHashRing.partitions'
    name: partitions
    fullName: partitions
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'public partitions: any[]'
      return:
        type:
          - 'any[]'
    package: '@azure/cosmos'
references:
  - uid: '@azure/cosmos.Key'
    spec.typeScript:
      - name: Key
        fullName: Key
        uid: '@azure/cosmos.Key'
